#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_EnemyCommon

#include "Basic.hpp"

#include "AIC_EnemyCommon_classes.hpp"
#include "AIC_EnemyCommon_parameters.hpp"


namespace SDK
{

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setStartBurrowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    beginBurrowed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::SetStartBurrowed(bool beginBurrowed, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "setStartBurrowed");

	Params::AIC_EnemyCommon_C_SetStartBurrowed Parms{};

	Parms.beginBurrowed = beginBurrowed;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setOrderTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::SetOrderTarget(const struct FVector& Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "setOrderTarget");

	Params::AIC_EnemyCommon_C_SetOrderTarget Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.hitscanWeaponFired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::HitscanWeaponFired(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "hitscanWeaponFired");

	Params::AIC_EnemyCommon_C_HitscanWeaponFired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetMostSuitableMeleeSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAnimationMontageIdentifier             Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::GetMostSuitableMeleeSection(EAnimationMontageIdentifier* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "GetMostSuitableMeleeSection");

	Params::AIC_EnemyCommon_C_GetMostSuitableMeleeSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.getAggroState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aggro                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::GetAggroState(bool* Aggro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "getAggroState");

	Params::AIC_EnemyCommon_C_GetAggroState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Aggro != nullptr)
		*Aggro = Parms.Aggro;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.FlashlightHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::FlashlightHit(float Distance, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "FlashlightHit");

	Params::AIC_EnemyCommon_C_FlashlightHit Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetUpgradeComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWeaponUpgradeComponent_C*        UpgradeComponent                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::GetUpgradeComponent(class UWeaponUpgradeComponent_C** UpgradeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "GetUpgradeComponent");

	Params::AIC_EnemyCommon_C_GetUpgradeComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UpgradeComponent != nullptr)
		*UpgradeComponent = Parms.UpgradeComponent;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.AimedAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::AimedAt(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "AimedAt");

	Params::AIC_EnemyCommon_C_AimedAt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setStartOnWall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StartOnWall                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::SetStartOnWall(bool StartOnWall, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "setStartOnWall");

	Params::AIC_EnemyCommon_C_SetStartOnWall Parms{};

	Parms.StartOnWall = StartOnWall;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setCanCirculate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanCirculate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::SetCanCirculate(bool CanCirculate, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "setCanCirculate");

	Params::AIC_EnemyCommon_C_SetCanCirculate Parms{};

	Parms.CanCirculate = CanCirculate;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.getCemeteryCreatureType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECemeteryCreatureType                   CemeteryCreatureType                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::GetCemeteryCreatureType(ECemeteryCreatureType* CemeteryCreatureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "getCemeteryCreatureType");

	Params::AIC_EnemyCommon_C_GetCemeteryCreatureType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CemeteryCreatureType != nullptr)
		*CemeteryCreatureType = Parms.CemeteryCreatureType;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetCharacterSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterSize                          Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::GetCharacterSize(ECharacterSize* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "GetCharacterSize");

	Params::AIC_EnemyCommon_C_GetCharacterSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = Parms.Size;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.IncrementJac3ProneCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ProneCounter                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::IncrementJac3ProneCounter(int32* ProneCounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "IncrementJac3ProneCounter");

	Params::AIC_EnemyCommon_C_IncrementJac3ProneCounter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProneCounter != nullptr)
		*ProneCounter = Parms.ProneCounter;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setNewAggro
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewAggro                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AAIC_EnemyCommon_C::SetNewAggro(bool NewAggro, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "setNewAggro");

	Params::AIC_EnemyCommon_C_SetNewAggro Parms{};

	Parms.NewAggro = NewAggro;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Handle Damage Sense Stimuli
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Actor_Sensed                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::Handle_Damage_Sense_Stimuli(class UObject* Actor_Sensed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "Handle Damage Sense Stimuli");

	Params::AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli Parms{};

	Parms.Actor_Sensed = Actor_Sensed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.OnTargetPerceptionUpdated
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FAIStimulus                      Stimulus                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void AAIC_EnemyCommon_C::OnTargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "OnTargetPerceptionUpdated");

	Params::AIC_EnemyCommon_C_OnTargetPerceptionUpdated Parms{};

	Parms.Actor = Actor;
	Parms.Stimulus = std::move(Stimulus);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Handle Player Proximity Stimuli
// (Public, BlueprintCallable, BlueprintEvent)

void AAIC_EnemyCommon_C::Handle_Player_Proximity_Stimuli()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "Handle Player Proximity Stimuli");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Add Threat
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Threat_to_Add                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::Add_Threat(float Threat_to_Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "Add Threat");

	Params::AIC_EnemyCommon_C_Add_Threat Parms{};

	Parms.Threat_to_Add = Threat_to_Add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.MeleeAttack
// (Public, BlueprintCallable, BlueprintEvent)

void AAIC_EnemyCommon_C::MeleeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "MeleeAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.SetCemeteryCreatureType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECemeteryCreatureType                   CreatureType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::SetCemeteryCreatureType(ECemeteryCreatureType CreatureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "SetCemeteryCreatureType");

	Params::AIC_EnemyCommon_C_SetCemeteryCreatureType Parms{};

	Parms.CreatureType = CreatureType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.QuicktimeSuccess
// (Public, BlueprintCallable, BlueprintEvent)

void AAIC_EnemyCommon_C::QuicktimeSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "QuicktimeSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.QuicktimeInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxProgress                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::QuicktimeInput(float CurrentProgress, float MaxProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "QuicktimeInput");

	Params::AIC_EnemyCommon_C_QuicktimeInput Parms{};

	Parms.CurrentProgress = CurrentProgress;
	Parms.MaxProgress = MaxProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.LaserHit
// (Public, BlueprintCallable, BlueprintEvent)

void AAIC_EnemyCommon_C::LaserHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "LaserHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.MeleeAttackTranslate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndVector                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::MeleeAttackTranslate(const struct FVector& StartVector, const struct FVector& EndVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "MeleeAttackTranslate");

	Params::AIC_EnemyCommon_C_MeleeAttackTranslate Parms{};

	Parms.StartVector = std::move(StartVector);
	Parms.EndVector = std::move(EndVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ControlRotationFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FocusTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::ControlRotationFocus(class AActor* FocusTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "ControlRotationFocus");

	Params::AIC_EnemyCommon_C_ControlRotationFocus Parms{};

	Parms.FocusTarget = FocusTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.MoveToGrappleLocatio
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Grapple_Location                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::MoveToGrappleLocatio(const struct FVector& Grapple_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "MoveToGrappleLocatio");

	Params::AIC_EnemyCommon_C_MoveToGrappleLocatio Parms{};

	Parms.Grapple_Location = std::move(Grapple_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.SetMostSuitableMeleeSection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAnimationMontageIdentifier             Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::SetMostSuitableMeleeSection(EAnimationMontageIdentifier Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "SetMostSuitableMeleeSection");

	Params::AIC_EnemyCommon_C_SetMostSuitableMeleeSection Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.updateBossHealthData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentHealthPercentage                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::UpdateBossHealthData(float CurrentHealthPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "updateBossHealthData");

	Params::AIC_EnemyCommon_C_UpdateBossHealthData Parms{};

	Parms.CurrentHealthPercentage = CurrentHealthPercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "ReceiveTick");

	Params::AIC_EnemyCommon_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ReceivePossess
// (Event, Protected, BlueprintEvent)
// Parameters:
// class APawn*                            PossessedPawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::ReceivePossess(class APawn* PossessedPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "ReceivePossess");

	Params::AIC_EnemyCommon_C_ReceivePossess Parms{};

	Parms.PossessedPawn = PossessedPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.returnHomeOrder
// (BlueprintCallable, BlueprintEvent)

void AAIC_EnemyCommon_C::ReturnHomeOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "returnHomeOrder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Handle Hearing Stimuli Updated
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAIStimulus                      AIStimulus                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::Handle_Hearing_Stimuli_Updated(const struct FAIStimulus& AIStimulus, class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "Handle Hearing Stimuli Updated");

	Params::AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated Parms{};

	Parms.AIStimulus = std::move(AIStimulus);
	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ExecuteUbergraph_AIC_EnemyCommon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::ExecuteUbergraph_AIC_EnemyCommon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "ExecuteUbergraph_AIC_EnemyCommon");

	Params::AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.IsThreatBlocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool AAIC_EnemyCommon_C::IsThreatBlocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "IsThreatBlocked");

	Params::AIC_EnemyCommon_C_IsThreatBlocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ConvertDistanceToThreatMultiplier
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ThreatMultiplier                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::ConvertDistanceToThreatMultiplier(float Distance, float* ThreatMultiplier) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "ConvertDistanceToThreatMultiplier");

	Params::AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (ThreatMultiplier != nullptr)
		*ThreatMultiplier = Parms.ThreatMultiplier;
}


// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetStimulisDistance
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FAIStimulus                      AIStimulus                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
// float                                   PathDistance                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENavigationQueryResult                  NavigationQueryResult                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AAIC_EnemyCommon_C::GetStimulisDistance(const struct FAIStimulus& AIStimulus, float* PathDistance, ENavigationQueryResult* NavigationQueryResult) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("AIC_EnemyCommon_C", "GetStimulisDistance");

	Params::AIC_EnemyCommon_C_GetStimulisDistance Parms{};

	Parms.AIStimulus = std::move(AIStimulus);

	UObject::ProcessEvent(Func, &Parms);

	if (PathDistance != nullptr)
		*PathDistance = Parms.PathDistance;

	if (NavigationQueryResult != nullptr)
		*NavigationQueryResult = Parms.NavigationQueryResult;
}

}

