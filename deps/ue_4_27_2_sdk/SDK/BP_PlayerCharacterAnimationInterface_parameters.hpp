#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacterAnimationInterface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerCharacterAnimationInterface.BP_PlayerCharacterAnimationInterface_C.SetCanBlendToTurnInPlace
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacterAnimationInterface_C_SetCanBlendToTurnInPlace final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacterAnimationInterface_C_SetCanBlendToTurnInPlace) == 0x000001, "Wrong alignment on BP_PlayerCharacterAnimationInterface_C_SetCanBlendToTurnInPlace");
static_assert(sizeof(BP_PlayerCharacterAnimationInterface_C_SetCanBlendToTurnInPlace) == 0x000001, "Wrong size on BP_PlayerCharacterAnimationInterface_C_SetCanBlendToTurnInPlace");
static_assert(offsetof(BP_PlayerCharacterAnimationInterface_C_SetCanBlendToTurnInPlace, Value) == 0x000000, "Member 'BP_PlayerCharacterAnimationInterface_C_SetCanBlendToTurnInPlace::Value' has a wrong offset!");

// Function BP_PlayerCharacterAnimationInterface.BP_PlayerCharacterAnimationInterface_C.StartHeadReaction
// 0x000C (0x000C - 0x0000)
struct BP_PlayerCharacterAnimationInterface_C_StartHeadReaction final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacterAnimationInterface_C_StartHeadReaction) == 0x000004, "Wrong alignment on BP_PlayerCharacterAnimationInterface_C_StartHeadReaction");
static_assert(sizeof(BP_PlayerCharacterAnimationInterface_C_StartHeadReaction) == 0x00000C, "Wrong size on BP_PlayerCharacterAnimationInterface_C_StartHeadReaction");
static_assert(offsetof(BP_PlayerCharacterAnimationInterface_C_StartHeadReaction, Rotation) == 0x000000, "Member 'BP_PlayerCharacterAnimationInterface_C_StartHeadReaction::Rotation' has a wrong offset!");

// Function BP_PlayerCharacterAnimationInterface.BP_PlayerCharacterAnimationInterface_C.GetContextualMovementCharacterData
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData final
{
public:
	class UBP_PlayerCharacterContextualMovementAnimations_C* Animations;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseMatchingProfileDataAsset*          PoseMatchingProfile;                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData) == 0x000008, "Wrong alignment on BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData");
static_assert(sizeof(BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData) == 0x000010, "Wrong size on BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData");
static_assert(offsetof(BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData, Animations) == 0x000000, "Member 'BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData::Animations' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData, PoseMatchingProfile) == 0x000008, "Member 'BP_PlayerCharacterAnimationInterface_C_GetContextualMovementCharacterData::PoseMatchingProfile' has a wrong offset!");

}

