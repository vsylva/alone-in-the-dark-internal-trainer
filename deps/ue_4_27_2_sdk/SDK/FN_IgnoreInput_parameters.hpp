#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_IgnoreInput

#include "Basic.hpp"


namespace SDK::Params
{

// Function FN_IgnoreInput.FN_IgnoreInput_C.K2_ExecuteInput
// 0x0008 (0x0008 - 0x0000)
struct FN_IgnoreInput_C_K2_ExecuteInput final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_IgnoreInput_C_K2_ExecuteInput) == 0x000004, "Wrong alignment on FN_IgnoreInput_C_K2_ExecuteInput");
static_assert(sizeof(FN_IgnoreInput_C_K2_ExecuteInput) == 0x000008, "Wrong size on FN_IgnoreInput_C_K2_ExecuteInput");
static_assert(offsetof(FN_IgnoreInput_C_K2_ExecuteInput, PinName) == 0x000000, "Member 'FN_IgnoreInput_C_K2_ExecuteInput::PinName' has a wrong offset!");

// Function FN_IgnoreInput.FN_IgnoreInput_C.ExecuteUbergraph_FN_IgnoreInput
// 0x0018 (0x0018 - 0x0000)
struct FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PinName;                              // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput) == 0x000008, "Wrong alignment on FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput");
static_assert(sizeof(FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput) == 0x000018, "Wrong size on FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput");
static_assert(offsetof(FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput, EntryPoint) == 0x000000, "Member 'FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput::EntryPoint' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput, K2Node_Event_PinName) == 0x000004, "Member 'FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput::K2Node_Event_PinName' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'FN_IgnoreInput_C_ExecuteUbergraph_FN_IgnoreInput::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function FN_IgnoreInput.FN_IgnoreInput_C.K2_GetNodeDescription
// 0x0110 (0x0110 - 0x0000)
struct FN_IgnoreInput_C_K2_GetNodeDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_5;                            // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_2;                           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_IgnoreInput_C_K2_GetNodeDescription) == 0x000008, "Wrong alignment on FN_IgnoreInput_C_K2_GetNodeDescription");
static_assert(sizeof(FN_IgnoreInput_C_K2_GetNodeDescription) == 0x000110, "Wrong size on FN_IgnoreInput_C_K2_GetNodeDescription");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, ReturnValue) == 0x000000, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_bool_Variable) == 0x000010, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_string_Variable) == 0x000018, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_bool_Variable_1) == 0x000028, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_string_Variable_1) == 0x000030, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_string_Variable_2) == 0x000040, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_bool_Variable_2) == 0x000050, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_string_Variable_3) == 0x000058, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_string_Variable_4) == 0x000068, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_bool_Variable_3) == 0x000078, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_string_Variable_5) == 0x000080, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, Temp_string_Variable_6) == 0x000090, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, K2Node_Select_Default) == 0x0000A0, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, K2Node_Select_Default_1) == 0x0000B0, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, CallFunc_BooleanAND_ReturnValue) == 0x0000C0, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, K2Node_Select_Default_2) == 0x0000C8, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D8, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E8, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x0000F8, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_IgnoreInput_C_K2_GetNodeDescription, K2Node_Select_Default_3) == 0x000100, "Member 'FN_IgnoreInput_C_K2_GetNodeDescription::K2Node_Select_Default_3' has a wrong offset!");

}

