#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Rat

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_Rat.ABP_Rat_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_Rat_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_Rat_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_Rat_C_AnimGraph");
static_assert(sizeof(ABP_Rat_C_AnimGraph) == 0x000010, "Wrong size on ABP_Rat_C_AnimGraph");
static_assert(offsetof(ABP_Rat_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_Rat_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_Rat.ABP_Rat_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Rat_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_Rat_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Rat_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Rat_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Rat_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Rat_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Rat_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Rat.ABP_Rat_C.ExecuteUbergraph_ABP_Rat
// 0x0038 (0x0038 - 0x0000)
struct ABP_Rat_C_ExecuteUbergraph_ABP_Rat final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActor_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_FleeingRatEvent_C*                  K2Node_DynamicCast_AsBP_Fleeing_Rat_Event;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRatVelocity_Velocity;                  // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat) == 0x000008, "Wrong alignment on ABP_Rat_C_ExecuteUbergraph_ABP_Rat");
static_assert(sizeof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat) == 0x000038, "Wrong size on ABP_Rat_C_ExecuteUbergraph_ABP_Rat");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, EntryPoint) == 0x000000, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, K2Node_Event_DeltaTimeX) == 0x000004, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_GetOwningActor_ReturnValue) == 0x000008, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_GetOwningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, K2Node_DynamicCast_AsBP_Fleeing_Rat_Event) == 0x000010, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::K2Node_DynamicCast_AsBP_Fleeing_Rat_Event' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_GetRatVelocity_Velocity) == 0x000024, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_GetRatVelocity_Velocity' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_Not_PreBool_ReturnValue_1) == 0x000031, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_Not_PreBool_ReturnValue_2) == 0x000033, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_Rat_C_ExecuteUbergraph_ABP_Rat, CallFunc_BooleanAND_ReturnValue_1) == 0x000034, "Member 'ABP_Rat_C_ExecuteUbergraph_ABP_Rat::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

