#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_MirrorBeamInteraction

#include "Basic.hpp"

#include "BPI_MirrorBeamInteraction_classes.hpp"
#include "BPI_MirrorBeamInteraction_parameters.hpp"


namespace SDK
{

// Function BPI_MirrorBeamInteraction.BPI_MirrorBeamInteraction_C.Deactivate Lens
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MirrorRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MirrorBeamInteraction_C::Deactivate_Lens(class AActor* MirrorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MirrorBeamInteraction_C", "Deactivate Lens");

	Params::BPI_MirrorBeamInteraction_C_Deactivate_Lens Parms{};

	Parms.MirrorRef = MirrorRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_MirrorBeamInteraction.BPI_MirrorBeamInteraction_C.FocusLensBeamInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_MirrorBeamInteraction_C::FocusLensBeamInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MirrorBeamInteraction_C", "FocusLensBeamInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_MirrorBeamInteraction.BPI_MirrorBeamInteraction_C.BeamInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ImpactPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           MirrorRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBPI_MirrorBeamInteraction_C::BeamInteraction(const struct FVector& ImpactPoint, class UPrimitiveComponent* HitComponent, class AActor* MirrorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_MirrorBeamInteraction_C", "BeamInteraction");

	Params::BPI_MirrorBeamInteraction_C_BeamInteraction Parms{};

	Parms.ImpactPoint = std::move(ImpactPoint);
	Parms.HitComponent = HitComponent;
	Parms.MirrorRef = MirrorRef;

	UObject::ProcessEvent(Func, &Parms);
}

}

