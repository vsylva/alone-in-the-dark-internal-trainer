#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluidDrop

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FluidDrop.BP_FluidDrop_C
// 0x0040 (0x0278 - 0x0238)
class ABP_FluidDrop_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UProjectileMovementComponent*           ProjectileMovement;                                // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   FluidDropMesh;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     FluidDecal;                                        // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DecalLifetime;                                     // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDecalSize;                                      // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxDecalSize;                                      // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Lifetime;                                          // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentLifetime;                                   // 0x0270(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetRandomDecalSize(float Min, float Max, struct FVector* Size);
	void ReceiveBeginPlay();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveTick(float DeltaSeconds);
	void ExecuteUbergraph_BP_FluidDrop(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FluidDrop_C">();
	}
	static class ABP_FluidDrop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FluidDrop_C>();
	}
};
static_assert(alignof(ABP_FluidDrop_C) == 0x000008, "Wrong alignment on ABP_FluidDrop_C");
static_assert(sizeof(ABP_FluidDrop_C) == 0x000278, "Wrong size on ABP_FluidDrop_C");
static_assert(offsetof(ABP_FluidDrop_C, UberGraphFrame) == 0x000238, "Member 'ABP_FluidDrop_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, ProjectileMovement) == 0x000240, "Member 'ABP_FluidDrop_C::ProjectileMovement' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, Sphere) == 0x000248, "Member 'ABP_FluidDrop_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, FluidDropMesh) == 0x000250, "Member 'ABP_FluidDrop_C::FluidDropMesh' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, FluidDecal) == 0x000258, "Member 'ABP_FluidDrop_C::FluidDecal' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, DecalLifetime) == 0x000260, "Member 'ABP_FluidDrop_C::DecalLifetime' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, MinDecalSize) == 0x000264, "Member 'ABP_FluidDrop_C::MinDecalSize' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, MaxDecalSize) == 0x000268, "Member 'ABP_FluidDrop_C::MaxDecalSize' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, Lifetime) == 0x00026C, "Member 'ABP_FluidDrop_C::Lifetime' has a wrong offset!");
static_assert(offsetof(ABP_FluidDrop_C, CurrentLifetime) == 0x000270, "Member 'ABP_FluidDrop_C::CurrentLifetime' has a wrong offset!");

}

