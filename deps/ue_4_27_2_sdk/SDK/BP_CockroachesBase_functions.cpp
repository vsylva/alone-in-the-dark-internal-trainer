#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CockroachesBase

#include "Basic.hpp"

#include "BP_CockroachesBase_classes.hpp"
#include "BP_CockroachesBase_parameters.hpp"


namespace SDK
{

// Function BP_CockroachesBase.BP_CockroachesBase_C.ExecuteUbergraph_BP_CockroachesBase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CockroachesBase_C::ExecuteUbergraph_BP_CockroachesBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "ExecuteUbergraph_BP_CockroachesBase");

	Params::BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.End Overlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Other_Actor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CockroachesBase_C::End_Overlap(class AActor* Other_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "End Overlap");

	Params::BP_CockroachesBase_C_End_Overlap Parms{};

	Parms.Other_Actor = Other_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.Begin Overlap
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Other_Actor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Secondary_Trigger                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CockroachesBase_C::Begin_Overlap(class AActor* Other_Actor, bool Secondary_Trigger)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "Begin Overlap");

	Params::BP_CockroachesBase_C_Begin_Overlap Parms{};

	Parms.Other_Actor = Other_Actor;
	Parms.Secondary_Trigger = Secondary_Trigger;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CockroachesBase_C::BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_CockroachesBase_C::BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.WeaponHit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_CockroachesBase_C::WeaponHit(class AActor* Weapon, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "WeaponHit");

	Params::BP_CockroachesBase_C_WeaponHit Parms{};

	Parms.Weapon = Weapon;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.EndTriggerOverlap
// (BlueprintCallable, BlueprintEvent)

void ABP_CockroachesBase_C::EndTriggerOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "EndTriggerOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CockroachesBase_C::BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.StartTriggerOverlap
// (BlueprintCallable, BlueprintEvent)

void ABP_CockroachesBase_C::StartTriggerOverlap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "StartTriggerOverlap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_CockroachesBase_C::BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.Reset
// (BlueprintCallable, BlueprintEvent)

void ABP_CockroachesBase_C::Reset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "Reset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_CockroachesBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.AddRoaches
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Radius                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CockroachesBase_C::AddRoaches(int32 Amount_0, float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "AddRoaches");

	Params::BP_CockroachesBase_C_AddRoaches Parms{};

	Parms.Amount_0 = Amount_0;
	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.DestroyAndClearRoaches
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CockroachesBase_C::DestroyAndClearRoaches()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "DestroyAndClearRoaches");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.ResetLocations
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_CockroachesBase_C::ResetLocations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "ResetLocations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.MoveRoachForwards
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCockroachData                  RoachData                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// float                                   SpeedMultiplier                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CockroachesBase_C::MoveRoachForwards(const struct FFCockroachData& RoachData, float SpeedMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "MoveRoachForwards");

	Params::BP_CockroachesBase_C_MoveRoachForwards Parms{};

	Parms.RoachData = std::move(RoachData);
	Parms.SpeedMultiplier = SpeedMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.RotateRoach
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCockroachData                  RoachData                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FVector                          FocusLocation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CockroachesBase_C::RotateRoach(const struct FFCockroachData& RoachData, const struct FVector& FocusLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "RotateRoach");

	Params::BP_CockroachesBase_C_RotateRoach Parms{};

	Parms.RoachData = std::move(RoachData);
	Parms.FocusLocation = std::move(FocusLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.CheckIfAllHasReachedDestination
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Destination                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WantedLocationID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAtDestination                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CockroachesBase_C::CheckIfAllHasReachedDestination(const struct FVector& Destination, int32 WantedLocationID, bool* IsAtDestination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "CheckIfAllHasReachedDestination");

	Params::BP_CockroachesBase_C_CheckIfAllHasReachedDestination Parms{};

	Parms.Destination = std::move(Destination);
	Parms.WantedLocationID = WantedLocationID;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAtDestination != nullptr)
		*IsAtDestination = Parms.IsAtDestination;
}


// Function BP_CockroachesBase.BP_CockroachesBase_C.CheckIfRoachHasReachDestination
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FFCockroachData                  FCockroachData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// struct FVector                          Destination                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   WantedLocationID                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    IsAtDestination                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CockroachesBase_C::CheckIfRoachHasReachDestination(const struct FFCockroachData& FCockroachData, const struct FVector& Destination, int32 WantedLocationID, bool* IsAtDestination)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CockroachesBase_C", "CheckIfRoachHasReachDestination");

	Params::BP_CockroachesBase_C_CheckIfRoachHasReachDestination Parms{};

	Parms.FCockroachData = std::move(FCockroachData);
	Parms.Destination = std::move(Destination);
	Parms.WantedLocationID = WantedLocationID;

	UObject::ProcessEvent(Func, &Parms);

	if (IsAtDestination != nullptr)
		*IsAtDestination = Parms.IsAtDestination;
}

}

