#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesLoadingScreen

#include "Basic.hpp"

#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DeveloperSettings_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PiecesLoadingScreen.LoadingScreen_Widget
// 0x0018 (0x0278 - 0x0260)
class ULoadingScreen_Widget : public UUserWidget
{
public:
	class UWidgetAnimation*                       FadeOut;                                           // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_268[0x10];                                     // 0x0268(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void FadeOutFinishedHandler();
	void OnLoadingScreenFinishedHandler();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LoadingScreen_Widget">();
	}
	static class ULoadingScreen_Widget* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULoadingScreen_Widget>();
	}
};
static_assert(alignof(ULoadingScreen_Widget) == 0x000008, "Wrong alignment on ULoadingScreen_Widget");
static_assert(sizeof(ULoadingScreen_Widget) == 0x000278, "Wrong size on ULoadingScreen_Widget");
static_assert(offsetof(ULoadingScreen_Widget, FadeOut) == 0x000260, "Member 'ULoadingScreen_Widget::FadeOut' has a wrong offset!");

// Class PiecesLoadingScreen.PiecesLoadingScreenDevSettings
// 0x0038 (0x0070 - 0x0038)
class UPiecesLoadingScreenDevSettings final : public UDeveloperSettings
{
public:
	class FString                                 DefaultLoadingScreenImagePath;                     // 0x0038(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 DefaultThrobberResourcePath;                       // 0x0048(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              DefaultThrobberSize;                               // 0x0058(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMargin                                DefaultThrobberMargin;                             // 0x0060(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesLoadingScreenDevSettings">();
	}
	static class UPiecesLoadingScreenDevSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesLoadingScreenDevSettings>();
	}
};
static_assert(alignof(UPiecesLoadingScreenDevSettings) == 0x000008, "Wrong alignment on UPiecesLoadingScreenDevSettings");
static_assert(sizeof(UPiecesLoadingScreenDevSettings) == 0x000070, "Wrong size on UPiecesLoadingScreenDevSettings");
static_assert(offsetof(UPiecesLoadingScreenDevSettings, DefaultLoadingScreenImagePath) == 0x000038, "Member 'UPiecesLoadingScreenDevSettings::DefaultLoadingScreenImagePath' has a wrong offset!");
static_assert(offsetof(UPiecesLoadingScreenDevSettings, DefaultThrobberResourcePath) == 0x000048, "Member 'UPiecesLoadingScreenDevSettings::DefaultThrobberResourcePath' has a wrong offset!");
static_assert(offsetof(UPiecesLoadingScreenDevSettings, DefaultThrobberSize) == 0x000058, "Member 'UPiecesLoadingScreenDevSettings::DefaultThrobberSize' has a wrong offset!");
static_assert(offsetof(UPiecesLoadingScreenDevSettings, DefaultThrobberMargin) == 0x000060, "Member 'UPiecesLoadingScreenDevSettings::DefaultThrobberMargin' has a wrong offset!");

// Class PiecesLoadingScreen.PiecesLoadingScreenSubSystem
// 0x0048 (0x0078 - 0x0030)
class UPiecesLoadingScreenSubSystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x48];                                      // 0x0030(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnMovieClipFinishedHandler(const class FString& MovieName);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesLoadingScreenSubSystem">();
	}
	static class UPiecesLoadingScreenSubSystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesLoadingScreenSubSystem>();
	}
};
static_assert(alignof(UPiecesLoadingScreenSubSystem) == 0x000008, "Wrong alignment on UPiecesLoadingScreenSubSystem");
static_assert(sizeof(UPiecesLoadingScreenSubSystem) == 0x000078, "Wrong size on UPiecesLoadingScreenSubSystem");

}

