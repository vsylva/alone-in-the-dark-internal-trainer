#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_AudioOption

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"
#include "WBP_OptionSelectionPage_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_AudioOption.WBP_AudioOption_C
// 0x00B8 (0x0390 - 0x02D8)
class UWBP_AudioOption_C final : public UWBP_OptionSelectionPage_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_AudioOption_C;                  // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Gfx_deco_frame_1;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextSelection_C*                   Language;                                          // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IncreaseDecrease_C*                MasterVolumeSetting;                               // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IncreaseDecrease_C*                MusicVolumeSetting;                                // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           OptionVerticalBox;                                 // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IncreaseDecrease_C*                SFXVolumeSetting;                                  // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextSelection_C*                   SubtitleSize;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IncreaseDecrease_C*                TextSetting;                                       // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IncreaseDecrease_C*                VoiceVolume;                                       // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFCheckBox_C*                      WBP_CopyrightMusic;                                // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFCheckBox_C*                      WBP_Subtitles;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TMap<class FString, int32>                    VOLanguage;                                        // 0x0338(0x0050)(Edit, BlueprintVisible)
	struct FTimerHandle                           ApplySettingsTimerHandle;                          // 0x0388(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_AudioOption(int32 EntryPoint);
	void BndEvt__WBP_AudioOption_WBP_StreamerMode_K2Node_ComponentBoundEvent_10_OnCheckBoxChanged__DelegateSignature(bool CheckBoxChanged);
	void BndEvt__WBP_AudioOption_SubtitleSize_K2Node_ComponentBoundEvent_21_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_SubtitleSize_K2Node_ComponentBoundEvent_20_OnDecreaseHandler__DelegateSignature();
	void CustomEvent_0(class UWidget* Widget);
	void OnInitialized();
	void PostInputApplySettings();
	void BndEvt__WBP_AudioOption_Language_K2Node_ComponentBoundEvent_19_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_Language_K2Node_ComponentBoundEvent_18_OnDecreaseHandler__DelegateSignature();
	void OnResetPressed();
	void BndEvt__WBP_AudioOption_VoiceVolume_K2Node_ComponentBoundEvent_15_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_VoiceVolume_K2Node_ComponentBoundEvent_14_OnDecreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_WBP_Subtitles_K2Node_ComponentBoundEvent_5_OnCheckBoxChanged__DelegateSignature(bool CheckBoxChanged);
	void BndEvt__WBP_AudioOption_TextSetting_K2Node_ComponentBoundEvent_9_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_TextSetting_K2Node_ComponentBoundEvent_7_OnDecreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_MusicVolumeSetting_K2Node_ComponentBoundEvent_5_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_MusicVolumeSetting_K2Node_ComponentBoundEvent_4_OnDecreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_SFXVolumeSetting_K2Node_ComponentBoundEvent_3_OnDecreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_SFXVolumeSetting_K2Node_ComponentBoundEvent_2_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_MasterVolumeSetting_K2Node_ComponentBoundEvent_1_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_AudioOption_MasterVolumeSetting_K2Node_ComponentBoundEvent_0_OnDecreaseHandler__DelegateSignature();
	void Construct();
	void OnSuccess_A50BA9F64D3BB4E10212A8857D0EBDD3();
	void OnFailed_A50BA9F64D3BB4E10212A8857D0EBDD3();
	void GetWidgets(TArray<class UWidget*>* Widgets);
	void SetFmodVolume(bool Adding, float& VolumeSettingFloat, class FName ParameterName, class UWBP_IncreaseDecrease_C*& IncreaseDecreaseWidget);
	void SetUpVolumeSetting(float Value, class UWBP_IncreaseDecrease_C* VolumeWidget);
	void UpdateUI();
	void SetLanguage(bool Adding);
	void DelayedApplySettings();
	void SetSubtitleSize(bool Adding);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_AudioOption_C">();
	}
	static class UWBP_AudioOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_AudioOption_C>();
	}
};
static_assert(alignof(UWBP_AudioOption_C) == 0x000008, "Wrong alignment on UWBP_AudioOption_C");
static_assert(sizeof(UWBP_AudioOption_C) == 0x000390, "Wrong size on UWBP_AudioOption_C");
static_assert(offsetof(UWBP_AudioOption_C, UberGraphFrame_WBP_AudioOption_C) == 0x0002D8, "Member 'UWBP_AudioOption_C::UberGraphFrame_WBP_AudioOption_C' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, Gfx_deco_frame_1) == 0x0002E0, "Member 'UWBP_AudioOption_C::Gfx_deco_frame_1' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, Language) == 0x0002E8, "Member 'UWBP_AudioOption_C::Language' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, MasterVolumeSetting) == 0x0002F0, "Member 'UWBP_AudioOption_C::MasterVolumeSetting' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, MusicVolumeSetting) == 0x0002F8, "Member 'UWBP_AudioOption_C::MusicVolumeSetting' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, OptionVerticalBox) == 0x000300, "Member 'UWBP_AudioOption_C::OptionVerticalBox' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, SFXVolumeSetting) == 0x000308, "Member 'UWBP_AudioOption_C::SFXVolumeSetting' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, SubtitleSize) == 0x000310, "Member 'UWBP_AudioOption_C::SubtitleSize' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, TextSetting) == 0x000318, "Member 'UWBP_AudioOption_C::TextSetting' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, VoiceVolume) == 0x000320, "Member 'UWBP_AudioOption_C::VoiceVolume' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, WBP_CopyrightMusic) == 0x000328, "Member 'UWBP_AudioOption_C::WBP_CopyrightMusic' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, WBP_Subtitles) == 0x000330, "Member 'UWBP_AudioOption_C::WBP_Subtitles' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, VOLanguage) == 0x000338, "Member 'UWBP_AudioOption_C::VOLanguage' has a wrong offset!");
static_assert(offsetof(UWBP_AudioOption_C, ApplySettingsTimerHandle) == 0x000388, "Member 'UWBP_AudioOption_C::ApplySettingsTimerHandle' has a wrong offset!");

}

