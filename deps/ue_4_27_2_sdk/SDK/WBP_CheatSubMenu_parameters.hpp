#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CheatSubMenu

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function WBP_CheatSubMenu.WBP_CheatSubMenu_C.OptionSelected__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct WBP_CheatSubMenu_C_OptionSelected__DelegateSignature final
{
public:
	struct FGameplayTag                           Result;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   ResultChildren;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          ChildrenExist;                                     // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CheatSubMenu_C_OptionSelected__DelegateSignature) == 0x000008, "Wrong alignment on WBP_CheatSubMenu_C_OptionSelected__DelegateSignature");
static_assert(sizeof(WBP_CheatSubMenu_C_OptionSelected__DelegateSignature) == 0x000020, "Wrong size on WBP_CheatSubMenu_C_OptionSelected__DelegateSignature");
static_assert(offsetof(WBP_CheatSubMenu_C_OptionSelected__DelegateSignature, Result) == 0x000000, "Member 'WBP_CheatSubMenu_C_OptionSelected__DelegateSignature::Result' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OptionSelected__DelegateSignature, ResultChildren) == 0x000008, "Member 'WBP_CheatSubMenu_C_OptionSelected__DelegateSignature::ResultChildren' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OptionSelected__DelegateSignature, ChildrenExist) == 0x000018, "Member 'WBP_CheatSubMenu_C_OptionSelected__DelegateSignature::ChildrenExist' has a wrong offset!");

// Function WBP_CheatSubMenu.WBP_CheatSubMenu_C.ExecuteUbergraph_WBP_CheatSubMenu
// 0x0040 (0x0040 - 0x0000)
struct WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu) == 0x000004, "Wrong alignment on WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu");
static_assert(sizeof(WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu) == 0x000040, "Wrong size on WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu");
static_assert(offsetof(WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu, EntryPoint) == 0x000000, "Member 'WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu, K2Node_Event_MyGeometry) == 0x000004, "Member 'WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'WBP_CheatSubMenu_C_ExecuteUbergraph_WBP_CheatSubMenu::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WBP_CheatSubMenu.WBP_CheatSubMenu_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_CheatSubMenu_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CheatSubMenu_C_Tick) == 0x000004, "Wrong alignment on WBP_CheatSubMenu_C_Tick");
static_assert(sizeof(WBP_CheatSubMenu_C_Tick) == 0x00003C, "Wrong size on WBP_CheatSubMenu_C_Tick");
static_assert(offsetof(WBP_CheatSubMenu_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_CheatSubMenu_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_CheatSubMenu_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_CheatSubMenu.WBP_CheatSubMenu_C.OnKeyDown
// 0x0180 (0x0180 - 0x0000)
struct WBP_CheatSubMenu_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0070(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0128(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0148(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_GetGameplayTagChildren_ReturnValue;       // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_SliceArray_Results;                       // 0x0170(0x0010)(ReferenceParm)
};
static_assert(alignof(WBP_CheatSubMenu_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_CheatSubMenu_C_OnKeyDown");
static_assert(sizeof(WBP_CheatSubMenu_C_OnKeyDown) == 0x000180, "Wrong size on WBP_CheatSubMenu_C_OnKeyDown");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_CheatSubMenu_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_CheatSubMenu_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, ReturnValue) == 0x000070, "Member 'WBP_CheatSubMenu_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000128, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000140, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_Array_Find_ReturnValue) == 0x000144, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_Array_Get_Item) == 0x000148, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000150, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_GetGameplayTagChildren_ReturnValue) == 0x000158, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_GetGameplayTagChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x00016C, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnKeyDown, CallFunc_SliceArray_Results) == 0x000170, "Member 'WBP_CheatSubMenu_C_OnKeyDown::CallFunc_SliceArray_Results' has a wrong offset!");

// Function WBP_CheatSubMenu.WBP_CheatSubMenu_C.OnMouseButtonDown
// 0x0160 (0x0160 - 0x0000)
struct WBP_CheatSubMenu_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0070)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00A8(0x00B8)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(WBP_CheatSubMenu_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_CheatSubMenu_C_OnMouseButtonDown");
static_assert(sizeof(WBP_CheatSubMenu_C_OnMouseButtonDown) == 0x000160, "Wrong size on WBP_CheatSubMenu_C_OnMouseButtonDown");
static_assert(offsetof(WBP_CheatSubMenu_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_CheatSubMenu_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_CheatSubMenu_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_OnMouseButtonDown, ReturnValue) == 0x0000A8, "Member 'WBP_CheatSubMenu_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");

// Function WBP_CheatSubMenu.WBP_CheatSubMenu_C.SliceArray
// 0x0068 (0x0068 - 0x0000)
struct WBP_CheatSubMenu_C_SliceArray final
{
public:
	TArray<struct FGameplayTag>                   Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Start;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Count;                                             // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   Results;                                           // 0x0018(0x0010)(Parm, OutParm)
	TArray<struct FGameplayTag>                   NewLocalVar_1;                                     // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         NewLocalVar_0;                                     // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CheatSubMenu_C_SliceArray) == 0x000008, "Wrong alignment on WBP_CheatSubMenu_C_SliceArray");
static_assert(sizeof(WBP_CheatSubMenu_C_SliceArray) == 0x000068, "Wrong size on WBP_CheatSubMenu_C_SliceArray");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, Array) == 0x000000, "Member 'WBP_CheatSubMenu_C_SliceArray::Array' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, Start) == 0x000010, "Member 'WBP_CheatSubMenu_C_SliceArray::Start' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, Count) == 0x000014, "Member 'WBP_CheatSubMenu_C_SliceArray::Count' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, Results) == 0x000018, "Member 'WBP_CheatSubMenu_C_SliceArray::Results' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, NewLocalVar_1) == 0x000028, "Member 'WBP_CheatSubMenu_C_SliceArray::NewLocalVar_1' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, NewLocalVar_0) == 0x000038, "Member 'WBP_CheatSubMenu_C_SliceArray::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, Temp_int_Array_Index_Variable) == 0x000040, "Member 'WBP_CheatSubMenu_C_SliceArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'WBP_CheatSubMenu_C_SliceArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_Array_Get_Item) == 0x000048, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x00005C, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00005D, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SliceArray, CallFunc_Array_Add_ReturnValue) == 0x000060, "Member 'WBP_CheatSubMenu_C_SliceArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function WBP_CheatSubMenu.WBP_CheatSubMenu_C.SetDisplayTexts
// 0x0148 (0x0148 - 0x0000)
struct WBP_CheatSubMenu_C_SetDisplayTexts final
{
public:
	struct FKey                                   Zerokey;                                           // 0x0000(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue;           // 0x0048(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Key_GetDisplayName_ReturnValue_1;         // 0x0070(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   CallFunc_SliceArray_Results;                       // 0x0108(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x011C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CheatSubMenu_C_SetDisplayTexts) == 0x000008, "Wrong alignment on WBP_CheatSubMenu_C_SetDisplayTexts");
static_assert(sizeof(WBP_CheatSubMenu_C_SetDisplayTexts) == 0x000148, "Wrong size on WBP_CheatSubMenu_C_SetDisplayTexts");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, Zerokey) == 0x000000, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::Zerokey' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, Temp_int_Array_Index_Variable) == 0x000018, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000038, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Key_GetDisplayName_ReturnValue) == 0x000048, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Key_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Conv_TextToString_ReturnValue) == 0x000060, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Key_GetDisplayName_ReturnValue_1) == 0x000070, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Key_GetDisplayName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000088, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000098, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A8, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B8, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000D8, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0000E8, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Greater_IntInt_ReturnValue) == 0x0000FC, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Min_ReturnValue) == 0x000100, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Min_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_SliceArray_Results) == 0x000108, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_SliceArray_Results' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Array_Length_ReturnValue_1) == 0x000118, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Array_Get_Item) == 0x00011C, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Less_IntInt_ReturnValue) == 0x000124, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000128, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CheatSubMenu_C_SetDisplayTexts, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000138, "Member 'WBP_CheatSubMenu_C_SetDisplayTexts::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");

}

