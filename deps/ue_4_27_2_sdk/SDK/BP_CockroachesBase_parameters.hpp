#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CockroachesBase

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "FCockroachData_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_CockroachesBase.BP_CockroachesBase_C.ExecuteUbergraph_BP_CockroachesBase
// 0x0470 (0x0470 - 0x0000)
struct BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0030(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Weapon;                               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x0120(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_Payload;                              // 0x0128(0x00B0)()
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXY_ReturnValue;                // 0x01E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FHitResult>                     CallFunc_GetAllHitResultsFromTargetData_ReturnValue; // 0x01F0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0200(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21D[0x3];                                      // 0x021D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0220(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x02A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0360(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36C[0x4];                                      // 0x036C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0380(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0394(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x039C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue;         // 0x03B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDecalComponent*                        CallFunc_SpawnDecalAtLocation_ReturnValue_1;       // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x03D0(0x0030)(IsPlainOldData, NoDestructor)
	TArray<int32>                                 CallFunc_GetInstancesOverlappingSphere_ReturnValue; // 0x0400(0x0010)(ReferenceParm)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveInstance_ReturnValue;               // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_422[0x6];                                      // 0x0422(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0428(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0438(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Other_Actor_1;                  // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Secondary_Trigger;              // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Other_Actor;                    // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0461(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase) == 0x000010, "Wrong alignment on BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase");
static_assert(sizeof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase) == 0x000470, "Wrong size on BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, EntryPoint) == 0x000000, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000010, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000018, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000020, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000028, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00002C, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000030, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000B8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0000C0, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0000C8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0000D0, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0000D8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x0000E0, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000E8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_RandomUnitVector_ReturnValue) == 0x0000F4, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_GetUpVector_ReturnValue) == 0x000100, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00010C, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_Event_Weapon) == 0x000118, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_Event_Weapon' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_Event_EventTag) == 0x000120, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_Event_Payload) == 0x000128, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Cross_VectorVector_ReturnValue) == 0x0001D8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_MakeRotFromXY_ReturnValue) == 0x0001E4, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_MakeRotFromXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_GetAllHitResultsFromTargetData_ReturnValue) == 0x0001F0, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_GetAllHitResultsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000200, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000208, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000210, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000218, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_bFromSweep) == 0x00021C, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_SweepResult) == 0x000220, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Array_Get_Item) == 0x0002A8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_bBlockingHit) == 0x000330, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_bInitialOverlap) == 0x000331, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_Time) == 0x000334, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_Distance) == 0x000338, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_Location) == 0x00033C, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_ImpactPoint) == 0x000348, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_Normal) == 0x000354, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_ImpactNormal) == 0x000360, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_PhysMat) == 0x000370, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_HitActor) == 0x000378, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_HitComponent) == 0x000380, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_HitBoneName) == 0x000388, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_HitItem) == 0x000390, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_ElementIndex) == 0x000394, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_FaceIndex) == 0x000398, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_TraceStart) == 0x00039C, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_BreakHitResult_TraceEnd) == 0x0003A8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Array_Length_ReturnValue) == 0x0003B4, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_SpawnDecalAtLocation_ReturnValue) == 0x0003B8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_SpawnDecalAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Less_IntInt_ReturnValue) == 0x0003C0, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_SpawnDecalAtLocation_ReturnValue_1) == 0x0003C8, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_SpawnDecalAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0003D0, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_GetInstancesOverlappingSphere_ReturnValue) == 0x000400, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_GetInstancesOverlappingSphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000410, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Array_Get_Item_1) == 0x000418, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Array_Length_ReturnValue_1) == 0x00041C, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_RemoveInstance_ReturnValue) == 0x000420, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_RemoveInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_Greater_IntInt_ReturnValue) == 0x000421, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000428, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherActor) == 0x000430, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherComp) == 0x000438, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000440, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_CustomEvent_Other_Actor_1) == 0x000448, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_CustomEvent_Other_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_CustomEvent_Secondary_Trigger) == 0x000450, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_CustomEvent_Secondary_Trigger' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, K2Node_CustomEvent_Other_Actor) == 0x000458, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::K2Node_CustomEvent_Other_Actor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000460, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000461, "Member 'BP_CockroachesBase_C_ExecuteUbergraph_BP_CockroachesBase::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.End Overlap
// 0x0008 (0x0008 - 0x0000)
struct BP_CockroachesBase_C_End_Overlap final
{
public:
	class AActor*                                 Other_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CockroachesBase_C_End_Overlap) == 0x000008, "Wrong alignment on BP_CockroachesBase_C_End_Overlap");
static_assert(sizeof(BP_CockroachesBase_C_End_Overlap) == 0x000008, "Wrong size on BP_CockroachesBase_C_End_Overlap");
static_assert(offsetof(BP_CockroachesBase_C_End_Overlap, Other_Actor) == 0x000000, "Member 'BP_CockroachesBase_C_End_Overlap::Other_Actor' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.Begin Overlap
// 0x0010 (0x0010 - 0x0000)
struct BP_CockroachesBase_C_Begin_Overlap final
{
public:
	class AActor*                                 Other_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Secondary_Trigger;                                 // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CockroachesBase_C_Begin_Overlap) == 0x000008, "Wrong alignment on BP_CockroachesBase_C_Begin_Overlap");
static_assert(sizeof(BP_CockroachesBase_C_Begin_Overlap) == 0x000010, "Wrong size on BP_CockroachesBase_C_Begin_Overlap");
static_assert(offsetof(BP_CockroachesBase_C_Begin_Overlap, Other_Actor) == 0x000000, "Member 'BP_CockroachesBase_C_Begin_Overlap::Other_Actor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_Begin_Overlap, Secondary_Trigger) == 0x000008, "Member 'BP_CockroachesBase_C_Begin_Overlap::Secondary_Trigger' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CockroachesBase_C_BndEvt__BP_CockroachesBase_SecondaryTrigger_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.WeaponHit
// 0x00C0 (0x00C0 - 0x0000)
struct BP_CockroachesBase_C_WeaponHit final
{
public:
	class AActor*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Payload;                                           // 0x0010(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_CockroachesBase_C_WeaponHit) == 0x000008, "Wrong alignment on BP_CockroachesBase_C_WeaponHit");
static_assert(sizeof(BP_CockroachesBase_C_WeaponHit) == 0x0000C0, "Wrong size on BP_CockroachesBase_C_WeaponHit");
static_assert(offsetof(BP_CockroachesBase_C_WeaponHit, Weapon) == 0x000000, "Member 'BP_CockroachesBase_C_WeaponHit::Weapon' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_WeaponHit, EventTag) == 0x000008, "Member 'BP_CockroachesBase_C_WeaponHit::EventTag' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_WeaponHit, Payload) == 0x000010, "Member 'BP_CockroachesBase_C_WeaponHit::Payload' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CockroachesBase_C_BndEvt__Trigger_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CockroachesBase_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.AddRoaches
// 0x0150 (0x0150 - 0x0000)
struct BP_CockroachesBase_C_AddRoaches final
{
public:
	int32                                         Amount_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue_1;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue_2; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RandomRotatorFromStream_ReturnValue;      // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00B0(0x0030)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCockroachData                        K2Node_MakeStruct_FCockroachData;                  // 0x00F0(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CockroachesBase_C_AddRoaches) == 0x000010, "Wrong alignment on BP_CockroachesBase_C_AddRoaches");
static_assert(sizeof(BP_CockroachesBase_C_AddRoaches) == 0x000150, "Wrong size on BP_CockroachesBase_C_AddRoaches");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, Amount_0) == 0x000000, "Member 'BP_CockroachesBase_C_AddRoaches::Amount_0' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, Radius) == 0x000004, "Member 'BP_CockroachesBase_C_AddRoaches::Radius' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Max_ReturnValue) == 0x00000C, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_FMax_ReturnValue) == 0x000018, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_FMax_ReturnValue_1) == 0x00001C, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000020, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_RandomFloatInRangeFromStream_ReturnValue_1) == 0x000024, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_RandomFloatInRangeFromStream_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, Temp_int_Variable) == 0x000028, "Member 'BP_CockroachesBase_C_AddRoaches::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_SetStaticMesh_ReturnValue) == 0x00002C, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x000034, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_RandomFloatInRangeFromStream_ReturnValue_2) == 0x000040, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_RandomFloatInRangeFromStream_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_BreakVector_X) == 0x000044, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_BreakVector_Y) == 0x000048, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_BreakVector_Z) == 0x00004C, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_MakeVector_ReturnValue_1) == 0x00005C, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_RandomRotatorFromStream_ReturnValue) == 0x000068, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_RandomRotatorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Normal_ReturnValue) == 0x000074, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_RandomFloatFromStream_ReturnValue) == 0x00008C, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_MakeTransform_ReturnValue) == 0x0000B0, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_AddInstance_ReturnValue) == 0x0000E0, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, K2Node_MakeStruct_FCockroachData) == 0x0000F0, "Member 'BP_CockroachesBase_C_AddRoaches::K2Node_MakeStruct_FCockroachData' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_AddRoaches, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'BP_CockroachesBase_C_AddRoaches::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.ResetLocations
// 0x00C0 (0x00C0 - 0x0000)
struct BP_CockroachesBase_C_ResetLocations final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFCockroachData                        CallFunc_Array_Get_Item;                           // 0x0010(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0xE];                                       // 0x0062(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCockroachData                        K2Node_MakeStruct_FCockroachData;                  // 0x0070(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_CockroachesBase_C_ResetLocations) == 0x000010, "Wrong alignment on BP_CockroachesBase_C_ResetLocations");
static_assert(sizeof(BP_CockroachesBase_C_ResetLocations) == 0x0000C0, "Wrong size on BP_CockroachesBase_C_ResetLocations");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_CockroachesBase_C_ResetLocations::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_CockroachesBase_C_ResetLocations::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_CockroachesBase_C_ResetLocations::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'BP_CockroachesBase_C_ResetLocations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_CockroachesBase_C_ResetLocations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BP_CockroachesBase_C_ResetLocations::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x000061, "Member 'BP_CockroachesBase_C_ResetLocations::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_ResetLocations, K2Node_MakeStruct_FCockroachData) == 0x000070, "Member 'BP_CockroachesBase_C_ResetLocations::K2Node_MakeStruct_FCockroachData' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.MoveRoachForwards
// 0x0130 (0x0130 - 0x0000)
struct BP_CockroachesBase_C_MoveRoachForwards final
{
public:
	struct FFCockroachData                        RoachData;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         SpeedMultiplier;                                   // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x0060(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0xC];                                       // 0x00E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x00F0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CockroachesBase_C_MoveRoachForwards) == 0x000010, "Wrong alignment on BP_CockroachesBase_C_MoveRoachForwards");
static_assert(sizeof(BP_CockroachesBase_C_MoveRoachForwards) == 0x000130, "Wrong size on BP_CockroachesBase_C_MoveRoachForwards");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, RoachData) == 0x000000, "Member 'BP_CockroachesBase_C_MoveRoachForwards::RoachData' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, SpeedMultiplier) == 0x000050, "Member 'BP_CockroachesBase_C_MoveRoachForwards::SpeedMultiplier' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000054, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x000060, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_GetInstanceTransform_ReturnValue) == 0x000090, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000098, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_BreakTransform_Location) == 0x00009C, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_BreakTransform_Rotation) == 0x0000A8, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_BreakTransform_Scale) == 0x0000B4, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_GetForwardVector_ReturnValue) == 0x0000C0, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000CC, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_MakeTransform_ReturnValue) == 0x0000F0, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_MoveRoachForwards, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x000120, "Member 'BP_CockroachesBase_C_MoveRoachForwards::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.RotateRoach
// 0x0170 (0x0170 - 0x0000)
struct BP_CockroachesBase_C_RotateRoach final
{
public:
	struct FFCockroachData                        RoachData;                                         // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                FocusLocation;                                     // 0x0050(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x0080(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0118(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_UpdateInstanceTransform_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CockroachesBase_C_RotateRoach) == 0x000010, "Wrong alignment on BP_CockroachesBase_C_RotateRoach");
static_assert(sizeof(BP_CockroachesBase_C_RotateRoach) == 0x000170, "Wrong size on BP_CockroachesBase_C_RotateRoach");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, RoachData) == 0x000000, "Member 'BP_CockroachesBase_C_RotateRoach::RoachData' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, FocusLocation) == 0x000050, "Member 'BP_CockroachesBase_C_RotateRoach::FocusLocation' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakTransform_Location) == 0x00005C, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakTransform_Rotation) == 0x000068, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakTransform_Scale) == 0x000074, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x000080, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_GetInstanceTransform_ReturnValue) == 0x0000B0, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B4, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakTransform_Location_1) == 0x0000C0, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakTransform_Rotation_1) == 0x0000CC, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakTransform_Scale_1) == 0x0000D8, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000E4, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_MakeRotFromX_ReturnValue) == 0x0000F0, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000FC, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakRotator_Roll) == 0x000100, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakRotator_Pitch) == 0x000104, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_BreakRotator_Yaw) == 0x000108, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00010C, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000110, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_Add_FloatFloat_ReturnValue) == 0x000114, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_MakeRotator_ReturnValue) == 0x000118, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_RInterpTo_ReturnValue) == 0x000124, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_RotateRoach, CallFunc_UpdateInstanceTransform_ReturnValue) == 0x000160, "Member 'BP_CockroachesBase_C_RotateRoach::CallFunc_UpdateInstanceTransform_ReturnValue' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.CheckIfAllHasReachedDestination
// 0x0090 (0x0090 - 0x0000)
struct BP_CockroachesBase_C_CheckIfAllHasReachedDestination final
{
public:
	struct FVector                                Destination;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WantedLocationID;                                  // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtDestination;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFCockroachData                        CallFunc_Array_Get_Item;                           // 0x0030(0x0050)(IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfRoachHasReachDestination_IsAtDestination; // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination) == 0x000010, "Wrong alignment on BP_CockroachesBase_C_CheckIfAllHasReachedDestination");
static_assert(sizeof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination) == 0x000090, "Wrong size on BP_CockroachesBase_C_CheckIfAllHasReachedDestination");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, Destination) == 0x000000, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::Destination' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, WantedLocationID) == 0x00000C, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::WantedLocationID' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, IsAtDestination) == 0x000010, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::IsAtDestination' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, Success) == 0x000011, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::Success' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, Temp_bool_True_if_break_was_hit_Variable) == 0x000012, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, Temp_int_Array_Index_Variable) == 0x000014, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, CallFunc_Less_IntInt_ReturnValue) == 0x000080, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, CallFunc_CheckIfRoachHasReachDestination_IsAtDestination) == 0x000081, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::CallFunc_CheckIfRoachHasReachDestination_IsAtDestination' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfAllHasReachedDestination, CallFunc_BooleanAND_ReturnValue) == 0x000082, "Member 'BP_CockroachesBase_C_CheckIfAllHasReachedDestination::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_CockroachesBase.BP_CockroachesBase_C.CheckIfRoachHasReachDestination
// 0x0110 (0x0110 - 0x0000)
struct BP_CockroachesBase_C_CheckIfRoachHasReachDestination final
{
public:
	struct FFCockroachData                        FCockroachData;                                    // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                Destination;                                       // 0x0050(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WantedLocationID;                                  // 0x005C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAtDestination;                                   // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0xC];                                       // 0x0094(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination) == 0x000010, "Wrong alignment on BP_CockroachesBase_C_CheckIfRoachHasReachDestination");
static_assert(sizeof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination) == 0x000110, "Wrong size on BP_CockroachesBase_C_CheckIfRoachHasReachDestination");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, FCockroachData) == 0x000000, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::FCockroachData' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, Destination) == 0x000050, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::Destination' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, WantedLocationID) == 0x00005C, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::WantedLocationID' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, IsAtDestination) == 0x000060, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::IsAtDestination' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000061, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_BreakTransform_Location) == 0x000064, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x0000A0, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_GetInstanceTransform_ReturnValue) == 0x0000D0, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_BreakTransform_Location_1) == 0x0000D4, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_BreakTransform_Rotation_1) == 0x0000E0, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_BreakTransform_Scale_1) == 0x0000EC, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0000F8, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_VSize_ReturnValue) == 0x000104, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CockroachesBase_C_CheckIfRoachHasReachDestination, CallFunc_Less_FloatFloat_ReturnValue) == 0x000108, "Member 'BP_CockroachesBase_C_CheckIfRoachHasReachDestination::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

}

