#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Player_CameraYShift

#include "Basic.hpp"


namespace SDK::Params
{

// Function GA_Player_CameraYShift.GA_Player_CameraYShift_C.ExecuteUbergraph_GA_Player_CameraYShift
// 0x0048 (0x0048 - 0x0000)
struct GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TimeWaited;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float TimeWaited)>             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         Temp_float_Variable;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputPress*            CallFunc_WaitInputPress_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift) == 0x000008, "Wrong alignment on GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift");
static_assert(sizeof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift) == 0x000048, "Wrong size on GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, EntryPoint) == 0x000000, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, K2Node_CustomEvent_TimeWaited) == 0x000004, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::K2Node_CustomEvent_TimeWaited' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, Temp_float_Variable) == 0x000018, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, CallFunc_WaitInputPress_ReturnValue) == 0x000020, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::CallFunc_WaitInputPress_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, K2Node_Event_bWasCancelled) == 0x000029, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000030, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000038, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'GA_Player_CameraYShift_C_ExecuteUbergraph_GA_Player_CameraYShift::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function GA_Player_CameraYShift.GA_Player_CameraYShift_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Player_CameraYShift_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_CameraYShift_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Player_CameraYShift_C_K2_OnEndAbility");
static_assert(sizeof(GA_Player_CameraYShift_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Player_CameraYShift_C_K2_OnEndAbility");
static_assert(offsetof(GA_Player_CameraYShift_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Player_CameraYShift_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Player_CameraYShift.GA_Player_CameraYShift_C.OnPress_1F259C6D44D20FBAE0A81194106D5274
// 0x0004 (0x0004 - 0x0000)
struct GA_Player_CameraYShift_C_OnPress_1F259C6D44D20FBAE0A81194106D5274 final
{
public:
	float                                         TimeWaited;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_CameraYShift_C_OnPress_1F259C6D44D20FBAE0A81194106D5274) == 0x000004, "Wrong alignment on GA_Player_CameraYShift_C_OnPress_1F259C6D44D20FBAE0A81194106D5274");
static_assert(sizeof(GA_Player_CameraYShift_C_OnPress_1F259C6D44D20FBAE0A81194106D5274) == 0x000004, "Wrong size on GA_Player_CameraYShift_C_OnPress_1F259C6D44D20FBAE0A81194106D5274");
static_assert(offsetof(GA_Player_CameraYShift_C_OnPress_1F259C6D44D20FBAE0A81194106D5274, TimeWaited) == 0x000000, "Member 'GA_Player_CameraYShift_C_OnPress_1F259C6D44D20FBAE0A81194106D5274::TimeWaited' has a wrong offset!");

// Function GA_Player_CameraYShift.GA_Player_CameraYShift_C.Flip Camera
// 0x0018 (0x0018 - 0x0000)
struct GA_Player_CameraYShift_C_Flip_Camera final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_CameraYShift_C_Flip_Camera) == 0x000008, "Wrong alignment on GA_Player_CameraYShift_C_Flip_Camera");
static_assert(sizeof(GA_Player_CameraYShift_C_Flip_Camera) == 0x000018, "Wrong size on GA_Player_CameraYShift_C_Flip_Camera");
static_assert(offsetof(GA_Player_CameraYShift_C_Flip_Camera, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_Player_CameraYShift_C_Flip_Camera::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_Flip_Camera, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000008, "Member 'GA_Player_CameraYShift_C_Flip_Camera::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_Flip_Camera, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_Player_CameraYShift_C_Flip_Camera::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_CameraYShift_C_Flip_Camera, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'GA_Player_CameraYShift_C_Flip_Camera::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

