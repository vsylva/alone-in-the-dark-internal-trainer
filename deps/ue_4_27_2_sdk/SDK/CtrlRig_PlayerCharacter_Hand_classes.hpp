#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CtrlRig_PlayerCharacter_Hand

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CtrlRig_PlayerCharacter_Hand.CtrlRig_PlayerCharacter_Hand_C
// 0x0040 (0x0690 - 0x0650)
class UCtrlRig_PlayerCharacter_Hand_C final : public UControlRig
{
public:
	float                                         LeftHandAlpha;                                     // 0x0650(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RightHandAlpha;                                    // 0x0654(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThumbAlpha;                                        // 0x0658(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         Thumb01;                                           // 0x065C(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         Thumb02;                                           // 0x0668(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FRigElementKey                         Thumb03;                                           // 0x0674(0x000C)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRightHand;                                      // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         UpDownTime;                                        // 0x0684(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FingerGripSettingsPreset;                          // 0x0688(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CtrlRig_PlayerCharacter_Hand_C">();
	}
	static class UCtrlRig_PlayerCharacter_Hand_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrlRig_PlayerCharacter_Hand_C>();
	}
};
static_assert(alignof(UCtrlRig_PlayerCharacter_Hand_C) == 0x000008, "Wrong alignment on UCtrlRig_PlayerCharacter_Hand_C");
static_assert(sizeof(UCtrlRig_PlayerCharacter_Hand_C) == 0x000690, "Wrong size on UCtrlRig_PlayerCharacter_Hand_C");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, LeftHandAlpha) == 0x000650, "Member 'UCtrlRig_PlayerCharacter_Hand_C::LeftHandAlpha' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, RightHandAlpha) == 0x000654, "Member 'UCtrlRig_PlayerCharacter_Hand_C::RightHandAlpha' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, ThumbAlpha) == 0x000658, "Member 'UCtrlRig_PlayerCharacter_Hand_C::ThumbAlpha' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, Thumb01) == 0x00065C, "Member 'UCtrlRig_PlayerCharacter_Hand_C::Thumb01' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, Thumb02) == 0x000668, "Member 'UCtrlRig_PlayerCharacter_Hand_C::Thumb02' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, Thumb03) == 0x000674, "Member 'UCtrlRig_PlayerCharacter_Hand_C::Thumb03' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, bIsRightHand) == 0x000680, "Member 'UCtrlRig_PlayerCharacter_Hand_C::bIsRightHand' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, UpDownTime) == 0x000684, "Member 'UCtrlRig_PlayerCharacter_Hand_C::UpDownTime' has a wrong offset!");
static_assert(offsetof(UCtrlRig_PlayerCharacter_Hand_C, FingerGripSettingsPreset) == 0x000688, "Member 'UCtrlRig_PlayerCharacter_Hand_C::FingerGripSettingsPreset' has a wrong offset!");

}

