#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BirdFlock_Spline

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.GetRandomRotation
// 0x007C (0x007C - 0x0000)
struct BP_BirdFlock_Spline_C_GetRandomRotation final
{
public:
	float                                         DistanceAlongSpline;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBoolFromStream_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue_1;               // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               K2Node_Select_Default;                             // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BirdFlock_Spline_C_GetRandomRotation) == 0x000004, "Wrong alignment on BP_BirdFlock_Spline_C_GetRandomRotation");
static_assert(sizeof(BP_BirdFlock_Spline_C_GetRandomRotation) == 0x00007C, "Wrong size on BP_BirdFlock_Spline_C_GetRandomRotation");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, DistanceAlongSpline) == 0x000000, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::DistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, Rotation) == 0x000004, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, Temp_bool_Variable) == 0x000010, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_RandomBoolFromStream_ReturnValue) == 0x000011, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_RandomBoolFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000014, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_GetRightVector_ReturnValue) == 0x000020, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_RandomFloatFromStream_ReturnValue) == 0x00002C, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_MakeRotFromX_ReturnValue) == 0x000040, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_MakeRotator_ReturnValue) == 0x00004C, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_MakeRotFromX_ReturnValue_1) == 0x000058, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_MakeRotFromX_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, K2Node_Select_Default) == 0x000064, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomRotation, CallFunc_RLerp_ReturnValue) == 0x000070, "Member 'BP_BirdFlock_Spline_C_GetRandomRotation::CallFunc_RLerp_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.GetRandomLocation
// 0x0058 (0x0058 - 0x0000)
struct BP_BirdFlock_Spline_C_GetRandomLocation final
{
public:
	int32                                         IterationIndex;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceAlongSpline;                               // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFlock_Spline_C_GetRandomLocation) == 0x000004, "Wrong alignment on BP_BirdFlock_Spline_C_GetRandomLocation");
static_assert(sizeof(BP_BirdFlock_Spline_C_GetRandomLocation) == 0x000058, "Wrong size on BP_BirdFlock_Spline_C_GetRandomLocation");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, IterationIndex) == 0x000000, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::IterationIndex' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, Location) == 0x000004, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, DistanceAlongSpline) == 0x000010, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::DistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Divide_IntInt_ReturnValue) == 0x000014, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x000028, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Max_ReturnValue) == 0x000030, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_GetSplineLength_ReturnValue) == 0x000034, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000038, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000040, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_GetRandomLocation, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x00004C, "Member 'BP_BirdFlock_Spline_C_GetRandomLocation::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.SpawnBoidsOnSpline
// 0x0070 (0x0070 - 0x0000)
struct BP_BirdFlock_Spline_C_SpawnBoidsOnSpline final
{
public:
	struct FVector                                CallFunc_GetRandomScale_Scale;                     // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRandomLocation_Location;               // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRandomLocation_DistanceAlongSpline;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRandomRotation_Rotation;               // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline) == 0x000010, "Wrong alignment on BP_BirdFlock_Spline_C_SpawnBoidsOnSpline");
static_assert(sizeof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline) == 0x000070, "Wrong size on BP_BirdFlock_Spline_C_SpawnBoidsOnSpline");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, CallFunc_GetRandomScale_Scale) == 0x000000, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::CallFunc_GetRandomScale_Scale' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, Temp_int_Variable) == 0x00000C, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, CallFunc_GetRandomLocation_Location) == 0x000014, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::CallFunc_GetRandomLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, CallFunc_GetRandomLocation_DistanceAlongSpline) == 0x000020, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::CallFunc_GetRandomLocation_DistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, CallFunc_GetRandomRotation_Rotation) == 0x000024, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::CallFunc_GetRandomRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_SpawnBoidsOnSpline, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_BirdFlock_Spline_C_SpawnBoidsOnSpline::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.ExecuteUbergraph_BP_BirdFlock_Spline
// 0x0004 (0x0004 - 0x0000)
struct BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline) == 0x000004, "Wrong alignment on BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline");
static_assert(sizeof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline) == 0x000004, "Wrong size on BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, EntryPoint) == 0x000000, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::EntryPoint' has a wrong offset!");

}

