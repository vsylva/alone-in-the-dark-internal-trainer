#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ControlBindings_PC

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WBP_OptionSelectionPage_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ControlBindings_PC.WBP_ControlBindings_PC_C
// 0x0130 (0x0408 - 0x02D8)
class UWBP_ControlBindings_PC_C final : public UWBP_OptionSelectionPage_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_ControlBindings_PC_C;           // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Color_overlay;                                     // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Darkening_overlay_65;                              // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gfx_deco_frame;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             SbItems;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CtrlButtons_C*                     WBP_CtrlButtons;                                   // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Aim;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Consume;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Dodge;                               // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Examine;                             // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Flashlight;                          // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Interact;                            // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_InvestigationMenu;                   // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_LookDown;                            // 0x0340(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_LookLeft;                            // 0x0348(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_LookRight;                           // 0x0350(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_LookUp;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_MeleeAttack;                         // 0x0360(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_MoveBack;                            // 0x0368(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_MoveFoward;                          // 0x0370(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_MoveLeft;                            // 0x0378(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_MoveRight;                           // 0x0380(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Opportunity;                         // 0x0388(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_PauseMenu;                           // 0x0390(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_RangedAttack;                        // 0x0398(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Reload;                              // 0x03A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Sprint;                              // 0x03A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_Stealth_KBM;                         // 0x03B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_WeaponFlaregun;                      // 0x03B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_WeaponHandgun;                       // 0x03C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_WeaponShotgun;                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_RebindKey_C*                       WBP_RebindKey_WeaponTommygun;                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InputHint_C*                       PopUpWidgetKeyHint;                                // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        SelecteableWidget_Secondary;                       // 0x03E0(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          PrimarySelected;                                   // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        SelecteableWidget_Primary;                         // 0x03F8(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)

public:
	void ExecuteUbergraph_WBP_ControlBindings_PC(int32 EntryPoint);
	void SelectPreviousPressed();
	void SelectNextPressed();
	void OnResetPressed();
	void RebindKeyHover(class UWBP_RebindKey_C* RebindKey, class UOFButton* KeyButton);
	void OnInitialized();
	void CancelPressed();
	void OnKeyBindingSelectionStateUpdate_Event_1(bool NewState);
	void Construct();
	void OnSuccess_B6EC3E9C49F380416694AA9E7DFD0982();
	void OnFailed_B6EC3E9C49F380416694AA9E7DFD0982();
	void GetWidgets(TArray<class UWidget*>* Widgets);
	void ChangeWidgetList();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ControlBindings_PC_C">();
	}
	static class UWBP_ControlBindings_PC_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ControlBindings_PC_C>();
	}
};
static_assert(alignof(UWBP_ControlBindings_PC_C) == 0x000008, "Wrong alignment on UWBP_ControlBindings_PC_C");
static_assert(sizeof(UWBP_ControlBindings_PC_C) == 0x000408, "Wrong size on UWBP_ControlBindings_PC_C");
static_assert(offsetof(UWBP_ControlBindings_PC_C, UberGraphFrame_WBP_ControlBindings_PC_C) == 0x0002D8, "Member 'UWBP_ControlBindings_PC_C::UberGraphFrame_WBP_ControlBindings_PC_C' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, Color_overlay) == 0x0002E0, "Member 'UWBP_ControlBindings_PC_C::Color_overlay' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, Darkening_overlay_65) == 0x0002E8, "Member 'UWBP_ControlBindings_PC_C::Darkening_overlay_65' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, Gfx_deco_frame) == 0x0002F0, "Member 'UWBP_ControlBindings_PC_C::Gfx_deco_frame' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, SbItems) == 0x0002F8, "Member 'UWBP_ControlBindings_PC_C::SbItems' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_CtrlButtons) == 0x000300, "Member 'UWBP_ControlBindings_PC_C::WBP_CtrlButtons' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Aim) == 0x000308, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Aim' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Consume) == 0x000310, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Consume' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Dodge) == 0x000318, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Dodge' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Examine) == 0x000320, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Examine' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Flashlight) == 0x000328, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Flashlight' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Interact) == 0x000330, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Interact' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_InvestigationMenu) == 0x000338, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_InvestigationMenu' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_LookDown) == 0x000340, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_LookDown' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_LookLeft) == 0x000348, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_LookLeft' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_LookRight) == 0x000350, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_LookRight' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_LookUp) == 0x000358, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_LookUp' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_MeleeAttack) == 0x000360, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_MeleeAttack' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_MoveBack) == 0x000368, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_MoveBack' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_MoveFoward) == 0x000370, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_MoveFoward' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_MoveLeft) == 0x000378, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_MoveLeft' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_MoveRight) == 0x000380, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_MoveRight' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Opportunity) == 0x000388, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Opportunity' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_PauseMenu) == 0x000390, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_PauseMenu' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_RangedAttack) == 0x000398, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_RangedAttack' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Reload) == 0x0003A0, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Reload' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Sprint) == 0x0003A8, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Sprint' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_Stealth_KBM) == 0x0003B0, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_Stealth_KBM' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_WeaponFlaregun) == 0x0003B8, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_WeaponFlaregun' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_WeaponHandgun) == 0x0003C0, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_WeaponHandgun' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_WeaponShotgun) == 0x0003C8, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_WeaponShotgun' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, WBP_RebindKey_WeaponTommygun) == 0x0003D0, "Member 'UWBP_ControlBindings_PC_C::WBP_RebindKey_WeaponTommygun' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, PopUpWidgetKeyHint) == 0x0003D8, "Member 'UWBP_ControlBindings_PC_C::PopUpWidgetKeyHint' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, SelecteableWidget_Secondary) == 0x0003E0, "Member 'UWBP_ControlBindings_PC_C::SelecteableWidget_Secondary' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, PrimarySelected) == 0x0003F0, "Member 'UWBP_ControlBindings_PC_C::PrimarySelected' has a wrong offset!");
static_assert(offsetof(UWBP_ControlBindings_PC_C, SelecteableWidget_Primary) == 0x0003F8, "Member 'UWBP_ControlBindings_PC_C::SelecteableWidget_Primary' has a wrong offset!");

}

