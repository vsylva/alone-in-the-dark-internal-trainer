#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Player_Aim

#include "Basic.hpp"

#include "FMODStudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_Player_Aim.GA_Player_Aim_C.ExecuteUbergraph_GA_Player_Aim
// 0x0100 (0x0100 - 0x0000)
struct GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_GetContextFromOwner_ReturnValue;          // 0x0018(0x0018)()
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_EffectContextGetSourceObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HitscanWeapon_Base_C*               K2Node_DynamicCast_AsBP_Hitscan_Weapon_Base;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_GetContextFromOwner_ReturnValue_1;        // 0x0050(0x0018)()
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_EffectContextGetSourceObject_ReturnValue_1; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_HitscanWeapon_Base_C*               K2Node_DynamicCast_AsBP_Hitscan_Weapon_Base_1;     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00A0(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Effect;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x00EC(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim) == 0x000010, "Wrong alignment on GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim");
static_assert(sizeof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim) == 0x000100, "Wrong size on GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, EntryPoint) == 0x000000, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_Event_bWasCancelled) == 0x000014, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_GetContextFromOwner_ReturnValue) == 0x000018, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_GetContextFromOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_GetAbilityLevel_ReturnValue) == 0x000030, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_EffectContextGetSourceObject_ReturnValue) == 0x000038, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_EffectContextGetSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_DynamicCast_AsBP_Hitscan_Weapon_Base) == 0x000040, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_DynamicCast_AsBP_Hitscan_Weapon_Base' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_GetContextFromOwner_ReturnValue_1) == 0x000050, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_GetContextFromOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_K2_CommitAbility_ReturnValue) == 0x000068, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_EffectContextGetSourceObject_ReturnValue_1) == 0x000070, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_EffectContextGetSourceObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_DynamicCast_AsBP_Hitscan_Weapon_Base_1) == 0x000078, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_DynamicCast_AsBP_Hitscan_Weapon_Base_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_WaitDelay_ReturnValue) == 0x000088, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_IsValid_ReturnValue_1) == 0x000091, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000098, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_GetTransform_ReturnValue) == 0x0000A0, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_PlayEventAtLocation_ReturnValue) == 0x0000D0, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x0000D8, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_ClassDynamicCast_AsGameplay_Effect) == 0x0000E0, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_ClassDynamicCast_AsGameplay_Effect' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, K2Node_ClassDynamicCast_bSuccess) == 0x0000E8, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x0000EC, "Member 'GA_Player_Aim_C_ExecuteUbergraph_GA_Player_Aim::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Player_Aim_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Aim_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Player_Aim_C_K2_OnEndAbility");
static_assert(sizeof(GA_Player_Aim_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Player_Aim_C_K2_OnEndAbility");
static_assert(offsetof(GA_Player_Aim_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Player_Aim_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.Establish Camera Modifier
// 0x0040 (0x0040 - 0x0000)
struct GA_Player_Aim_C_Establish_Camera_Modifier final
{
public:
	class UClass*                                 CameraModifierClass;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_AddNewCameraModifier_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Aim_C_Establish_Camera_Modifier) == 0x000008, "Wrong alignment on GA_Player_Aim_C_Establish_Camera_Modifier");
static_assert(sizeof(GA_Player_Aim_C_Establish_Camera_Modifier) == 0x000040, "Wrong size on GA_Player_Aim_C_Establish_Camera_Modifier");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, CameraModifierClass) == 0x000000, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::CameraModifierClass' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, ReturnValue) == 0x000008, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000020, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000028, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Establish_Camera_Modifier, CallFunc_AddNewCameraModifier_ReturnValue) == 0x000038, "Member 'GA_Player_Aim_C_Establish_Camera_Modifier::CallFunc_AddNewCameraModifier_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.Apply Aiming Camera Modifier
// 0x0028 (0x0028 - 0x0000)
struct GA_Player_Aim_C_Apply_Aiming_Camera_Modifier final
{
public:
	TSubclassOf<class UObject>                    CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCamera_Modifier;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_Establish_Camera_Modifier_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Aim_C_Apply_Aiming_Camera_Modifier) == 0x000008, "Wrong alignment on GA_Player_Aim_C_Apply_Aiming_Camera_Modifier");
static_assert(sizeof(GA_Player_Aim_C_Apply_Aiming_Camera_Modifier) == 0x000028, "Wrong size on GA_Player_Aim_C_Apply_Aiming_Camera_Modifier");
static_assert(offsetof(GA_Player_Aim_C_Apply_Aiming_Camera_Modifier, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x000000, "Member 'GA_Player_Aim_C_Apply_Aiming_Camera_Modifier::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Apply_Aiming_Camera_Modifier, K2Node_ClassDynamicCast_AsCamera_Modifier) == 0x000008, "Member 'GA_Player_Aim_C_Apply_Aiming_Camera_Modifier::K2Node_ClassDynamicCast_AsCamera_Modifier' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Apply_Aiming_Camera_Modifier, K2Node_ClassDynamicCast_bSuccess) == 0x000010, "Member 'GA_Player_Aim_C_Apply_Aiming_Camera_Modifier::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Apply_Aiming_Camera_Modifier, CallFunc_Establish_Camera_Modifier_ReturnValue) == 0x000018, "Member 'GA_Player_Aim_C_Apply_Aiming_Camera_Modifier::CallFunc_Establish_Camera_Modifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Apply_Aiming_Camera_Modifier, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'GA_Player_Aim_C_Apply_Aiming_Camera_Modifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.Set Character Aim State
// 0x0020 (0x0020 - 0x0000)
struct GA_Player_Aim_C_Set_Character_Aim_State final
{
public:
	bool                                          bIsAiming;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Aim_C_Set_Character_Aim_State) == 0x000008, "Wrong alignment on GA_Player_Aim_C_Set_Character_Aim_State");
static_assert(sizeof(GA_Player_Aim_C_Set_Character_Aim_State) == 0x000020, "Wrong size on GA_Player_Aim_C_Set_Character_Aim_State");
static_assert(offsetof(GA_Player_Aim_C_Set_Character_Aim_State, bIsAiming) == 0x000000, "Member 'GA_Player_Aim_C_Set_Character_Aim_State::bIsAiming' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Set_Character_Aim_State, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Player_Aim_C_Set_Character_Aim_State::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Set_Character_Aim_State, K2Node_DynamicCast_AsBP_Player_Character) == 0x000010, "Member 'GA_Player_Aim_C_Set_Character_Aim_State::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_Set_Character_Aim_State, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Player_Aim_C_Set_Character_Aim_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.Remove Camera modifier
// 0x0001 (0x0001 - 0x0000)
struct GA_Player_Aim_C_Remove_Camera_modifier final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Aim_C_Remove_Camera_modifier) == 0x000001, "Wrong alignment on GA_Player_Aim_C_Remove_Camera_modifier");
static_assert(sizeof(GA_Player_Aim_C_Remove_Camera_modifier) == 0x000001, "Wrong size on GA_Player_Aim_C_Remove_Camera_modifier");
static_assert(offsetof(GA_Player_Aim_C_Remove_Camera_modifier, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'GA_Player_Aim_C_Remove_Camera_modifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.EnableAimAssist
// 0x0001 (0x0001 - 0x0000)
struct GA_Player_Aim_C_EnableAimAssist final
{
public:
	bool                                          CallFunc_CanUseAimAssist_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Aim_C_EnableAimAssist) == 0x000001, "Wrong alignment on GA_Player_Aim_C_EnableAimAssist");
static_assert(sizeof(GA_Player_Aim_C_EnableAimAssist) == 0x000001, "Wrong size on GA_Player_Aim_C_EnableAimAssist");
static_assert(offsetof(GA_Player_Aim_C_EnableAimAssist, CallFunc_CanUseAimAssist_ReturnValue) == 0x000000, "Member 'GA_Player_Aim_C_EnableAimAssist::CallFunc_CanUseAimAssist_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.GetWeaponAnimationController
// 0x0018 (0x0018 - 0x0000)
struct GA_Player_Aim_C_GetWeaponAnimationController final
{
public:
	class UWeaponAnimationComponent*              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimationComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Aim_C_GetWeaponAnimationController) == 0x000008, "Wrong alignment on GA_Player_Aim_C_GetWeaponAnimationController");
static_assert(sizeof(GA_Player_Aim_C_GetWeaponAnimationController) == 0x000018, "Wrong size on GA_Player_Aim_C_GetWeaponAnimationController");
static_assert(offsetof(GA_Player_Aim_C_GetWeaponAnimationController, ReturnValue) == 0x000000, "Member 'GA_Player_Aim_C_GetWeaponAnimationController::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_GetWeaponAnimationController, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Player_Aim_C_GetWeaponAnimationController::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_GetWeaponAnimationController, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'GA_Player_Aim_C_GetWeaponAnimationController::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.PrepareWeaponAnimationController
// 0x0018 (0x0018 - 0x0000)
struct GA_Player_Aim_C_PrepareWeaponAnimationController final
{
public:
	class UWeaponAnimationComponent*              WeaponAnimationController;                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponAnimationComponent*              CallFunc_GetWeaponAnimationController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Aim_C_PrepareWeaponAnimationController) == 0x000008, "Wrong alignment on GA_Player_Aim_C_PrepareWeaponAnimationController");
static_assert(sizeof(GA_Player_Aim_C_PrepareWeaponAnimationController) == 0x000018, "Wrong size on GA_Player_Aim_C_PrepareWeaponAnimationController");
static_assert(offsetof(GA_Player_Aim_C_PrepareWeaponAnimationController, WeaponAnimationController) == 0x000000, "Member 'GA_Player_Aim_C_PrepareWeaponAnimationController::WeaponAnimationController' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_PrepareWeaponAnimationController, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'GA_Player_Aim_C_PrepareWeaponAnimationController::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_PrepareWeaponAnimationController, CallFunc_GetWeaponAnimationController_ReturnValue) == 0x000010, "Member 'GA_Player_Aim_C_PrepareWeaponAnimationController::CallFunc_GetWeaponAnimationController_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.ApplyTriggerEffect
// 0x0010 (0x0010 - 0x0000)
struct GA_Player_Aim_C_ApplyTriggerEffect final
{
public:
	class UDevicePropertySubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UControllerTriggerEffectData*           CallFunc_GetShootTriggerEffect_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Aim_C_ApplyTriggerEffect) == 0x000008, "Wrong alignment on GA_Player_Aim_C_ApplyTriggerEffect");
static_assert(sizeof(GA_Player_Aim_C_ApplyTriggerEffect) == 0x000010, "Wrong size on GA_Player_Aim_C_ApplyTriggerEffect");
static_assert(offsetof(GA_Player_Aim_C_ApplyTriggerEffect, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'GA_Player_Aim_C_ApplyTriggerEffect::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_ApplyTriggerEffect, CallFunc_GetShootTriggerEffect_ReturnValue) == 0x000008, "Member 'GA_Player_Aim_C_ApplyTriggerEffect::CallFunc_GetShootTriggerEffect_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.RemoveTriggerEffect
// 0x0008 (0x0008 - 0x0000)
struct GA_Player_Aim_C_RemoveTriggerEffect final
{
public:
	class UDevicePropertySubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Aim_C_RemoveTriggerEffect) == 0x000008, "Wrong alignment on GA_Player_Aim_C_RemoveTriggerEffect");
static_assert(sizeof(GA_Player_Aim_C_RemoveTriggerEffect) == 0x000008, "Wrong size on GA_Player_Aim_C_RemoveTriggerEffect");
static_assert(offsetof(GA_Player_Aim_C_RemoveTriggerEffect, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'GA_Player_Aim_C_RemoveTriggerEffect::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");

// Function GA_Player_Aim.GA_Player_Aim_C.OnGiveAbility_GetAssetsToBeAsyncLoaded
// 0x0070 (0x0070 - 0x0000)
struct GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                AssetsToLoad;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0038(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue_1;         // 0x0050(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded) == 0x000008, "Wrong alignment on GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded");
static_assert(sizeof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded) == 0x000070, "Wrong size on GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, OwnerActor) == 0x000000, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::OwnerActor' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, AssetsToLoad) == 0x000008, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000018, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1) == 0x000028, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_Conv_SoftClassReferenceToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000038, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_MakeSoftObjectPath_ReturnValue_1) == 0x000050, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_MakeSoftObjectPath_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_Array_AddUnique_ReturnValue) == 0x000068, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00006C, "Member 'GA_Player_Aim_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");

}

