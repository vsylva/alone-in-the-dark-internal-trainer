#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GMMC_HealDifficultyModifier

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"


namespace SDK::Params
{

// Function GMMC_HealDifficultyModifier.GMMC_HealDifficultyModifier_C.CalculateBaseMagnitude
// 0x02B8 (0x02B8 - 0x0000)
struct GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude final
{
public:
	struct FGameplayEffectSpec                    Spec;                                              // 0x0000(0x0298)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         ReturnValue;                                       // 0x0298(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDifficulty                                   Temp_byte_Variable;                                // 0x029C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude) == 0x000008, "Wrong alignment on GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude");
static_assert(sizeof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude) == 0x0002B8, "Wrong size on GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, Spec) == 0x000000, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::Spec' has a wrong offset!");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, ReturnValue) == 0x000298, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::ReturnValue' has a wrong offset!");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, Temp_byte_Variable) == 0x00029C, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, Temp_float_Variable) == 0x0002A0, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, Temp_float_Variable_1) == 0x0002A4, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, Temp_float_Variable_2) == 0x0002A8, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, Temp_float_Variable_3) == 0x0002AC, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude, K2Node_Select_Default) == 0x0002B0, "Member 'GMMC_HealDifficultyModifier_C_CalculateBaseMagnitude::K2Node_Select_Default' has a wrong offset!");

}

