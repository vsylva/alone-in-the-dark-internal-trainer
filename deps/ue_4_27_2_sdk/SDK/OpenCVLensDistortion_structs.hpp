#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: OpenCVLensDistortion

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct OpenCVLensDistortion.OpenCVLensDistortionParameters
// 0x0034 (0x0034 - 0x0000)
struct FOpenCVLensDistortionParameters final
{
public:
	float                                         K1;                                                // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K2;                                                // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         P1;                                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         P2;                                                // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K3;                                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K4;                                                // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K5;                                                // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         K6;                                                // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              F;                                                 // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                              C;                                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseFisheyeModel;                                  // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FOpenCVLensDistortionParameters) == 0x000004, "Wrong alignment on FOpenCVLensDistortionParameters");
static_assert(sizeof(FOpenCVLensDistortionParameters) == 0x000034, "Wrong size on FOpenCVLensDistortionParameters");
static_assert(offsetof(FOpenCVLensDistortionParameters, K1) == 0x000000, "Member 'FOpenCVLensDistortionParameters::K1' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, K2) == 0x000004, "Member 'FOpenCVLensDistortionParameters::K2' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, P1) == 0x000008, "Member 'FOpenCVLensDistortionParameters::P1' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, P2) == 0x00000C, "Member 'FOpenCVLensDistortionParameters::P2' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, K3) == 0x000010, "Member 'FOpenCVLensDistortionParameters::K3' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, K4) == 0x000014, "Member 'FOpenCVLensDistortionParameters::K4' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, K5) == 0x000018, "Member 'FOpenCVLensDistortionParameters::K5' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, K6) == 0x00001C, "Member 'FOpenCVLensDistortionParameters::K6' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, F) == 0x000020, "Member 'FOpenCVLensDistortionParameters::F' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, C) == 0x000028, "Member 'FOpenCVLensDistortionParameters::C' has a wrong offset!");
static_assert(offsetof(FOpenCVLensDistortionParameters, bUseFisheyeModel) == 0x000030, "Member 'FOpenCVLensDistortionParameters::bUseFisheyeModel' has a wrong offset!");

// ScriptStruct OpenCVLensDistortion.OpenCVCameraViewInfo
// 0x000C (0x000C - 0x0000)
struct FOpenCVCameraViewInfo final
{
public:
	float                                         HorizontalFOV;                                     // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         VerticalFOV;                                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FocalLengthRatio;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FOpenCVCameraViewInfo) == 0x000004, "Wrong alignment on FOpenCVCameraViewInfo");
static_assert(sizeof(FOpenCVCameraViewInfo) == 0x00000C, "Wrong size on FOpenCVCameraViewInfo");
static_assert(offsetof(FOpenCVCameraViewInfo, HorizontalFOV) == 0x000000, "Member 'FOpenCVCameraViewInfo::HorizontalFOV' has a wrong offset!");
static_assert(offsetof(FOpenCVCameraViewInfo, VerticalFOV) == 0x000004, "Member 'FOpenCVCameraViewInfo::VerticalFOV' has a wrong offset!");
static_assert(offsetof(FOpenCVCameraViewInfo, FocalLengthRatio) == 0x000008, "Member 'FOpenCVCameraViewInfo::FocalLengthRatio' has a wrong offset!");

}

