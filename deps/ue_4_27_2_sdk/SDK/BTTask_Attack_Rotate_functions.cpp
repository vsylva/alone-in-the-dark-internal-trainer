#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_Attack_Rotate

#include "Basic.hpp"

#include "BTTask_Attack_Rotate_classes.hpp"
#include "BTTask_Attack_Rotate_parameters.hpp"


namespace SDK
{

// Function BTTask_Attack_Rotate.BTTask_Attack_Rotate_C.getRotationData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RotatedTowardsTarget                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    OutsideLookAtCone                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ShouldRotatePositiveDirection                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBTTask_Attack_Rotate_C::GetRotationData(bool* RotatedTowardsTarget, bool* OutsideLookAtCone, bool* ShouldRotatePositiveDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_Attack_Rotate_C", "getRotationData");

	Params::BTTask_Attack_Rotate_C_GetRotationData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RotatedTowardsTarget != nullptr)
		*RotatedTowardsTarget = Parms.RotatedTowardsTarget;

	if (OutsideLookAtCone != nullptr)
		*OutsideLookAtCone = Parms.OutsideLookAtCone;

	if (ShouldRotatePositiveDirection != nullptr)
		*ShouldRotatePositiveDirection = Parms.ShouldRotatePositiveDirection;
}


// Function BTTask_Attack_Rotate.BTTask_Attack_Rotate_C.ReceiveTick
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_Attack_Rotate_C::ReceiveTick(class AActor* OwnerActor, float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_Attack_Rotate_C", "ReceiveTick");

	Params::BTTask_Attack_Rotate_C_ReceiveTick Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_Attack_Rotate.BTTask_Attack_Rotate_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_Attack_Rotate_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_Attack_Rotate_C", "ReceiveExecuteAI");

	Params::BTTask_Attack_Rotate_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_Attack_Rotate.BTTask_Attack_Rotate_C.ReceiveExecute
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_Attack_Rotate_C::ReceiveExecute(class AActor* OwnerActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_Attack_Rotate_C", "ReceiveExecute");

	Params::BTTask_Attack_Rotate_C_ReceiveExecute Parms{};

	Parms.OwnerActor = OwnerActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_Attack_Rotate.BTTask_Attack_Rotate_C.ExecuteUbergraph_BTTask_Attack_Rotate
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_Attack_Rotate_C::ExecuteUbergraph_BTTask_Attack_Rotate(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_Attack_Rotate_C", "ExecuteUbergraph_BTTask_Attack_Rotate");

	Params::BTTask_Attack_Rotate_C_ExecuteUbergraph_BTTask_Attack_Rotate Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

