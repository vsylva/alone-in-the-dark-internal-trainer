#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesAssetLoading

#include "Basic.hpp"


namespace SDK::Params
{

// Function PiecesAssetLoading.PiecesAssetLoadingBFL.LoadAssets
// 0x0028 (0x0028 - 0x0000)
struct PiecesAssetLoadingBFL_LoadAssets final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         AssetsToLoad;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          BlockUntilComplete;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                        ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesAssetLoadingBFL_LoadAssets) == 0x000008, "Wrong alignment on PiecesAssetLoadingBFL_LoadAssets");
static_assert(sizeof(PiecesAssetLoadingBFL_LoadAssets) == 0x000028, "Wrong size on PiecesAssetLoadingBFL_LoadAssets");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssets, AssetsToLoad) == 0x000000, "Member 'PiecesAssetLoadingBFL_LoadAssets::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssets, BlockUntilComplete) == 0x000010, "Member 'PiecesAssetLoadingBFL_LoadAssets::BlockUntilComplete' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssets, Priority) == 0x000014, "Member 'PiecesAssetLoadingBFL_LoadAssets::Priority' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssets, ReturnValue) == 0x000018, "Member 'PiecesAssetLoadingBFL_LoadAssets::ReturnValue' has a wrong offset!");

// Function PiecesAssetLoading.PiecesAssetLoadingBFL.LoadAssetsWithCallback
// 0x0028 (0x0028 - 0x0000)
struct PiecesAssetLoadingBFL_LoadAssetsWithCallback final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         AssetsToLoad;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          BlockUntilComplete;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class UObject*>& LoadedAssets)> LoadCompleteDelegate;                              // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesAssetLoadingBFL_LoadAssetsWithCallback) == 0x000008, "Wrong alignment on PiecesAssetLoadingBFL_LoadAssetsWithCallback");
static_assert(sizeof(PiecesAssetLoadingBFL_LoadAssetsWithCallback) == 0x000028, "Wrong size on PiecesAssetLoadingBFL_LoadAssetsWithCallback");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssetsWithCallback, AssetsToLoad) == 0x000000, "Member 'PiecesAssetLoadingBFL_LoadAssetsWithCallback::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssetsWithCallback, BlockUntilComplete) == 0x000010, "Member 'PiecesAssetLoadingBFL_LoadAssetsWithCallback::BlockUntilComplete' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssetsWithCallback, Priority) == 0x000014, "Member 'PiecesAssetLoadingBFL_LoadAssetsWithCallback::Priority' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadAssetsWithCallback, LoadCompleteDelegate) == 0x000018, "Member 'PiecesAssetLoadingBFL_LoadAssetsWithCallback::LoadCompleteDelegate' has a wrong offset!");

// Function PiecesAssetLoading.PiecesAssetLoadingBFL.LoadClasses
// 0x0028 (0x0028 - 0x0000)
struct PiecesAssetLoadingBFL_LoadClasses final
{
public:
	TArray<TSoftClassPtr<class UClass>>           AssetsToLoad;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          BlockUntilComplete;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                         ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesAssetLoadingBFL_LoadClasses) == 0x000008, "Wrong alignment on PiecesAssetLoadingBFL_LoadClasses");
static_assert(sizeof(PiecesAssetLoadingBFL_LoadClasses) == 0x000028, "Wrong size on PiecesAssetLoadingBFL_LoadClasses");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClasses, AssetsToLoad) == 0x000000, "Member 'PiecesAssetLoadingBFL_LoadClasses::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClasses, BlockUntilComplete) == 0x000010, "Member 'PiecesAssetLoadingBFL_LoadClasses::BlockUntilComplete' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClasses, Priority) == 0x000014, "Member 'PiecesAssetLoadingBFL_LoadClasses::Priority' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClasses, ReturnValue) == 0x000018, "Member 'PiecesAssetLoadingBFL_LoadClasses::ReturnValue' has a wrong offset!");

// Function PiecesAssetLoading.PiecesAssetLoadingBFL.LoadClassesWithCallback
// 0x0028 (0x0028 - 0x0000)
struct PiecesAssetLoadingBFL_LoadClassesWithCallback final
{
public:
	TArray<TSoftClassPtr<class UClass>>           AssetsToLoad;                                      // 0x0000(0x0010)(Parm, ZeroConstructor, UObjectWrapper, NativeAccessSpecifierPublic)
	bool                                          BlockUntilComplete;                                // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Priority;                                          // 0x0014(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(TArray<class UClass*>& LoadedAssets)> LoadCompleteDelegate;                              // 0x0018(0x0010)(Parm, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesAssetLoadingBFL_LoadClassesWithCallback) == 0x000008, "Wrong alignment on PiecesAssetLoadingBFL_LoadClassesWithCallback");
static_assert(sizeof(PiecesAssetLoadingBFL_LoadClassesWithCallback) == 0x000028, "Wrong size on PiecesAssetLoadingBFL_LoadClassesWithCallback");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClassesWithCallback, AssetsToLoad) == 0x000000, "Member 'PiecesAssetLoadingBFL_LoadClassesWithCallback::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClassesWithCallback, BlockUntilComplete) == 0x000010, "Member 'PiecesAssetLoadingBFL_LoadClassesWithCallback::BlockUntilComplete' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClassesWithCallback, Priority) == 0x000014, "Member 'PiecesAssetLoadingBFL_LoadClassesWithCallback::Priority' has a wrong offset!");
static_assert(offsetof(PiecesAssetLoadingBFL_LoadClassesWithCallback, LoadCompleteDelegate) == 0x000018, "Member 'PiecesAssetLoadingBFL_LoadClassesWithCallback::LoadCompleteDelegate' has a wrong offset!");

// DelegateFunction PiecesAssetLoading.PiecesAssetLoadingBFL.OnAssetsLoaded__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PiecesAssetLoadingBFL_OnAssetsLoaded__DelegateSignature final
{
public:
	TArray<class UObject*>                        LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesAssetLoadingBFL_OnAssetsLoaded__DelegateSignature) == 0x000008, "Wrong alignment on PiecesAssetLoadingBFL_OnAssetsLoaded__DelegateSignature");
static_assert(sizeof(PiecesAssetLoadingBFL_OnAssetsLoaded__DelegateSignature) == 0x000010, "Wrong size on PiecesAssetLoadingBFL_OnAssetsLoaded__DelegateSignature");
static_assert(offsetof(PiecesAssetLoadingBFL_OnAssetsLoaded__DelegateSignature, LoadedAssets) == 0x000000, "Member 'PiecesAssetLoadingBFL_OnAssetsLoaded__DelegateSignature::LoadedAssets' has a wrong offset!");

// DelegateFunction PiecesAssetLoading.PiecesAssetLoadingBFL.OnClassesLoaded__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PiecesAssetLoadingBFL_OnClassesLoaded__DelegateSignature final
{
public:
	TArray<class UClass*>                         LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesAssetLoadingBFL_OnClassesLoaded__DelegateSignature) == 0x000008, "Wrong alignment on PiecesAssetLoadingBFL_OnClassesLoaded__DelegateSignature");
static_assert(sizeof(PiecesAssetLoadingBFL_OnClassesLoaded__DelegateSignature) == 0x000010, "Wrong size on PiecesAssetLoadingBFL_OnClassesLoaded__DelegateSignature");
static_assert(offsetof(PiecesAssetLoadingBFL_OnClassesLoaded__DelegateSignature, LoadedAssets) == 0x000000, "Member 'PiecesAssetLoadingBFL_OnClassesLoaded__DelegateSignature::LoadedAssets' has a wrong offset!");

}

