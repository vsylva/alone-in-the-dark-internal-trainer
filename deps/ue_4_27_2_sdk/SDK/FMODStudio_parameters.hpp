#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FMODStudio

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function FMODStudio.FMODAudioComponent.GetParameter
// 0x000C (0x000C - 0x0000)
struct FMODAudioComponent_GetParameter final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_GetParameter) == 0x000004, "Wrong alignment on FMODAudioComponent_GetParameter");
static_assert(sizeof(FMODAudioComponent_GetParameter) == 0x00000C, "Wrong size on FMODAudioComponent_GetParameter");
static_assert(offsetof(FMODAudioComponent_GetParameter, Name_0) == 0x000000, "Member 'FMODAudioComponent_GetParameter::Name_0' has a wrong offset!");
static_assert(offsetof(FMODAudioComponent_GetParameter, ReturnValue) == 0x000008, "Member 'FMODAudioComponent_GetParameter::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.GetParameterValue
// 0x0010 (0x0010 - 0x0000)
struct FMODAudioComponent_GetParameterValue final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UserValue;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FinalValue;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_GetParameterValue) == 0x000004, "Wrong alignment on FMODAudioComponent_GetParameterValue");
static_assert(sizeof(FMODAudioComponent_GetParameterValue) == 0x000010, "Wrong size on FMODAudioComponent_GetParameterValue");
static_assert(offsetof(FMODAudioComponent_GetParameterValue, Name_0) == 0x000000, "Member 'FMODAudioComponent_GetParameterValue::Name_0' has a wrong offset!");
static_assert(offsetof(FMODAudioComponent_GetParameterValue, UserValue) == 0x000008, "Member 'FMODAudioComponent_GetParameterValue::UserValue' has a wrong offset!");
static_assert(offsetof(FMODAudioComponent_GetParameterValue, FinalValue) == 0x00000C, "Member 'FMODAudioComponent_GetParameterValue::FinalValue' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.GetProperty
// 0x0008 (0x0008 - 0x0000)
struct FMODAudioComponent_GetProperty final
{
public:
	EFMODEventProperty                            Property;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_GetProperty) == 0x000004, "Wrong alignment on FMODAudioComponent_GetProperty");
static_assert(sizeof(FMODAudioComponent_GetProperty) == 0x000008, "Wrong size on FMODAudioComponent_GetProperty");
static_assert(offsetof(FMODAudioComponent_GetProperty, Property) == 0x000000, "Member 'FMODAudioComponent_GetProperty::Property' has a wrong offset!");
static_assert(offsetof(FMODAudioComponent_GetProperty, ReturnValue) == 0x000004, "Member 'FMODAudioComponent_GetProperty::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.GetTimelinePosition
// 0x0004 (0x0004 - 0x0000)
struct FMODAudioComponent_GetTimelinePosition final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_GetTimelinePosition) == 0x000004, "Wrong alignment on FMODAudioComponent_GetTimelinePosition");
static_assert(sizeof(FMODAudioComponent_GetTimelinePosition) == 0x000004, "Wrong size on FMODAudioComponent_GetTimelinePosition");
static_assert(offsetof(FMODAudioComponent_GetTimelinePosition, ReturnValue) == 0x000000, "Member 'FMODAudioComponent_GetTimelinePosition::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.IsPlaying
// 0x0001 (0x0001 - 0x0000)
struct FMODAudioComponent_IsPlaying final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_IsPlaying) == 0x000001, "Wrong alignment on FMODAudioComponent_IsPlaying");
static_assert(sizeof(FMODAudioComponent_IsPlaying) == 0x000001, "Wrong size on FMODAudioComponent_IsPlaying");
static_assert(offsetof(FMODAudioComponent_IsPlaying, ReturnValue) == 0x000000, "Member 'FMODAudioComponent_IsPlaying::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetEvent
// 0x0008 (0x0008 - 0x0000)
struct FMODAudioComponent_SetEvent final
{
public:
	class UFMODEvent*                             NewEvent;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetEvent) == 0x000008, "Wrong alignment on FMODAudioComponent_SetEvent");
static_assert(sizeof(FMODAudioComponent_SetEvent) == 0x000008, "Wrong size on FMODAudioComponent_SetEvent");
static_assert(offsetof(FMODAudioComponent_SetEvent, NewEvent) == 0x000000, "Member 'FMODAudioComponent_SetEvent::NewEvent' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetParameter
// 0x000C (0x000C - 0x0000)
struct FMODAudioComponent_SetParameter final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetParameter) == 0x000004, "Wrong alignment on FMODAudioComponent_SetParameter");
static_assert(sizeof(FMODAudioComponent_SetParameter) == 0x00000C, "Wrong size on FMODAudioComponent_SetParameter");
static_assert(offsetof(FMODAudioComponent_SetParameter, Name_0) == 0x000000, "Member 'FMODAudioComponent_SetParameter::Name_0' has a wrong offset!");
static_assert(offsetof(FMODAudioComponent_SetParameter, Value) == 0x000008, "Member 'FMODAudioComponent_SetParameter::Value' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetPaused
// 0x0001 (0x0001 - 0x0000)
struct FMODAudioComponent_SetPaused final
{
public:
	bool                                          Paused;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetPaused) == 0x000001, "Wrong alignment on FMODAudioComponent_SetPaused");
static_assert(sizeof(FMODAudioComponent_SetPaused) == 0x000001, "Wrong size on FMODAudioComponent_SetPaused");
static_assert(offsetof(FMODAudioComponent_SetPaused, Paused) == 0x000000, "Member 'FMODAudioComponent_SetPaused::Paused' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetPitch
// 0x0004 (0x0004 - 0x0000)
struct FMODAudioComponent_SetPitch final
{
public:
	float                                         Pitch;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetPitch) == 0x000004, "Wrong alignment on FMODAudioComponent_SetPitch");
static_assert(sizeof(FMODAudioComponent_SetPitch) == 0x000004, "Wrong size on FMODAudioComponent_SetPitch");
static_assert(offsetof(FMODAudioComponent_SetPitch, Pitch) == 0x000000, "Member 'FMODAudioComponent_SetPitch::Pitch' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetProgrammerSoundName
// 0x0010 (0x0010 - 0x0000)
struct FMODAudioComponent_SetProgrammerSoundName final
{
public:
	class FString                                 Value;                                             // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetProgrammerSoundName) == 0x000008, "Wrong alignment on FMODAudioComponent_SetProgrammerSoundName");
static_assert(sizeof(FMODAudioComponent_SetProgrammerSoundName) == 0x000010, "Wrong size on FMODAudioComponent_SetProgrammerSoundName");
static_assert(offsetof(FMODAudioComponent_SetProgrammerSoundName, Value) == 0x000000, "Member 'FMODAudioComponent_SetProgrammerSoundName::Value' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetProperty
// 0x0008 (0x0008 - 0x0000)
struct FMODAudioComponent_SetProperty final
{
public:
	EFMODEventProperty                            Property;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetProperty) == 0x000004, "Wrong alignment on FMODAudioComponent_SetProperty");
static_assert(sizeof(FMODAudioComponent_SetProperty) == 0x000008, "Wrong size on FMODAudioComponent_SetProperty");
static_assert(offsetof(FMODAudioComponent_SetProperty, Property) == 0x000000, "Member 'FMODAudioComponent_SetProperty::Property' has a wrong offset!");
static_assert(offsetof(FMODAudioComponent_SetProperty, Value) == 0x000004, "Member 'FMODAudioComponent_SetProperty::Value' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetShowSubtitle
// 0x0001 (0x0001 - 0x0000)
struct FMODAudioComponent_SetShowSubtitle final
{
public:
	bool                                          bInShowSubtitle;                                   // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetShowSubtitle) == 0x000001, "Wrong alignment on FMODAudioComponent_SetShowSubtitle");
static_assert(sizeof(FMODAudioComponent_SetShowSubtitle) == 0x000001, "Wrong size on FMODAudioComponent_SetShowSubtitle");
static_assert(offsetof(FMODAudioComponent_SetShowSubtitle, bInShowSubtitle) == 0x000000, "Member 'FMODAudioComponent_SetShowSubtitle::bInShowSubtitle' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetSubtitleStringTable
// 0x0008 (0x0008 - 0x0000)
struct FMODAudioComponent_SetSubtitleStringTable final
{
public:
	const class UStringTable*                     SubtitleTable;                                     // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetSubtitleStringTable) == 0x000008, "Wrong alignment on FMODAudioComponent_SetSubtitleStringTable");
static_assert(sizeof(FMODAudioComponent_SetSubtitleStringTable) == 0x000008, "Wrong size on FMODAudioComponent_SetSubtitleStringTable");
static_assert(offsetof(FMODAudioComponent_SetSubtitleStringTable, SubtitleTable) == 0x000000, "Member 'FMODAudioComponent_SetSubtitleStringTable::SubtitleTable' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetTimelinePosition
// 0x0004 (0x0004 - 0x0000)
struct FMODAudioComponent_SetTimelinePosition final
{
public:
	int32                                         Time;                                              // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetTimelinePosition) == 0x000004, "Wrong alignment on FMODAudioComponent_SetTimelinePosition");
static_assert(sizeof(FMODAudioComponent_SetTimelinePosition) == 0x000004, "Wrong size on FMODAudioComponent_SetTimelinePosition");
static_assert(offsetof(FMODAudioComponent_SetTimelinePosition, Time) == 0x000000, "Member 'FMODAudioComponent_SetTimelinePosition::Time' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.SetVolume
// 0x0004 (0x0004 - 0x0000)
struct FMODAudioComponent_SetVolume final
{
public:
	float                                         Volume;                                            // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_SetVolume) == 0x000004, "Wrong alignment on FMODAudioComponent_SetVolume");
static_assert(sizeof(FMODAudioComponent_SetVolume) == 0x000004, "Wrong size on FMODAudioComponent_SetVolume");
static_assert(offsetof(FMODAudioComponent_SetVolume, Volume) == 0x000000, "Member 'FMODAudioComponent_SetVolume::Volume' has a wrong offset!");

// Function FMODStudio.FMODAudioComponent.GetLength
// 0x0004 (0x0004 - 0x0000)
struct FMODAudioComponent_GetLength final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODAudioComponent_GetLength) == 0x000004, "Wrong alignment on FMODAudioComponent_GetLength");
static_assert(sizeof(FMODAudioComponent_GetLength) == 0x000004, "Wrong size on FMODAudioComponent_GetLength");
static_assert(offsetof(FMODAudioComponent_GetLength, ReturnValue) == 0x000000, "Member 'FMODAudioComponent_GetLength::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.BusSetMute
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_BusSetMute final
{
public:
	class UFMODBus*                               Bus;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bMute;                                             // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_BusSetMute) == 0x000008, "Wrong alignment on FMODBlueprintStatics_BusSetMute");
static_assert(sizeof(FMODBlueprintStatics_BusSetMute) == 0x000010, "Wrong size on FMODBlueprintStatics_BusSetMute");
static_assert(offsetof(FMODBlueprintStatics_BusSetMute, Bus) == 0x000000, "Member 'FMODBlueprintStatics_BusSetMute::Bus' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_BusSetMute, bMute) == 0x000008, "Member 'FMODBlueprintStatics_BusSetMute::bMute' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.BusSetPaused
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_BusSetPaused final
{
public:
	class UFMODBus*                               Bus;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPaused;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_BusSetPaused) == 0x000008, "Wrong alignment on FMODBlueprintStatics_BusSetPaused");
static_assert(sizeof(FMODBlueprintStatics_BusSetPaused) == 0x000010, "Wrong size on FMODBlueprintStatics_BusSetPaused");
static_assert(offsetof(FMODBlueprintStatics_BusSetPaused, Bus) == 0x000000, "Member 'FMODBlueprintStatics_BusSetPaused::Bus' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_BusSetPaused, bPaused) == 0x000008, "Member 'FMODBlueprintStatics_BusSetPaused::bPaused' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.BusSetVolume
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_BusSetVolume final
{
public:
	class UFMODBus*                               Bus;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_BusSetVolume) == 0x000008, "Wrong alignment on FMODBlueprintStatics_BusSetVolume");
static_assert(sizeof(FMODBlueprintStatics_BusSetVolume) == 0x000010, "Wrong size on FMODBlueprintStatics_BusSetVolume");
static_assert(offsetof(FMODBlueprintStatics_BusSetVolume, Bus) == 0x000000, "Member 'FMODBlueprintStatics_BusSetVolume::Bus' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_BusSetVolume, Volume) == 0x000008, "Member 'FMODBlueprintStatics_BusSetVolume::Volume' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.BusStopAllEvents
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_BusStopAllEvents final
{
public:
	class UFMODBus*                               Bus;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFMOD_STUDIO_STOP_MODE                        StopMode;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_BusStopAllEvents) == 0x000008, "Wrong alignment on FMODBlueprintStatics_BusStopAllEvents");
static_assert(sizeof(FMODBlueprintStatics_BusStopAllEvents) == 0x000010, "Wrong size on FMODBlueprintStatics_BusStopAllEvents");
static_assert(offsetof(FMODBlueprintStatics_BusStopAllEvents, Bus) == 0x000000, "Member 'FMODBlueprintStatics_BusStopAllEvents::Bus' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_BusStopAllEvents, StopMode) == 0x000008, "Member 'FMODBlueprintStatics_BusStopAllEvents::StopMode' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceGetParameter
// 0x0018 (0x0018 - 0x0000)
struct FMODBlueprintStatics_EventInstanceGetParameter final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceGetParameter) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceGetParameter");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceGetParameter) == 0x000018, "Wrong size on FMODBlueprintStatics_EventInstanceGetParameter");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceGetParameter, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceGetParameter::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceGetParameter, Name_0) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceGetParameter::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceGetParameter, ReturnValue) == 0x000010, "Member 'FMODBlueprintStatics_EventInstanceGetParameter::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceGetParameterValue
// 0x0018 (0x0018 - 0x0000)
struct FMODBlueprintStatics_EventInstanceGetParameterValue final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UserValue;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FinalValue;                                        // 0x0014(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceGetParameterValue) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceGetParameterValue");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceGetParameterValue) == 0x000018, "Wrong size on FMODBlueprintStatics_EventInstanceGetParameterValue");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceGetParameterValue, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceGetParameterValue::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceGetParameterValue, Name_0) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceGetParameterValue::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceGetParameterValue, UserValue) == 0x000010, "Member 'FMODBlueprintStatics_EventInstanceGetParameterValue::UserValue' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceGetParameterValue, FinalValue) == 0x000014, "Member 'FMODBlueprintStatics_EventInstanceGetParameterValue::FinalValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceIsValid
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_EventInstanceIsValid final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceIsValid) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceIsValid");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceIsValid) == 0x000010, "Wrong size on FMODBlueprintStatics_EventInstanceIsValid");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceIsValid, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceIsValid::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceIsValid, ReturnValue) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceIsValid::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceKeyOff
// 0x0008 (0x0008 - 0x0000)
struct FMODBlueprintStatics_EventInstanceKeyOff final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceKeyOff) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceKeyOff");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceKeyOff) == 0x000008, "Wrong size on FMODBlueprintStatics_EventInstanceKeyOff");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceKeyOff, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceKeyOff::EventInstance' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstancePlay
// 0x0008 (0x0008 - 0x0000)
struct FMODBlueprintStatics_EventInstancePlay final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_EventInstancePlay) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstancePlay");
static_assert(sizeof(FMODBlueprintStatics_EventInstancePlay) == 0x000008, "Wrong size on FMODBlueprintStatics_EventInstancePlay");
static_assert(offsetof(FMODBlueprintStatics_EventInstancePlay, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstancePlay::EventInstance' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceRelease
// 0x0008 (0x0008 - 0x0000)
struct FMODBlueprintStatics_EventInstanceRelease final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceRelease) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceRelease");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceRelease) == 0x000008, "Wrong size on FMODBlueprintStatics_EventInstanceRelease");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceRelease, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceRelease::EventInstance' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceSetParameter
// 0x0018 (0x0018 - 0x0000)
struct FMODBlueprintStatics_EventInstanceSetParameter final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FName                                   Name_0;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceSetParameter) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceSetParameter");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceSetParameter) == 0x000018, "Wrong size on FMODBlueprintStatics_EventInstanceSetParameter");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetParameter, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceSetParameter::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetParameter, Name_0) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceSetParameter::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetParameter, Value) == 0x000010, "Member 'FMODBlueprintStatics_EventInstanceSetParameter::Value' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceSetPaused
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_EventInstanceSetPaused final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Paused;                                            // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceSetPaused) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceSetPaused");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceSetPaused) == 0x000010, "Wrong size on FMODBlueprintStatics_EventInstanceSetPaused");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetPaused, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceSetPaused::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetPaused, Paused) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceSetPaused::Paused' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceSetPitch
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_EventInstanceSetPitch final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Pitch;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceSetPitch) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceSetPitch");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceSetPitch) == 0x000010, "Wrong size on FMODBlueprintStatics_EventInstanceSetPitch");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetPitch, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceSetPitch::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetPitch, Pitch) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceSetPitch::Pitch' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceSetProperty
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_EventInstanceSetProperty final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	EFMODEventProperty                            Property;                                          // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Value;                                             // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceSetProperty) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceSetProperty");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceSetProperty) == 0x000010, "Wrong size on FMODBlueprintStatics_EventInstanceSetProperty");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetProperty, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceSetProperty::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetProperty, Property) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceSetProperty::Property' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetProperty, Value) == 0x00000C, "Member 'FMODBlueprintStatics_EventInstanceSetProperty::Value' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceSetTransform
// 0x0040 (0x0040 - 0x0000)
struct FMODBlueprintStatics_EventInstanceSetTransform final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Location;                                          // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceSetTransform) == 0x000010, "Wrong alignment on FMODBlueprintStatics_EventInstanceSetTransform");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceSetTransform) == 0x000040, "Wrong size on FMODBlueprintStatics_EventInstanceSetTransform");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetTransform, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceSetTransform::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetTransform, Location) == 0x000010, "Member 'FMODBlueprintStatics_EventInstanceSetTransform::Location' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceSetVolume
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_EventInstanceSetVolume final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceSetVolume) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceSetVolume");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceSetVolume) == 0x000010, "Wrong size on FMODBlueprintStatics_EventInstanceSetVolume");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetVolume, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceSetVolume::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceSetVolume, Volume) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceSetVolume::Volume' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.EventInstanceStop
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_EventInstanceStop final
{
public:
	struct FFMODEventInstance                     EventInstance;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          Release;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_EventInstanceStop) == 0x000008, "Wrong alignment on FMODBlueprintStatics_EventInstanceStop");
static_assert(sizeof(FMODBlueprintStatics_EventInstanceStop) == 0x000010, "Wrong size on FMODBlueprintStatics_EventInstanceStop");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceStop, EventInstance) == 0x000000, "Member 'FMODBlueprintStatics_EventInstanceStop::EventInstance' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_EventInstanceStop, Release) == 0x000008, "Member 'FMODBlueprintStatics_EventInstanceStop::Release' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.FindAssetByName
// 0x0018 (0x0018 - 0x0000)
struct FMODBlueprintStatics_FindAssetByName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAsset*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_FindAssetByName) == 0x000008, "Wrong alignment on FMODBlueprintStatics_FindAssetByName");
static_assert(sizeof(FMODBlueprintStatics_FindAssetByName) == 0x000018, "Wrong size on FMODBlueprintStatics_FindAssetByName");
static_assert(offsetof(FMODBlueprintStatics_FindAssetByName, Name_0) == 0x000000, "Member 'FMODBlueprintStatics_FindAssetByName::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_FindAssetByName, ReturnValue) == 0x000010, "Member 'FMODBlueprintStatics_FindAssetByName::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.FindEventByName
// 0x0018 (0x0018 - 0x0000)
struct FMODBlueprintStatics_FindEventByName final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_FindEventByName) == 0x000008, "Wrong alignment on FMODBlueprintStatics_FindEventByName");
static_assert(sizeof(FMODBlueprintStatics_FindEventByName) == 0x000018, "Wrong size on FMODBlueprintStatics_FindEventByName");
static_assert(offsetof(FMODBlueprintStatics_FindEventByName, Name_0) == 0x000000, "Member 'FMODBlueprintStatics_FindEventByName::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_FindEventByName, ReturnValue) == 0x000010, "Member 'FMODBlueprintStatics_FindEventByName::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.FindEventInstances
// 0x0020 (0x0020 - 0x0000)
struct FMODBlueprintStatics_FindEventInstances final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Event;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FFMODEventInstance>             ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_FindEventInstances) == 0x000008, "Wrong alignment on FMODBlueprintStatics_FindEventInstances");
static_assert(sizeof(FMODBlueprintStatics_FindEventInstances) == 0x000020, "Wrong size on FMODBlueprintStatics_FindEventInstances");
static_assert(offsetof(FMODBlueprintStatics_FindEventInstances, WorldContextObject) == 0x000000, "Member 'FMODBlueprintStatics_FindEventInstances::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_FindEventInstances, Event) == 0x000008, "Member 'FMODBlueprintStatics_FindEventInstances::Event' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_FindEventInstances, ReturnValue) == 0x000010, "Member 'FMODBlueprintStatics_FindEventInstances::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.GetGlobalParameterByName
// 0x000C (0x000C - 0x0000)
struct FMODBlueprintStatics_GetGlobalParameterByName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_GetGlobalParameterByName) == 0x000004, "Wrong alignment on FMODBlueprintStatics_GetGlobalParameterByName");
static_assert(sizeof(FMODBlueprintStatics_GetGlobalParameterByName) == 0x00000C, "Wrong size on FMODBlueprintStatics_GetGlobalParameterByName");
static_assert(offsetof(FMODBlueprintStatics_GetGlobalParameterByName, Name_0) == 0x000000, "Member 'FMODBlueprintStatics_GetGlobalParameterByName::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_GetGlobalParameterByName, ReturnValue) == 0x000008, "Member 'FMODBlueprintStatics_GetGlobalParameterByName::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.GetGlobalParameterValueByName
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_GetGlobalParameterValueByName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         UserValue;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         FinalValue;                                        // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_GetGlobalParameterValueByName) == 0x000004, "Wrong alignment on FMODBlueprintStatics_GetGlobalParameterValueByName");
static_assert(sizeof(FMODBlueprintStatics_GetGlobalParameterValueByName) == 0x000010, "Wrong size on FMODBlueprintStatics_GetGlobalParameterValueByName");
static_assert(offsetof(FMODBlueprintStatics_GetGlobalParameterValueByName, Name_0) == 0x000000, "Member 'FMODBlueprintStatics_GetGlobalParameterValueByName::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_GetGlobalParameterValueByName, UserValue) == 0x000008, "Member 'FMODBlueprintStatics_GetGlobalParameterValueByName::UserValue' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_GetGlobalParameterValueByName, FinalValue) == 0x00000C, "Member 'FMODBlueprintStatics_GetGlobalParameterValueByName::FinalValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.GetOutputDrivers
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_GetOutputDrivers final
{
public:
	TArray<class FString>                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_GetOutputDrivers) == 0x000008, "Wrong alignment on FMODBlueprintStatics_GetOutputDrivers");
static_assert(sizeof(FMODBlueprintStatics_GetOutputDrivers) == 0x000010, "Wrong size on FMODBlueprintStatics_GetOutputDrivers");
static_assert(offsetof(FMODBlueprintStatics_GetOutputDrivers, ReturnValue) == 0x000000, "Member 'FMODBlueprintStatics_GetOutputDrivers::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.IsBankLoaded
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_IsBankLoaded final
{
public:
	class UFMODBank*                              Bank;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_IsBankLoaded) == 0x000008, "Wrong alignment on FMODBlueprintStatics_IsBankLoaded");
static_assert(sizeof(FMODBlueprintStatics_IsBankLoaded) == 0x000010, "Wrong size on FMODBlueprintStatics_IsBankLoaded");
static_assert(offsetof(FMODBlueprintStatics_IsBankLoaded, Bank) == 0x000000, "Member 'FMODBlueprintStatics_IsBankLoaded::Bank' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_IsBankLoaded, ReturnValue) == 0x000008, "Member 'FMODBlueprintStatics_IsBankLoaded::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.LoadBank
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_LoadBank final
{
public:
	class UFMODBank*                              Bank;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bBlocking;                                         // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLoadSampleData;                                   // 0x0009(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_LoadBank) == 0x000008, "Wrong alignment on FMODBlueprintStatics_LoadBank");
static_assert(sizeof(FMODBlueprintStatics_LoadBank) == 0x000010, "Wrong size on FMODBlueprintStatics_LoadBank");
static_assert(offsetof(FMODBlueprintStatics_LoadBank, Bank) == 0x000000, "Member 'FMODBlueprintStatics_LoadBank::Bank' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_LoadBank, bBlocking) == 0x000008, "Member 'FMODBlueprintStatics_LoadBank::bBlocking' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_LoadBank, bLoadSampleData) == 0x000009, "Member 'FMODBlueprintStatics_LoadBank::bLoadSampleData' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.LoadBankSampleData
// 0x0008 (0x0008 - 0x0000)
struct FMODBlueprintStatics_LoadBankSampleData final
{
public:
	class UFMODBank*                              Bank;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_LoadBankSampleData) == 0x000008, "Wrong alignment on FMODBlueprintStatics_LoadBankSampleData");
static_assert(sizeof(FMODBlueprintStatics_LoadBankSampleData) == 0x000008, "Wrong size on FMODBlueprintStatics_LoadBankSampleData");
static_assert(offsetof(FMODBlueprintStatics_LoadBankSampleData, Bank) == 0x000000, "Member 'FMODBlueprintStatics_LoadBankSampleData::Bank' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.LoadEventSampleData
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_LoadEventSampleData final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Event;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_LoadEventSampleData) == 0x000008, "Wrong alignment on FMODBlueprintStatics_LoadEventSampleData");
static_assert(sizeof(FMODBlueprintStatics_LoadEventSampleData) == 0x000010, "Wrong size on FMODBlueprintStatics_LoadEventSampleData");
static_assert(offsetof(FMODBlueprintStatics_LoadEventSampleData, WorldContextObject) == 0x000000, "Member 'FMODBlueprintStatics_LoadEventSampleData::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_LoadEventSampleData, Event) == 0x000008, "Member 'FMODBlueprintStatics_LoadEventSampleData::Event' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.PlayEvent2D
// 0x0020 (0x0020 - 0x0000)
struct FMODBlueprintStatics_PlayEvent2D final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Event;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoPlay;                                         // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     ReturnValue;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_PlayEvent2D) == 0x000008, "Wrong alignment on FMODBlueprintStatics_PlayEvent2D");
static_assert(sizeof(FMODBlueprintStatics_PlayEvent2D) == 0x000020, "Wrong size on FMODBlueprintStatics_PlayEvent2D");
static_assert(offsetof(FMODBlueprintStatics_PlayEvent2D, WorldContextObject) == 0x000000, "Member 'FMODBlueprintStatics_PlayEvent2D::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEvent2D, Event) == 0x000008, "Member 'FMODBlueprintStatics_PlayEvent2D::Event' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEvent2D, bAutoPlay) == 0x000010, "Member 'FMODBlueprintStatics_PlayEvent2D::bAutoPlay' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEvent2D, ReturnValue) == 0x000018, "Member 'FMODBlueprintStatics_PlayEvent2D::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.PlayEventAtLocation
// 0x0050 (0x0050 - 0x0000)
struct FMODBlueprintStatics_PlayEventAtLocation final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Event;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             Location;                                          // 0x0010(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, AdvancedDisplay, NativeAccessSpecifierPublic)
	bool                                          bAutoPlay;                                         // 0x0040(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     ReturnValue;                                       // 0x0048(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_PlayEventAtLocation) == 0x000010, "Wrong alignment on FMODBlueprintStatics_PlayEventAtLocation");
static_assert(sizeof(FMODBlueprintStatics_PlayEventAtLocation) == 0x000050, "Wrong size on FMODBlueprintStatics_PlayEventAtLocation");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAtLocation, WorldContextObject) == 0x000000, "Member 'FMODBlueprintStatics_PlayEventAtLocation::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAtLocation, Event) == 0x000008, "Member 'FMODBlueprintStatics_PlayEventAtLocation::Event' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAtLocation, Location) == 0x000010, "Member 'FMODBlueprintStatics_PlayEventAtLocation::Location' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAtLocation, bAutoPlay) == 0x000040, "Member 'FMODBlueprintStatics_PlayEventAtLocation::bAutoPlay' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAtLocation, ReturnValue) == 0x000048, "Member 'FMODBlueprintStatics_PlayEventAtLocation::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.PlayEventAttached
// 0x0040 (0x0040 - 0x0000)
struct FMODBlueprintStatics_PlayEventAttached final
{
public:
	class UFMODEvent*                             Event;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x000C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttachLocation                               LocationType;                                      // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopWhenAttachedToDestroyed;                      // 0x0025(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoPlay;                                         // 0x0026(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDestroy;                                      // 0x0027(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ProgrammerSound;                                   // 0x0028(0x0010)(Parm, ZeroConstructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    ReturnValue;                                       // 0x0038(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_PlayEventAttached) == 0x000008, "Wrong alignment on FMODBlueprintStatics_PlayEventAttached");
static_assert(sizeof(FMODBlueprintStatics_PlayEventAttached) == 0x000040, "Wrong size on FMODBlueprintStatics_PlayEventAttached");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, Event) == 0x000000, "Member 'FMODBlueprintStatics_PlayEventAttached::Event' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, AttachToComponent) == 0x000008, "Member 'FMODBlueprintStatics_PlayEventAttached::AttachToComponent' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, AttachPointName) == 0x000010, "Member 'FMODBlueprintStatics_PlayEventAttached::AttachPointName' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, Location) == 0x000018, "Member 'FMODBlueprintStatics_PlayEventAttached::Location' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, LocationType) == 0x000024, "Member 'FMODBlueprintStatics_PlayEventAttached::LocationType' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, bStopWhenAttachedToDestroyed) == 0x000025, "Member 'FMODBlueprintStatics_PlayEventAttached::bStopWhenAttachedToDestroyed' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, bAutoPlay) == 0x000026, "Member 'FMODBlueprintStatics_PlayEventAttached::bAutoPlay' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, bAutoDestroy) == 0x000027, "Member 'FMODBlueprintStatics_PlayEventAttached::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, ProgrammerSound) == 0x000028, "Member 'FMODBlueprintStatics_PlayEventAttached::ProgrammerSound' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_PlayEventAttached, ReturnValue) == 0x000038, "Member 'FMODBlueprintStatics_PlayEventAttached::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.SetGlobalParameterByName
// 0x000C (0x000C - 0x0000)
struct FMODBlueprintStatics_SetGlobalParameterByName final
{
public:
	class FName                                   Name_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Value;                                             // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_SetGlobalParameterByName) == 0x000004, "Wrong alignment on FMODBlueprintStatics_SetGlobalParameterByName");
static_assert(sizeof(FMODBlueprintStatics_SetGlobalParameterByName) == 0x00000C, "Wrong size on FMODBlueprintStatics_SetGlobalParameterByName");
static_assert(offsetof(FMODBlueprintStatics_SetGlobalParameterByName, Name_0) == 0x000000, "Member 'FMODBlueprintStatics_SetGlobalParameterByName::Name_0' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_SetGlobalParameterByName, Value) == 0x000008, "Member 'FMODBlueprintStatics_SetGlobalParameterByName::Value' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.SetLocale
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_SetLocale final
{
public:
	class FString                                 Locale;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_SetLocale) == 0x000008, "Wrong alignment on FMODBlueprintStatics_SetLocale");
static_assert(sizeof(FMODBlueprintStatics_SetLocale) == 0x000010, "Wrong size on FMODBlueprintStatics_SetLocale");
static_assert(offsetof(FMODBlueprintStatics_SetLocale, Locale) == 0x000000, "Member 'FMODBlueprintStatics_SetLocale::Locale' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.SetOutputDriverByIndex
// 0x0004 (0x0004 - 0x0000)
struct FMODBlueprintStatics_SetOutputDriverByIndex final
{
public:
	int32                                         NewDriverIndex;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_SetOutputDriverByIndex) == 0x000004, "Wrong alignment on FMODBlueprintStatics_SetOutputDriverByIndex");
static_assert(sizeof(FMODBlueprintStatics_SetOutputDriverByIndex) == 0x000004, "Wrong size on FMODBlueprintStatics_SetOutputDriverByIndex");
static_assert(offsetof(FMODBlueprintStatics_SetOutputDriverByIndex, NewDriverIndex) == 0x000000, "Member 'FMODBlueprintStatics_SetOutputDriverByIndex::NewDriverIndex' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.SetOutputDriverByName
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_SetOutputDriverByName final
{
public:
	class FString                                 NewDriverName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_SetOutputDriverByName) == 0x000008, "Wrong alignment on FMODBlueprintStatics_SetOutputDriverByName");
static_assert(sizeof(FMODBlueprintStatics_SetOutputDriverByName) == 0x000010, "Wrong size on FMODBlueprintStatics_SetOutputDriverByName");
static_assert(offsetof(FMODBlueprintStatics_SetOutputDriverByName, NewDriverName) == 0x000000, "Member 'FMODBlueprintStatics_SetOutputDriverByName::NewDriverName' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.UnloadBank
// 0x0008 (0x0008 - 0x0000)
struct FMODBlueprintStatics_UnloadBank final
{
public:
	class UFMODBank*                              Bank;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_UnloadBank) == 0x000008, "Wrong alignment on FMODBlueprintStatics_UnloadBank");
static_assert(sizeof(FMODBlueprintStatics_UnloadBank) == 0x000008, "Wrong size on FMODBlueprintStatics_UnloadBank");
static_assert(offsetof(FMODBlueprintStatics_UnloadBank, Bank) == 0x000000, "Member 'FMODBlueprintStatics_UnloadBank::Bank' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.UnloadBankSampleData
// 0x0008 (0x0008 - 0x0000)
struct FMODBlueprintStatics_UnloadBankSampleData final
{
public:
	class UFMODBank*                              Bank;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_UnloadBankSampleData) == 0x000008, "Wrong alignment on FMODBlueprintStatics_UnloadBankSampleData");
static_assert(sizeof(FMODBlueprintStatics_UnloadBankSampleData) == 0x000008, "Wrong size on FMODBlueprintStatics_UnloadBankSampleData");
static_assert(offsetof(FMODBlueprintStatics_UnloadBankSampleData, Bank) == 0x000000, "Member 'FMODBlueprintStatics_UnloadBankSampleData::Bank' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.UnloadEventSampleData
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_UnloadEventSampleData final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFMODEvent*                             Event;                                             // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODBlueprintStatics_UnloadEventSampleData) == 0x000008, "Wrong alignment on FMODBlueprintStatics_UnloadEventSampleData");
static_assert(sizeof(FMODBlueprintStatics_UnloadEventSampleData) == 0x000010, "Wrong size on FMODBlueprintStatics_UnloadEventSampleData");
static_assert(offsetof(FMODBlueprintStatics_UnloadEventSampleData, WorldContextObject) == 0x000000, "Member 'FMODBlueprintStatics_UnloadEventSampleData::WorldContextObject' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_UnloadEventSampleData, Event) == 0x000008, "Member 'FMODBlueprintStatics_UnloadEventSampleData::Event' has a wrong offset!");

// Function FMODStudio.FMODBlueprintStatics.VCASetVolume
// 0x0010 (0x0010 - 0x0000)
struct FMODBlueprintStatics_VCASetVolume final
{
public:
	class UFMODVCA*                               Vca;                                               // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Volume;                                            // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMODBlueprintStatics_VCASetVolume) == 0x000008, "Wrong alignment on FMODBlueprintStatics_VCASetVolume");
static_assert(sizeof(FMODBlueprintStatics_VCASetVolume) == 0x000010, "Wrong size on FMODBlueprintStatics_VCASetVolume");
static_assert(offsetof(FMODBlueprintStatics_VCASetVolume, Vca) == 0x000000, "Member 'FMODBlueprintStatics_VCASetVolume::Vca' has a wrong offset!");
static_assert(offsetof(FMODBlueprintStatics_VCASetVolume, Volume) == 0x000008, "Member 'FMODBlueprintStatics_VCASetVolume::Volume' has a wrong offset!");

// Function FMODStudio.FMODEngineSubsystem.GetComponents
// 0x0010 (0x0010 - 0x0000)
struct FMODEngineSubsystem_GetComponents final
{
public:
	TArray<class UFMODAudioComponent*>            ReturnValue;                                       // 0x0000(0x0010)(ConstParm, ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ReferenceParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODEngineSubsystem_GetComponents) == 0x000008, "Wrong alignment on FMODEngineSubsystem_GetComponents");
static_assert(sizeof(FMODEngineSubsystem_GetComponents) == 0x000010, "Wrong size on FMODEngineSubsystem_GetComponents");
static_assert(offsetof(FMODEngineSubsystem_GetComponents, ReturnValue) == 0x000000, "Member 'FMODEngineSubsystem_GetComponents::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODEngineSubsystem.GetFMODDebugEventUpdate
// 0x0020 (0x0020 - 0x0000)
struct FMODEngineSubsystem_GetFMODDebugEventUpdate final
{
public:
	struct FFMODDebugEventUpdate                  ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODEngineSubsystem_GetFMODDebugEventUpdate) == 0x000008, "Wrong alignment on FMODEngineSubsystem_GetFMODDebugEventUpdate");
static_assert(sizeof(FMODEngineSubsystem_GetFMODDebugEventUpdate) == 0x000020, "Wrong size on FMODEngineSubsystem_GetFMODDebugEventUpdate");
static_assert(offsetof(FMODEngineSubsystem_GetFMODDebugEventUpdate, ReturnValue) == 0x000000, "Member 'FMODEngineSubsystem_GetFMODDebugEventUpdate::ReturnValue' has a wrong offset!");

// Function FMODStudio.FMODEvent.GetDesc
// 0x0010 (0x0010 - 0x0000)
struct FMODEvent_GetDesc final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FMODEvent_GetDesc) == 0x000008, "Wrong alignment on FMODEvent_GetDesc");
static_assert(sizeof(FMODEvent_GetDesc) == 0x000010, "Wrong size on FMODEvent_GetDesc");
static_assert(offsetof(FMODEvent_GetDesc, ReturnValue) == 0x000000, "Member 'FMODEvent_GetDesc::ReturnValue' has a wrong offset!");

}

