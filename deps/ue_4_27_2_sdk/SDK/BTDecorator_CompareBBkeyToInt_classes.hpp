#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTDecorator_CompareBBkeyToInt

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTDecorator_CompareBBkeyToInt.BTDecorator_CompareBBkeyToInt_C
// 0x0038 (0x00D8 - 0x00A0)
class UBTDecorator_CompareBBkeyToInt_C final : public UBTDecorator_BlueprintBase
{
public:
	uint8                                         Comparison;                                        // 0x00A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 Blackboard_key;                                    // 0x00A8(0x0028)(Edit, BlueprintVisible)
	int32                                         Value;                                             // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheck(class AActor* OwnerActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTDecorator_CompareBBkeyToInt_C">();
	}
	static class UBTDecorator_CompareBBkeyToInt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTDecorator_CompareBBkeyToInt_C>();
	}
};
static_assert(alignof(UBTDecorator_CompareBBkeyToInt_C) == 0x000008, "Wrong alignment on UBTDecorator_CompareBBkeyToInt_C");
static_assert(sizeof(UBTDecorator_CompareBBkeyToInt_C) == 0x0000D8, "Wrong size on UBTDecorator_CompareBBkeyToInt_C");
static_assert(offsetof(UBTDecorator_CompareBBkeyToInt_C, Comparison) == 0x0000A0, "Member 'UBTDecorator_CompareBBkeyToInt_C::Comparison' has a wrong offset!");
static_assert(offsetof(UBTDecorator_CompareBBkeyToInt_C, Blackboard_key) == 0x0000A8, "Member 'UBTDecorator_CompareBBkeyToInt_C::Blackboard_key' has a wrong offset!");
static_assert(offsetof(UBTDecorator_CompareBBkeyToInt_C, Value) == 0x0000D0, "Member 'UBTDecorator_CompareBBkeyToInt_C::Value' has a wrong offset!");

}

