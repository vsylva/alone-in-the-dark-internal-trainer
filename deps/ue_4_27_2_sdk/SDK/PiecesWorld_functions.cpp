#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesWorld

#include "Basic.hpp"

#include "PiecesWorld_classes.hpp"
#include "PiecesWorld_parameters.hpp"


namespace SDK
{

// Function PiecesWorld.PiecesLevelStreamingFilter.ShouldBeDisabled
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class ULevelStreaming*                  InLevelStreaming                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UPiecesLevelStreamingFilter::ShouldBeDisabled(const class UObject* WorldContextObject, class ULevelStreaming* InLevelStreaming)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PiecesLevelStreamingFilter", "ShouldBeDisabled");

	Params::PiecesLevelStreamingFilter_ShouldBeDisabled Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InLevelStreaming = InLevelStreaming;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

