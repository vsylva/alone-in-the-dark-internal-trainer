#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesAutomation

#include "Basic.hpp"


namespace SDK::Params
{

// Function PiecesAutomation.BFL_PiecesAutomationUtils.RemoveAutoTestBlockers
// 0x0008 (0x0008 - 0x0000)
struct BFL_PiecesAutomationUtils_RemoveAutoTestBlockers final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BFL_PiecesAutomationUtils_RemoveAutoTestBlockers) == 0x000008, "Wrong alignment on BFL_PiecesAutomationUtils_RemoveAutoTestBlockers");
static_assert(sizeof(BFL_PiecesAutomationUtils_RemoveAutoTestBlockers) == 0x000008, "Wrong size on BFL_PiecesAutomationUtils_RemoveAutoTestBlockers");
static_assert(offsetof(BFL_PiecesAutomationUtils_RemoveAutoTestBlockers, WorldContextObject) == 0x000000, "Member 'BFL_PiecesAutomationUtils_RemoveAutoTestBlockers::WorldContextObject' has a wrong offset!");

// Function PiecesAutomation.BFL_PiecesAutomationUtils.StartGameplaySession
// 0x0010 (0x0010 - 0x0000)
struct BFL_PiecesAutomationUtils_StartGameplaySession final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BFL_PiecesAutomationUtils_StartGameplaySession) == 0x000008, "Wrong alignment on BFL_PiecesAutomationUtils_StartGameplaySession");
static_assert(sizeof(BFL_PiecesAutomationUtils_StartGameplaySession) == 0x000010, "Wrong size on BFL_PiecesAutomationUtils_StartGameplaySession");
static_assert(offsetof(BFL_PiecesAutomationUtils_StartGameplaySession, WorldContextObject) == 0x000000, "Member 'BFL_PiecesAutomationUtils_StartGameplaySession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BFL_PiecesAutomationUtils_StartGameplaySession, ReturnValue) == 0x000008, "Member 'BFL_PiecesAutomationUtils_StartGameplaySession::ReturnValue' has a wrong offset!");

}

