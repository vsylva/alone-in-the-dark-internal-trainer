#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Attack_Lunge

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Attack_Lunge.GA_Attack_Lunge_C.TriggerBumpObjects
// 0x01E0 (0x01E0 - 0x0000)
struct GA_Attack_Lunge_C_TriggerBumpObjects final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0058(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0078(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11B[0x1];                                      // 0x011B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0124(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0168(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0184(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0190(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BumpIntoAsset_C*                    K2Node_DynamicCast_AsBP_Bump_Into_Asset;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x2];                                      // 0x01AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Attack_Lunge_C_TriggerBumpObjects) == 0x000008, "Wrong alignment on GA_Attack_Lunge_C_TriggerBumpObjects");
static_assert(sizeof(GA_Attack_Lunge_C_TriggerBumpObjects) == 0x0001E0, "Wrong size on GA_Attack_Lunge_C_TriggerBumpObjects");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, Temp_object_Variable) == 0x000010, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000028, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000040, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000048, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, K2Node_MakeArray_Array) == 0x000058, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000078, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000088, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Array_Get_Item) == 0x000090, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_bBlockingHit) == 0x000119, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_bInitialOverlap) == 0x00011A, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_Time) == 0x00011C, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_Distance) == 0x000120, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_Location) == 0x000124, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_ImpactPoint) == 0x000130, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_Normal) == 0x00013C, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_ImpactNormal) == 0x000148, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_PhysMat) == 0x000158, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_HitActor) == 0x000160, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_HitComponent) == 0x000168, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_HitBoneName) == 0x000170, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_HitItem) == 0x000178, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_ElementIndex) == 0x00017C, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_FaceIndex) == 0x000180, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_TraceStart) == 0x000184, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BreakHitResult_TraceEnd) == 0x000190, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_BooleanAND_ReturnValue) == 0x00019C, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, K2Node_DynamicCast_AsBP_Bump_Into_Asset) == 0x0001A0, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::K2Node_DynamicCast_AsBP_Bump_Into_Asset' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_IsValid_ReturnValue) == 0x0001A9, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0001AC, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001B8, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Normal_ReturnValue) == 0x0001C4, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_TriggerBumpObjects, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D0, "Member 'GA_Attack_Lunge_C_TriggerBumpObjects::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function GA_Attack_Lunge.GA_Attack_Lunge_C.EventReceived_2C8E8E98450000D0BF7239B78D17EAF9
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9) == 0x000008, "Wrong alignment on GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(sizeof(GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9) == 0x0000B8, "Wrong size on GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(offsetof(GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9, EventTag) == 0x000000, "Member 'GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9, EventData) == 0x000008, "Member 'GA_Attack_Lunge_C_EventReceived_2C8E8E98450000D0BF7239B78D17EAF9::EventData' has a wrong offset!");

// Function GA_Attack_Lunge.GA_Attack_Lunge_C.OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9) == 0x000008, "Wrong alignment on GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(sizeof(GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9) == 0x0000B8, "Wrong size on GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(offsetof(GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9, EventTag) == 0x000000, "Member 'GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9, EventData) == 0x000008, "Member 'GA_Attack_Lunge_C_OnCancelled_2C8E8E98450000D0BF7239B78D17EAF9::EventData' has a wrong offset!");

// Function GA_Attack_Lunge.GA_Attack_Lunge_C.OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9) == 0x000008, "Wrong alignment on GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(sizeof(GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9) == 0x0000B8, "Wrong size on GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(offsetof(GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9, EventTag) == 0x000000, "Member 'GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9, EventData) == 0x000008, "Member 'GA_Attack_Lunge_C_OnInterrupted_2C8E8E98450000D0BF7239B78D17EAF9::EventData' has a wrong offset!");

// Function GA_Attack_Lunge.GA_Attack_Lunge_C.OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9) == 0x000008, "Wrong alignment on GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(sizeof(GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9) == 0x0000B8, "Wrong size on GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(offsetof(GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9, EventTag) == 0x000000, "Member 'GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9, EventData) == 0x000008, "Member 'GA_Attack_Lunge_C_OnBlendOut_2C8E8E98450000D0BF7239B78D17EAF9::EventData' has a wrong offset!");

// Function GA_Attack_Lunge.GA_Attack_Lunge_C.OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9) == 0x000008, "Wrong alignment on GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(sizeof(GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9) == 0x0000B8, "Wrong size on GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9");
static_assert(offsetof(GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9, EventTag) == 0x000000, "Member 'GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9, EventData) == 0x000008, "Member 'GA_Attack_Lunge_C_OnCompleted_2C8E8E98450000D0BF7239B78D17EAF9::EventData' has a wrong offset!");

// Function GA_Attack_Lunge.GA_Attack_Lunge_C.ExecuteUbergraph_GA_Attack_Lunge
// 0x0560 (0x0560 - 0x0000)
struct GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0010(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x00D8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x01A0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0260(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0268(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0318(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0328(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0330(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x03F0(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x04A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4AA[0x2];                                      // 0x04AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x04AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x04B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4B5[0x3];                                      // 0x04B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           CallFunc_HandleEventData_Gameplay_Effect_Context_Handle; // 0x04C0(0x0018)()
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AObsidianFoxCharacter*                  K2Node_DynamicCast_AsObsidian_Fox_Character;       // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x04F8(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetMontageSections_OutNames;              // 0x0510(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x052D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue_1;     // 0x052E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52F[0x1];                                      // 0x052F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0534(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_535[0x3];                                      // 0x0535(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetRandomMontageSection_ReturnValue;      // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWaitForEvent* CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0559(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge) == 0x000008, "Wrong alignment on GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge");
static_assert(sizeof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge) == 0x000560, "Wrong size on GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, EntryPoint) == 0x000000, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_RandomFloatInRange_ReturnValue) == 0x000004, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventTag_4) == 0x000008, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventData_4) == 0x000010, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventTag_3) == 0x0000D0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventData_3) == 0x0000D8, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000188, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventTag_2) == 0x000198, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventData_2) == 0x0001A0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000250, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventTag_1) == 0x000260, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventData_1) == 0x000268, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000318, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventTag) == 0x000328, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CustomEvent_EventData) == 0x000330, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003E0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, Temp_struct_Variable) == 0x0003F0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, Temp_struct_Variable_1) == 0x0004A0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x0004A8, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, Temp_bool_Variable) == 0x0004A9, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, Temp_name_Variable) == 0x0004AC, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, Temp_bool_True_if_break_was_hit_Variable) == 0x0004B4, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, Temp_int_Array_Index_Variable) == 0x0004B8, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_Not_PreBool_ReturnValue) == 0x0004BC, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_HandleEventData_Gameplay_Effect_Context_Handle) == 0x0004C0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_HandleEventData_Gameplay_Effect_Context_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0004D8, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_DynamicCast_AsObsidian_Fox_Character) == 0x0004E0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_DynamicCast_AsObsidian_Fox_Character' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_DynamicCast_bSuccess) == 0x0004E8, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_GetController_ReturnValue) == 0x0004F0, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_CreateDelegate_OutputDelegate_5) == 0x0004F8, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_WaitDelay_ReturnValue) == 0x000508, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_GetMontageSections_OutNames) == 0x000510, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_GetMontageSections_OutNames' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_Array_Get_Item) == 0x000520, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_Array_Length_ReturnValue) == 0x000528, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00052C, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_IsValid_ReturnValue) == 0x00052D, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_EqualEqual_GameplayTag_ReturnValue_1) == 0x00052E, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_EqualEqual_GameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, Temp_int_Loop_Counter_Variable) == 0x000530, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_Less_IntInt_ReturnValue) == 0x000534, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_Add_IntInt_ReturnValue) == 0x000538, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_BooleanAND_ReturnValue) == 0x00053C, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_GetRandomMontageSection_ReturnValue) == 0x000540, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_GetRandomMontageSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, K2Node_Select_Default) == 0x000548, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000550, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_Less_FloatFloat_ReturnValue) == 0x000558, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge, CallFunc_IsValid_ReturnValue_1) == 0x000559, "Member 'GA_Attack_Lunge_C_ExecuteUbergraph_GA_Attack_Lunge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

