#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlowTeleportTarget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FlowTeleportTarget.BP_FlowTeleportTarget_C
// 0x0050 (0x0288 - 0x0238)
class ABP_FlowTeleportTarget_C final : public AActor
{
public:
	class UBillboardComponent*                    Billboard;                                         // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           IdentityTag;                                       // 0x0258(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	class UPiecesLevelStreamingLoaderComponent*   LoaderComponent;                                   // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStreamingVolumeUsage                         Streaming_Method;                                  // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPiecesLODPreloadComponent*             LODPreloadComponent;                               // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UWorld>>          Levels_To_Not_Stream;                              // 0x0278(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void CreateLODLoader();
	void CreateLevelLoader(EStreamingVolumeUsage InputPin, TArray<TSoftObjectPtr<class UWorld>>& InputPin2);
	void UpdateStreamingMethodForLoaderComponent(EStreamingVolumeUsage Streaming_Method_0);
	void RemoveStreamingLoaderComponent();
	void AddStreamingLoaderComponent(EStreamingVolumeUsage Streaming_Method_0, TArray<TSoftObjectPtr<class UWorld>>& Levels_To_Not_Stream_0, bool PreloadLevels, bool PreloadLODs);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FlowTeleportTarget_C">();
	}
	static class ABP_FlowTeleportTarget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_FlowTeleportTarget_C>();
	}
};
static_assert(alignof(ABP_FlowTeleportTarget_C) == 0x000008, "Wrong alignment on ABP_FlowTeleportTarget_C");
static_assert(sizeof(ABP_FlowTeleportTarget_C) == 0x000288, "Wrong size on ABP_FlowTeleportTarget_C");
static_assert(offsetof(ABP_FlowTeleportTarget_C, Billboard) == 0x000238, "Member 'ABP_FlowTeleportTarget_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, Capsule) == 0x000240, "Member 'ABP_FlowTeleportTarget_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, Arrow) == 0x000248, "Member 'ABP_FlowTeleportTarget_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, DefaultSceneRoot) == 0x000250, "Member 'ABP_FlowTeleportTarget_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, IdentityTag) == 0x000258, "Member 'ABP_FlowTeleportTarget_C::IdentityTag' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, LoaderComponent) == 0x000260, "Member 'ABP_FlowTeleportTarget_C::LoaderComponent' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, Streaming_Method) == 0x000268, "Member 'ABP_FlowTeleportTarget_C::Streaming_Method' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, LODPreloadComponent) == 0x000270, "Member 'ABP_FlowTeleportTarget_C::LODPreloadComponent' has a wrong offset!");
static_assert(offsetof(ABP_FlowTeleportTarget_C, Levels_To_Not_Stream) == 0x000278, "Member 'ABP_FlowTeleportTarget_C::Levels_To_Not_Stream' has a wrong offset!");

}

