#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesLightRenderControlZone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PiecesLightRenderControlZone.LightRenderControlZone
// 0x0048 (0x0070 - 0x0028)
class ULightRenderControlZone final : public UObject
{
public:
	struct FBox                                   Volume;                                            // 0x0028(0x001C)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_44[0x2C];                                      // 0x0044(0x002C)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void AddLightActorToHide(class AActor* Actor);
	void AddLightActorToShowOnly(class AActor* Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LightRenderControlZone">();
	}
	static class ULightRenderControlZone* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULightRenderControlZone>();
	}
};
static_assert(alignof(ULightRenderControlZone) == 0x000008, "Wrong alignment on ULightRenderControlZone");
static_assert(sizeof(ULightRenderControlZone) == 0x000070, "Wrong size on ULightRenderControlZone");
static_assert(offsetof(ULightRenderControlZone, Volume) == 0x000028, "Member 'ULightRenderControlZone::Volume' has a wrong offset!");

// Class PiecesLightRenderControlZone.PiecesLightRenderControlZoneEngineSubsystem
// 0x0010 (0x0040 - 0x0030)
class UPiecesLightRenderControlZoneEngineSubsystem final : public UEngineSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesLightRenderControlZoneEngineSubsystem">();
	}
	static class UPiecesLightRenderControlZoneEngineSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesLightRenderControlZoneEngineSubsystem>();
	}
};
static_assert(alignof(UPiecesLightRenderControlZoneEngineSubsystem) == 0x000008, "Wrong alignment on UPiecesLightRenderControlZoneEngineSubsystem");
static_assert(sizeof(UPiecesLightRenderControlZoneEngineSubsystem) == 0x000040, "Wrong size on UPiecesLightRenderControlZoneEngineSubsystem");

// Class PiecesLightRenderControlZone.PiecesLightRenderControlZoneWorldSubsystem
// 0x0010 (0x0040 - 0x0030)
class UPiecesLightRenderControlZoneWorldSubsystem final : public UWorldSubsystem
{
public:
	TArray<class ULightRenderControlZone*>        Zones;                                             // 0x0030(0x0010)(ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	class ULightRenderControlZone* CreateNewControlZone(const struct FBox& Volume, class UObject* LifetimeScope);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesLightRenderControlZoneWorldSubsystem">();
	}
	static class UPiecesLightRenderControlZoneWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesLightRenderControlZoneWorldSubsystem>();
	}
};
static_assert(alignof(UPiecesLightRenderControlZoneWorldSubsystem) == 0x000008, "Wrong alignment on UPiecesLightRenderControlZoneWorldSubsystem");
static_assert(sizeof(UPiecesLightRenderControlZoneWorldSubsystem) == 0x000040, "Wrong size on UPiecesLightRenderControlZoneWorldSubsystem");
static_assert(offsetof(UPiecesLightRenderControlZoneWorldSubsystem, Zones) == 0x000030, "Member 'UPiecesLightRenderControlZoneWorldSubsystem::Zones' has a wrong offset!");

}

