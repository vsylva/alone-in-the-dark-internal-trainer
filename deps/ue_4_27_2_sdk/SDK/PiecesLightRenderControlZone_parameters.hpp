#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesLightRenderControlZone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PiecesLightRenderControlZone.LightRenderControlZone.AddLightActorToHide
// 0x0008 (0x0008 - 0x0000)
struct LightRenderControlZone_AddLightActorToHide final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LightRenderControlZone_AddLightActorToHide) == 0x000008, "Wrong alignment on LightRenderControlZone_AddLightActorToHide");
static_assert(sizeof(LightRenderControlZone_AddLightActorToHide) == 0x000008, "Wrong size on LightRenderControlZone_AddLightActorToHide");
static_assert(offsetof(LightRenderControlZone_AddLightActorToHide, Actor) == 0x000000, "Member 'LightRenderControlZone_AddLightActorToHide::Actor' has a wrong offset!");

// Function PiecesLightRenderControlZone.LightRenderControlZone.AddLightActorToShowOnly
// 0x0008 (0x0008 - 0x0000)
struct LightRenderControlZone_AddLightActorToShowOnly final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(LightRenderControlZone_AddLightActorToShowOnly) == 0x000008, "Wrong alignment on LightRenderControlZone_AddLightActorToShowOnly");
static_assert(sizeof(LightRenderControlZone_AddLightActorToShowOnly) == 0x000008, "Wrong size on LightRenderControlZone_AddLightActorToShowOnly");
static_assert(offsetof(LightRenderControlZone_AddLightActorToShowOnly, Actor) == 0x000000, "Member 'LightRenderControlZone_AddLightActorToShowOnly::Actor' has a wrong offset!");

// Function PiecesLightRenderControlZone.PiecesLightRenderControlZoneWorldSubsystem.CreateNewControlZone
// 0x0030 (0x0030 - 0x0000)
struct PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone final
{
public:
	struct FBox                                   Volume;                                            // 0x0000(0x001C)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                LifetimeScope;                                     // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULightRenderControlZone*                ReturnValue;                                       // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone) == 0x000008, "Wrong alignment on PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone");
static_assert(sizeof(PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone) == 0x000030, "Wrong size on PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone");
static_assert(offsetof(PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone, Volume) == 0x000000, "Member 'PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone::Volume' has a wrong offset!");
static_assert(offsetof(PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone, LifetimeScope) == 0x000020, "Member 'PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone::LifetimeScope' has a wrong offset!");
static_assert(offsetof(PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone, ReturnValue) == 0x000028, "Member 'PiecesLightRenderControlZoneWorldSubsystem_CreateNewControlZone::ReturnValue' has a wrong offset!");

}

