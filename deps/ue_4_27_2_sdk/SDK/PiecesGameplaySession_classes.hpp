#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesGameplaySession

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class PiecesGameplaySession.GameplaySession
// 0x0138 (0x0160 - 0x0028)
class UGameplaySession final : public UObject
{
public:
	uint8                                         Pad_28[0x138];                                     // 0x0028(0x0138)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplaySession">();
	}
	static class UGameplaySession* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplaySession>();
	}
};
static_assert(alignof(UGameplaySession) == 0x000008, "Wrong alignment on UGameplaySession");
static_assert(sizeof(UGameplaySession) == 0x000160, "Wrong size on UGameplaySession");

// Class PiecesGameplaySession.GameplaySessionSubsystem
// 0x0000 (0x0030 - 0x0030)
class UGameplaySessionSubsystem : public USubsystem
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplaySessionSubsystem">();
	}
	static class UGameplaySessionSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplaySessionSubsystem>();
	}
};
static_assert(alignof(UGameplaySessionSubsystem) == 0x000008, "Wrong alignment on UGameplaySessionSubsystem");
static_assert(sizeof(UGameplaySessionSubsystem) == 0x000030, "Wrong size on UGameplaySessionSubsystem");

// Class PiecesGameplaySession.PiecesGameplaySessionGameInstance
// 0x0010 (0x01B8 - 0x01A8)
class UPiecesGameplaySessionGameInstance : public UGameInstance
{
public:
	class UGameplaySession*                       GameSession;                                       // 0x01A8(0x0008)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_1B0[0x8];                                      // 0x01B0(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void EndGameplaySession() const;
	class UGameplaySession* GetGameplaySession() const;
	void StartGameplaySession() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesGameplaySessionGameInstance">();
	}
	static class UPiecesGameplaySessionGameInstance* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesGameplaySessionGameInstance>();
	}
};
static_assert(alignof(UPiecesGameplaySessionGameInstance) == 0x000008, "Wrong alignment on UPiecesGameplaySessionGameInstance");
static_assert(sizeof(UPiecesGameplaySessionGameInstance) == 0x0001B8, "Wrong size on UPiecesGameplaySessionGameInstance");
static_assert(offsetof(UPiecesGameplaySessionGameInstance, GameSession) == 0x0001A8, "Member 'UPiecesGameplaySessionGameInstance::GameSession' has a wrong offset!");

// Class PiecesGameplaySession.GameplaySessionBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UGameplaySessionBlueprintLibrary final : public UBlueprintFunctionLibrary
{
public:
	static bool EndGameplaySession(const class UObject* WorldContextObject);
	static class UGameplaySessionSubsystem* GetGameplaySessionSubsystem(const class UObject* ContextObject, TSubclassOf<class UGameplaySessionSubsystem> Class_0);
	static bool SessionInProgress(const class UObject* WorldContextObject);
	static bool StartGameplaySession(const class UObject* WorldContextObject);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"GameplaySessionBlueprintLibrary">();
	}
	static class UGameplaySessionBlueprintLibrary* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGameplaySessionBlueprintLibrary>();
	}
};
static_assert(alignof(UGameplaySessionBlueprintLibrary) == 0x000008, "Wrong alignment on UGameplaySessionBlueprintLibrary");
static_assert(sizeof(UGameplaySessionBlueprintLibrary) == 0x000028, "Wrong size on UGameplaySessionBlueprintLibrary");

}

