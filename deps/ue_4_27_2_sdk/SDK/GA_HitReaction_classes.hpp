#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_HitReaction

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "SpecialHitReactions_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_HitReaction.GA_HitReaction_C
// 0x0018 (0x03C8 - 0x03B0)
class UGA_HitReaction_C : public UGameplayAbility_HitReaction
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FActiveGameplayEffectHandle            Active_Hit_Reaction_GE_Handle;                     // 0x03B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseLegacyHitReactionFunction;                     // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void SpecialHitReactionMontageSelection(class UHitReactionDataObject_C* HitReactionData, class FName* MontageSection);
	void PlayLegacySpecialHitReaction(class UHitReactionDataObject_C* HitReactionDataObject);
	void SpecialHitReactionGetMontage(class UAnimMontage** Montage);
	void TriggerOnHitForAnimInstance(const struct FHitReactionData& HitReactionData, const struct FGameplayEventData& EventData);
	void OnActorHit(class USkeletalMeshComponent* Mesh, class FName HitBone, const struct FVector& HitDirection, ECardinalDirection HitQuadrant, float HitStrength, float HitForce, class UObject* SpecialHitReactionData, const struct FGameplayTagContainer& InstigatorTags, const struct FGameplayEventData& HitReactionGameplayData);
	void OnInterrupted_79DFE6CD4CA7564CDB53F39D3AC71CD9(EHitReactionType HitReactionType);
	void OnCompleted_79DFE6CD4CA7564CDB53F39D3AC71CD9(EHitReactionType HitReactionType);
	void OnReactionBegin_79DFE6CD4CA7564CDB53F39D3AC71CD9(EHitReactionType HitReactionType);
	void OnFailed_79DFE6CD4CA7564CDB53F39D3AC71CD9(EHitReactionType HitReactionType);
	void K2_ActivateAbilityFromEvent(const struct FGameplayEventData& EventData);
	void K2_OnEndAbility(bool bWasCancelled);
	void Handle_Hit_Reaction(const struct FHitReactionData& HitReactionData, const struct FGameplayEventData& GameplayEventData);
	void ExecuteUbergraph_GA_HitReaction(int32 EntryPoint);
	void Evaluate_Hit_Reaction_And_Apply_Hardiness(const struct FGameplayEventData& GameplayEventData, EHitReactionType* EvaluatedHitReaction);
	void Fallback_Old_Reaction(const struct FHitReactionData& HitReactionData, const struct FGameplayEventData& HitReactionGameplayData);
	void Dismemberment(const struct FHitResult& Hit, float HitMagnitude);

	void Print_Hit_Data_Debug(const struct FGameplayEventData& GameplayEventData) const;
	bool IsAvatarDead() const;
	void GetHitReactionComponent(class UHitReactionComponent** Comp) const;
	EHitReactionType DowngradeHitReactionType(EHitReactionType Hitreaction) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_HitReaction_C">();
	}
	static class UGA_HitReaction_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_HitReaction_C>();
	}
};
static_assert(alignof(UGA_HitReaction_C) == 0x000008, "Wrong alignment on UGA_HitReaction_C");
static_assert(sizeof(UGA_HitReaction_C) == 0x0003C8, "Wrong size on UGA_HitReaction_C");
static_assert(offsetof(UGA_HitReaction_C, UberGraphFrame) == 0x0003B0, "Member 'UGA_HitReaction_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_HitReaction_C, Active_Hit_Reaction_GE_Handle) == 0x0003B8, "Member 'UGA_HitReaction_C::Active_Hit_Reaction_GE_Handle' has a wrong offset!");
static_assert(offsetof(UGA_HitReaction_C, bUseLegacyHitReactionFunction) == 0x0003C0, "Member 'UGA_HitReaction_C::bUseLegacyHitReactionFunction' has a wrong offset!");

}

