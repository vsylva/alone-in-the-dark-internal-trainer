#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTService_GetPatrolPoint

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTService_GetPatrolPoint.BTService_GetPatrolPoint_C
// 0x00B0 (0x0148 - 0x0098)
class UBTService_GetPatrolPoint_C final : public UBTService_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0098(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 TargetLocation;                                    // 0x00A0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 IdlePointActor;                                    // 0x00C8(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 IdlePointFocusLocation;                            // 0x00F0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 PatrolPath;                                        // 0x0118(0x0028)(Edit, BlueprintVisible)
	class ABP_PatrolPath_C*                       PatrolPathRef;                                     // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

public:
	void IdlePointQuery(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void OnQueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ExecuteUbergraph_BTService_GetPatrolPoint(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTService_GetPatrolPoint_C">();
	}
	static class UBTService_GetPatrolPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTService_GetPatrolPoint_C>();
	}
};
static_assert(alignof(UBTService_GetPatrolPoint_C) == 0x000008, "Wrong alignment on UBTService_GetPatrolPoint_C");
static_assert(sizeof(UBTService_GetPatrolPoint_C) == 0x000148, "Wrong size on UBTService_GetPatrolPoint_C");
static_assert(offsetof(UBTService_GetPatrolPoint_C, UberGraphFrame) == 0x000098, "Member 'UBTService_GetPatrolPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTService_GetPatrolPoint_C, TargetLocation) == 0x0000A0, "Member 'UBTService_GetPatrolPoint_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UBTService_GetPatrolPoint_C, IdlePointActor) == 0x0000C8, "Member 'UBTService_GetPatrolPoint_C::IdlePointActor' has a wrong offset!");
static_assert(offsetof(UBTService_GetPatrolPoint_C, IdlePointFocusLocation) == 0x0000F0, "Member 'UBTService_GetPatrolPoint_C::IdlePointFocusLocation' has a wrong offset!");
static_assert(offsetof(UBTService_GetPatrolPoint_C, PatrolPath) == 0x000118, "Member 'UBTService_GetPatrolPoint_C::PatrolPath' has a wrong offset!");
static_assert(offsetof(UBTService_GetPatrolPoint_C, PatrolPathRef) == 0x000140, "Member 'UBTService_GetPatrolPoint_C::PatrolPathRef' has a wrong offset!");

}

