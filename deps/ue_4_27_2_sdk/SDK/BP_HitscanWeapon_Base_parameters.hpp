#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitscanWeapon_Base

#include "Basic.hpp"

#include "EWeapons_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "WeaponUpgrades_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetWeaponType
// 0x0001 (0x0001 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetWeaponType final
{
public:
	EWeapons                                      WeaponType_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetWeaponType) == 0x000001, "Wrong alignment on BP_HitscanWeapon_Base_C_GetWeaponType");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetWeaponType) == 0x000001, "Wrong size on BP_HitscanWeapon_Base_C_GetWeaponType");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetWeaponType, WeaponType_0) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetWeaponType::WeaponType_0' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.SetCurrentAmmoCheckSaved
// 0x0018 (0x0018 - 0x0000)
struct BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved final
{
public:
	int32                                         NewAmmo;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPersistenceComponent*                  CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasBeenLoaded_ReturnValue;                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved");
static_assert(sizeof(BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved) == 0x000018, "Wrong size on BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved, NewAmmo) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved::NewAmmo' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved, CallFunc_HasBeenLoaded_ReturnValue) == 0x000011, "Member 'BP_HitscanWeapon_Base_C_SetCurrentAmmoCheckSaved::CallFunc_HasBeenLoaded_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetParentHandBoneName
// 0x0060 (0x0060 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetParentHandBoneName final
{
public:
	bool                                          RightHand;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReturnValue;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOFAnimInstance*                        K2Node_DynamicCast_AsOFAnim_Instance;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IHumanoidAnimInterface> K2Node_DynamicCast_AsHumanoid_Anim_Interface;      // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetHandBoneName_ReturnValue;              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetParentHandBoneName) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_GetParentHandBoneName");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetParentHandBoneName) == 0x000060, "Wrong size on BP_HitscanWeapon_Base_C_GetParentHandBoneName");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, RightHand) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::RightHand' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, ReturnValue) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, K2Node_DynamicCast_AsOFAnim_Instance) == 0x000030, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::K2Node_DynamicCast_AsOFAnim_Instance' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, K2Node_DynamicCast_AsHumanoid_Anim_Interface) == 0x000040, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::K2Node_DynamicCast_AsHumanoid_Anim_Interface' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, K2Node_DynamicCast_bSuccess_2) == 0x000050, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetParentHandBoneName, CallFunc_GetHandBoneName_ReturnValue) == 0x000054, "Member 'BP_HitscanWeapon_Base_C_GetParentHandBoneName::CallFunc_GetHandBoneName_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.TriggerMuzzleFlashParticles
// 0x00A0 (0x00A0 - 0x0000)
struct BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles");
static_assert(sizeof(BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles) == 0x0000A0, "Wrong size on BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles, CallFunc_GetControlRotation_ReturnValue) == 0x00000C, "Member 'BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_TriggerMuzzleFlashParticles::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.getReloadRate
// 0x0020 (0x0020 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetReloadRate final
{
public:
	float                                         ReloadRate;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponUpgradeComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetReloadRate_ReloadRate;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetReloadRate) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_GetReloadRate");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetReloadRate) == 0x000020, "Wrong size on BP_HitscanWeapon_Base_C_GetReloadRate");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetReloadRate, ReloadRate) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetReloadRate::ReloadRate' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetReloadRate, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_GetReloadRate::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetReloadRate, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_GetReloadRate::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetReloadRate, CallFunc_GetReloadRate_ReloadRate) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_GetReloadRate::CallFunc_GetReloadRate_ReloadRate' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.OnInstigatorPossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_HitscanWeapon_Base_C_OnInstigatorPossessed final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_OnInstigatorPossessed) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_OnInstigatorPossessed");
static_assert(sizeof(BP_HitscanWeapon_Base_C_OnInstigatorPossessed) == 0x000008, "Wrong size on BP_HitscanWeapon_Base_C_OnInstigatorPossessed");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnInstigatorPossessed, Object) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_OnInstigatorPossessed::Object' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.AddHeat
// 0x0008 (0x0008 - 0x0000)
struct BP_HitscanWeapon_Base_C_AddHeat final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_AddHeat) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_AddHeat");
static_assert(sizeof(BP_HitscanWeapon_Base_C_AddHeat) == 0x000008, "Wrong size on BP_HitscanWeapon_Base_C_AddHeat");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddHeat, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_AddHeat::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddHeat, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_AddHeat::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.UpdateBarrelHeat
// 0x002C (0x002C - 0x0000)
struct BP_HitscanWeapon_Base_C_UpdateBarrelHeat final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_UpdateBarrelHeat");
static_assert(sizeof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat) == 0x00002C, "Wrong size on BP_HitscanWeapon_Base_C_UpdateBarrelHeat");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_FClamp_ReturnValue) == 0x000014, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x00001C, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_FClamp_ReturnValue_1) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_IsActive_ReturnValue) == 0x000028, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateBarrelHeat, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_HitscanWeapon_Base_C_UpdateBarrelHeat::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.SpawnBulletTrail
// 0x0128 (0x0128 - 0x0000)
struct BP_HitscanWeapon_Base_C_SpawnBulletTrail final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_SpawnBulletTrail) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_SpawnBulletTrail");
static_assert(sizeof(BP_HitscanWeapon_Base_C_SpawnBulletTrail) == 0x000128, "Wrong size on BP_HitscanWeapon_Base_C_SpawnBulletTrail");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, Hit) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::Hit' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_bBlockingHit) == 0x000088, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_bInitialOverlap) == 0x000089, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_Time) == 0x00008C, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_Distance) == 0x000090, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_Location) == 0x000094, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A0, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_Normal) == 0x0000AC, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_ElementIndex) == 0x0000EC, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_FaceIndex) == 0x0000F0, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_TraceStart) == 0x0000F4, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_BreakHitResult_TraceEnd) == 0x000100, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_IsValid_ReturnValue) == 0x00010C, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000110, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SpawnBulletTrail, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000120, "Member 'BP_HitscanWeapon_Base_C_SpawnBulletTrail::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetMesh final
{
public:
	class USkeletalMeshComponent*                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetMesh) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_GetMesh");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetMesh) == 0x000008, "Wrong size on BP_HitscanWeapon_Base_C_GetMesh");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetMesh, ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetMesh::ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.AddSpreadBasedOnMovement
// 0x0030 (0x0030 - 0x0000)
struct BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement final
{
public:
	float                                         Delta_Seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoving;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastMovementInputVector_ReturnValue;   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement");
static_assert(sizeof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement) == 0x000030, "Wrong size on BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, Delta_Seconds) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, bMoving) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::bMoving' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_Less_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_GetLastMovementInputVector_ReturnValue) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_GetLastMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x00002C, "Member 'BP_HitscanWeapon_Base_C_AddSpreadBasedOnMovement::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.AddSpread
// 0x000C (0x000C - 0x0000)
struct BP_HitscanWeapon_Base_C_AddSpread final
{
public:
	float                                         SpreadToAdd;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMin_ReturnValue;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_AddSpread) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_AddSpread");
static_assert(sizeof(BP_HitscanWeapon_Base_C_AddSpread) == 0x00000C, "Wrong size on BP_HitscanWeapon_Base_C_AddSpread");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpread, SpreadToAdd) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_AddSpread::SpreadToAdd' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpread, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_AddSpread::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddSpread, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_AddSpread::CallFunc_FMin_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.UpdateSpreadAndCrosshairSize
// 0x0050 (0x0050 - 0x0000)
struct BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bMoving;                                           // 0x0004(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddSpreadBasedOnMovement_bMoving;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize");
static_assert(sizeof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize) == 0x000050, "Wrong size on BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, DeltaSeconds) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, bMoving) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::bMoving' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_AddSpreadBasedOnMovement_bMoving) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_AddSpreadBasedOnMovement_bMoving' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, Temp_bool_Variable) == 0x000009, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x00002A, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000034, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_SelectFloat_ReturnValue_1) == 0x000038, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000040, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'BP_HitscanWeapon_Base_C_UpdateSpreadAndCrosshairSize::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.SetupWeaponData
// 0x0498 (0x0498 - 0x0000)
struct BP_HitscanWeapon_Base_C_SetupWeaponData final
{
public:
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2; // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_2;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_2;            // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3; // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4; // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_3;        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_3;            // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_4;        // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_4;            // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5; // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x01F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x0238(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_5;          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_5;        // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_5;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6; // 0x0258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_25;             // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7; // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_26;             // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_27;             // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_28;             // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_6;          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_29;             // 0x02D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_6;        // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_6;            // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_7;          // 0x02F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_7;        // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_7;            // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8; // 0x0308(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_30;             // 0x0318(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_31;             // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_8;          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_32;             // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_8;        // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_8;            // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_8;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_33;             // 0x0368(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_34;             // 0x0378(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9; // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_35;             // 0x0398(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_36;             // 0x03A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_37;             // 0x03B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_9;          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_38;             // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_9;        // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_9;            // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_9;                    // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10; // 0x03F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_11; // 0x0400(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_39;             // 0x0410(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_40;             // 0x0420(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_41;             // 0x0430(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_42;             // 0x0440(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_43;             // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_44;             // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_10;         // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_11;         // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_10;       // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x3];                                      // 0x0481(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_10;           // 0x0484(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_11;       // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_11;           // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_10;                   // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_11;                   // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_SetupWeaponData) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_SetupWeaponData");
static_assert(sizeof(BP_HitscanWeapon_Base_C_SetupWeaponData) == 0x000498, "Wrong size on BP_HitscanWeapon_Base_C_SetupWeaponData");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000030, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000040, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000050, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000060, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000070, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000080, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000090, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Not_PreBool_ReturnValue) == 0x0000A0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue) == 0x0000A4, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult) == 0x0000AC, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY) == 0x0000B0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess) == 0x0000B4, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x0000B8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2) == 0x0000C8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0000D8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0000E8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_1) == 0x0000F8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_2) == 0x000100, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x000108, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x00010C, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_2) == 0x000110, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_2) == 0x000114, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_1) == 0x000118, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_2) == 0x000119, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000120, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3) == 0x000130, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4) == 0x000140, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000150, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000160, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000170, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000180, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000190, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_17) == 0x0001A0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_3) == 0x0001B0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_4) == 0x0001B8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_3) == 0x0001C0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_3) == 0x0001C4, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_4) == 0x0001C8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_4' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_4) == 0x0001CC, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_4' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_3) == 0x0001D0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_4) == 0x0001D1, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_18) == 0x0001D8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5) == 0x0001E8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_19) == 0x0001F8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000208, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000218, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_22) == 0x000228, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_23) == 0x000238, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_5) == 0x000248, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_5) == 0x000250, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_5' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_5) == 0x000254, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_5' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6) == 0x000258, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_5) == 0x000268, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_24) == 0x000270, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_25) == 0x000280, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7) == 0x000290, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_26) == 0x0002A0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_27) == 0x0002B0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_28) == 0x0002C0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_6) == 0x0002D0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_29) == 0x0002D8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_6) == 0x0002E8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_6' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_6) == 0x0002EC, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_6' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_6) == 0x0002F0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_7) == 0x0002F4, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_7) == 0x0002FC, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_7' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_7) == 0x000300, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_7' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8) == 0x000308, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_30) == 0x000318, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_7) == 0x000328, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_31) == 0x000330, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_8) == 0x000340, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_32) == 0x000348, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_8) == 0x000358, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_8' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_8) == 0x00035C, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_8' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_8) == 0x000360, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_33) == 0x000368, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_34) == 0x000378, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9) == 0x000388, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_35) == 0x000398, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_36) == 0x0003A8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_37) == 0x0003B8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_9) == 0x0003C8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_38) == 0x0003D0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_9) == 0x0003E0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_9' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_9) == 0x0003E4, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_9' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_FTrunc_ReturnValue) == 0x0003E8, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_9) == 0x0003EC, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_9' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10) == 0x0003F0, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_11) == 0x000400, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_39) == 0x000410, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_40) == 0x000420, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_41) == 0x000430, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_42) == 0x000440, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_43) == 0x000450, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Concat_StrStr_ReturnValue_44) == 0x000460, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Concat_StrStr_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_10) == 0x000470, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_Conv_StringToName_ReturnValue_11) == 0x000478, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_Conv_StringToName_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_10) == 0x000480, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_10' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_10) == 0x000484, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_10' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutResult_11) == 0x000488, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutResult_11' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_EvaluateCurveTableRow_OutXY_11) == 0x00048C, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_EvaluateCurveTableRow_OutXY_11' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, CallFunc_FTrunc_ReturnValue_1) == 0x000490, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_10) == 0x000494, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_10' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_SetupWeaponData, K2Node_SwitchEnum_CmpSuccess_11) == 0x000495, "Member 'BP_HitscanWeapon_Base_C_SetupWeaponData::K2Node_SwitchEnum_CmpSuccess_11' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.CheatReload
// 0x0004 (0x0004 - 0x0000)
struct BP_HitscanWeapon_Base_C_CheatReload final
{
public:
	int32                                         CallFunc_GetMaxAmmo_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_CheatReload) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_CheatReload");
static_assert(sizeof(BP_HitscanWeapon_Base_C_CheatReload) == 0x000004, "Wrong size on BP_HitscanWeapon_Base_C_CheatReload");
static_assert(offsetof(BP_HitscanWeapon_Base_C_CheatReload, CallFunc_GetMaxAmmo_ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_CheatReload::CallFunc_GetMaxAmmo_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5
// 0x0010 (0x0010 - 0x0000)
struct BP_HitscanWeapon_Base_C_LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5 final
{
public:
	TArray<class UObject*>                        LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5");
static_assert(sizeof(BP_HitscanWeapon_Base_C_LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5) == 0x000010, "Wrong size on BP_HitscanWeapon_Base_C_LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5");
static_assert(offsetof(BP_HitscanWeapon_Base_C_LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5, LoadedAssets) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_LoadCompleteDelegate_BA66FBCE41A7518686CE3ABA0CA2CEC5::LoadedAssets' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.AddRecoilAimOffset
// 0x0060 (0x0060 - 0x0000)
struct BP_HitscanWeapon_Base_C_AddRecoilAimOffset final
{
public:
	class AController*                            CallFunc_GetInstigatorController_ReturnValue;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_AddRecoilAimOffset");
static_assert(sizeof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset) == 0x000060, "Wrong size on BP_HitscanWeapon_Base_C_AddRecoilAimOffset");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_GetInstigatorController_ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_GetInstigatorController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_GetControlRotation_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Roll_1) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Pitch_1) == 0x000024, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Yaw_1) == 0x000028, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Roll_2) == 0x00002C, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Pitch_2) == 0x000030, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_BreakRotator_Yaw_2) == 0x000034, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_RandomFloatInRange_ReturnValue) == 0x000038, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x00003C, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000044, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000048, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_AddRecoilAimOffset, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'BP_HitscanWeapon_Base_C_AddRecoilAimOffset::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HitscanWeapon_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_ReceiveTick");
static_assert(sizeof(BP_HitscanWeapon_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_HitscanWeapon_Base_C_ReceiveTick");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.InstigatorDestroyed
// 0x0008 (0x0008 - 0x0000)
struct BP_HitscanWeapon_Base_C_InstigatorDestroyed final
{
public:
	class AActor*                                 DestroyedActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_InstigatorDestroyed) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_InstigatorDestroyed");
static_assert(sizeof(BP_HitscanWeapon_Base_C_InstigatorDestroyed) == 0x000008, "Wrong size on BP_HitscanWeapon_Base_C_InstigatorDestroyed");
static_assert(offsetof(BP_HitscanWeapon_Base_C_InstigatorDestroyed, DestroyedActor) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_InstigatorDestroyed::DestroyedActor' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.OnEffectImpact
// 0x0088 (0x0088 - 0x0000)
struct BP_HitscanWeapon_Base_C_OnEffectImpact final
{
public:
	struct FHitResult                             OutHit;                                            // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_OnEffectImpact) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_OnEffectImpact");
static_assert(sizeof(BP_HitscanWeapon_Base_C_OnEffectImpact) == 0x000088, "Wrong size on BP_HitscanWeapon_Base_C_OnEffectImpact");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnEffectImpact, OutHit) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_OnEffectImpact::OutHit' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7
// 0x0010 (0x0010 - 0x0000)
struct BP_HitscanWeapon_Base_C_LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7 final
{
public:
	TArray<class UObject*>                        LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7");
static_assert(sizeof(BP_HitscanWeapon_Base_C_LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7) == 0x000010, "Wrong size on BP_HitscanWeapon_Base_C_LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7");
static_assert(offsetof(BP_HitscanWeapon_Base_C_LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7, LoadedAssets) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_LoadCompleteDelegate_F4C5A1CB49D346BD47EDFDB598E0ACB7::LoadedAssets' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.OnAimingEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_HitscanWeapon_Base_C_OnAimingEvent final
{
public:
	bool                                          bIsAiming;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_OnAimingEvent) == 0x000001, "Wrong alignment on BP_HitscanWeapon_Base_C_OnAimingEvent");
static_assert(sizeof(BP_HitscanWeapon_Base_C_OnAimingEvent) == 0x000001, "Wrong size on BP_HitscanWeapon_Base_C_OnAimingEvent");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnAimingEvent, bIsAiming) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_OnAimingEvent::bIsAiming' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.OnUnequipEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_HitscanWeapon_Base_C_OnUnequipEvent final
{
public:
	class AOFWeaponActor*                         Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_OnUnequipEvent) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_OnUnequipEvent");
static_assert(sizeof(BP_HitscanWeapon_Base_C_OnUnequipEvent) == 0x000008, "Wrong size on BP_HitscanWeapon_Base_C_OnUnequipEvent");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnUnequipEvent, Weapon) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_OnUnequipEvent::Weapon' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.OnEquipEvent
// 0x0008 (0x0008 - 0x0000)
struct BP_HitscanWeapon_Base_C_OnEquipEvent final
{
public:
	class AOFWeaponActor*                         Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_OnEquipEvent) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_OnEquipEvent");
static_assert(sizeof(BP_HitscanWeapon_Base_C_OnEquipEvent) == 0x000008, "Wrong size on BP_HitscanWeapon_Base_C_OnEquipEvent");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnEquipEvent, Weapon) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_OnEquipEvent::Weapon' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.OnHealthChanged
// 0x0028 (0x0028 - 0x0000)
struct BP_HitscanWeapon_Base_C_OnHealthChanged final
{
public:
	float                                         NewCurrentHealth;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  EventTags;                                         // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_OnHealthChanged) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_OnHealthChanged");
static_assert(sizeof(BP_HitscanWeapon_Base_C_OnHealthChanged) == 0x000028, "Wrong size on BP_HitscanWeapon_Base_C_OnHealthChanged");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnHealthChanged, NewCurrentHealth) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_OnHealthChanged::NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnHealthChanged, DeltaValue) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_OnHealthChanged::DeltaValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_OnHealthChanged, EventTags) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_OnHealthChanged::EventTags' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.ExecuteUbergraph_BP_HitscanWeapon_Base
// 0x0300 (0x0300 - 0x0000)
struct BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_CustomEvent_LoadedAssets;                   // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewCurrentHealth, float DeltaValue, struct FGameplayTagContainer& EventTags)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_DestroyedActor;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_OutHit;                               // 0x0090(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue_1;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIsAiming;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1; // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult_1;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY_1;            // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A2[0x6];                                      // 0x01A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PlayerCharacterInterface_C> K2Node_DynamicCast_AsOF_Player_Character_Interface; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         K2Node_CustomEvent_Weapon_1;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UObject*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01E0(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UObject*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         K2Node_CustomEvent_Weapon;                         // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AOFWeaponActor* Weapon)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0210(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AOFWeaponActor* Weapon)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* DestroyedActor)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0230(0x0010)(ZeroConstructor, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponUpgradeComponent_C*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponUpgrades                        CallFunc_Array_Get_Item_1;                         // 0x0254(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_275[0x3];                                      // 0x0275(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_CustomEvent_LoadedAssets_1;                 // 0x0278(0x0010)(ConstParm, ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x0288(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_1;                          // 0x0298(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_CombatInterface_C> K2Node_DynamicCast_AsBPI_Combat_Interface;         // 0x02A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_hitscanWeaponFired_success;               // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2BA[0x2];                                      // 0x02BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_NewCurrentHealth;               // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaValue;                     // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_CustomEvent_EventTags;                      // 0x02C8(0x0020)(ConstParm)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AObsidianFoxCharacter*                  K2Node_DynamicCast_AsObsidian_Fox_Character;       // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base) == 0x000010, "Wrong alignment on BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base");
static_assert(sizeof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base) == 0x000300, "Wrong size on BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, EntryPoint) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_LoadedAssets) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_LoadedAssets' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_AsNiagara_System) == 0x000030, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_Event_DeltaSeconds) == 0x00004C, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_DestroyedActor) == 0x000050, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_DestroyedActor' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_Event_OutHit) == 0x000090, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_Event_OutHit' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000118, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_StartCameraShake_ReturnValue) == 0x000120, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_StartCameraShake_ReturnValue_1) == 0x000128, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_StartCameraShake_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_bIsAiming) == 0x000130, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_bIsAiming' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000138, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000140, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1) == 0x000150, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Concat_StrStr_ReturnValue) == 0x000160, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000170, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Conv_StringToName_ReturnValue) == 0x000180, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000188, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_EvaluateCurveTableRow_OutResult) == 0x000190, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_EvaluateCurveTableRow_OutXY) == 0x000194, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_EvaluateCurveTableRow_OutResult_1) == 0x000198, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_EvaluateCurveTableRow_OutResult_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_EvaluateCurveTableRow_OutXY_1) == 0x00019C, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_EvaluateCurveTableRow_OutXY_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_SwitchEnum_CmpSuccess) == 0x0001A0, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_SwitchEnum_CmpSuccess_1) == 0x0001A1, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_GetOwner_ReturnValue) == 0x0001A8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, Temp_int_Loop_Counter_Variable) == 0x0001B0, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_AsOF_Player_Character_Interface) == 0x0001B8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_AsOF_Player_Character_Interface' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Add_IntInt_ReturnValue) == 0x0001CC, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_IsValid_ReturnValue) == 0x0001D0, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_Weapon_1) == 0x0001D8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_Weapon_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001E0, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x0001F0, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, Temp_int_Array_Index_Variable) == 0x000200, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_Weapon) == 0x000208, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_Weapon' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x000210, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x000220, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CreateDelegate_OutputDelegate_6) == 0x000230, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_GetOwner_ReturnValue_1) == 0x000240, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_GetComponentByClass_ReturnValue) == 0x000248, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_IsValid_ReturnValue_1) == 0x000250, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Array_Get_Item_1) == 0x000254, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Array_Length_ReturnValue) == 0x00025C, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Add_FloatFloat_ReturnValue) == 0x000260, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Less_IntInt_ReturnValue) == 0x000264, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000268, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_SwitchEnum_CmpSuccess_2) == 0x00026C, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_FTrunc_ReturnValue) == 0x000270, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000274, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_LoadedAssets_1) == 0x000278, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_LoadedAssets_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_MakeArray_Array) == 0x000288, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_MakeArray_Array_1) == 0x000298, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_AsBPI_Combat_Interface) == 0x0002A8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_AsBPI_Combat_Interface' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_bSuccess_2) == 0x0002B8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_hitscanWeaponFired_success) == 0x0002B9, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_hitscanWeaponFired_success' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_NewCurrentHealth) == 0x0002BC, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_DeltaValue) == 0x0002C0, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_DeltaValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_CustomEvent_EventTags) == 0x0002C8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_CustomEvent_EventTags' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Less_FloatFloat_ReturnValue) == 0x0002E8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_AsObsidian_Fox_Character) == 0x0002F0, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_AsObsidian_Fox_Character' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, K2Node_DynamicCast_bSuccess_3) == 0x0002F8, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0002F9, "Member 'BP_HitscanWeapon_Base_C_ExecuteUbergraph_BP_HitscanWeapon_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetCurrentSpreadPixelAdjustment
// 0x0010 (0x0010 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment final
{
public:
	float                                         Pixels;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Screen_Percentage;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Pixels; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Screen_Percentage; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment) == 0x000004, "Wrong alignment on BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment) == 0x000010, "Wrong size on BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment, Pixels) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment::Pixels' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment, Screen_Percentage) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment::Screen_Percentage' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment, CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Pixels) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment::CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Pixels' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment, CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Screen_Percentage) == 0x00000C, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustment::CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Screen_Percentage' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetCurrentSpreadPixelAdjustmentInternal
// 0x0020 (0x0020 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal final
{
public:
	float                                         Pixels;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Screen_Percentage;                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal) == 0x000020, "Wrong size on BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal, Pixels) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal::Pixels' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal, Screen_Percentage) == 0x000004, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal::Screen_Percentage' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal, CallFunc_GetViewportSize_SizeX) == 0x000014, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal, CallFunc_GetViewportSize_SizeY) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00001C, "Member 'BP_HitscanWeapon_Base_C_GetCurrentSpreadPixelAdjustmentInternal::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetTraceParameters
// 0x0100 (0x0100 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetTraceParameters final
{
public:
	struct FVector                                Start;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                End;                                               // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Pixels; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Screen_Percentage; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldLocation; // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldDirection; // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorld_ReturnValue; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetTraceParameters) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_GetTraceParameters");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetTraceParameters) == 0x000100, "Wrong size on BP_HitscanWeapon_Base_C_GetTraceParameters");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, Start) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::Start' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, End) == 0x00000C, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::End' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, Direction) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::Direction' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_RandomFloatInRange_ReturnValue) == 0x000024, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000028, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Pixels) == 0x00002C, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Pixels' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Screen_Percentage) == 0x000030, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_GetCurrentSpreadPixelAdjustmentInternal_Screen_Percentage' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_MakeVector2D_ReturnValue) == 0x000034, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00003C, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Normal2D_ReturnValue) == 0x000048, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_VSize2D_ReturnValue) == 0x000050, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, Temp_bool_Variable) == 0x000054, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000055, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_GetPlayerController_ReturnValue) == 0x000058, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, K2Node_Select_Default) == 0x000060, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_GetViewportSize_SizeX) == 0x000068, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_GetViewportSize_SizeY) == 0x00006C, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000070, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000078, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_BreakVector2D_X) == 0x00007C, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000084, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Add_FloatFloat_ReturnValue) == 0x000088, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x00008C, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_DeprojectScreenPositionToWorld_WorldLocation) == 0x000090, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_DeprojectScreenPositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_DeprojectScreenPositionToWorld_WorldDirection) == 0x00009C, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_DeprojectScreenPositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_DeprojectScreenPositionToWorld_ReturnValue) == 0x0000A8, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_DeprojectScreenPositionToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Vector_Distance_ReturnValue) == 0x0000AC, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Add_VectorVector_ReturnValue) == 0x0000C0, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000CC, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_GetForwardVector_ReturnValue) == 0x0000D8, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000E4, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceParameters, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000F0, "Member 'BP_HitscanWeapon_Base_C_GetTraceParameters::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetTraceEnd
// 0x0060 (0x0060 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetTraceEnd final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldLocation; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldDirection; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorld_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetTraceEnd) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_GetTraceEnd");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetTraceEnd) == 0x000060, "Wrong size on BP_HitscanWeapon_Base_C_GetTraceEnd");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_GetViewportSize_SizeX) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_GetViewportSize_SizeY) == 0x00001C, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000024, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_DeprojectScreenPositionToWorld_WorldLocation) == 0x000028, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_DeprojectScreenPositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_DeprojectScreenPositionToWorld_WorldDirection) == 0x000034, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_DeprojectScreenPositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_DeprojectScreenPositionToWorld_ReturnValue) == 0x000040, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_DeprojectScreenPositionToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000044, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceEnd, CallFunc_Add_VectorVector_ReturnValue) == 0x000050, "Member 'BP_HitscanWeapon_Base_C_GetTraceEnd::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.GetTraceStart
// 0x0048 (0x0048 - 0x0000)
struct BP_HitscanWeapon_Base_C_GetTraceStart final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeX;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetViewportSize_SizeY;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldLocation; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_DeprojectScreenPositionToWorld_WorldDirection; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DeprojectScreenPositionToWorld_ReturnValue; // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_GetTraceStart) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_GetTraceStart");
static_assert(sizeof(BP_HitscanWeapon_Base_C_GetTraceStart) == 0x000048, "Wrong size on BP_HitscanWeapon_Base_C_GetTraceStart");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, ReturnValue) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_GetViewportSize_SizeX) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_GetViewportSize_SizeX' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_GetViewportSize_SizeY) == 0x00001C, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_GetViewportSize_SizeY' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000020, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000024, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_DeprojectScreenPositionToWorld_WorldLocation) == 0x000028, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_DeprojectScreenPositionToWorld_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_DeprojectScreenPositionToWorld_WorldDirection) == 0x000034, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_DeprojectScreenPositionToWorld_WorldDirection' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_GetTraceStart, CallFunc_DeprojectScreenPositionToWorld_ReturnValue) == 0x000040, "Member 'BP_HitscanWeapon_Base_C_GetTraceStart::CallFunc_DeprojectScreenPositionToWorld_ReturnValue' has a wrong offset!");

// Function BP_HitscanWeapon_Base.BP_HitscanWeapon_Base_C.TraceForTarget
// 0x0188 (0x0188 - 0x0000)
struct BP_HitscanWeapon_Base_C_TraceForTarget final
{
public:
	TArray<struct FHitResult>                     OutHit;                                            // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetTraceParameters_Start;                 // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceParameters_End;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTraceParameters_Direction;             // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     K2Node_MakeArray_Array_1;                          // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x2];                                       // 0x00F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Object_ReturnValue;           // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HitscanWeapon_Base_C_TraceForTarget) == 0x000008, "Wrong alignment on BP_HitscanWeapon_Base_C_TraceForTarget");
static_assert(sizeof(BP_HitscanWeapon_Base_C_TraceForTarget) == 0x000188, "Wrong size on BP_HitscanWeapon_Base_C_TraceForTarget");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, OutHit) == 0x000000, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::OutHit' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, ReturnValue) == 0x000010, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, Temp_bool_Variable) == 0x000011, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, Temp_byte_Variable) == 0x000012, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, Temp_byte_Variable_1) == 0x000013, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000014, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_GetTraceParameters_Start) == 0x000018, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_GetTraceParameters_Start' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_GetTraceParameters_End) == 0x000024, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_GetTraceParameters_End' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_GetTraceParameters_Direction) == 0x000030, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_GetTraceParameters_Direction' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, K2Node_Select_Default) == 0x00003C, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, K2Node_MakeArray_Array) == 0x000040, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, K2Node_MakeArray_Array_1) == 0x0000E0, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F0, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F1, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_Location) == 0x0000FC, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_ImpactPoint) == 0x000108, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_Normal) == 0x000114, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_ImpactNormal) == 0x000120, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_PhysMat) == 0x000130, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_HitActor) == 0x000138, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_HitComponent) == 0x000140, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_HitBoneName) == 0x000148, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_HitItem) == 0x000150, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_ElementIndex) == 0x000154, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_FaceIndex) == 0x000158, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_HitscanWeapon_Base_C_TraceForTarget, CallFunc_BuildString_Object_ReturnValue) == 0x000178, "Member 'BP_HitscanWeapon_Base_C_TraceForTarget::CallFunc_BuildString_Object_ReturnValue' has a wrong offset!");

}

