#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesOnline

#include "Basic.hpp"


namespace SDK::Params
{

// Function PiecesOnline.PiecesDLCSubsystem.DLCIsOwned
// 0x0010 (0x0010 - 0x0000)
struct PiecesDLCSubsystem_DLCIsOwned final
{
public:
	const class UDLCData*                         DLCId;                                             // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesDLCSubsystem_DLCIsOwned) == 0x000008, "Wrong alignment on PiecesDLCSubsystem_DLCIsOwned");
static_assert(sizeof(PiecesDLCSubsystem_DLCIsOwned) == 0x000010, "Wrong size on PiecesDLCSubsystem_DLCIsOwned");
static_assert(offsetof(PiecesDLCSubsystem_DLCIsOwned, DLCId) == 0x000000, "Member 'PiecesDLCSubsystem_DLCIsOwned::DLCId' has a wrong offset!");
static_assert(offsetof(PiecesDLCSubsystem_DLCIsOwned, ReturnValue) == 0x000008, "Member 'PiecesDLCSubsystem_DLCIsOwned::ReturnValue' has a wrong offset!");

// Function PiecesOnline.BFL_PiecesOnline.GetPlayerNickname
// 0x0010 (0x0010 - 0x0000)
struct BFL_PiecesOnline_GetPlayerNickname final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BFL_PiecesOnline_GetPlayerNickname) == 0x000008, "Wrong alignment on BFL_PiecesOnline_GetPlayerNickname");
static_assert(sizeof(BFL_PiecesOnline_GetPlayerNickname) == 0x000010, "Wrong size on BFL_PiecesOnline_GetPlayerNickname");
static_assert(offsetof(BFL_PiecesOnline_GetPlayerNickname, ReturnValue) == 0x000000, "Member 'BFL_PiecesOnline_GetPlayerNickname::ReturnValue' has a wrong offset!");

// Function PiecesOnline.BFL_PiecesOnline.GetPreOrderUrl
// 0x0010 (0x0010 - 0x0000)
struct BFL_PiecesOnline_GetPreOrderUrl final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BFL_PiecesOnline_GetPreOrderUrl) == 0x000008, "Wrong alignment on BFL_PiecesOnline_GetPreOrderUrl");
static_assert(sizeof(BFL_PiecesOnline_GetPreOrderUrl) == 0x000010, "Wrong size on BFL_PiecesOnline_GetPreOrderUrl");
static_assert(offsetof(BFL_PiecesOnline_GetPreOrderUrl, ReturnValue) == 0x000000, "Member 'BFL_PiecesOnline_GetPreOrderUrl::ReturnValue' has a wrong offset!");

// Function PiecesOnline.BFL_PiecesOnline.ShowStoreUI
// 0x0010 (0x0010 - 0x0000)
struct BFL_PiecesOnline_ShowStoreUI final
{
public:
	class FString                                 ProductID;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BFL_PiecesOnline_ShowStoreUI) == 0x000008, "Wrong alignment on BFL_PiecesOnline_ShowStoreUI");
static_assert(sizeof(BFL_PiecesOnline_ShowStoreUI) == 0x000010, "Wrong size on BFL_PiecesOnline_ShowStoreUI");
static_assert(offsetof(BFL_PiecesOnline_ShowStoreUI, ProductID) == 0x000000, "Member 'BFL_PiecesOnline_ShowStoreUI::ProductID' has a wrong offset!");

// Function PiecesOnline.BFL_PiecesOnline.ShowWebURL
// 0x0010 (0x0010 - 0x0000)
struct BFL_PiecesOnline_ShowWebURL final
{
public:
	class FString                                 URL;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BFL_PiecesOnline_ShowWebURL) == 0x000008, "Wrong alignment on BFL_PiecesOnline_ShowWebURL");
static_assert(sizeof(BFL_PiecesOnline_ShowWebURL) == 0x000010, "Wrong size on BFL_PiecesOnline_ShowWebURL");
static_assert(offsetof(BFL_PiecesOnline_ShowWebURL, URL) == 0x000000, "Member 'BFL_PiecesOnline_ShowWebURL::URL' has a wrong offset!");

// Function PiecesOnline.BFL_PiecesOnline.TakeScreenShot
// 0x0001 (0x0001 - 0x0000)
struct BFL_PiecesOnline_TakeScreenShot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BFL_PiecesOnline_TakeScreenShot) == 0x000001, "Wrong alignment on BFL_PiecesOnline_TakeScreenShot");
static_assert(sizeof(BFL_PiecesOnline_TakeScreenShot) == 0x000001, "Wrong size on BFL_PiecesOnline_TakeScreenShot");
static_assert(offsetof(BFL_PiecesOnline_TakeScreenShot, ReturnValue) == 0x000000, "Member 'BFL_PiecesOnline_TakeScreenShot::ReturnValue' has a wrong offset!");

// Function PiecesOnline.BPAsyncAction_QueryDLCs.AsyncQueryDLCs
// 0x0010 (0x0010 - 0x0000)
struct BPAsyncAction_QueryDLCs_AsyncQueryDLCs final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBPAsyncAction_QueryDLCs*               ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BPAsyncAction_QueryDLCs_AsyncQueryDLCs) == 0x000008, "Wrong alignment on BPAsyncAction_QueryDLCs_AsyncQueryDLCs");
static_assert(sizeof(BPAsyncAction_QueryDLCs_AsyncQueryDLCs) == 0x000010, "Wrong size on BPAsyncAction_QueryDLCs_AsyncQueryDLCs");
static_assert(offsetof(BPAsyncAction_QueryDLCs_AsyncQueryDLCs, WorldContextObject) == 0x000000, "Member 'BPAsyncAction_QueryDLCs_AsyncQueryDLCs::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_QueryDLCs_AsyncQueryDLCs, ReturnValue) == 0x000008, "Member 'BPAsyncAction_QueryDLCs_AsyncQueryDLCs::ReturnValue' has a wrong offset!");

}

