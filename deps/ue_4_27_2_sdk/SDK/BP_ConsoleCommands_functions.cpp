#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ConsoleCommands

#include "Basic.hpp"

#include "BP_ConsoleCommands_classes.hpp"
#include "BP_ConsoleCommands_parameters.hpp"


namespace SDK
{

// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ExecuteUbergraph_BP_ConsoleCommands
// (Final, Exec, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::ExecuteUbergraph_BP_ConsoleCommands(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ExecuteUbergraph_BP_ConsoleCommands");

	Params::BP_ConsoleCommands_C_ExecuteUbergraph_BP_ConsoleCommands Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.DLCFilterBrightnessOverrideNoir
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Float                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::DLCFilterBrightnessOverrideNoir(float Float)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "DLCFilterBrightnessOverrideNoir");

	Params::BP_ConsoleCommands_C_DLCFilterBrightnessOverrideNoir Parms{};

	Parms.Float = Float;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.DLCFilterBrightnessOverride8bit
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Float                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::DLCFilterBrightnessOverride8bit(float Float)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "DLCFilterBrightnessOverride8bit");

	Params::BP_ConsoleCommands_C_DLCFilterBrightnessOverride8bit Parms{};

	Parms.Float = Float;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.DebugAi
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::DebugAi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "DebugAi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.OFPerfTest30
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::OFPerfTest30()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "OFPerfTest30");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.OFPerfTest60
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::OFPerfTest60()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "OFPerfTest60");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.noGrapple
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::NoGrapple()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "noGrapple");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.guide
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Guide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "guide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.SetChapter
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ChapterNumber                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::SetChapter(int32 ChapterNumber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "SetChapter");

	Params::BP_ConsoleCommands_C_SetChapter Parms{};

	Parms.ChapterNumber = ChapterNumber;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.GetHealthFlask
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetHealthFlask()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "GetHealthFlask");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.RestoreCameraFade
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::RestoreCameraFade()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "RestoreCameraFade");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ActivateSteamboatEngine
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::ActivateSteamboatEngine()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ActivateSteamboatEngine");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ActivateDSSTempleEndTrigger
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::ActivateDSSTempleEndTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ActivateDSSTempleEndTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.EnterTalismanMode
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::EnterTalismanMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "EnterTalismanMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.EndGameplaySession
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::EndGameplaySession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "EndGameplaySession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.StartGameplaySession
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::StartGameplaySession()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "StartGameplaySession");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.triggerNearbySpawners
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::TriggerNearbySpawners(int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "triggerNearbySpawners");

	Params::BP_ConsoleCommands_C_TriggerNearbySpawners Parms{};

	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.GetAllItems
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetAllItems()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "GetAllItems");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ForceStartFunnels
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::ForceStartFunnels()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ForceStartFunnels");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.UnlockAlternativeEndings
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::UnlockAlternativeEndings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "UnlockAlternativeEndings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.AggroDebugTick
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::AggroDebugTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "AggroDebugTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.getFlashlight
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetFlashlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "getFlashlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.getAllDesertMirrors
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetAllDesertMirrors()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "getAllDesertMirrors");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.getAllMedallions
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetAllMedallions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "getAllMedallions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.getSkeletonKey
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetSkeletonKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "getSkeletonKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ActivateWeapons
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::ActivateWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ActivateWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.hideCharacterMesh
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::HideCharacterMesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "hideCharacterMesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.debugThreat
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::DebugThreat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "debugThreat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.OpenOtherworlds
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::OpenOtherworlds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "OpenOtherworlds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.getCombatState
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetCombatState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "getCombatState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.getTalisman
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetTalisman()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "getTalisman");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.getAllWeapons
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GetAllWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "getAllWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.debugSpeed
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::DebugSpeed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "debugSpeed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.TeleportTo
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   X                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Y                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Z                                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::TeleportTo(float X, float Y, float Z)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "TeleportTo");

	Params::BP_ConsoleCommands_C_TeleportTo Parms{};

	Parms.X = X;
	Parms.Y = Y;
	Parms.Z = Z;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ToggleImmortalEnemies
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::ToggleImmortalEnemies()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ToggleImmortalEnemies");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.SniperMode
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::SniperMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "SniperMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ToggleCriticalPath
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::ToggleCriticalPath()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ToggleCriticalPath");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.toggleUIVisibility
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::ToggleUIVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "toggleUIVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.kill
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Kill()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "kill");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.debuglightmode
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Weight                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::Debuglightmode(float Weight)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "debuglightmode");

	Params::BP_ConsoleCommands_C_Debuglightmode Parms{};

	Parms.Weight = Weight;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.toggleplayervisibility
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Toggleplayervisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "toggleplayervisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.spiritmode
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Spiritmode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "spiritmode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.reloadall
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Reloadall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "reloadall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.noclip
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Noclip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "noclip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.unlockall
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Unlockall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "unlockall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.switchcharacter
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Switchcharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "switchcharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.spawnitem
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Spawnitem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "spawnitem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.addammo
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Addammo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "addammo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.GodMode
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::GodMode()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "GodMode");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.SolvePuzzle
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::SolvePuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "SolvePuzzle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.killall
// (Exec, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::Killall()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "killall");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.AddItem
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ID                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Amount                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::AddItem(const class FString& ID, int32 Amount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "AddItem");

	Params::BP_ConsoleCommands_C_AddItem Parms{};

	Parms.ID = std::move(ID);
	Parms.Amount = Amount;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.sethealth
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::Sethealth(int32 Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "sethealth");

	Params::BP_ConsoleCommands_C_Sethealth Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.ReceiveBeginPlay
// (Exec, Event, Public, BlueprintEvent)

void UBP_ConsoleCommands_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.OnEnemySpawned_5A85F905414917A11BF572BE58597B30
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOFEnemyCharacter*                SpawnedEnemy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AAIController*                    SpawnedAICOntroller                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AEnemySpawner*                    Spawner                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::OnEnemySpawned_5A85F905414917A11BF572BE58597B30(class AOFEnemyCharacter* SpawnedEnemy, class AAIController* SpawnedAICOntroller, class AEnemySpawner* Spawner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "OnEnemySpawned_5A85F905414917A11BF572BE58597B30");

	Params::BP_ConsoleCommands_C_OnEnemySpawned_5A85F905414917A11BF572BE58597B30 Parms{};

	Parms.SpawnedEnemy = SpawnedEnemy;
	Parms.SpawnedAICOntroller = SpawnedAICOntroller;
	Parms.Spawner = Spawner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.OnLoaded_628467534962765FFFF637B73FB36E18
// (Exec, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::OnLoaded_628467534962765FFFF637B73FB36E18(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "OnLoaded_628467534962765FFFF637B73FB36E18");

	Params::BP_ConsoleCommands_C_OnLoaded_628467534962765FFFF637B73FB36E18 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.SolveClosestPuzzle
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::SolveClosestPuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "SolveClosestPuzzle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.print
// (Exec, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void UBP_ConsoleCommands_C::Print(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "print");

	Params::BP_ConsoleCommands_C_Print Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ConsoleCommands.BP_ConsoleCommands_C.OpenTalismanModeForClosestPuzzle
// (Exec, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UBP_ConsoleCommands_C::OpenTalismanModeForClosestPuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ConsoleCommands_C", "OpenTalismanModeForClosestPuzzle");

	UObject::ProcessEvent(Func, nullptr);
}

}

