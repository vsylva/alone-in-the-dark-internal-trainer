#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Player_AimInput

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Player_AimInput.GA_Player_AimInput_C.ExecuteUbergraph_GA_Player_AimInput
// 0x00D8 (0x00D8 - 0x0000)
struct GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UGameplayAbility* ActivatedAbility)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UGameplayAbility*                       K2Node_CustomEvent_ActivatedAbility;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameplayAbility*                       Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitAbilityCommit*         CallFunc_WaitForAbilityCommit_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x004C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x007C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x009C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputActionAll*        CallFunc_WaitInputActionTriggered_ReturnValue;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA[0x2];                                       // 0x00BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAbilityLevel_ReturnValue_1;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1; // 0x00C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitMaxVelocity*           CallFunc_CreateWaitMaxVelocity_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput) == 0x000008, "Wrong alignment on GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput");
static_assert(sizeof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput) == 0x0000D8, "Wrong size on GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, EntryPoint) == 0x000000, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_GetAbilityLevel_ReturnValue) == 0x000004, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000008, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CustomEvent_ActivatedAbility) == 0x000020, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CustomEvent_ActivatedAbility' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, Temp_object_Variable) == 0x000028, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_WaitForAbilityCommit_ReturnValue) == 0x000030, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_WaitForAbilityCommit_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate_2) == 0x00004C, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate_4) == 0x00006C, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate_5) == 0x00007C, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate_6) == 0x00008C, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_CreateDelegate_OutputDelegate_7) == 0x00009C, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_WaitInputActionTriggered_ReturnValue) == 0x0000B0, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_WaitInputActionTriggered_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_IsValid_ReturnValue_1) == 0x0000B8, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_K2_CommitAbility_ReturnValue) == 0x0000B9, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_GetAbilityLevel_ReturnValue_1) == 0x0000BC, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_GetAbilityLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1) == 0x0000C0, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_CreateWaitMaxVelocity_ReturnValue) == 0x0000C8, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_CreateWaitMaxVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, K2Node_Event_bWasCancelled) == 0x0000D0, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput, CallFunc_IsValid_ReturnValue_2) == 0x0000D1, "Member 'GA_Player_AimInput_C_ExecuteUbergraph_GA_Player_AimInput::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function GA_Player_AimInput.GA_Player_AimInput_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Player_AimInput_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_AimInput_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Player_AimInput_C_K2_OnEndAbility");
static_assert(sizeof(GA_Player_AimInput_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Player_AimInput_C_K2_OnEndAbility");
static_assert(offsetof(GA_Player_AimInput_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Player_AimInput_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Player_AimInput.GA_Player_AimInput_C.OnCommit_9A25BC434671E7B975595481952CA900
// 0x0008 (0x0008 - 0x0000)
struct GA_Player_AimInput_C_OnCommit_9A25BC434671E7B975595481952CA900 final
{
public:
	class UGameplayAbility*                       ActivatedAbility;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_AimInput_C_OnCommit_9A25BC434671E7B975595481952CA900) == 0x000008, "Wrong alignment on GA_Player_AimInput_C_OnCommit_9A25BC434671E7B975595481952CA900");
static_assert(sizeof(GA_Player_AimInput_C_OnCommit_9A25BC434671E7B975595481952CA900) == 0x000008, "Wrong size on GA_Player_AimInput_C_OnCommit_9A25BC434671E7B975595481952CA900");
static_assert(offsetof(GA_Player_AimInput_C_OnCommit_9A25BC434671E7B975595481952CA900, ActivatedAbility) == 0x000000, "Member 'GA_Player_AimInput_C_OnCommit_9A25BC434671E7B975595481952CA900::ActivatedAbility' has a wrong offset!");

// Function GA_Player_AimInput.GA_Player_AimInput_C.K2_CanActivateAbility
// 0x0088 (0x0088 - 0x0000)
struct GA_Player_AimInput_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFactsDB*                               CallFunc_GetGameplaySessionSubsystem_ReturnValue;  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFactTrue_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesFactExist_ReturnValue;                // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_AimInput_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Player_AimInput_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Player_AimInput_C_K2_CanActivateAbility) == 0x000088, "Wrong size on GA_Player_AimInput_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, CallFunc_GetGameplaySessionSubsystem_ReturnValue) == 0x000078, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::CallFunc_GetGameplaySessionSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, CallFunc_IsFactTrue_ReturnValue) == 0x000081, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::CallFunc_IsFactTrue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_K2_CanActivateAbility, CallFunc_DoesFactExist_ReturnValue) == 0x000082, "Member 'GA_Player_AimInput_C_K2_CanActivateAbility::CallFunc_DoesFactExist_ReturnValue' has a wrong offset!");

// Function GA_Player_AimInput.GA_Player_AimInput_C.InCombatSprint
// 0x0028 (0x0028 - 0x0000)
struct GA_Player_AimInput_C_InCombatSprint final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_AimInput_C_InCombatSprint) == 0x000008, "Wrong alignment on GA_Player_AimInput_C_InCombatSprint");
static_assert(sizeof(GA_Player_AimInput_C_InCombatSprint) == 0x000028, "Wrong size on GA_Player_AimInput_C_InCombatSprint");
static_assert(offsetof(GA_Player_AimInput_C_InCombatSprint, ReturnValue) == 0x000000, "Member 'GA_Player_AimInput_C_InCombatSprint::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_InCombatSprint, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Player_AimInput_C_InCombatSprint::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_InCombatSprint, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000010, "Member 'GA_Player_AimInput_C_InCombatSprint::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Player_AimInput_C_InCombatSprint, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000020, "Member 'GA_Player_AimInput_C_InCombatSprint::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

}

