#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AOE_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_AOE_Base.BP_AOE_Base_C.Apply Effect to Hit Results
// 0x0168 (0x0168 - 0x0000)
struct BP_AOE_Base_C_Apply_Effect_to_Hit_Results final
{
public:
	TArray<struct FHitResult>                     Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class AActor*>                         Applied_Actors;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0100(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFEnemyCharacter*                      K2Node_DynamicCast_AsOFEnemy_Character;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_152[0x2];                                      // 0x0152(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0167(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results) == 0x000008, "Wrong alignment on BP_AOE_Base_C_Apply_Effect_to_Hit_Results");
static_assert(sizeof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results) == 0x000168, "Wrong size on BP_AOE_Base_C_Apply_Effect_to_Hit_Results");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, Array) == 0x000000, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::Array' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, Applied_Actors) == 0x000010, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::Applied_Actors' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_bBlockingHit) == 0x0000B0, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000B1, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_Time) == 0x0000B4, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_Distance) == 0x0000B8, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_Location) == 0x0000BC, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_ImpactPoint) == 0x0000C8, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_Normal) == 0x0000D4, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_ImpactNormal) == 0x0000E0, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_PhysMat) == 0x0000F0, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_HitActor) == 0x0000F8, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_HitComponent) == 0x000100, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_HitBoneName) == 0x000108, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_HitItem) == 0x000110, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_ElementIndex) == 0x000114, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_FaceIndex) == 0x000118, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_TraceStart) == 0x00011C, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BreakHitResult_TraceEnd) == 0x000128, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000138, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_Array_Contains_ReturnValue) == 0x000141, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, K2Node_DynamicCast_AsOFEnemy_Character) == 0x000148, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::K2Node_DynamicCast_AsOFEnemy_Character' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_Not_PreBool_ReturnValue) == 0x000151, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, Temp_int_Loop_Counter_Variable) == 0x000154, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_Array_AddUnique_ReturnValue) == 0x000158, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_Less_IntInt_ReturnValue) == 0x00015C, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_Add_IntInt_ReturnValue) == 0x000160, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BooleanAND_ReturnValue) == 0x000164, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BooleanAND_ReturnValue_1) == 0x000165, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BooleanOR_ReturnValue) == 0x000166, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effect_to_Hit_Results, CallFunc_BooleanAND_ReturnValue_2) == 0x000167, "Member 'BP_AOE_Base_C_Apply_Effect_to_Hit_Results::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.Apply Effects
// 0x0230 (0x0230 - 0x0000)
struct BP_AOE_Base_C_Apply_Effects final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 TargetActor;                                       // 0x0088(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitReactionDataObject_C*               CallFunc_MakeHitReactionDataObject_ReturnValue;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       CallFunc_AbilityTargetDataFromHitResult_ReturnValue; // 0x0120(0x0028)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x0158(0x00B0)()
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Select_Default;                             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_2;  // 0x0220(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0228(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AOE_Base_C_Apply_Effects) == 0x000008, "Wrong alignment on BP_AOE_Base_C_Apply_Effects");
static_assert(sizeof(BP_AOE_Base_C_Apply_Effects) == 0x000230, "Wrong size on BP_AOE_Base_C_Apply_Effects");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, HitResult) == 0x000000, "Member 'BP_AOE_Base_C_Apply_Effects::HitResult' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, TargetActor) == 0x000088, "Member 'BP_AOE_Base_C_Apply_Effects::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_bBlockingHit) == 0x000090, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_bInitialOverlap) == 0x000091, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_Time) == 0x000094, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_Distance) == 0x000098, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_Location) == 0x00009C, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A8, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_Normal) == 0x0000B4, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_ImpactNormal) == 0x0000C0, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_PhysMat) == 0x0000D0, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_HitActor) == 0x0000D8, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_HitComponent) == 0x0000E0, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_HitBoneName) == 0x0000E8, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_HitItem) == 0x0000F0, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_ElementIndex) == 0x0000F4, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_FaceIndex) == 0x0000F8, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_TraceStart) == 0x0000FC, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BreakHitResult_TraceEnd) == 0x000108, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_MakeHitReactionDataObject_ReturnValue) == 0x000118, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_MakeHitReactionDataObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_AbilityTargetDataFromHitResult_ReturnValue) == 0x000120, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_AbilityTargetDataFromHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000148, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_IsValid_ReturnValue) == 0x000150, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, K2Node_MakeStruct_GameplayEventData) == 0x000158, "Member 'BP_AOE_Base_C_Apply_Effects::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000208, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, Temp_bool_Variable) == 0x000210, "Member 'BP_AOE_Base_C_Apply_Effects::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_IsValid_ReturnValue_1) == 0x000211, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, K2Node_Select_Default) == 0x000218, "Member 'BP_AOE_Base_C_Apply_Effects::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_GetAbilitySystemComponent_ReturnValue_2) == 0x000220, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_GetAbilitySystemComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_Apply_Effects, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000228, "Member 'BP_AOE_Base_C_Apply_Effects::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.MakeHitReactionDataObject
// 0x0098 (0x0098 - 0x0000)
struct BP_AOE_Base_C_MakeHitReactionDataObject final
{
public:
	struct FHitResult                             Hit_Result;                                        // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UHitReactionDataObject_C*               ReturnValue;                                       // 0x0088(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitReactionDataObject_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AOE_Base_C_MakeHitReactionDataObject) == 0x000008, "Wrong alignment on BP_AOE_Base_C_MakeHitReactionDataObject");
static_assert(sizeof(BP_AOE_Base_C_MakeHitReactionDataObject) == 0x000098, "Wrong size on BP_AOE_Base_C_MakeHitReactionDataObject");
static_assert(offsetof(BP_AOE_Base_C_MakeHitReactionDataObject, Hit_Result) == 0x000000, "Member 'BP_AOE_Base_C_MakeHitReactionDataObject::Hit_Result' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_MakeHitReactionDataObject, ReturnValue) == 0x000088, "Member 'BP_AOE_Base_C_MakeHitReactionDataObject::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_MakeHitReactionDataObject, CallFunc_SpawnObject_ReturnValue) == 0x000090, "Member 'BP_AOE_Base_C_MakeHitReactionDataObject::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.CheckGround
// 0x0128 (0x0128 - 0x0000)
struct BP_AOE_Base_C_CheckGround final
{
public:
	bool                                          Grounded;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Hits;                                              // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	float                                         Temp_float_Variable_5;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_7;                             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x009C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AOE_Base_C_CheckGround) == 0x000008, "Wrong alignment on BP_AOE_Base_C_CheckGround");
static_assert(sizeof(BP_AOE_Base_C_CheckGround) == 0x000128, "Wrong size on BP_AOE_Base_C_CheckGround");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Grounded) == 0x000000, "Member 'BP_AOE_Base_C_CheckGround::Grounded' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Hits) == 0x000004, "Member 'BP_AOE_Base_C_CheckGround::Hits' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable) == 0x000008, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_int_Variable) == 0x00000C, "Member 'BP_AOE_Base_C_CheckGround::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable_1) == 0x000010, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable_2) == 0x000014, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable_3) == 0x000018, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable_4) == 0x00001C, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_object_Variable) == 0x000020, "Member 'BP_AOE_Base_C_CheckGround::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable_5) == 0x000030, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable_6) == 0x000034, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_float_Variable_7) == 0x000038, "Member 'BP_AOE_Base_C_CheckGround::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_int_Variable_1) == 0x00003C, "Member 'BP_AOE_Base_C_CheckGround::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_int_Variable_2) == 0x000040, "Member 'BP_AOE_Base_C_CheckGround::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, Temp_int_Variable_3) == 0x000044, "Member 'BP_AOE_Base_C_CheckGround::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, K2Node_Select_Default) == 0x000048, "Member 'BP_AOE_Base_C_CheckGround::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, K2Node_Select_Default_1) == 0x00004C, "Member 'BP_AOE_Base_C_CheckGround::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_MakeVector_ReturnValue_1) == 0x00005C, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000068, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000070, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue) == 0x000084, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000090, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_LineTraceSingle_OutHit) == 0x00009C, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_CheckGround, CallFunc_LineTraceSingle_ReturnValue) == 0x000124, "Member 'BP_AOE_Base_C_CheckGround::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.CharacterHitVFXCallback
// 0x0008 (0x0008 - 0x0000)
struct BP_AOE_Base_C_CharacterHitVFXCallback final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AOE_Base_C_CharacterHitVFXCallback) == 0x000008, "Wrong alignment on BP_AOE_Base_C_CharacterHitVFXCallback");
static_assert(sizeof(BP_AOE_Base_C_CharacterHitVFXCallback) == 0x000008, "Wrong size on BP_AOE_Base_C_CharacterHitVFXCallback");
static_assert(offsetof(BP_AOE_Base_C_CharacterHitVFXCallback, Target) == 0x000000, "Member 'BP_AOE_Base_C_CharacterHitVFXCallback::Target' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AOE_Base_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AOE_Base_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AOE_Base_C_ReceiveTick");
static_assert(sizeof(BP_AOE_Base_C_ReceiveTick) == 0x000004, "Wrong size on BP_AOE_Base_C_ReceiveTick");
static_assert(offsetof(BP_AOE_Base_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AOE_Base_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.OnPauseChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_AOE_Base_C_OnPauseChanged final
{
public:
	bool                                          bPaused;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AOE_Base_C_OnPauseChanged) == 0x000001, "Wrong alignment on BP_AOE_Base_C_OnPauseChanged");
static_assert(sizeof(BP_AOE_Base_C_OnPauseChanged) == 0x000001, "Wrong size on BP_AOE_Base_C_OnPauseChanged");
static_assert(offsetof(BP_AOE_Base_C_OnPauseChanged, bPaused) == 0x000000, "Member 'BP_AOE_Base_C_OnPauseChanged::bPaused' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.ExecuteUbergraph_BP_AOE_Base
// 0x0190 (0x0190 - 0x0000)
struct BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_CheckGround_grounded;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPaused;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x00D4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue;        // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMultiForObjects_OutHits;       // 0x0178(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMultiForObjects_ReturnValue;   // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base) == 0x000008, "Wrong alignment on BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base");
static_assert(sizeof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base) == 0x000190, "Wrong size on BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, EntryPoint) == 0x000000, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000004, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x00001C, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000030, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000038, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, Temp_object_Variable) == 0x000040, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_CheckGround_grounded) == 0x000050, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_CheckGround_grounded' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, K2Node_CustomEvent_Target) == 0x000058, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000060, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000070, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, K2Node_Event_DeltaSeconds) == 0x000078, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00007C, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_FindLookAtRotation_ReturnValue) == 0x000088, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000094, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, K2Node_Event_bPaused) == 0x0000A0, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::K2Node_Event_bPaused' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_BreakVector_X) == 0x0000A4, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_BreakVector_Z) == 0x0000AC, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B0, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000B4, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, K2Node_MakeArray_Array) == 0x0000B8, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_MakeVector_ReturnValue) == 0x0000C8, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x0000D4, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_GetScaledSphereRadius_ReturnValue) == 0x00015C, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_GetScaledSphereRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000160, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_Add_VectorVector_ReturnValue) == 0x00016C, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_SphereTraceMultiForObjects_OutHits) == 0x000178, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_SphereTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base, CallFunc_SphereTraceMultiForObjects_ReturnValue) == 0x000188, "Member 'BP_AOE_Base_C_ExecuteUbergraph_BP_AOE_Base::CallFunc_SphereTraceMultiForObjects_ReturnValue' has a wrong offset!");

// Function BP_AOE_Base.BP_AOE_Base_C.GetRunningTimers
// 0x0020 (0x0020 - 0x0000)
struct BP_AOE_Base_C_GetRunningTimers final
{
public:
	TArray<struct FTimerHandle>                   OutTimers;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FTimerHandle>                   K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_AOE_Base_C_GetRunningTimers) == 0x000008, "Wrong alignment on BP_AOE_Base_C_GetRunningTimers");
static_assert(sizeof(BP_AOE_Base_C_GetRunningTimers) == 0x000020, "Wrong size on BP_AOE_Base_C_GetRunningTimers");
static_assert(offsetof(BP_AOE_Base_C_GetRunningTimers, OutTimers) == 0x000000, "Member 'BP_AOE_Base_C_GetRunningTimers::OutTimers' has a wrong offset!");
static_assert(offsetof(BP_AOE_Base_C_GetRunningTimers, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_AOE_Base_C_GetRunningTimers::K2Node_MakeArray_Array' has a wrong offset!");

}

