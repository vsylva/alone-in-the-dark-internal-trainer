#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ConstructionSystemRuntime

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum ConstructionSystemRuntime.EConstructionSystemToolType
// NumValues: 0x0003
enum class EConstructionSystemToolType : uint8
{
	BuildTool                                = 0,
	RemoveTool                               = 1,
	EConstructionSystemToolType_MAX          = 2,
};

// Enum ConstructionSystemRuntime.EConstructionSystemCursorVisiblity
// NumValues: 0x0004
enum class EConstructionSystemCursorVisiblity : uint8
{
	Visible                                  = 0,
	VisibleInvalid                           = 1,
	Hidden                                   = 2,
	EConstructionSystemCursorVisiblity_MAX   = 3,
};

// Enum ConstructionSystemRuntime.EPrefabricatorConstructionSnapType
// NumValues: 0x0004
enum class EPrefabricatorConstructionSnapType : uint8
{
	Floor                                    = 0,
	Wall                                     = 1,
	Object                                   = 2,
	EPrefabricatorConstructionSnapType_MAX   = 3,
};

// ScriptStruct ConstructionSystemRuntime.ConstructionSystemSavePlayerInfo
// 0x0050 (0x0050 - 0x0000)
struct FConstructionSystemSavePlayerInfo final
{
public:
	bool                                          bRestorePlayerInfo;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FRotator                               ControlRotation;                                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FConstructionSystemSavePlayerInfo) == 0x000010, "Wrong alignment on FConstructionSystemSavePlayerInfo");
static_assert(sizeof(FConstructionSystemSavePlayerInfo) == 0x000050, "Wrong size on FConstructionSystemSavePlayerInfo");
static_assert(offsetof(FConstructionSystemSavePlayerInfo, bRestorePlayerInfo) == 0x000000, "Member 'FConstructionSystemSavePlayerInfo::bRestorePlayerInfo' has a wrong offset!");
static_assert(offsetof(FConstructionSystemSavePlayerInfo, Transform) == 0x000010, "Member 'FConstructionSystemSavePlayerInfo::Transform' has a wrong offset!");
static_assert(offsetof(FConstructionSystemSavePlayerInfo, ControlRotation) == 0x000040, "Member 'FConstructionSystemSavePlayerInfo::ControlRotation' has a wrong offset!");

// ScriptStruct ConstructionSystemRuntime.ConstructionSystemSaveConstructedItem
// 0x0040 (0x0040 - 0x0000)
struct FConstructionSystemSaveConstructedItem final
{
public:
	class UPrefabricatorAssetInterface*           PrefabAsset;                                       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Seed;                                              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0010(0x0030)(IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FConstructionSystemSaveConstructedItem) == 0x000010, "Wrong alignment on FConstructionSystemSaveConstructedItem");
static_assert(sizeof(FConstructionSystemSaveConstructedItem) == 0x000040, "Wrong size on FConstructionSystemSaveConstructedItem");
static_assert(offsetof(FConstructionSystemSaveConstructedItem, PrefabAsset) == 0x000000, "Member 'FConstructionSystemSaveConstructedItem::PrefabAsset' has a wrong offset!");
static_assert(offsetof(FConstructionSystemSaveConstructedItem, Seed) == 0x000008, "Member 'FConstructionSystemSaveConstructedItem::Seed' has a wrong offset!");
static_assert(offsetof(FConstructionSystemSaveConstructedItem, Transform) == 0x000010, "Member 'FConstructionSystemSaveConstructedItem::Transform' has a wrong offset!");

// ScriptStruct ConstructionSystemRuntime.PCSnapConstraintWall
// 0x0004 (0x0004 - 0x0000)
struct FPCSnapConstraintWall final
{
public:
	bool                                          AttachTop;                                         // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachBottom;                                      // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachLeft;                                        // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachRight;                                       // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPCSnapConstraintWall) == 0x000001, "Wrong alignment on FPCSnapConstraintWall");
static_assert(sizeof(FPCSnapConstraintWall) == 0x000004, "Wrong size on FPCSnapConstraintWall");
static_assert(offsetof(FPCSnapConstraintWall, AttachTop) == 0x000000, "Member 'FPCSnapConstraintWall::AttachTop' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintWall, AttachBottom) == 0x000001, "Member 'FPCSnapConstraintWall::AttachBottom' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintWall, AttachLeft) == 0x000002, "Member 'FPCSnapConstraintWall::AttachLeft' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintWall, AttachRight) == 0x000003, "Member 'FPCSnapConstraintWall::AttachRight' has a wrong offset!");

// ScriptStruct ConstructionSystemRuntime.PCSnapConstraintFloor
// 0x0006 (0x0006 - 0x0000)
struct FPCSnapConstraintFloor final
{
public:
	bool                                          AttachX;                                           // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachXNegative;                                   // 0x0001(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachY;                                           // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachYNegative;                                   // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachZ;                                           // 0x0004(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          AttachZNegative;                                   // 0x0005(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPCSnapConstraintFloor) == 0x000001, "Wrong alignment on FPCSnapConstraintFloor");
static_assert(sizeof(FPCSnapConstraintFloor) == 0x000006, "Wrong size on FPCSnapConstraintFloor");
static_assert(offsetof(FPCSnapConstraintFloor, AttachX) == 0x000000, "Member 'FPCSnapConstraintFloor::AttachX' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintFloor, AttachXNegative) == 0x000001, "Member 'FPCSnapConstraintFloor::AttachXNegative' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintFloor, AttachY) == 0x000002, "Member 'FPCSnapConstraintFloor::AttachY' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintFloor, AttachYNegative) == 0x000003, "Member 'FPCSnapConstraintFloor::AttachYNegative' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintFloor, AttachZ) == 0x000004, "Member 'FPCSnapConstraintFloor::AttachZ' has a wrong offset!");
static_assert(offsetof(FPCSnapConstraintFloor, AttachZNegative) == 0x000005, "Member 'FPCSnapConstraintFloor::AttachZNegative' has a wrong offset!");

// ScriptStruct ConstructionSystemRuntime.ConstructionSystemUIPrefabEntry
// 0x0040 (0x0040 - 0x0000)
struct FConstructionSystemUIPrefabEntry final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class FText                                   Tooltip;                                           // 0x0018(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon;                                              // 0x0030(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrefabricatorAssetInterface*           Prefab;                                            // 0x0038(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FConstructionSystemUIPrefabEntry) == 0x000008, "Wrong alignment on FConstructionSystemUIPrefabEntry");
static_assert(sizeof(FConstructionSystemUIPrefabEntry) == 0x000040, "Wrong size on FConstructionSystemUIPrefabEntry");
static_assert(offsetof(FConstructionSystemUIPrefabEntry, DisplayName) == 0x000000, "Member 'FConstructionSystemUIPrefabEntry::DisplayName' has a wrong offset!");
static_assert(offsetof(FConstructionSystemUIPrefabEntry, Tooltip) == 0x000018, "Member 'FConstructionSystemUIPrefabEntry::Tooltip' has a wrong offset!");
static_assert(offsetof(FConstructionSystemUIPrefabEntry, Icon) == 0x000030, "Member 'FConstructionSystemUIPrefabEntry::Icon' has a wrong offset!");
static_assert(offsetof(FConstructionSystemUIPrefabEntry, Prefab) == 0x000038, "Member 'FConstructionSystemUIPrefabEntry::Prefab' has a wrong offset!");

// ScriptStruct ConstructionSystemRuntime.ConstructionSystemUICategory
// 0x0030 (0x0030 - 0x0000)
struct FConstructionSystemUICategory final
{
public:
	class FText                                   DisplayName;                                       // 0x0000(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)
	class UTexture2D*                             Icon;                                              // 0x0018(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FConstructionSystemUIPrefabEntry> PrefabEntries;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FConstructionSystemUICategory) == 0x000008, "Wrong alignment on FConstructionSystemUICategory");
static_assert(sizeof(FConstructionSystemUICategory) == 0x000030, "Wrong size on FConstructionSystemUICategory");
static_assert(offsetof(FConstructionSystemUICategory, DisplayName) == 0x000000, "Member 'FConstructionSystemUICategory::DisplayName' has a wrong offset!");
static_assert(offsetof(FConstructionSystemUICategory, Icon) == 0x000018, "Member 'FConstructionSystemUICategory::Icon' has a wrong offset!");
static_assert(offsetof(FConstructionSystemUICategory, PrefabEntries) == 0x000020, "Member 'FConstructionSystemUICategory::PrefabEntries' has a wrong offset!");

}

