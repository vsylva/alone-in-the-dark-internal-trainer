#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_SwitchWeapon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PiecesGameplayAbilities_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_SwitchWeapon.GA_SwitchWeapon_C
// 0x0010 (0x03C8 - 0x03B8)
class UGA_SwitchWeapon_C : public UPiecesGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UItemData_Equippable*                   ItemToEquip;                                       // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_SwitchWeapon(int32 EntryPoint);
	void Switch_Weapon();
	void K2_ActivateAbility();
	void OnLoaded_DAB2E90049FB39CC7522A5985912BBC2(class UObject* Loaded);
	void OnCompleted_1A4A0204483BC5EF496556BB1FD01214();
	void OnBlendOut_1A4A0204483BC5EF496556BB1FD01214();
	void OnInterrupted_1A4A0204483BC5EF496556BB1FD01214();
	void OnCancelled_1A4A0204483BC5EF496556BB1FD01214();
	void GetUnholsterMontageForWeapon(class AOFWeaponActor* WeaponActor, class UAnimMontage** Montage);
	void Unholster();

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_SwitchWeapon_C">();
	}
	static class UGA_SwitchWeapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_SwitchWeapon_C>();
	}
};
static_assert(alignof(UGA_SwitchWeapon_C) == 0x000008, "Wrong alignment on UGA_SwitchWeapon_C");
static_assert(sizeof(UGA_SwitchWeapon_C) == 0x0003C8, "Wrong size on UGA_SwitchWeapon_C");
static_assert(offsetof(UGA_SwitchWeapon_C, UberGraphFrame) == 0x0003B8, "Member 'UGA_SwitchWeapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_SwitchWeapon_C, ItemToEquip) == 0x0003C0, "Member 'UGA_SwitchWeapon_C::ItemToEquip' has a wrong offset!");

}

