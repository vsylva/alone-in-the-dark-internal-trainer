#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesPhysics

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function PiecesPhysics.BPAsyncAction_LineTraceByChannel.LineTraceByChannelAsync
// 0x0068 (0x0068 - 0x0000)
struct BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Start;                                             // 0x0008(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                End;                                               // 0x0014(0x000C)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bTraceComplex;                                     // 0x0021(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActorsToIgnore;                                    // 0x0028(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          bIgnoreSelf;                                       // 0x0038(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EDrawDebugTrace                               DrawDebugType;                                     // 0x0039(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           TraceColor;                                        // 0x003C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                           TraceHitColor;                                     // 0x004C(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         DrawTime;                                          // 0x005C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBPAsyncAction_LineTraceByChannel*      ReturnValue;                                       // 0x0060(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync) == 0x000008, "Wrong alignment on BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync");
static_assert(sizeof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync) == 0x000068, "Wrong size on BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, WorldContextObject) == 0x000000, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::WorldContextObject' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, Start) == 0x000008, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::Start' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, End) == 0x000014, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::End' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, TraceChannel) == 0x000020, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::TraceChannel' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, bTraceComplex) == 0x000021, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::bTraceComplex' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, ActorsToIgnore) == 0x000028, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::ActorsToIgnore' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, bIgnoreSelf) == 0x000038, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::bIgnoreSelf' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, DrawDebugType) == 0x000039, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::DrawDebugType' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, TraceColor) == 0x00003C, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::TraceColor' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, TraceHitColor) == 0x00004C, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::TraceHitColor' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, DrawTime) == 0x00005C, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::DrawTime' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync, ReturnValue) == 0x000060, "Member 'BPAsyncAction_LineTraceByChannel_LineTraceByChannelAsync::ReturnValue' has a wrong offset!");

// DelegateFunction PiecesPhysics.BPAsyncAction_LineTraceByChannel.OnLineTraceByChannelFinished__DelegateSignature
// 0x008C (0x008C - 0x0000)
struct BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature final
{
public:
	bool                                          bAnyHit;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             HitResult;                                         // 0x0004(0x0088)(Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature) == 0x000004, "Wrong alignment on BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature");
static_assert(sizeof(BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature) == 0x00008C, "Wrong size on BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature, bAnyHit) == 0x000000, "Member 'BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature::bAnyHit' has a wrong offset!");
static_assert(offsetof(BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature, HitResult) == 0x000004, "Member 'BPAsyncAction_LineTraceByChannel_OnLineTraceByChannelFinished__DelegateSignature::HitResult' has a wrong offset!");

}

