#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OpportunityPickup

#include "Basic.hpp"

#include "BP_OpportunityPickup_classes.hpp"
#include "BP_OpportunityPickup_parameters.hpp"


namespace SDK
{

// Function BP_OpportunityPickup.BP_OpportunityPickup_C.StartInteract__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::StartInteract__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "StartInteract__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.OnPickup__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::OnPickup__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "OnPickup__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.OnThrow__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::OnThrow__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "OnThrow__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.ExecuteUbergraph_BP_OpportunityPickup
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::ExecuteUbergraph_BP_OpportunityPickup(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "ExecuteUbergraph_BP_OpportunityPickup");

	Params::BP_OpportunityPickup_C_ExecuteUbergraph_BP_OpportunityPickup Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.LoadImpactVFX
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::LoadImpactVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "LoadImpactVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.HandleHit
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData_0                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_OpportunityPickup_C::HandleHit(const struct FGameplayAbilityTargetDataHandle& TargetData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "HandleHit");

	Params::BP_OpportunityPickup_C_HandleHit Parms{};

	Parms.TargetData_0 = std::move(TargetData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.WeaponHit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_OpportunityPickup_C::WeaponHit(class AActor* Weapon, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "WeaponHit");

	Params::BP_OpportunityPickup_C_WeaponHit Parms{};

	Parms.Weapon = Weapon;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_OpportunityPickup_C_BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_OpportunityPickup_C::BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_OpportunityPickup_C_BndEvt__BP_OpportunityPickup_TutorialDetectionSphere_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "ReceiveTick");

	Params::BP_OpportunityPickup_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Start Ability
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Start_Ability()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Start Ability");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Init Input
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Init_Input()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Init Input");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Release
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Release");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.BndEvt__BP_OpportunityPickup_InteractionFlow_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class ACharacter*                       InteractionCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::BndEvt__BP_OpportunityPickup_InteractionFlow_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "BndEvt__BP_OpportunityPickup_InteractionFlow_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature");

	Params::BP_OpportunityPickup_C_BndEvt__BP_OpportunityPickup_InteractionFlow_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature Parms{};

	Parms.InteractionCharacter = InteractionCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.CancelOpportunity
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::CancelOpportunity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "CancelOpportunity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Throwing Arc Movement
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Throwing_Arc_Movement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Throwing Arc Movement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.BndEvt__StaticMesh_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_OpportunityPickup_C::BndEvt__StaticMesh_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "BndEvt__StaticMesh_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature");

	Params::BP_OpportunityPickup_C_BndEvt__StaticMesh_K2Node_ComponentBoundEvent_5_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Pickup
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Pickup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Pickup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.MainStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameMainState                          OldGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGameMainState                          NewGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::MainStateChanged(EGameMainState OldGameState, EGameMainState NewGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "MainStateChanged");

	Params::BP_OpportunityPickup_C_MainStateChanged Parms{};

	Parms.OldGameState = OldGameState;
	Parms.NewGameState = NewGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Throw to Release
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Throw_to_Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Throw to Release");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.CombatEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewIsInCombat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OpportunityPickup_C::CombatEvent(bool bNewIsInCombat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "CombatEvent");

	Params::BP_OpportunityPickup_C_CombatEvent Parms{};

	Parms.bNewIsInCombat = bNewIsInCombat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.HitEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::HitEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "HitEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_OpportunityPickup_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.LoadCompleteDelegate_9A660EEF4DC1DFA72EF12393254AA6C3
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   LoadedAssets                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_OpportunityPickup_C::LoadCompleteDelegate_9A660EEF4DC1DFA72EF12393254AA6C3(const TArray<class UClass*>& LoadedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "LoadCompleteDelegate_9A660EEF4DC1DFA72EF12393254AA6C3");

	Params::BP_OpportunityPickup_C_LoadCompleteDelegate_9A660EEF4DC1DFA72EF12393254AA6C3 Parms{};

	Parms.LoadedAssets = std::move(LoadedAssets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.LoadCompleteDelegate_348D3AD14BC6420630A05295BD450BCA
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  LoadedAssets                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_OpportunityPickup_C::LoadCompleteDelegate_348D3AD14BC6420630A05295BD450BCA(const TArray<class UObject*>& LoadedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "LoadCompleteDelegate_348D3AD14BC6420630A05295BD450BCA");

	Params::BP_OpportunityPickup_C_LoadCompleteDelegate_348D3AD14BC6420630A05295BD450BCA Parms{};

	Parms.LoadedAssets = std::move(LoadedAssets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.LoadCompleteDelegate_87B61A9D4A4C843D0D3252863EDA7C1C
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   LoadedAssets                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_OpportunityPickup_C::LoadCompleteDelegate_87B61A9D4A4C843D0D3252863EDA7C1C(const TArray<class UClass*>& LoadedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "LoadCompleteDelegate_87B61A9D4A4C843D0D3252863EDA7C1C");

	Params::BP_OpportunityPickup_C_LoadCompleteDelegate_87B61A9D4A4C843D0D3252863EDA7C1C Parms{};

	Parms.LoadedAssets = std::move(LoadedAssets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.InpActEvt_IA_Opportunity_Target_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::InpActEvt_IA_Opportunity_Target_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "InpActEvt_IA_Opportunity_Target_K2Node_EnhancedInputActionEvent_0");

	Params::BP_OpportunityPickup_C_InpActEvt_IA_Opportunity_Target_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.InpActEvt_IA_Opportunity_Quick_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::InpActEvt_IA_Opportunity_Quick_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "InpActEvt_IA_Opportunity_Quick_K2Node_EnhancedInputActionEvent_1");

	Params::BP_OpportunityPickup_C_InpActEvt_IA_Opportunity_Quick_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.OnCompleted_C5C0CC524C4A3999EAF7DEA6EA4C359F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::OnCompleted_C5C0CC524C4A3999EAF7DEA6EA4C359F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "OnCompleted_C5C0CC524C4A3999EAF7DEA6EA4C359F");

	Params::BP_OpportunityPickup_C_OnCompleted_C5C0CC524C4A3999EAF7DEA6EA4C359F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.OnBlendOut_C5C0CC524C4A3999EAF7DEA6EA4C359F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::OnBlendOut_C5C0CC524C4A3999EAF7DEA6EA4C359F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "OnBlendOut_C5C0CC524C4A3999EAF7DEA6EA4C359F");

	Params::BP_OpportunityPickup_C_OnBlendOut_C5C0CC524C4A3999EAF7DEA6EA4C359F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.OnInterrupted_C5C0CC524C4A3999EAF7DEA6EA4C359F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::OnInterrupted_C5C0CC524C4A3999EAF7DEA6EA4C359F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "OnInterrupted_C5C0CC524C4A3999EAF7DEA6EA4C359F");

	Params::BP_OpportunityPickup_C_OnInterrupted_C5C0CC524C4A3999EAF7DEA6EA4C359F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.OnNotifyBegin_C5C0CC524C4A3999EAF7DEA6EA4C359F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::OnNotifyBegin_C5C0CC524C4A3999EAF7DEA6EA4C359F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "OnNotifyBegin_C5C0CC524C4A3999EAF7DEA6EA4C359F");

	Params::BP_OpportunityPickup_C_OnNotifyBegin_C5C0CC524C4A3999EAF7DEA6EA4C359F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.OnNotifyEnd_C5C0CC524C4A3999EAF7DEA6EA4C359F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::OnNotifyEnd_C5C0CC524C4A3999EAF7DEA6EA4C359F(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "OnNotifyEnd_C5C0CC524C4A3999EAF7DEA6EA4C359F");

	Params::BP_OpportunityPickup_C_OnNotifyEnd_C5C0CC524C4A3999EAF7DEA6EA4C359F Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.PlayImpactVFX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::PlayImpactVFX(const struct FVector& Location, const struct FVector& Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "PlayImpactVFX");

	Params::BP_OpportunityPickup_C_PlayImpactVFX Parms{};

	Parms.Location = std::move(Location);
	Parms.Normal = std::move(Normal);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.TempGetHitNormal
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Normal                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::TempGetHitNormal(class AActor* Target, struct FVector* Normal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "TempGetHitNormal");

	Params::BP_OpportunityPickup_C_TempGetHitNormal Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (Normal != nullptr)
		*Normal = std::move(Parms.Normal);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.SpawnPuddle
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IgniteOnSpawn                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class ABP_Alcohol_Puddle_C*             PuddleRef                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::SpawnPuddle(bool IgniteOnSpawn, const struct FHitResult& NewParam, class ABP_Alcohol_Puddle_C** PuddleRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "SpawnPuddle");

	Params::BP_OpportunityPickup_C_SpawnPuddle Parms{};

	Parms.IgniteOnSpawn = IgniteOnSpawn;
	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);

	if (PuddleRef != nullptr)
		*PuddleRef = Parms.PuddleRef;
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.IsVisibilityAllowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_OpportunityPickup_C::IsVisibilityAllowed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "IsVisibilityAllowed");

	Params::BP_OpportunityPickup_C_IsVisibilityAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.GetTargetLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          TargetLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::GetTargetLocation(struct FVector* TargetLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "GetTargetLocation");

	Params::BP_OpportunityPickup_C_GetTargetLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TargetLocation != nullptr)
		*TargetLocation = std::move(Parms.TargetLocation);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.LineTraceToGround
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       OutHit                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// struct FVector                          GroundLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::LineTraceToGround(struct FHitResult* OutHit, struct FVector* GroundLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "LineTraceToGround");

	Params::BP_OpportunityPickup_C_LineTraceToGround Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutHit != nullptr)
		*OutHit = std::move(Parms.OutHit);

	if (GroundLocation != nullptr)
		*GroundLocation = std::move(Parms.GroundLocation);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Get Default Projectile Arc
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Launch_Speed_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Spread                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bCameraBasedArc                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          Velocity                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::Get_Default_Projectile_Arc(float Launch_Speed_0, float Spread, bool bCameraBasedArc, struct FVector* Velocity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Get Default Projectile Arc");

	Params::BP_OpportunityPickup_C_Get_Default_Projectile_Arc Parms{};

	Parms.Launch_Speed_0 = Launch_Speed_0;
	Parms.Spread = Spread;
	Parms.bCameraBasedArc = bCameraBasedArc;

	UObject::ProcessEvent(Func, &Parms);

	if (Velocity != nullptr)
		*Velocity = std::move(Parms.Velocity);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.GetInteractingPlayerController
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class APlayerController*                AsPlayer_Controller                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::GetInteractingPlayerController(class APlayerController** AsPlayer_Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "GetInteractingPlayerController");

	Params::BP_OpportunityPickup_C_GetInteractingPlayerController Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AsPlayer_Controller != nullptr)
		*AsPlayer_Controller = Parms.AsPlayer_Controller;
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Update Mesh
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Update_Mesh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Update Mesh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.InitializeOpportunityGraphics
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::InitializeOpportunityGraphics()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "InitializeOpportunityGraphics");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.CheckIfIngitionIsForced
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    AlwaysIgnite                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OpportunityPickup_C::CheckIfIngitionIsForced(bool* AlwaysIgnite)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "CheckIfIngitionIsForced");

	Params::BP_OpportunityPickup_C_CheckIfIngitionIsForced Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AlwaysIgnite != nullptr)
		*AlwaysIgnite = Parms.AlwaysIgnite;
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Randomize Appearance
// (Private, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Randomize_Appearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Randomize Appearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.GetAdditionalRequiredAssets
// (Event, Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<TSoftObjectPtr<class UObject>>   AdditionalAssets                                       (Parm, OutParm, UObjectWrapper)
// TArray<TSoftClassPtr<class UClass>>     AdditionalClasses                                      (Parm, OutParm, UObjectWrapper)

void ABP_OpportunityPickup_C::GetAdditionalRequiredAssets(TArray<TSoftObjectPtr<class UObject>>* AdditionalAssets, TArray<TSoftClassPtr<class UClass>>* AdditionalClasses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "GetAdditionalRequiredAssets");

	Params::BP_OpportunityPickup_C_GetAdditionalRequiredAssets Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AdditionalAssets != nullptr)
		*AdditionalAssets = std::move(Parms.AdditionalAssets);

	if (AdditionalClasses != nullptr)
		*AdditionalClasses = std::move(Parms.AdditionalClasses);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Check Target Data for Hit Pawn
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayAbilityTargetDataHandle TargetData_0                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_OpportunityPickup_C::Check_Target_Data_for_Hit_Pawn(const struct FGameplayAbilityTargetDataHandle& TargetData_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Check Target Data for Hit Pawn");

	Params::BP_OpportunityPickup_C_Check_Target_Data_for_Hit_Pawn Parms{};

	Parms.TargetData_0 = std::move(TargetData_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.FourPointLineTrace
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TArray<class AActor*>                   ActorsToIgnore                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// float                                   OffsetFromCenterAmount                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FHitResult>               HitData                                                (Parm, OutParm, ContainsInstancedReference)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_OpportunityPickup_C::FourPointLineTrace(const struct FVector& Location, const struct FRotator& Rotation, TArray<class AActor*>& ActorsToIgnore, float OffsetFromCenterAmount, TArray<struct FHitResult>* HitData, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "FourPointLineTrace");

	Params::BP_OpportunityPickup_C_FourPointLineTrace Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);
	Parms.OffsetFromCenterAmount = OffsetFromCenterAmount;

	UObject::ProcessEvent(Func, &Parms);

	ActorsToIgnore = std::move(Parms.ActorsToIgnore);

	if (HitData != nullptr)
		*HitData = std::move(Parms.HitData);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.GetNormalAndLocationAverage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          BaseDirection                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FHitResult>               HitData                                                (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
// struct FVector                          AverageLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          AverageNormal                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::GetNormalAndLocationAverage(const struct FVector& BaseDirection, TArray<struct FHitResult>& HitData, struct FVector* AverageLocation, struct FVector* AverageNormal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "GetNormalAndLocationAverage");

	Params::BP_OpportunityPickup_C_GetNormalAndLocationAverage Parms{};

	Parms.BaseDirection = std::move(BaseDirection);
	Parms.HitData = std::move(HitData);

	UObject::ProcessEvent(Func, &Parms);

	HitData = std::move(Parms.HitData);

	if (AverageLocation != nullptr)
		*AverageLocation = std::move(Parms.AverageLocation);

	if (AverageNormal != nullptr)
		*AverageNormal = std::move(Parms.AverageNormal);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Set Opportunity Type Icon
// (Protected, BlueprintCallable, BlueprintEvent)

void ABP_OpportunityPickup_C::Set_Opportunity_Type_Icon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Set Opportunity Type Icon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OpportunityPickup.BP_OpportunityPickup_C.Get Random Opportunity Mesh
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// EThrowableOpportunityType               Opportunity_Type                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UStaticMesh*                      Mesh                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OpportunityPickup_C::Get_Random_Opportunity_Mesh(EThrowableOpportunityType Opportunity_Type, class UStaticMesh** Mesh) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OpportunityPickup_C", "Get Random Opportunity Mesh");

	Params::BP_OpportunityPickup_C_Get_Random_Opportunity_Mesh Parms{};

	Parms.Opportunity_Type = Opportunity_Type;

	UObject::ProcessEvent(Func, &Parms);

	if (Mesh != nullptr)
		*Mesh = Parms.Mesh;
}

}

