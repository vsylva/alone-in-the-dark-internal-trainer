#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyCommon

#include "Basic.hpp"

#include "BP_EnemyCommon_classes.hpp"
#include "BP_EnemyCommon_parameters.hpp"


namespace SDK
{

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetHasBeenBurned
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasBeenBurned_0                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::GetHasBeenBurned(bool* HasBeenBurned_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetHasBeenBurned");

	Params::BP_EnemyCommon_C_GetHasBeenBurned Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasBeenBurned_0 != nullptr)
		*HasBeenBurned_0 = Parms.HasBeenBurned_0;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetAimAssistSocketComponent
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class USceneComponent*            ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

const class USceneComponent* ABP_EnemyCommon_C::GetAimAssistSocketComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetAimAssistSocketComponent");

	Params::BP_EnemyCommon_C_GetAimAssistSocketComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetAimAssistMainSocket
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// const class FName                       ReturnValue                                            (ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

const class FName ABP_EnemyCommon_C::GetAimAssistMainSocket()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetAimAssistMainSocket");

	Params::BP_EnemyCommon_C_GetAimAssistMainSocket Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetAimAssistSockets
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIncludeMainAimSocket                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// const TArray<class FName>               ReturnValue                                            (ConstParm, Parm, OutParm, ReturnParm)

const TArray<class FName> ABP_EnemyCommon_C::GetAimAssistSockets(const bool bIncludeMainAimSocket)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetAimAssistSockets");

	Params::BP_EnemyCommon_C_GetAimAssistSockets Parms{};

	Parms.bIncludeMainAimSocket = bIncludeMainAimSocket;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetHasDeathReactionHappened
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasDied                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::GetHasDeathReactionHappened(bool* HasDied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetHasDeathReactionHappened");

	Params::BP_EnemyCommon_C_GetHasDeathReactionHappened Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasDied != nullptr)
		*HasDied = Parms.HasDied;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetMobPlayerCollision
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCapsuleComponent*                MobPlayerCollission                                    (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::GetMobPlayerCollision(class UCapsuleComponent** MobPlayerCollission)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetMobPlayerCollision");

	Params::BP_EnemyCommon_C_GetMobPlayerCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MobPlayerCollission != nullptr)
		*MobPlayerCollission = Parms.MobPlayerCollission;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setStartBurrowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    beginBurrowed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetStartBurrowed(bool beginBurrowed, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setStartBurrowed");

	Params::BP_EnemyCommon_C_SetStartBurrowed Parms{};

	Parms.beginBurrowed = beginBurrowed;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setOrderTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetOrderTarget(const struct FVector& Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setOrderTarget");

	Params::BP_EnemyCommon_C_SetOrderTarget Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.hitscanWeaponFired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::HitscanWeaponFired(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "hitscanWeaponFired");

	Params::BP_EnemyCommon_C_HitscanWeaponFired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetMostSuitableMeleeSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAnimationMontageIdentifier             Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::GetMostSuitableMeleeSection(EAnimationMontageIdentifier* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetMostSuitableMeleeSection");

	Params::BP_EnemyCommon_C_GetMostSuitableMeleeSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.getAggroState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aggro                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::GetAggroState(bool* Aggro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "getAggroState");

	Params::BP_EnemyCommon_C_GetAggroState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Aggro != nullptr)
		*Aggro = Parms.Aggro;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setNewAggro
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewAggro                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetNewAggro(bool NewAggro, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setNewAggro");

	Params::BP_EnemyCommon_C_SetNewAggro Parms{};

	Parms.NewAggro = NewAggro;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.IncrementJac3ProneCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ProneCounter                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::IncrementJac3ProneCounter(int32* ProneCounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "IncrementJac3ProneCounter");

	Params::BP_EnemyCommon_C_IncrementJac3ProneCounter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProneCounter != nullptr)
		*ProneCounter = Parms.ProneCounter;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetCharacterSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterSize                          Size_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::GetCharacterSize(ECharacterSize* Size_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetCharacterSize");

	Params::BP_EnemyCommon_C_GetCharacterSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Size_0 != nullptr)
		*Size_0 = Parms.Size_0;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.getCemeteryCreatureType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECemeteryCreatureType                   CemeteryCreatureType                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::GetCemeteryCreatureType(ECemeteryCreatureType* CemeteryCreatureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "getCemeteryCreatureType");

	Params::BP_EnemyCommon_C_GetCemeteryCreatureType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CemeteryCreatureType != nullptr)
		*CemeteryCreatureType = Parms.CemeteryCreatureType;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setCanCirculate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanCirculate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetCanCirculate(bool CanCirculate, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setCanCirculate");

	Params::BP_EnemyCommon_C_SetCanCirculate Parms{};

	Parms.CanCirculate = CanCirculate;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setStartOnWall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StartOnWall                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetStartOnWall(bool StartOnWall, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setStartOnWall");

	Params::BP_EnemyCommon_C_SetStartOnWall Parms{};

	Parms.StartOnWall = StartOnWall;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.AimedAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::AimedAt(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "AimedAt");

	Params::BP_EnemyCommon_C_AimedAt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.GetUpgradeComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWeaponUpgradeComponent_C*        UpgradeComponent                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::GetUpgradeComponent(class UWeaponUpgradeComponent_C** UpgradeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "GetUpgradeComponent");

	Params::BP_EnemyCommon_C_GetUpgradeComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UpgradeComponent != nullptr)
		*UpgradeComponent = Parms.UpgradeComponent;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.FlashlightHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::FlashlightHit(float Distance, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "FlashlightHit");

	Params::BP_EnemyCommon_C_FlashlightHit Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.removeComponentByTag
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Tag                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::RemoveComponentByTag(class FName Tag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "removeComponentByTag");

	Params::BP_EnemyCommon_C_RemoveComponentByTag Parms{};

	Parms.Tag = Tag;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.OnDeathVisibilityBasedAnimTickOptionReset
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::OnDeathVisibilityBasedAnimTickOptionReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "OnDeathVisibilityBasedAnimTickOptionReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.On Difficulty Changed
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDifficulty                             NewDifficulty                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::On_Difficulty_Changed(EDifficulty NewDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "On Difficulty Changed");

	Params::BP_EnemyCommon_C_On_Difficulty_Changed Parms{};

	Parms.NewDifficulty = NewDifficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.RandomizeColorTints
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::RandomizeColorTints()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "RandomizeColorTints");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.blackboardSetup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::blackboardSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "blackboardSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setDefendLocation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          DefendLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::SetDefendLocation(const struct FVector& DefendLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setDefendLocation");

	Params::BP_EnemyCommon_C_SetDefendLocation Parms{};

	Parms.DefendLocation = std::move(DefendLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.removeFromGroupCombat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::RemoveFromGroupCombat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "removeFromGroupCombat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.wakeUpFromSleep
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::WakeUpFromSleep()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "wakeUpFromSleep");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setPatrolPathRef
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class ABP_PatrolPath_C>  Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_EnemyCommon_C::SetPatrolPathRef(TSoftObjectPtr<class ABP_PatrolPath_C> Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setPatrolPathRef");

	Params::BP_EnemyCommon_C_SetPatrolPathRef Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.playAggroSounds
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::PlayAggroSounds()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "playAggroSounds");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.spawnGroupCombatActor
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_Group_Combat_Master_C*        GroupCombatMasterActor                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::SpawnGroupCombatActor(class ABP_Group_Combat_Master_C** GroupCombatMasterActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "spawnGroupCombatActor");

	Params::BP_EnemyCommon_C_SpawnGroupCombatActor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GroupCombatMasterActor != nullptr)
		*GroupCombatMasterActor = Parms.GroupCombatMasterActor;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setOrder
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          VectorValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::SetOrder(const struct FVector& VectorValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setOrder");

	Params::BP_EnemyCommon_C_SetOrder Parms{};

	Parms.VectorValue = std::move(VectorValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.Toggle Sight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnable                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::Toggle_Sight(const bool bEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "Toggle Sight");

	Params::BP_EnemyCommon_C_Toggle_Sight Parms{};

	Parms.bEnable = bEnable;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.setPatrol
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShouldPatrol_0                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetPatrol(bool ShouldPatrol_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "setPatrol");

	Params::BP_EnemyCommon_C_SetPatrol Parms{};

	Parms.ShouldPatrol_0 = ShouldPatrol_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.Apply Sleep if Applicable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::Apply_Sleep_if_Applicable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "Apply Sleep if Applicable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.SpawnWallHitVFX
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       Hit                                                    (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_EnemyCommon_C::SpawnWallHitVFX(const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "SpawnWallHitVFX");

	Params::BP_EnemyCommon_C_SpawnWallHitVFX Parms{};

	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.DestoryDamagePointComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::DestoryDamagePointComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "DestoryDamagePointComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.OnHealthChangedEvent
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SignificantDamage                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::OnHealthChangedEvent(float DeltaValue, bool* SignificantDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "OnHealthChangedEvent");

	Params::BP_EnemyCommon_C_OnHealthChangedEvent Parms{};

	Parms.DeltaValue = DeltaValue;

	UObject::ProcessEvent(Func, &Parms);

	if (SignificantDamage != nullptr)
		*SignificantDamage = Parms.SignificantDamage;
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.OnDeathEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            Tags_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_EnemyCommon_C::OnDeathEvent(const struct FGameplayTagContainer& Tags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "OnDeathEvent");

	Params::BP_EnemyCommon_C_OnDeathEvent Parms{};

	Parms.Tags_0 = std::move(Tags_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_EnemyCommon_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_EnemyCommon_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.OnLoaded_47F0ADFB4297F805BA211391D20F7C8F
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::OnLoaded_47F0ADFB4297F805BA211391D20F7C8F(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "OnLoaded_47F0ADFB4297F805BA211391D20F7C8F");

	Params::BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.MeleeAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::MeleeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "MeleeAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.SetCemeteryCreatureType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECemeteryCreatureType                   CreatureType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::SetCemeteryCreatureType(ECemeteryCreatureType CreatureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "SetCemeteryCreatureType");

	Params::BP_EnemyCommon_C_SetCemeteryCreatureType Parms{};

	Parms.CreatureType = CreatureType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.QuicktimeSuccess
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::QuicktimeSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "QuicktimeSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.QuicktimeInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxProgress                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::QuicktimeInput(float CurrentProgress, float MaxProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "QuicktimeInput");

	Params::BP_EnemyCommon_C_QuicktimeInput Parms{};

	Parms.CurrentProgress = CurrentProgress;
	Parms.MaxProgress = MaxProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.MeleeAttackTranslate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndVector                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::MeleeAttackTranslate(const struct FVector& StartVector, const struct FVector& EndVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "MeleeAttackTranslate");

	Params::BP_EnemyCommon_C_MeleeAttackTranslate Parms{};

	Parms.StartVector = std::move(StartVector);
	Parms.EndVector = std::move(EndVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.ControlRotationFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FocusTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::ControlRotationFocus(class AActor* FocusTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "ControlRotationFocus");

	Params::BP_EnemyCommon_C_ControlRotationFocus Parms{};

	Parms.FocusTarget = FocusTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.SetMostSuitableMeleeSection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAnimationMontageIdentifier             Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::SetMostSuitableMeleeSection(EAnimationMontageIdentifier Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "SetMostSuitableMeleeSection");

	Params::BP_EnemyCommon_C_SetMostSuitableMeleeSection Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.updateBossHealthData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentHealthPercentage                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::UpdateBossHealthData(float CurrentHealthPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "updateBossHealthData");

	Params::BP_EnemyCommon_C_UpdateBossHealthData Parms{};

	Parms.CurrentHealthPercentage = CurrentHealthPercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_EnemyCommon_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.Receive Death Event
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            EventTags                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_EnemyCommon_C::Receive_Death_Event(const struct FGameplayTagContainer& EventTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "Receive Death Event");

	Params::BP_EnemyCommon_C_Receive_Death_Event Parms{};

	Parms.EventTags = std::move(EventTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.ReceiveHealthChangedEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewCurrentHealth                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            EventTags                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_EnemyCommon_C::ReceiveHealthChangedEvent(float NewCurrentHealth, float DeltaValue, const struct FGameplayTagContainer& EventTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "ReceiveHealthChangedEvent");

	Params::BP_EnemyCommon_C_ReceiveHealthChangedEvent Parms{};

	Parms.NewCurrentHealth = NewCurrentHealth;
	Parms.DeltaValue = DeltaValue;
	Parms.EventTags = std::move(EventTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.onSleepChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsSleeping                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::OnSleepChanged(bool IsSleeping)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "onSleepChanged");

	Params::BP_EnemyCommon_C_OnSleepChanged Parms{};

	Parms.IsSleeping = IsSleeping;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.aggroEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bEnabled                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::AggroEvent(bool bEnabled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "aggroEvent");

	Params::BP_EnemyCommon_C_AggroEvent Parms{};

	Parms.bEnabled = bEnabled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.WeaponHit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Weapon                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_EnemyCommon_C::WeaponHit(class AActor* Weapon, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "WeaponHit");

	Params::BP_EnemyCommon_C_WeaponHit Parms{};

	Parms.Weapon = Weapon;
	Parms.EventTag = std::move(EventTag);
	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.LaserHit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::LaserHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "LaserHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.MoveToGrappleLocatio
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Grapple_Location                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::MoveToGrappleLocatio(const struct FVector& Grapple_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "MoveToGrappleLocatio");

	Params::BP_EnemyCommon_C_MoveToGrappleLocatio Parms{};

	Parms.Grapple_Location = std::move(Grapple_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.SpawnCharacterDecal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_EnemyCommon_C::SpawnCharacterDecal(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "SpawnCharacterDecal");

	Params::BP_EnemyCommon_C_SpawnCharacterDecal Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.EVENT_OnPoolBeginPlay
// (Event, Public, BlueprintEvent)

void ABP_EnemyCommon_C::EVENT_OnPoolBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "EVENT_OnPoolBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.BeginPlaySpawn
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::BeginPlaySpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "BeginPlaySpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.BeginPlayOnce
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::BeginPlayOnce()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "BeginPlayOnce");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.Adjust Auto Aim Sphere
// (BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::Adjust_Auto_Aim_Sphere()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "Adjust Auto Aim Sphere");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.SetHasBeenBurned
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasBeenBurned_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetHasBeenBurned(bool HasBeenBurned_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "SetHasBeenBurned");

	Params::BP_EnemyCommon_C_SetHasBeenBurned Parms{};

	Parms.HasBeenBurned_0 = HasBeenBurned_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.SetHasDeathReactionHappened
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    HasDied                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_EnemyCommon_C::SetHasDeathReactionHappened(bool HasDied)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "SetHasDeathReactionHappened");

	Params::BP_EnemyCommon_C_SetHasDeathReactionHappened Parms{};

	Parms.HasDied = HasDied;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.ExecuteUbergraph_BP_EnemyCommon
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_EnemyCommon_C::ExecuteUbergraph_BP_EnemyCommon(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "ExecuteUbergraph_BP_EnemyCommon");

	Params::BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_EnemyCommon.BP_EnemyCommon_C.On Enemy Hit__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_EnemyCommon_C::On_Enemy_Hit__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_EnemyCommon_C", "On Enemy Hit__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

