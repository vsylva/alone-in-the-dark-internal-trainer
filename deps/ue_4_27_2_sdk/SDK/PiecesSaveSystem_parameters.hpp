#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesSaveSystem

#include "Basic.hpp"

#include "GunfireSaveSystem_structs.hpp"


namespace SDK::Params
{

// Function PiecesSaveSystem.PiecesSaveSubsystem.DelayedAutoSave
// 0x0010 (0x0010 - 0x0000)
struct PiecesSaveSubsystem_DelayedAutoSave final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Delay;                                             // 0x0008(0x0004)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesSaveSubsystem_DelayedAutoSave) == 0x000008, "Wrong alignment on PiecesSaveSubsystem_DelayedAutoSave");
static_assert(sizeof(PiecesSaveSubsystem_DelayedAutoSave) == 0x000010, "Wrong size on PiecesSaveSubsystem_DelayedAutoSave");
static_assert(offsetof(PiecesSaveSubsystem_DelayedAutoSave, WorldContextObject) == 0x000000, "Member 'PiecesSaveSubsystem_DelayedAutoSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PiecesSaveSubsystem_DelayedAutoSave, Delay) == 0x000008, "Member 'PiecesSaveSubsystem_DelayedAutoSave::Delay' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.DoAutoSave
// 0x0018 (0x0018 - 0x0000)
struct PiecesSaveSubsystem_DoAutoSave final
{
public:
	const class UObject*                          WorldContextObject;                                // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TDelegate<void(bool Success)>                 Callback;                                          // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_DoAutoSave) == 0x000008, "Wrong alignment on PiecesSaveSubsystem_DoAutoSave");
static_assert(sizeof(PiecesSaveSubsystem_DoAutoSave) == 0x000018, "Wrong size on PiecesSaveSubsystem_DoAutoSave");
static_assert(offsetof(PiecesSaveSubsystem_DoAutoSave, WorldContextObject) == 0x000000, "Member 'PiecesSaveSubsystem_DoAutoSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PiecesSaveSubsystem_DoAutoSave, Callback) == 0x000008, "Member 'PiecesSaveSubsystem_DoAutoSave::Callback' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.BPDoAutoSave
// 0x0010 (0x0010 - 0x0000)
struct PiecesSaveSubsystem_BPDoAutoSave final
{
public:
	TDelegate<void(bool Success)>                 CompletedCallback;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_BPDoAutoSave) == 0x000004, "Wrong alignment on PiecesSaveSubsystem_BPDoAutoSave");
static_assert(sizeof(PiecesSaveSubsystem_BPDoAutoSave) == 0x000010, "Wrong size on PiecesSaveSubsystem_BPDoAutoSave");
static_assert(offsetof(PiecesSaveSubsystem_BPDoAutoSave, CompletedCallback) == 0x000000, "Member 'PiecesSaveSubsystem_BPDoAutoSave::CompletedCallback' has a wrong offset!");

// DelegateFunction PiecesSaveSystem.PiecesSaveSubsystem.SaveDoneDelegate__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PiecesSaveSubsystem_SaveDoneDelegate__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_SaveDoneDelegate__DelegateSignature) == 0x000001, "Wrong alignment on PiecesSaveSubsystem_SaveDoneDelegate__DelegateSignature");
static_assert(sizeof(PiecesSaveSubsystem_SaveDoneDelegate__DelegateSignature) == 0x000001, "Wrong size on PiecesSaveSubsystem_SaveDoneDelegate__DelegateSignature");
static_assert(offsetof(PiecesSaveSubsystem_SaveDoneDelegate__DelegateSignature, Success) == 0x000000, "Member 'PiecesSaveSubsystem_SaveDoneDelegate__DelegateSignature::Success' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.DoesAutoSaveExist
// 0x0001 (0x0001 - 0x0000)
struct PiecesSaveSubsystem_DoesAutoSaveExist final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_DoesAutoSaveExist) == 0x000001, "Wrong alignment on PiecesSaveSubsystem_DoesAutoSaveExist");
static_assert(sizeof(PiecesSaveSubsystem_DoesAutoSaveExist) == 0x000001, "Wrong size on PiecesSaveSubsystem_DoesAutoSaveExist");
static_assert(offsetof(PiecesSaveSubsystem_DoesAutoSaveExist, ReturnValue) == 0x000000, "Member 'PiecesSaveSubsystem_DoesAutoSaveExist::ReturnValue' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.GetSaveGameBySlot
// 0x0010 (0x0010 - 0x0000)
struct PiecesSaveSubsystem_GetSaveGameBySlot final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPiecesSaveGameWorld*             ReturnValue;                                       // 0x0008(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_GetSaveGameBySlot) == 0x000008, "Wrong alignment on PiecesSaveSubsystem_GetSaveGameBySlot");
static_assert(sizeof(PiecesSaveSubsystem_GetSaveGameBySlot) == 0x000010, "Wrong size on PiecesSaveSubsystem_GetSaveGameBySlot");
static_assert(offsetof(PiecesSaveSubsystem_GetSaveGameBySlot, SlotIndex) == 0x000000, "Member 'PiecesSaveSubsystem_GetSaveGameBySlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(PiecesSaveSubsystem_GetSaveGameBySlot, ReturnValue) == 0x000008, "Member 'PiecesSaveSubsystem_GetSaveGameBySlot::ReturnValue' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.HasSaveInAnySlot
// 0x0001 (0x0001 - 0x0000)
struct PiecesSaveSubsystem_HasSaveInAnySlot final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_HasSaveInAnySlot) == 0x000001, "Wrong alignment on PiecesSaveSubsystem_HasSaveInAnySlot");
static_assert(sizeof(PiecesSaveSubsystem_HasSaveInAnySlot) == 0x000001, "Wrong size on PiecesSaveSubsystem_HasSaveInAnySlot");
static_assert(offsetof(PiecesSaveSubsystem_HasSaveInAnySlot, ReturnValue) == 0x000000, "Member 'PiecesSaveSubsystem_HasSaveInAnySlot::ReturnValue' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.HasSaveInSlot
// 0x0008 (0x0008 - 0x0000)
struct PiecesSaveSubsystem_HasSaveInSlot final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesSaveSubsystem_HasSaveInSlot) == 0x000004, "Wrong alignment on PiecesSaveSubsystem_HasSaveInSlot");
static_assert(sizeof(PiecesSaveSubsystem_HasSaveInSlot) == 0x000008, "Wrong size on PiecesSaveSubsystem_HasSaveInSlot");
static_assert(offsetof(PiecesSaveSubsystem_HasSaveInSlot, SlotIndex) == 0x000000, "Member 'PiecesSaveSubsystem_HasSaveInSlot::SlotIndex' has a wrong offset!");
static_assert(offsetof(PiecesSaveSubsystem_HasSaveInSlot, ReturnValue) == 0x000004, "Member 'PiecesSaveSubsystem_HasSaveInSlot::ReturnValue' has a wrong offset!");

// DelegateFunction PiecesSaveSystem.PiecesSaveSubsystem.LoadDoneDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPiecesSaveGameWorld*             SaveGame;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature) == 0x000008, "Wrong alignment on PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature");
static_assert(sizeof(PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature) == 0x000010, "Wrong size on PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature");
static_assert(offsetof(PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature, Success) == 0x000000, "Member 'PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature::Success' has a wrong offset!");
static_assert(offsetof(PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature, SaveGame) == 0x000008, "Member 'PiecesSaveSubsystem_LoadDoneDelegate__DelegateSignature::SaveGame' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.LoadLatestSave
// 0x0010 (0x0010 - 0x0000)
struct PiecesSaveSubsystem_LoadLatestSave final
{
public:
	TDelegate<void(bool Success, class UPiecesSaveGameWorld* SaveGame)> CompletedCallback;                                 // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_LoadLatestSave) == 0x000004, "Wrong alignment on PiecesSaveSubsystem_LoadLatestSave");
static_assert(sizeof(PiecesSaveSubsystem_LoadLatestSave) == 0x000010, "Wrong size on PiecesSaveSubsystem_LoadLatestSave");
static_assert(offsetof(PiecesSaveSubsystem_LoadLatestSave, CompletedCallback) == 0x000000, "Member 'PiecesSaveSubsystem_LoadLatestSave::CompletedCallback' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.OnGameSessionEnded
// 0x0008 (0x0008 - 0x0000)
struct PiecesSaveSubsystem_OnGameSessionEnded final
{
public:
	class UGameplaySession*                       GameplaySession;                                   // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_OnGameSessionEnded) == 0x000008, "Wrong alignment on PiecesSaveSubsystem_OnGameSessionEnded");
static_assert(sizeof(PiecesSaveSubsystem_OnGameSessionEnded) == 0x000008, "Wrong size on PiecesSaveSubsystem_OnGameSessionEnded");
static_assert(offsetof(PiecesSaveSubsystem_OnGameSessionEnded, GameplaySession) == 0x000000, "Member 'PiecesSaveSubsystem_OnGameSessionEnded::GameplaySession' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.OnPersistenceDeleteSaveDone
// 0x0001 (0x0001 - 0x0000)
struct PiecesSaveSubsystem_OnPersistenceDeleteSaveDone final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_OnPersistenceDeleteSaveDone) == 0x000001, "Wrong alignment on PiecesSaveSubsystem_OnPersistenceDeleteSaveDone");
static_assert(sizeof(PiecesSaveSubsystem_OnPersistenceDeleteSaveDone) == 0x000001, "Wrong size on PiecesSaveSubsystem_OnPersistenceDeleteSaveDone");
static_assert(offsetof(PiecesSaveSubsystem_OnPersistenceDeleteSaveDone, bResult) == 0x000000, "Member 'PiecesSaveSubsystem_OnPersistenceDeleteSaveDone::bResult' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.OnSaveGameWorldLoadDone
// 0x0010 (0x0010 - 0x0000)
struct PiecesSaveSubsystem_OnSaveGameWorldLoadDone final
{
public:
	EPersistenceLoadResult                        Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              Save;                                              // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_OnSaveGameWorldLoadDone) == 0x000008, "Wrong alignment on PiecesSaveSubsystem_OnSaveGameWorldLoadDone");
static_assert(sizeof(PiecesSaveSubsystem_OnSaveGameWorldLoadDone) == 0x000010, "Wrong size on PiecesSaveSubsystem_OnSaveGameWorldLoadDone");
static_assert(offsetof(PiecesSaveSubsystem_OnSaveGameWorldLoadDone, Result) == 0x000000, "Member 'PiecesSaveSubsystem_OnSaveGameWorldLoadDone::Result' has a wrong offset!");
static_assert(offsetof(PiecesSaveSubsystem_OnSaveGameWorldLoadDone, Save) == 0x000008, "Member 'PiecesSaveSubsystem_OnSaveGameWorldLoadDone::Save' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.OnSaveGameWorldSaved
// 0x0001 (0x0001 - 0x0000)
struct PiecesSaveSubsystem_OnSaveGameWorldSaved final
{
public:
	EPersistenceSaveResult                        Result;                                            // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_OnSaveGameWorldSaved) == 0x000001, "Wrong alignment on PiecesSaveSubsystem_OnSaveGameWorldSaved");
static_assert(sizeof(PiecesSaveSubsystem_OnSaveGameWorldSaved) == 0x000001, "Wrong size on PiecesSaveSubsystem_OnSaveGameWorldSaved");
static_assert(offsetof(PiecesSaveSubsystem_OnSaveGameWorldSaved, Result) == 0x000000, "Member 'PiecesSaveSubsystem_OnSaveGameWorldSaved::Result' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSaveSubsystem.GetLatestSave
// 0x0008 (0x0008 - 0x0000)
struct PiecesSaveSubsystem_GetLatestSave final
{
public:
	class UPiecesSaveGameWorld*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSaveSubsystem_GetLatestSave) == 0x000008, "Wrong alignment on PiecesSaveSubsystem_GetLatestSave");
static_assert(sizeof(PiecesSaveSubsystem_GetLatestSave) == 0x000008, "Wrong size on PiecesSaveSubsystem_GetLatestSave");
static_assert(offsetof(PiecesSaveSubsystem_GetLatestSave, ReturnValue) == 0x000000, "Member 'PiecesSaveSubsystem_GetLatestSave::ReturnValue' has a wrong offset!");

// DelegateFunction PiecesSaveSystem.PiecesSavingEnabledSubsystem.SavingEnabledChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct PiecesSavingEnabledSubsystem_SavingEnabledChanged__DelegateSignature final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSavingEnabledSubsystem_SavingEnabledChanged__DelegateSignature) == 0x000001, "Wrong alignment on PiecesSavingEnabledSubsystem_SavingEnabledChanged__DelegateSignature");
static_assert(sizeof(PiecesSavingEnabledSubsystem_SavingEnabledChanged__DelegateSignature) == 0x000001, "Wrong size on PiecesSavingEnabledSubsystem_SavingEnabledChanged__DelegateSignature");
static_assert(offsetof(PiecesSavingEnabledSubsystem_SavingEnabledChanged__DelegateSignature, bEnabled) == 0x000000, "Member 'PiecesSavingEnabledSubsystem_SavingEnabledChanged__DelegateSignature::bEnabled' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSavingEnabledSubsystem.SetLoadingEnabled
// 0x0001 (0x0001 - 0x0000)
struct PiecesSavingEnabledSubsystem_SetLoadingEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSavingEnabledSubsystem_SetLoadingEnabled) == 0x000001, "Wrong alignment on PiecesSavingEnabledSubsystem_SetLoadingEnabled");
static_assert(sizeof(PiecesSavingEnabledSubsystem_SetLoadingEnabled) == 0x000001, "Wrong size on PiecesSavingEnabledSubsystem_SetLoadingEnabled");
static_assert(offsetof(PiecesSavingEnabledSubsystem_SetLoadingEnabled, bEnabled) == 0x000000, "Member 'PiecesSavingEnabledSubsystem_SetLoadingEnabled::bEnabled' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSavingEnabledSubsystem.SetSavingEnabled
// 0x0001 (0x0001 - 0x0000)
struct PiecesSavingEnabledSubsystem_SetSavingEnabled final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSavingEnabledSubsystem_SetSavingEnabled) == 0x000001, "Wrong alignment on PiecesSavingEnabledSubsystem_SetSavingEnabled");
static_assert(sizeof(PiecesSavingEnabledSubsystem_SetSavingEnabled) == 0x000001, "Wrong size on PiecesSavingEnabledSubsystem_SetSavingEnabled");
static_assert(offsetof(PiecesSavingEnabledSubsystem_SetSavingEnabled, bEnabled) == 0x000000, "Member 'PiecesSavingEnabledSubsystem_SetSavingEnabled::bEnabled' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSavingEnabledSubsystem.IsLoadingEnabled
// 0x0001 (0x0001 - 0x0000)
struct PiecesSavingEnabledSubsystem_IsLoadingEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSavingEnabledSubsystem_IsLoadingEnabled) == 0x000001, "Wrong alignment on PiecesSavingEnabledSubsystem_IsLoadingEnabled");
static_assert(sizeof(PiecesSavingEnabledSubsystem_IsLoadingEnabled) == 0x000001, "Wrong size on PiecesSavingEnabledSubsystem_IsLoadingEnabled");
static_assert(offsetof(PiecesSavingEnabledSubsystem_IsLoadingEnabled, ReturnValue) == 0x000000, "Member 'PiecesSavingEnabledSubsystem_IsLoadingEnabled::ReturnValue' has a wrong offset!");

// Function PiecesSaveSystem.PiecesSavingEnabledSubsystem.IsSavingEnabled
// 0x0001 (0x0001 - 0x0000)
struct PiecesSavingEnabledSubsystem_IsSavingEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesSavingEnabledSubsystem_IsSavingEnabled) == 0x000001, "Wrong alignment on PiecesSavingEnabledSubsystem_IsSavingEnabled");
static_assert(sizeof(PiecesSavingEnabledSubsystem_IsSavingEnabled) == 0x000001, "Wrong size on PiecesSavingEnabledSubsystem_IsSavingEnabled");
static_assert(offsetof(PiecesSavingEnabledSubsystem_IsSavingEnabled, ReturnValue) == 0x000000, "Member 'PiecesSavingEnabledSubsystem_IsSavingEnabled::ReturnValue' has a wrong offset!");

}

