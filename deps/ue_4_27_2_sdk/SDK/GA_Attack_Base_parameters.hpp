#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Attack_Base

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CharacterSize_structs.hpp"


namespace SDK::Params
{

// Function GA_Attack_Base.GA_Attack_Base_C.MakeEffectSpecFromTargetData
// 0x0118 (0x0118 - 0x0000)
struct GA_Attack_Base_C_MakeEffectSpecFromTargetData final
{
public:
	TSubclassOf<class UGameplayEffect>            GameplayEffectClass;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0008(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Level;                                             // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              Effect_Spec_Handle;                                // 0x0038(0x0010)(Parm, OutParm)
	struct FGameplayEffectContextHandle           Effect_Context_Handle;                             // 0x0048(0x0018)(Parm, OutParm)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x00F0(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x0100(0x0018)()
};
static_assert(alignof(GA_Attack_Base_C_MakeEffectSpecFromTargetData) == 0x000008, "Wrong alignment on GA_Attack_Base_C_MakeEffectSpecFromTargetData");
static_assert(sizeof(GA_Attack_Base_C_MakeEffectSpecFromTargetData) == 0x000118, "Wrong size on GA_Attack_Base_C_MakeEffectSpecFromTargetData");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, GameplayEffectClass) == 0x000000, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, TargetData) == 0x000008, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, Level) == 0x000030, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::Level' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, Effect_Spec_Handle) == 0x000038, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::Effect_Spec_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, Effect_Context_Handle) == 0x000048, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::Effect_Context_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x000060, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, CallFunc_Conv_IntToFloat_ReturnValue) == 0x0000E8, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x0000F0, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeEffectSpecFromTargetData, CallFunc_GetEffectContext_ReturnValue) == 0x000100, "Member 'GA_Attack_Base_C_MakeEffectSpecFromTargetData::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.TryStopAnimationTimers
// 0x0018 (0x0018 - 0x0000)
struct GA_Attack_Base_C_TryStopAnimationTimers final
{
public:
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWeaponAnimationComponent*              CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Attack_Base_C_TryStopAnimationTimers) == 0x000008, "Wrong alignment on GA_Attack_Base_C_TryStopAnimationTimers");
static_assert(sizeof(GA_Attack_Base_C_TryStopAnimationTimers) == 0x000018, "Wrong size on GA_Attack_Base_C_TryStopAnimationTimers");
static_assert(offsetof(GA_Attack_Base_C_TryStopAnimationTimers, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000000, "Member 'GA_Attack_Base_C_TryStopAnimationTimers::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TryStopAnimationTimers, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'GA_Attack_Base_C_TryStopAnimationTimers::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TryStopAnimationTimers, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'GA_Attack_Base_C_TryStopAnimationTimers::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.addSpecHitReaction
// 0x0002 (0x0002 - 0x0000)
struct GA_Attack_Base_C_AddSpecHitReaction final
{
public:
	ECharacterSize                                A;                                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Attack_Base_C_AddSpecHitReaction) == 0x000001, "Wrong alignment on GA_Attack_Base_C_AddSpecHitReaction");
static_assert(sizeof(GA_Attack_Base_C_AddSpecHitReaction) == 0x000002, "Wrong size on GA_Attack_Base_C_AddSpecHitReaction");
static_assert(offsetof(GA_Attack_Base_C_AddSpecHitReaction, A) == 0x000000, "Member 'GA_Attack_Base_C_AddSpecHitReaction::A' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_AddSpecHitReaction, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'GA_Attack_Base_C_AddSpecHitReaction::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.HeightModifiedAttack
// 0x0080 (0x0080 - 0x0000)
struct GA_Attack_Base_C_HeightModifiedAttack final
{
public:
	class FName                                   Input;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterSize                                Size_0;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ReturnSection;                                     // 0x000C(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECharacterSize                                Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Attack_Base_C_HeightModifiedAttack) == 0x000008, "Wrong alignment on GA_Attack_Base_C_HeightModifiedAttack");
static_assert(sizeof(GA_Attack_Base_C_HeightModifiedAttack) == 0x000080, "Wrong size on GA_Attack_Base_C_HeightModifiedAttack");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, Input) == 0x000000, "Member 'GA_Attack_Base_C_HeightModifiedAttack::Input' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, Size_0) == 0x000008, "Member 'GA_Attack_Base_C_HeightModifiedAttack::Size_0' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, ReturnSection) == 0x00000C, "Member 'GA_Attack_Base_C_HeightModifiedAttack::ReturnSection' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, Temp_byte_Variable) == 0x000014, "Member 'GA_Attack_Base_C_HeightModifiedAttack::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'GA_Attack_Base_C_HeightModifiedAttack::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, Temp_string_Variable) == 0x000028, "Member 'GA_Attack_Base_C_HeightModifiedAttack::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, Temp_string_Variable_1) == 0x000038, "Member 'GA_Attack_Base_C_HeightModifiedAttack::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, Temp_string_Variable_2) == 0x000048, "Member 'GA_Attack_Base_C_HeightModifiedAttack::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, K2Node_Select_Default) == 0x000058, "Member 'GA_Attack_Base_C_HeightModifiedAttack::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'GA_Attack_Base_C_HeightModifiedAttack::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HeightModifiedAttack, CallFunc_Conv_StringToName_ReturnValue) == 0x000078, "Member 'GA_Attack_Base_C_HeightModifiedAttack::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.TriggerHitReactionAbilityOnHitActors
// 0x01C0 (0x01C0 - 0x0000)
struct GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors final
{
public:
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FGameplayEffectContextHandle           Gameplay_Effect_Context_Handle;                    // 0x00B0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitReactionDataObject_C*               CallFunc_MakeHitReactionDataObject_ReturnValue;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_SetFieldsInStruct_StructOut;                // 0x00E8(0x00B0)()
	TArray<class AActor*>                         CallFunc_GetAllActorsFromTargetData_ReturnValue;   // 0x0198(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors) == 0x000008, "Wrong alignment on GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors");
static_assert(sizeof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors) == 0x0001C0, "Wrong size on GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, GameplayEventData) == 0x000000, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, Gameplay_Effect_Context_Handle) == 0x0000B0, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::Gameplay_Effect_Context_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, CallFunc_MakeHitReactionDataObject_ReturnValue) == 0x0000D8, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::CallFunc_MakeHitReactionDataObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, K2Node_SetFieldsInStruct_StructOut) == 0x0000E8, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, CallFunc_GetAllActorsFromTargetData_ReturnValue) == 0x000198, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::CallFunc_GetAllActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, CallFunc_Array_Get_Item) == 0x0001B0, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors, CallFunc_Less_IntInt_ReturnValue) == 0x0001B8, "Member 'GA_Attack_Base_C_TriggerHitReactionAbilityOnHitActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.HandleEventData
// 0x0118 (0x0118 - 0x0000)
struct GA_Attack_Base_C_HandleEventData final
{
public:
	struct FGameplayTag                           Event_Tag;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0008(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 GameplayEffect;                                    // 0x00B8(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GameplayEffectLevel;                               // 0x00C0(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectContextHandle           Gameplay_Effect_Context_Handle;                    // 0x00C8(0x0018)(Parm, OutParm)
	struct FGameplayEffectSpecHandle              CallFunc_MakeEffectSpecFromTargetData_Effect_Spec_Handle; // 0x00E0(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_MakeEffectSpecFromTargetData_Effect_Context_Handle; // 0x00F0(0x0018)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x0108(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_Attack_Base_C_HandleEventData) == 0x000008, "Wrong alignment on GA_Attack_Base_C_HandleEventData");
static_assert(sizeof(GA_Attack_Base_C_HandleEventData) == 0x000118, "Wrong size on GA_Attack_Base_C_HandleEventData");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, Event_Tag) == 0x000000, "Member 'GA_Attack_Base_C_HandleEventData::Event_Tag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, GameplayEventData) == 0x000008, "Member 'GA_Attack_Base_C_HandleEventData::GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, GameplayEffect) == 0x0000B8, "Member 'GA_Attack_Base_C_HandleEventData::GameplayEffect' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, GameplayEffectLevel) == 0x0000C0, "Member 'GA_Attack_Base_C_HandleEventData::GameplayEffectLevel' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, Gameplay_Effect_Context_Handle) == 0x0000C8, "Member 'GA_Attack_Base_C_HandleEventData::Gameplay_Effect_Context_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, CallFunc_MakeEffectSpecFromTargetData_Effect_Spec_Handle) == 0x0000E0, "Member 'GA_Attack_Base_C_HandleEventData::CallFunc_MakeEffectSpecFromTargetData_Effect_Spec_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, CallFunc_MakeEffectSpecFromTargetData_Effect_Context_Handle) == 0x0000F0, "Member 'GA_Attack_Base_C_HandleEventData::CallFunc_MakeEffectSpecFromTargetData_Effect_Context_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_HandleEventData, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x000108, "Member 'GA_Attack_Base_C_HandleEventData::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x000008, "Wrong alignment on GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(sizeof(GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x0000B8, "Wrong size on GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(offsetof(GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF, EventTag) == 0x000000, "Member 'GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF, EventData) == 0x000008, "Member 'GA_Attack_Base_C_EventReceived_36EEB0394AE6BB9D8B15A2B392FEACBF::EventData' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x000008, "Wrong alignment on GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(sizeof(GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x0000B8, "Wrong size on GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(offsetof(GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF, EventTag) == 0x000000, "Member 'GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF, EventData) == 0x000008, "Member 'GA_Attack_Base_C_OnCancelled_36EEB0394AE6BB9D8B15A2B392FEACBF::EventData' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x000008, "Wrong alignment on GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(sizeof(GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x0000B8, "Wrong size on GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(offsetof(GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF, EventTag) == 0x000000, "Member 'GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF, EventData) == 0x000008, "Member 'GA_Attack_Base_C_OnInterrupted_36EEB0394AE6BB9D8B15A2B392FEACBF::EventData' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x000008, "Wrong alignment on GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(sizeof(GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x0000B8, "Wrong size on GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(offsetof(GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF, EventTag) == 0x000000, "Member 'GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF, EventData) == 0x000008, "Member 'GA_Attack_Base_C_OnBlendOut_36EEB0394AE6BB9D8B15A2B392FEACBF::EventData' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x000008, "Wrong alignment on GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(sizeof(GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF) == 0x0000B8, "Wrong size on GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF");
static_assert(offsetof(GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF, EventTag) == 0x000000, "Member 'GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF, EventData) == 0x000008, "Member 'GA_Attack_Base_C_OnCompleted_36EEB0394AE6BB9D8B15A2B392FEACBF::EventData' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Attack_Base_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Attack_Base_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Attack_Base_C_K2_OnEndAbility");
static_assert(sizeof(GA_Attack_Base_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Attack_Base_C_K2_OnEndAbility");
static_assert(offsetof(GA_Attack_Base_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Attack_Base_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.ExecuteUbergraph_GA_Attack_Base
// 0x0558 (0x0558 - 0x0000)
struct GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x0024(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x0030(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x00E8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x01A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x01B0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0270(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0278(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0328(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0338(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x03E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x03F0(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0408(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x7];                                      // 0x0419(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue_1;         // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0428(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue_2;         // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_452[0x6];                                      // 0x0452(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0458(0x0020)()
	class UAbilityTask_PlayMontageAndWaitForEvent* CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_HandleEventData_Gameplay_Effect_Context_Handle; // 0x0480(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0499(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49A[0x2];                                      // 0x049A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x049C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x04A8(0x00B0)()
};
static_assert(alignof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base) == 0x000008, "Wrong alignment on GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base");
static_assert(sizeof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base) == 0x000558, "Wrong size on GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, EntryPoint) == 0x000000, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventTag_3) == 0x000024, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventData_3) == 0x000030, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventTag_2) == 0x0000E0, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventData_2) == 0x0000E8, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000198, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventTag_1) == 0x0001A8, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventData_1) == 0x0001B0, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x000260, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventTag) == 0x000270, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventData) == 0x000278, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x000328, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, Temp_struct_Variable) == 0x000338, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, Temp_struct_Variable_1) == 0x0003E8, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x0003F0, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x000400, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate_6) == 0x000408, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_IsValid_ReturnValue) == 0x000418, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_WaitGameplayTagAdd_ReturnValue_1) == 0x000420, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_WaitGameplayTagAdd_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CreateDelegate_OutputDelegate_7) == 0x000428, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_IsValid_ReturnValue_1) == 0x000438, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_WaitGameplayTagAdd_ReturnValue_2) == 0x000440, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_WaitGameplayTagAdd_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000448, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_IsValid_ReturnValue_2) == 0x000450, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_K2_CommitAbility_ReturnValue) == 0x000451, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000458, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000478, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_HandleEventData_Gameplay_Effect_Context_Handle) == 0x000480, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_HandleEventData_Gameplay_Effect_Context_Handle' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, CallFunc_IsValid_ReturnValue_3) == 0x000498, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_Event_bWasCancelled) == 0x000499, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventTag_4) == 0x00049C, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base, K2Node_CustomEvent_EventData_4) == 0x0004A8, "Member 'GA_Attack_Base_C_ExecuteUbergraph_GA_Attack_Base::K2Node_CustomEvent_EventData_4' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.GetSourceWeapon
// 0x0038 (0x0038 - 0x0000)
struct GA_Attack_Base_C_GetSourceWeapon final
{
public:
	class AOFWeaponActor*                         WeaponActor;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_GetContextFromOwner_ReturnValue;          // 0x0008(0x0018)()
	class UObject*                                CallFunc_EffectContextGetSourceObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFWeaponActor*                         K2Node_DynamicCast_AsOFWeapon_Actor;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Attack_Base_C_GetSourceWeapon) == 0x000008, "Wrong alignment on GA_Attack_Base_C_GetSourceWeapon");
static_assert(sizeof(GA_Attack_Base_C_GetSourceWeapon) == 0x000038, "Wrong size on GA_Attack_Base_C_GetSourceWeapon");
static_assert(offsetof(GA_Attack_Base_C_GetSourceWeapon, WeaponActor) == 0x000000, "Member 'GA_Attack_Base_C_GetSourceWeapon::WeaponActor' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_GetSourceWeapon, CallFunc_GetContextFromOwner_ReturnValue) == 0x000008, "Member 'GA_Attack_Base_C_GetSourceWeapon::CallFunc_GetContextFromOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_GetSourceWeapon, CallFunc_EffectContextGetSourceObject_ReturnValue) == 0x000020, "Member 'GA_Attack_Base_C_GetSourceWeapon::CallFunc_EffectContextGetSourceObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_GetSourceWeapon, K2Node_DynamicCast_AsOFWeapon_Actor) == 0x000028, "Member 'GA_Attack_Base_C_GetSourceWeapon::K2Node_DynamicCast_AsOFWeapon_Actor' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_GetSourceWeapon, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GA_Attack_Base_C_GetSourceWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GA_Attack_Base.GA_Attack_Base_C.MakeHitReactionDataObject
// 0x0010 (0x0010 - 0x0000)
struct GA_Attack_Base_C_MakeHitReactionDataObject final
{
public:
	class UHitReactionDataObject_C*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitReactionDataObject_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Attack_Base_C_MakeHitReactionDataObject) == 0x000008, "Wrong alignment on GA_Attack_Base_C_MakeHitReactionDataObject");
static_assert(sizeof(GA_Attack_Base_C_MakeHitReactionDataObject) == 0x000010, "Wrong size on GA_Attack_Base_C_MakeHitReactionDataObject");
static_assert(offsetof(GA_Attack_Base_C_MakeHitReactionDataObject, ReturnValue) == 0x000000, "Member 'GA_Attack_Base_C_MakeHitReactionDataObject::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Attack_Base_C_MakeHitReactionDataObject, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'GA_Attack_Base_C_MakeHitReactionDataObject::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

}

