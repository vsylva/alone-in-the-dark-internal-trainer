#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LookAt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_LookAt.BP_LookAt_C
// 0x0050 (0x0288 - 0x0238)
class ABP_LookAt_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPersistenceComponent*                  Persistence;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Target;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFlowComponent*                         Flow;                                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bTestVisibility;                                   // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Tolerance;                                         // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLookAtBlocksFutureUse;                            // 0x0260(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	bool                                          bKeepNotifyingOnLookAt;                            // 0x0261(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnLookAt;                                          // 0x0268(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class ATriggerBase*                           Activating_Trigger;                                // 0x0278(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHasBeenLookedAt;                                  // 0x0280(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)

public:
	void OnTriggerEndOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnTriggerBeginOverlap(class AActor* OverlappedActor, class AActor* OtherActor);
	void NotifyLookAt();
	void DisableLookAt();
	void EnableLookAt();
	void BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent, const struct FGameplayTag& NotifyTag);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ExecuteUbergraph_BP_LookAt(int32 EntryPoint);
	void OnLookAt__DelegateSignature(class ABP_LookAt_C* LookAt_Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_LookAt_C">();
	}
	static class ABP_LookAt_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_LookAt_C>();
	}
};
static_assert(alignof(ABP_LookAt_C) == 0x000008, "Wrong alignment on ABP_LookAt_C");
static_assert(sizeof(ABP_LookAt_C) == 0x000288, "Wrong size on ABP_LookAt_C");
static_assert(offsetof(ABP_LookAt_C, UberGraphFrame) == 0x000238, "Member 'ABP_LookAt_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, Persistence) == 0x000240, "Member 'ABP_LookAt_C::Persistence' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, Target) == 0x000248, "Member 'ABP_LookAt_C::Target' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, Flow) == 0x000250, "Member 'ABP_LookAt_C::Flow' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, bTestVisibility) == 0x000258, "Member 'ABP_LookAt_C::bTestVisibility' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, Tolerance) == 0x00025C, "Member 'ABP_LookAt_C::Tolerance' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, bLookAtBlocksFutureUse) == 0x000260, "Member 'ABP_LookAt_C::bLookAtBlocksFutureUse' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, bKeepNotifyingOnLookAt) == 0x000261, "Member 'ABP_LookAt_C::bKeepNotifyingOnLookAt' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, OnLookAt) == 0x000268, "Member 'ABP_LookAt_C::OnLookAt' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, Activating_Trigger) == 0x000278, "Member 'ABP_LookAt_C::Activating_Trigger' has a wrong offset!");
static_assert(offsetof(ABP_LookAt_C, bHasBeenLookedAt) == 0x000280, "Member 'ABP_LookAt_C::bHasBeenLookedAt' has a wrong offset!");

}

