#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BirdFlock_Spline_0

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.ExecuteUbergraph_BP_BirdFlock_Spline
// 0x0198 (0x0198 - 0x0000)
struct BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue; // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x00D0(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_2;        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_3;        // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_4;        // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline) == 0x000008, "Wrong alignment on BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline");
static_assert(sizeof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline) == 0x000198, "Wrong size on BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, EntryPoint) == 0x000000, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Not_PreBool_ReturnValue) == 0x000004, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, Temp_bool_Has_Been_Initd_Variable) == 0x000005, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, Temp_bool_IsClosed_Variable) == 0x000006, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue) == 0x000010, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_GetRotationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x00001C, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000028, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0000B0, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, K2Node_ComponentBoundEvent_OtherActor) == 0x0000B8, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, K2Node_ComponentBoundEvent_OtherComp) == 0x0000C0, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0000C8, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000CC, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, K2Node_ComponentBoundEvent_SweepResult) == 0x0000D0, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000158, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000160, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000164, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000168, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00016C, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x000170, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000174, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_FClamp_ReturnValue) == 0x000178, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x00017C, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Subtract_FloatFloat_ReturnValue_2) == 0x000180, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Subtract_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_FClamp_ReturnValue_1) == 0x000184, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000188, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Subtract_FloatFloat_ReturnValue_3) == 0x00018C, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Subtract_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000190, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline, CallFunc_Subtract_FloatFloat_ReturnValue_4) == 0x000194, "Member 'BP_BirdFlock_Spline_C_ExecuteUbergraph_BP_BirdFlock_Spline::CallFunc_Subtract_FloatFloat_ReturnValue_4' has a wrong offset!");

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BirdFlock_Spline_C_BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_BirdFlock_Spline_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BirdFlock_Spline_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_BirdFlock_Spline_C_UserConstructionScript");
static_assert(sizeof(BP_BirdFlock_Spline_C_UserConstructionScript) == 0x000001, "Wrong size on BP_BirdFlock_Spline_C_UserConstructionScript");
static_assert(offsetof(BP_BirdFlock_Spline_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_BirdFlock_Spline_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Spline.BP_BirdFlock_Spline_C.InitBirdsPos
// 0x00A4 (0x00A4 - 0x0000)
struct BP_BirdFlock_Spline_C_InitBirdsPos final
{
public:
	struct FRotator                               CallFunc_GetRotationAtSplinePoint_ReturnValue;     // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0018(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFlock_Spline_C_InitBirdsPos) == 0x000004, "Wrong alignment on BP_BirdFlock_Spline_C_InitBirdsPos");
static_assert(sizeof(BP_BirdFlock_Spline_C_InitBirdsPos) == 0x0000A4, "Wrong size on BP_BirdFlock_Spline_C_InitBirdsPos");
static_assert(offsetof(BP_BirdFlock_Spline_C_InitBirdsPos, CallFunc_GetRotationAtSplinePoint_ReturnValue) == 0x000000, "Member 'BP_BirdFlock_Spline_C_InitBirdsPos::CallFunc_GetRotationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_InitBirdsPos, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00000C, "Member 'BP_BirdFlock_Spline_C_InitBirdsPos::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_InitBirdsPos, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000018, "Member 'BP_BirdFlock_Spline_C_InitBirdsPos::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_C_InitBirdsPos, CallFunc_GetSplineLength_ReturnValue) == 0x0000A0, "Member 'BP_BirdFlock_Spline_C_InitBirdsPos::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");

}

