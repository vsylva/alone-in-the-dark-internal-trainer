#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ANS_WeaponAnimationEvent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function ANS_WeaponAnimationEvent.ANS_WeaponAnimationEvent_C.GetActiveWeaponAnimInstance
// 0x0048 (0x0048 - 0x0000)
struct ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance final
{
public:
	class UActorComponent*                        MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UAnimInstance*                          ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AObsidianFoxCharacter*                  K2Node_DynamicCast_AsObsidian_Fox_Character;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         CallFunc_GetActiveWeapon_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetMesh_ReturnValue;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance) == 0x000008, "Wrong alignment on ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance");
static_assert(sizeof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance) == 0x000048, "Wrong size on ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, MeshComp) == 0x000000, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::MeshComp' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, ReturnValue) == 0x000008, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, K2Node_DynamicCast_AsObsidian_Fox_Character) == 0x000018, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::K2Node_DynamicCast_AsObsidian_Fox_Character' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, CallFunc_GetActiveWeapon_ReturnValue) == 0x000028, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::CallFunc_GetActiveWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, CallFunc_GetMesh_ReturnValue) == 0x000030, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::CallFunc_GetMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'ANS_WeaponAnimationEvent_C_GetActiveWeaponAnimInstance::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");

// Function ANS_WeaponAnimationEvent.ANS_WeaponAnimationEvent_C.FormatTag
// 0x0090 (0x0090 - 0x0000)
struct ANS_WeaponAnimationEvent_C_FormatTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          WasModified;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 String;                                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetTagName_ReturnValue_1;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ANS_WeaponAnimationEvent_C_FormatTag) == 0x000008, "Wrong alignment on ANS_WeaponAnimationEvent_C_FormatTag");
static_assert(sizeof(ANS_WeaponAnimationEvent_C_FormatTag) == 0x000090, "Wrong size on ANS_WeaponAnimationEvent_C_FormatTag");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, Tag) == 0x000000, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::Tag' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, WasModified) == 0x000008, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::WasModified' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, String) == 0x000010, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::String' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000020, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_GetTagName_ReturnValue) == 0x000028, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_GetTagName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_GetTagName_ReturnValue_1) == 0x000030, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_GetTagName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_Conv_NameToString_ReturnValue) == 0x000038, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000048, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_Split_LeftS) == 0x000068, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_Split_RightS) == 0x000078, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_FormatTag, CallFunc_Split_ReturnValue) == 0x000088, "Member 'ANS_WeaponAnimationEvent_C_FormatTag::CallFunc_Split_ReturnValue' has a wrong offset!");

// Function ANS_WeaponAnimationEvent.ANS_WeaponAnimationEvent_C.GetNotifyName
// 0x00F8 (0x00F8 - 0x0000)
struct ANS_WeaponAnimationEvent_C_GetNotifyName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_FormatTag_WasModified;                    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FormatTag_String;                         // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FormatTag_WasModified_1;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_FormatTag_String_1;                       // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_1;                           // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(ANS_WeaponAnimationEvent_C_GetNotifyName) == 0x000008, "Wrong alignment on ANS_WeaponAnimationEvent_C_GetNotifyName");
static_assert(sizeof(ANS_WeaponAnimationEvent_C_GetNotifyName) == 0x0000F8, "Wrong size on ANS_WeaponAnimationEvent_C_GetNotifyName");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, ReturnValue) == 0x000000, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, Temp_string_Variable) == 0x000010, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, Temp_bool_Variable) == 0x000020, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, Temp_string_Variable_1) == 0x000028, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, Temp_string_Variable_2) == 0x000038, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, Temp_string_Variable_3) == 0x000048, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_FormatTag_WasModified) == 0x000058, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_FormatTag_WasModified' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_FormatTag_String) == 0x000060, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_FormatTag_String' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, Temp_bool_Variable_1) == 0x000070, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_FormatTag_WasModified_1) == 0x000071, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_FormatTag_WasModified_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_FormatTag_String_1) == 0x000078, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_FormatTag_String_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, K2Node_Select_Default) == 0x000088, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, K2Node_Select_Default_1) == 0x000098, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_Concat_StrStr_ReturnValue) == 0x0000A8, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000C8, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000D8, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_GetNotifyName, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000E8, "Member 'ANS_WeaponAnimationEvent_C_GetNotifyName::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");

// Function ANS_WeaponAnimationEvent.ANS_WeaponAnimationEvent_C.Received_NotifyEnd
// 0x0038 (0x0038 - 0x0000)
struct ANS_WeaponAnimationEvent_C_Received_NotifyEnd final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetActiveWeaponAnimInstance_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGunAnimInterface>     K2Node_DynamicCast_AsGun_Anim_Interface;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd) == 0x000008, "Wrong alignment on ANS_WeaponAnimationEvent_C_Received_NotifyEnd");
static_assert(sizeof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd) == 0x000038, "Wrong size on ANS_WeaponAnimationEvent_C_Received_NotifyEnd");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd, MeshComp) == 0x000000, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyEnd::MeshComp' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd, Animation) == 0x000008, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyEnd::Animation' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd, ReturnValue) == 0x000010, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd, CallFunc_GetActiveWeaponAnimInstance_ReturnValue) == 0x000018, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyEnd::CallFunc_GetActiveWeaponAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd, K2Node_DynamicCast_AsGun_Anim_Interface) == 0x000020, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyEnd::K2Node_DynamicCast_AsGun_Anim_Interface' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyEnd, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function ANS_WeaponAnimationEvent.ANS_WeaponAnimationEvent_C.Received_NotifyBegin
// 0x0038 (0x0038 - 0x0000)
struct ANS_WeaponAnimationEvent_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetActiveWeaponAnimInstance_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGunAnimInterface>     K2Node_DynamicCast_AsGun_Anim_Interface;           // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin) == 0x000008, "Wrong alignment on ANS_WeaponAnimationEvent_C_Received_NotifyBegin");
static_assert(sizeof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin) == 0x000038, "Wrong size on ANS_WeaponAnimationEvent_C_Received_NotifyBegin");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin, Animation) == 0x000008, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin, TotalDuration) == 0x000010, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin, ReturnValue) == 0x000014, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin, CallFunc_GetActiveWeaponAnimInstance_ReturnValue) == 0x000018, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyBegin::CallFunc_GetActiveWeaponAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin, K2Node_DynamicCast_AsGun_Anim_Interface) == 0x000020, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyBegin::K2Node_DynamicCast_AsGun_Anim_Interface' has a wrong offset!");
static_assert(offsetof(ANS_WeaponAnimationEvent_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ANS_WeaponAnimationEvent_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

