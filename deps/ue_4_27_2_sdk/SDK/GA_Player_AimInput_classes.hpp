#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Player_AimInput

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PiecesGameplayAbilities_classes.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Player_AimInput.GA_Player_AimInput_C
// 0x0020 (0x03D8 - 0x03B8)
class UGA_Player_AimInput_C final : public UPiecesGameplayAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FActiveGameplayEffectHandle            Aim_State_GE;                                      // 0x03C0(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            AimTraceGE;                                        // 0x03C8(0x0008)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         Min_Combat_Sprint_Velocity;                        // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_Player_AimInput(int32 EntryPoint);
	void K2_ActivateAbility();
	void Combat_Sprint_Wait_To_ReMinusadd_Aim();
	void K2_OnEndAbility(bool bWasCancelled);
	void ReMinusadd_aim();
	void Started_BF894B364B8D015E032C77996B5A8365();
	void Ongoing_BF894B364B8D015E032C77996B5A8365();
	void Canceled_BF894B364B8D015E032C77996B5A8365();
	void Triggered_BF894B364B8D015E032C77996B5A8365();
	void Completed_BF894B364B8D015E032C77996B5A8365();
	void NoInput_BF894B364B8D015E032C77996B5A8365();
	void OnVelocityReached_75BB911F40504DACCC6AD998065815E5();
	void OnCommit_9A25BC434671E7B975595481952CA900(class UGameplayAbility* ActivatedAbility);
	void Remove_Aim_Effects();

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;
	bool InCombatSprint() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Player_AimInput_C">();
	}
	static class UGA_Player_AimInput_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Player_AimInput_C>();
	}
};
static_assert(alignof(UGA_Player_AimInput_C) == 0x000008, "Wrong alignment on UGA_Player_AimInput_C");
static_assert(sizeof(UGA_Player_AimInput_C) == 0x0003D8, "Wrong size on UGA_Player_AimInput_C");
static_assert(offsetof(UGA_Player_AimInput_C, UberGraphFrame) == 0x0003B8, "Member 'UGA_Player_AimInput_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UGA_Player_AimInput_C, Aim_State_GE) == 0x0003C0, "Member 'UGA_Player_AimInput_C::Aim_State_GE' has a wrong offset!");
static_assert(offsetof(UGA_Player_AimInput_C, AimTraceGE) == 0x0003C8, "Member 'UGA_Player_AimInput_C::AimTraceGE' has a wrong offset!");
static_assert(offsetof(UGA_Player_AimInput_C, Min_Combat_Sprint_Velocity) == 0x0003D0, "Member 'UGA_Player_AimInput_C::Min_Combat_Sprint_Velocity' has a wrong offset!");

}

