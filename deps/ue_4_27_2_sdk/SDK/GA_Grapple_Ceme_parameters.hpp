#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Grapple_Ceme

#include "Basic.hpp"

#include "CemeteryCreatureType_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function GA_Grapple_Ceme.GA_Grapple_Ceme_C.ExecuteUbergraph_GA_Grapple_Ceme
// 0x0080 (0x0080 - 0x0000)
struct GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         Temp_byte_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CombatInterface_C> K2Node_DynamicCast_AsBPI_Combat_Interface;         // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECemeteryCreatureType                         CallFunc_getCemeteryCreatureType_cemeteryCreatureType; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x006C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_1;                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme) == 0x000008, "Wrong alignment on GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme");
static_assert(sizeof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme) == 0x000080, "Wrong size on GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, EntryPoint) == 0x000000, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_byte_Variable) == 0x000004, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_struct_Variable) == 0x000008, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_struct_Variable_1) == 0x000010, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_struct_Variable_2) == 0x000018, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_struct_Variable_3) == 0x000020, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_byte_Variable_1) == 0x000028, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_object_Variable) == 0x000030, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_object_Variable_1) == 0x000038, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_object_Variable_2) == 0x000040, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, Temp_object_Variable_3) == 0x000048, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000050, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, K2Node_DynamicCast_AsBPI_Combat_Interface) == 0x000058, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::K2Node_DynamicCast_AsBPI_Combat_Interface' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, CallFunc_getCemeteryCreatureType_cemeteryCreatureType) == 0x000069, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::CallFunc_getCemeteryCreatureType_cemeteryCreatureType' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, K2Node_Select_Default) == 0x00006C, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme, K2Node_Select_Default_1) == 0x000078, "Member 'GA_Grapple_Ceme_C_ExecuteUbergraph_GA_Grapple_Ceme::K2Node_Select_Default_1' has a wrong offset!");

}

