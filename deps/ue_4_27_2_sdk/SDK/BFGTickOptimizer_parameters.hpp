#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFGTickOptimizer

#include "Basic.hpp"


namespace SDK::Params
{

// Function BFGTickOptimizer.BFGTickOptimizerSystem.IsActorBucketTickingThisFrame
// 0x0010 (0x0010 - 0x0000)
struct BFGTickOptimizerSystem_IsActorBucketTickingThisFrame final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BFGTickOptimizerSystem_IsActorBucketTickingThisFrame) == 0x000008, "Wrong alignment on BFGTickOptimizerSystem_IsActorBucketTickingThisFrame");
static_assert(sizeof(BFGTickOptimizerSystem_IsActorBucketTickingThisFrame) == 0x000010, "Wrong size on BFGTickOptimizerSystem_IsActorBucketTickingThisFrame");
static_assert(offsetof(BFGTickOptimizerSystem_IsActorBucketTickingThisFrame, _Actor) == 0x000000, "Member 'BFGTickOptimizerSystem_IsActorBucketTickingThisFrame::_Actor' has a wrong offset!");
static_assert(offsetof(BFGTickOptimizerSystem_IsActorBucketTickingThisFrame, ReturnValue) == 0x000008, "Member 'BFGTickOptimizerSystem_IsActorBucketTickingThisFrame::ReturnValue' has a wrong offset!");

// Function BFGTickOptimizer.BFGTickOptimizerSystem.SetTickOptimizationRuntime_DetermineLODByDistance
// 0x0008 (0x0008 - 0x0000)
struct BFGTickOptimizerSystem_SetTickOptimizationRuntime_DetermineLODByDistance final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_DetermineLODByDistance) == 0x000008, "Wrong alignment on BFGTickOptimizerSystem_SetTickOptimizationRuntime_DetermineLODByDistance");
static_assert(sizeof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_DetermineLODByDistance) == 0x000008, "Wrong size on BFGTickOptimizerSystem_SetTickOptimizationRuntime_DetermineLODByDistance");
static_assert(offsetof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_DetermineLODByDistance, _Actor) == 0x000000, "Member 'BFGTickOptimizerSystem_SetTickOptimizationRuntime_DetermineLODByDistance::_Actor' has a wrong offset!");

// Function BFGTickOptimizer.BFGTickOptimizerSystem.SetTickOptimizationRuntime_ForcedLOD
// 0x0010 (0x0010 - 0x0000)
struct BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         _NewLOD;                                           // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD) == 0x000008, "Wrong alignment on BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD");
static_assert(sizeof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD) == 0x000010, "Wrong size on BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD");
static_assert(offsetof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD, _Actor) == 0x000000, "Member 'BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD::_Actor' has a wrong offset!");
static_assert(offsetof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD, _NewLOD) == 0x000008, "Member 'BFGTickOptimizerSystem_SetTickOptimizationRuntime_ForcedLOD::_NewLOD' has a wrong offset!");

// Function BFGTickOptimizer.BFGTickOptimizerSystem.SetTickOptimizationRuntime_HibernateState
// 0x0010 (0x0010 - 0x0000)
struct BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState final
{
public:
	class AActor*                                 _Actor;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          _TickHibernateState;                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState) == 0x000008, "Wrong alignment on BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState");
static_assert(sizeof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState) == 0x000010, "Wrong size on BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState");
static_assert(offsetof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState, _Actor) == 0x000000, "Member 'BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState::_Actor' has a wrong offset!");
static_assert(offsetof(BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState, _TickHibernateState) == 0x000008, "Member 'BFGTickOptimizerSystem_SetTickOptimizationRuntime_HibernateState::_TickHibernateState' has a wrong offset!");

}

