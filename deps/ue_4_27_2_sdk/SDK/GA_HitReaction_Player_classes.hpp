#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_HitReaction_Player

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GA_HitReaction_classes.hpp"
#include "ObsidianFox_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_HitReaction_Player.GA_HitReaction_Player_C
// 0x0010 (0x03D8 - 0x03C8)
class UGA_HitReaction_Player_C final : public UGA_HitReaction_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_HitReaction_Player_C;            // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         MovingMontageThreshold;                            // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EHitReactionType                              Evaluated_Hit_Reaction;                            // 0x03D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_GA_HitReaction_Player(int32 EntryPoint);
	void Handle_Hit_Reaction(const struct FHitReactionData& HitReactionData, const struct FGameplayEventData& GameplayEventData);
	void OnFailed_BE3B92A74A6AD186F36E17B29C71D1A0(EHitReactionType HitReactionType);
	void OnReactionBegin_BE3B92A74A6AD186F36E17B29C71D1A0(EHitReactionType HitReactionType);
	void OnCompleted_BE3B92A74A6AD186F36E17B29C71D1A0(EHitReactionType HitReactionType);
	void OnInterrupted_BE3B92A74A6AD186F36E17B29C71D1A0(EHitReactionType HitReactionType);
	void PlayHitReactionSounds();
	void GetAnimInstance(class UAnimInstance** Anim_Instance);
	void Evaluate_Hit_Reaction_And_Apply_Hardiness(const struct FGameplayEventData& GameplayEventData, EHitReactionType* EvaluatedHitReaction);
	void Play_Force_Feedback(const struct FHitReactionData& HitReactionData);
	void PlayCameraShake(EHitReactionType& Hit_Reaction_Type);

	EHitReactionType DowngradeHitReactionType(EHitReactionType Hitreaction) const;
	struct FGameplayTag Get_Hit_Reaction_Montage(const struct FHitReactionData& HitReactionData) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_HitReaction_Player_C">();
	}
	static class UGA_HitReaction_Player_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_HitReaction_Player_C>();
	}
};
static_assert(alignof(UGA_HitReaction_Player_C) == 0x000008, "Wrong alignment on UGA_HitReaction_Player_C");
static_assert(sizeof(UGA_HitReaction_Player_C) == 0x0003D8, "Wrong size on UGA_HitReaction_Player_C");
static_assert(offsetof(UGA_HitReaction_Player_C, UberGraphFrame_GA_HitReaction_Player_C) == 0x0003C8, "Member 'UGA_HitReaction_Player_C::UberGraphFrame_GA_HitReaction_Player_C' has a wrong offset!");
static_assert(offsetof(UGA_HitReaction_Player_C, MovingMontageThreshold) == 0x0003D0, "Member 'UGA_HitReaction_Player_C::MovingMontageThreshold' has a wrong offset!");
static_assert(offsetof(UGA_HitReaction_Player_C, Evaluated_Hit_Reaction) == 0x0003D4, "Member 'UGA_HitReaction_Player_C::Evaluated_Hit_Reaction' has a wrong offset!");

}

