#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_PlayOFLevelSequenceActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ObsidianFox_structs.hpp"


namespace SDK::Params
{

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.CreateLoadingIndicator
// 0x0028 (0x0028 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator final
{
public:
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UUserWidget*>                    CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator) == 0x000028, "Wrong size on FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator, WidgetClass) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator::WidgetClass' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000008, "Member 'FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator, CallFunc_Create_ReturnValue) == 0x000018, "Member 'FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.Warn If Still Not Loaded
// 0x0078 (0x0078 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded final
{
public:
	TSoftObjectPtr<class UObject>                 InputPin;                                          // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded) == 0x000078, "Wrong size on FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, InputPin) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::InputPin' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000030, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, Temp_int_Variable) == 0x000068, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000070, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.Warn if Not Already Preloaded
// 0x0078 (0x0078 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded final
{
public:
	TSoftObjectPtr<class UObject>                 SoftObjectReference;                               // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded) == 0x000078, "Wrong size on FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, SoftObjectReference) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::SoftObjectReference' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000030, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000058, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, Temp_int_Variable) == 0x000068, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00006C, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.IsSequenceFinished
// 0x0030 (0x0030 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_IsSequenceFinished final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APiecesLevelSequenceActor*              K2Node_DynamicCast_AsPieces_Level_Sequence_Actor;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInteractiveLevelSequenceActor*         K2Node_DynamicCast_AsInteractive_Level_Sequence_Actor; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_IsSequenceFinished");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished) == 0x000030, "Wrong size on FN_PlayOFLevelSequenceActor_C_IsSequenceFinished");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished, Value) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_IsSequenceFinished::Value' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'FN_PlayOFLevelSequenceActor_C_IsSequenceFinished::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished, K2Node_DynamicCast_AsPieces_Level_Sequence_Actor) == 0x000010, "Member 'FN_PlayOFLevelSequenceActor_C_IsSequenceFinished::K2Node_DynamicCast_AsPieces_Level_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'FN_PlayOFLevelSequenceActor_C_IsSequenceFinished::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished, K2Node_DynamicCast_AsInteractive_Level_Sequence_Actor) == 0x000020, "Member 'FN_PlayOFLevelSequenceActor_C_IsSequenceFinished::K2Node_DynamicCast_AsInteractive_Level_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'FN_PlayOFLevelSequenceActor_C_IsSequenceFinished::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_IsSequenceFinished, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'FN_PlayOFLevelSequenceActor_C_IsSequenceFinished::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.SetupLevelsToIgnore
// 0x0018 (0x0018 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore final
{
public:
	class APiecesLevelSequenceActor*              SequenceActor;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UWorld>>          CallFunc_GetGlobalListOfLevelsToIgnoreForPreStreaming_ReturnValue; // 0x0008(0x0010)(ReferenceParm)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore) == 0x000018, "Wrong size on FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore, SequenceActor) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore::SequenceActor' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore, CallFunc_GetGlobalListOfLevelsToIgnoreForPreStreaming_ReturnValue) == 0x000008, "Member 'FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore::CallFunc_GetGlobalListOfLevelsToIgnoreForPreStreaming_ReturnValue' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.SetUpSequenceToPlay
// 0x0060 (0x0060 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay final
{
public:
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class APiecesLevelSequenceActor> Temp_softobject_Variable;                          // 0x0008(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class APiecesLevelSequenceActor> K2Node_Select_Default;                             // 0x0038(0x0028)(HasGetValueTypeHash)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay) == 0x000060, "Wrong size on FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay, Temp_byte_Variable) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay, Temp_softobject_Variable) == 0x000008, "Member 'FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000030, "Member 'FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x000031, "Member 'FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay, K2Node_Select_Default) == 0x000038, "Member 'FN_PlayOFLevelSequenceActor_C_SetUpSequenceToPlay::K2Node_Select_Default' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.MoveEnemiesToSpawn
// 0x0020 (0x0020 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn final
{
public:
	float                                         Radius;                                            // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn) == 0x000020, "Wrong size on FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn, Radius) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn::Radius' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.K2_ExecuteInput
// 0x0008 (0x0008 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput) == 0x000004, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput) == 0x000008, "Wrong size on FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput, PinName) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput::PinName' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.CutsceneSkipped
// 0x0008 (0x0008 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_CutsceneSkipped final
{
public:
	class UPiecesLevelSequencePlayer*             SequencePlayer;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_CutsceneSkipped) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_CutsceneSkipped");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_CutsceneSkipped) == 0x000008, "Wrong size on FN_PlayOFLevelSequenceActor_C_CutsceneSkipped");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_CutsceneSkipped, SequencePlayer) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_CutsceneSkipped::SequencePlayer' has a wrong offset!");

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.ExecuteUbergraph_FN_PlayOFLevelSequenceActor
// 0x00E8 (0x00E8 - 0x0000)
struct FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPiecesLevelSequencePlayer*             K2Node_CustomEvent_SequencePlayer;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_PinName;                              // 0x0014(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPiecesLevelSequencePlayer* SequencePlayer)> K2Node_CreateDelegate_OutputDelegate;              // 0x001C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APiecesLevelSequenceActor*              K2Node_DynamicCast_AsPieces_Level_Sequence_Actor;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPiecesLevelSequencePlayer*             K2Node_DynamicCast_AsPieces_Level_Sequence_Player; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSequenceFinished_Value;                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor) == 0x000008, "Wrong alignment on FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor");
static_assert(sizeof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor) == 0x0000E8, "Wrong size on FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, EntryPoint) == 0x000000, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_CustomEvent_SequencePlayer) == 0x000008, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_CustomEvent_SequencePlayer' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, Temp_bool_IsClosed_Variable) == 0x000010, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, Temp_bool_Has_Been_Initd_Variable) == 0x000011, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_Event_PinName) == 0x000014, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_Event_PinName' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_CreateDelegate_OutputDelegate) == 0x00001C, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_DynamicCast_AsPieces_Level_Sequence_Actor) == 0x000048, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_DynamicCast_AsPieces_Level_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000058, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_GetSequencePlayer_ReturnValue) == 0x000068, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Split_LeftS) == 0x000070, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Split_RightS) == 0x000080, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Split_ReturnValue) == 0x000090, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_DynamicCast_AsPieces_Level_Sequence_Player) == 0x000098, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_DynamicCast_AsPieces_Level_Sequence_Player' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Split_LeftS_1) == 0x0000A8, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Split_RightS_1) == 0x0000B8, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Split_ReturnValue_1) == 0x0000C8, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_Conv_StringToName_ReturnValue) == 0x0000CC, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, CallFunc_IsSequenceFinished_Value) == 0x0000D5, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::CallFunc_IsSequenceFinished_Value' has a wrong offset!");
static_assert(offsetof(FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D8, "Member 'FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

}

