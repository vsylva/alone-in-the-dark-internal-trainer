#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFGUITools

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct BFGUITools.WidgetPair
// 0x0018 (0x0018 - 0x0000)
struct FWidgetPair final
{
public:
	class UWidget*                                M_Widget;                                          // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanelSlot*                       M_Slot;                                            // 0x0008(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x8];                                       // 0x0010(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWidgetPair) == 0x000008, "Wrong alignment on FWidgetPair");
static_assert(sizeof(FWidgetPair) == 0x000018, "Wrong size on FWidgetPair");
static_assert(offsetof(FWidgetPair, M_Widget) == 0x000000, "Member 'FWidgetPair::M_Widget' has a wrong offset!");
static_assert(offsetof(FWidgetPair, M_Slot) == 0x000008, "Member 'FWidgetPair::M_Slot' has a wrong offset!");

// ScriptStruct BFGUITools.WidgetPool
// 0x0070 (0x0070 - 0x0000)
struct FWidgetPool final
{
public:
	TArray<class UWidget*>                        M_UnattachedPool;                                  // 0x0000(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FWidgetPair>                    M_AttachedPool;                                    // 0x0010(0x0010)(ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x50];                                      // 0x0020(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FWidgetPool) == 0x000008, "Wrong alignment on FWidgetPool");
static_assert(sizeof(FWidgetPool) == 0x000070, "Wrong size on FWidgetPool");
static_assert(offsetof(FWidgetPool, M_UnattachedPool) == 0x000000, "Member 'FWidgetPool::M_UnattachedPool' has a wrong offset!");
static_assert(offsetof(FWidgetPool, M_AttachedPool) == 0x000010, "Member 'FWidgetPool::M_AttachedPool' has a wrong offset!");

// ScriptStruct BFGUITools.BFGProjectedDebugWidget
// 0x0038 (0x0038 - 0x0000)
struct FBFGProjectedDebugWidget final
{
public:
	class UCanvasPanelSlot*                       M_Slot;                                            // 0x0000(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x10];                                       // 0x0008(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 M_Actor;                                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_20[0x18];                                      // 0x0020(0x0018)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBFGProjectedDebugWidget) == 0x000008, "Wrong alignment on FBFGProjectedDebugWidget");
static_assert(sizeof(FBFGProjectedDebugWidget) == 0x000038, "Wrong size on FBFGProjectedDebugWidget");
static_assert(offsetof(FBFGProjectedDebugWidget, M_Slot) == 0x000000, "Member 'FBFGProjectedDebugWidget::M_Slot' has a wrong offset!");
static_assert(offsetof(FBFGProjectedDebugWidget, M_Actor) == 0x000018, "Member 'FBFGProjectedDebugWidget::M_Actor' has a wrong offset!");

// ScriptStruct BFGUITools.BFGDebugPanel
// 0x0148 (0x0148 - 0x0000)
struct FBFGDebugPanel
{
public:
	uint8                                         Pad_0[0x8];                                        // 0x0000(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWidgetPool                            M_WidgetPool;                                      // 0x0008(0x0070)(ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UWorld*                                 M_World;                                           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerController*                      M_PlayerController;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                           M_CanvasPanel;                                     // 0x0088(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FWidgetPair>                    M_AutoCleanWidgets;                                // 0x0090(0x0010)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FWidgetPair>                    M_ManualWidgets;                                   // 0x00A0(0x0010)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_B0[0x80];                                      // 0x00B0(0x0080)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBFGProjectedDebugWidget>       M_ProjectedWidgets;                                // 0x0130(0x0010)(ZeroConstructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_140[0x8];                                      // 0x0140(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FBFGDebugPanel) == 0x000008, "Wrong alignment on FBFGDebugPanel");
static_assert(sizeof(FBFGDebugPanel) == 0x000148, "Wrong size on FBFGDebugPanel");
static_assert(offsetof(FBFGDebugPanel, M_WidgetPool) == 0x000008, "Member 'FBFGDebugPanel::M_WidgetPool' has a wrong offset!");
static_assert(offsetof(FBFGDebugPanel, M_World) == 0x000078, "Member 'FBFGDebugPanel::M_World' has a wrong offset!");
static_assert(offsetof(FBFGDebugPanel, M_PlayerController) == 0x000080, "Member 'FBFGDebugPanel::M_PlayerController' has a wrong offset!");
static_assert(offsetof(FBFGDebugPanel, M_CanvasPanel) == 0x000088, "Member 'FBFGDebugPanel::M_CanvasPanel' has a wrong offset!");
static_assert(offsetof(FBFGDebugPanel, M_AutoCleanWidgets) == 0x000090, "Member 'FBFGDebugPanel::M_AutoCleanWidgets' has a wrong offset!");
static_assert(offsetof(FBFGDebugPanel, M_ManualWidgets) == 0x0000A0, "Member 'FBFGDebugPanel::M_ManualWidgets' has a wrong offset!");
static_assert(offsetof(FBFGDebugPanel, M_ProjectedWidgets) == 0x000130, "Member 'FBFGDebugPanel::M_ProjectedWidgets' has a wrong offset!");

// ScriptStruct BFGUITools.BFGDebugPanel_AlwaysOnTop
// 0x0000 (0x0148 - 0x0148)
struct FBFGDebugPanel_AlwaysOnTop final : public FBFGDebugPanel
{
};
static_assert(alignof(FBFGDebugPanel_AlwaysOnTop) == 0x000008, "Wrong alignment on FBFGDebugPanel_AlwaysOnTop");
static_assert(sizeof(FBFGDebugPanel_AlwaysOnTop) == 0x000148, "Wrong size on FBFGDebugPanel_AlwaysOnTop");

}

