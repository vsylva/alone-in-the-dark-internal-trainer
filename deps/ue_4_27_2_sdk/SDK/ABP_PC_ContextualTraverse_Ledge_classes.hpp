#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PC_ContextualTraverse_Ledge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PC_ContextualTraverse_Ledge.ABP_PC_ContextualTraverse_Ledge_C
// 0x0A80 (0x1E30 - 0x13B0)
class UABP_PC_ContextualTraverse_Ledge_C final : public UContextualTraverseAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x13B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x13B8(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x13E8(0x0118)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1500(0x0158)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x1658(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x1680(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x16A8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x16D0(0x0028)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x16F8(0x0128)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x1820(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x1850(0x0128)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x1978(0x0030)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x19A8(0x0128)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x1AD0(0x0030)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1B00(0x0028)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x1B28(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x1B58(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1C08(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1C38(0x0118)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x1D50(0x00B0)()
	bool                                          IsLedgeOnRightSide;                                // 0x1E00(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsContextualTraverse;                              // 0x1E01(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E02[0x6];                                     // 0x1E02(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerCharacterContextualMovementAnimations_C* Animations;                                        // 0x1E08(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLedgeWalking;                                    // 0x1E10(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E11[0x3];                                     // 0x1E11(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Frame_Delay;                                       // 0x1E14(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             EndTraverse;                                       // 0x1E18(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void ContextualMovement(const struct FPoseLink& ContextualMovementInputPose, struct FPoseLink* ContextualMovement_0);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PC_ContextualTraverse_Ledge_AnimGraphNode_BlendSpacePlayer_DC7E2D66426CA9CBCBB17CB5A227F27B();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PC_ContextualTraverse_Ledge_AnimGraphNode_BlendSpacePlayer_D0F911DB4407044A0E8C69932DE97713();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PC_ContextualTraverse_Ledge_AnimGraphNode_BlendSpacePlayer_0BDFCC234D1D874DE47B6E92207FEA3E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PC_ContextualTraverse_Ledge_AnimGraphNode_TransitionResult_933DB6E34D9D2B4FFEE087B70391EBAB();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PC_ContextualTraverse_Ledge_AnimGraphNode_TransitionResult_492074554951FBD24920828F2B9A3416();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void BlueprintLinkedAnimationLayersInitialized();
	void AnimNotify_EndTraverse();
	void ExecuteUbergraph_ABP_PC_ContextualTraverse_Ledge(int32 EntryPoint);
	void EndTraverse__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PC_ContextualTraverse_Ledge_C">();
	}
	static class UABP_PC_ContextualTraverse_Ledge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PC_ContextualTraverse_Ledge_C>();
	}
};
static_assert(alignof(UABP_PC_ContextualTraverse_Ledge_C) == 0x000010, "Wrong alignment on UABP_PC_ContextualTraverse_Ledge_C");
static_assert(sizeof(UABP_PC_ContextualTraverse_Ledge_C) == 0x001E30, "Wrong size on UABP_PC_ContextualTraverse_Ledge_C");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, UberGraphFrame) == 0x0013B0, "Member 'UABP_PC_ContextualTraverse_Ledge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_Root_1) == 0x0013B8, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_LinkedInputPose_1) == 0x0013E8, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_SaveCachedPose) == 0x001500, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_TransitionResult_3) == 0x001658, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_TransitionResult_2) == 0x001680, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_TransitionResult_1) == 0x0016A8, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_TransitionResult) == 0x0016D0, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_BlendSpacePlayer_2) == 0x0016F8, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_StateResult_3) == 0x001820, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_BlendSpacePlayer_1) == 0x001850, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_StateResult_2) == 0x001978, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_BlendSpacePlayer) == 0x0019A8, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_StateResult_1) == 0x001AD0, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_UseCachedPose) == 0x001B00, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_StateResult) == 0x001B28, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_StateMachine) == 0x001B58, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_Root) == 0x001C08, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_LinkedInputPose) == 0x001C38, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, AnimGraphNode_LinkedAnimLayer) == 0x001D50, "Member 'UABP_PC_ContextualTraverse_Ledge_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, IsLedgeOnRightSide) == 0x001E00, "Member 'UABP_PC_ContextualTraverse_Ledge_C::IsLedgeOnRightSide' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, IsContextualTraverse) == 0x001E01, "Member 'UABP_PC_ContextualTraverse_Ledge_C::IsContextualTraverse' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, Animations) == 0x001E08, "Member 'UABP_PC_ContextualTraverse_Ledge_C::Animations' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, IsLedgeWalking) == 0x001E10, "Member 'UABP_PC_ContextualTraverse_Ledge_C::IsLedgeWalking' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, Frame_Delay) == 0x001E14, "Member 'UABP_PC_ContextualTraverse_Ledge_C::Frame_Delay' has a wrong offset!");
static_assert(offsetof(UABP_PC_ContextualTraverse_Ledge_C, EndTraverse) == 0x001E18, "Member 'UABP_PC_ContextualTraverse_Ledge_C::EndTraverse' has a wrong offset!");

}

