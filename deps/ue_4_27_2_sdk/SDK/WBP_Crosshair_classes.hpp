#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Crosshair

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "EWeapons_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Crosshair.WBP_Crosshair_C
// 0x00B8 (0x0350 - 0x0298)
class UWBP_Crosshair_C final : public UOF_HUDCrosshair
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0298(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeIn;                                            // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       GunHit;                                            // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BL;                                                // 0x02B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bottom_2;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BR;                                                // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CrosshairDbg;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CrosshairOverlayHit;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CrosshairPanel;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Left_2;                                            // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LeftShotgun;                                       // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_Tint;                                  // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Right_2;                                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RightShotgun;                                      // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           ShotgunCrosshairPanel;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TL;                                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Top_2;                                             // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TR;                                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         DefaultScale;                                      // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinTranslation;                                    // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTranslation;                                    // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EWeapons                                      WeaponType;                                        // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               MatInst_Tint;                                      // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinShownSpread;                                    // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RetainerBoxTintParameter;                          // 0x0344(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_Crosshair(int32 EntryPoint);
	void OnWeaponHit(const struct FGameplayEventData& EventPayload, int32 Hits);
	void OnTrackedWeaponSet(class AHitscanWeaponActor* InTrackedWeapon);
	void OnWeaponAimStateChanged(bool IsAimingWeapon);
	void OnTrackedWeaponDestroyed(class AActor* DestroyedActor);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PlayerHUDVisibilityChanged(bool bNewHUDVisibility);
	void PreConstruct(bool IsDesignTime);
	void UpdateWeaponSpread();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Crosshair_C">();
	}
	static class UWBP_Crosshair_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Crosshair_C>();
	}
};
static_assert(alignof(UWBP_Crosshair_C) == 0x000008, "Wrong alignment on UWBP_Crosshair_C");
static_assert(sizeof(UWBP_Crosshair_C) == 0x000350, "Wrong size on UWBP_Crosshair_C");
static_assert(offsetof(UWBP_Crosshair_C, UberGraphFrame) == 0x000298, "Member 'UWBP_Crosshair_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, FadeIn) == 0x0002A0, "Member 'UWBP_Crosshair_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, GunHit) == 0x0002A8, "Member 'UWBP_Crosshair_C::GunHit' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, BL) == 0x0002B0, "Member 'UWBP_Crosshair_C::BL' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, Bottom_2) == 0x0002B8, "Member 'UWBP_Crosshair_C::Bottom_2' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, BR) == 0x0002C0, "Member 'UWBP_Crosshair_C::BR' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, CrosshairDbg) == 0x0002C8, "Member 'UWBP_Crosshair_C::CrosshairDbg' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, CrosshairOverlayHit) == 0x0002D0, "Member 'UWBP_Crosshair_C::CrosshairOverlayHit' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, CrosshairPanel) == 0x0002D8, "Member 'UWBP_Crosshair_C::CrosshairPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, Left_2) == 0x0002E0, "Member 'UWBP_Crosshair_C::Left_2' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, LeftShotgun) == 0x0002E8, "Member 'UWBP_Crosshair_C::LeftShotgun' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, RetainerBox_Tint) == 0x0002F0, "Member 'UWBP_Crosshair_C::RetainerBox_Tint' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, Right_2) == 0x0002F8, "Member 'UWBP_Crosshair_C::Right_2' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, RightShotgun) == 0x000300, "Member 'UWBP_Crosshair_C::RightShotgun' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, ShotgunCrosshairPanel) == 0x000308, "Member 'UWBP_Crosshair_C::ShotgunCrosshairPanel' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, TL) == 0x000310, "Member 'UWBP_Crosshair_C::TL' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, Top_2) == 0x000318, "Member 'UWBP_Crosshair_C::Top_2' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, TR) == 0x000320, "Member 'UWBP_Crosshair_C::TR' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, DefaultScale) == 0x000328, "Member 'UWBP_Crosshair_C::DefaultScale' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, MinTranslation) == 0x00032C, "Member 'UWBP_Crosshair_C::MinTranslation' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, MaxTranslation) == 0x000330, "Member 'UWBP_Crosshair_C::MaxTranslation' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, WeaponType) == 0x000334, "Member 'UWBP_Crosshair_C::WeaponType' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, MatInst_Tint) == 0x000338, "Member 'UWBP_Crosshair_C::MatInst_Tint' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, MinShownSpread) == 0x000340, "Member 'UWBP_Crosshair_C::MinShownSpread' has a wrong offset!");
static_assert(offsetof(UWBP_Crosshair_C, RetainerBoxTintParameter) == 0x000344, "Member 'UWBP_Crosshair_C::RetainerBoxTintParameter' has a wrong offset!");

}

