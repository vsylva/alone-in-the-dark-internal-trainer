#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesNavigation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "PiecesNavigation_structs.hpp"


namespace SDK::Params
{

// Function PiecesNavigation.PiecesAsyncNavigationSystem.FindPathToActorAsynchronously
// 0x0038 (0x0038 - 0x0000)
struct PiecesAsyncNavigationSystem_FindPathToActorAsynchronously final
{
public:
	struct FVector                                PathStart;                                         // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 GoalActor;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         TetherDistance;                                    // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 PathfindingContext;                                // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>     FilterClass;                                       // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNavAsyncQueryId                       OutQueryId;                                        // 0x0030(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0034(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously) == 0x000008, "Wrong alignment on PiecesAsyncNavigationSystem_FindPathToActorAsynchronously");
static_assert(sizeof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously) == 0x000038, "Wrong size on PiecesAsyncNavigationSystem_FindPathToActorAsynchronously");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously, PathStart) == 0x000000, "Member 'PiecesAsyncNavigationSystem_FindPathToActorAsynchronously::PathStart' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously, GoalActor) == 0x000010, "Member 'PiecesAsyncNavigationSystem_FindPathToActorAsynchronously::GoalActor' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously, TetherDistance) == 0x000018, "Member 'PiecesAsyncNavigationSystem_FindPathToActorAsynchronously::TetherDistance' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously, PathfindingContext) == 0x000020, "Member 'PiecesAsyncNavigationSystem_FindPathToActorAsynchronously::PathfindingContext' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously, FilterClass) == 0x000028, "Member 'PiecesAsyncNavigationSystem_FindPathToActorAsynchronously::FilterClass' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously, OutQueryId) == 0x000030, "Member 'PiecesAsyncNavigationSystem_FindPathToActorAsynchronously::OutQueryId' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToActorAsynchronously, ReturnValue) == 0x000034, "Member 'PiecesAsyncNavigationSystem_FindPathToActorAsynchronously::ReturnValue' has a wrong offset!");

// Function PiecesNavigation.PiecesAsyncNavigationSystem.FindPathToLocationAsynchronously
// 0x0030 (0x0030 - 0x0000)
struct PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously final
{
public:
	struct FVector                                PathStart;                                         // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                PathEnd;                                           // 0x000C(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 PathfindingContext;                                // 0x0018(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UNavigationQueryFilter>     FilterClass;                                       // 0x0020(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNavAsyncQueryId                       OutQueryId;                                        // 0x0028(0x0004)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x002C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously) == 0x000008, "Wrong alignment on PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously");
static_assert(sizeof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously) == 0x000030, "Wrong size on PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously, PathStart) == 0x000000, "Member 'PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously::PathStart' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously, PathEnd) == 0x00000C, "Member 'PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously::PathEnd' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously, PathfindingContext) == 0x000018, "Member 'PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously::PathfindingContext' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously, FilterClass) == 0x000020, "Member 'PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously::FilterClass' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously, OutQueryId) == 0x000028, "Member 'PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously::OutQueryId' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously, ReturnValue) == 0x00002C, "Member 'PiecesAsyncNavigationSystem_FindPathToLocationAsynchronously::ReturnValue' has a wrong offset!");

// Function PiecesNavigation.PiecesAsyncNavigationSystem.GetQueryStatusWithResult
// 0x0018 (0x0018 - 0x0000)
struct PiecesAsyncNavigationSystem_GetQueryStatusWithResult final
{
public:
	struct FNavAsyncQueryId                       RefQueryId;                                        // 0x0000(0x0004)(Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        OutPath;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EQueryStatus                                  ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesAsyncNavigationSystem_GetQueryStatusWithResult) == 0x000008, "Wrong alignment on PiecesAsyncNavigationSystem_GetQueryStatusWithResult");
static_assert(sizeof(PiecesAsyncNavigationSystem_GetQueryStatusWithResult) == 0x000018, "Wrong size on PiecesAsyncNavigationSystem_GetQueryStatusWithResult");
static_assert(offsetof(PiecesAsyncNavigationSystem_GetQueryStatusWithResult, RefQueryId) == 0x000000, "Member 'PiecesAsyncNavigationSystem_GetQueryStatusWithResult::RefQueryId' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_GetQueryStatusWithResult, OutPath) == 0x000008, "Member 'PiecesAsyncNavigationSystem_GetQueryStatusWithResult::OutPath' has a wrong offset!");
static_assert(offsetof(PiecesAsyncNavigationSystem_GetQueryStatusWithResult, ReturnValue) == 0x000010, "Member 'PiecesAsyncNavigationSystem_GetQueryStatusWithResult::ReturnValue' has a wrong offset!");

}

