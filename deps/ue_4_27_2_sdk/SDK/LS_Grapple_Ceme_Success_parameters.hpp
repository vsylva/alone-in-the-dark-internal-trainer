#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LS_Grapple_Ceme_Success

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function LS_Grapple_Ceme_Success.SequenceDirector_C.SequenceEvent__ENTRYPOINTSequenceDirector_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0 final
{
public:
	class ABP_CemeteryCreature_A_C*               BP_CemeteryCreature_A;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong alignment on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(sizeof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0) == 0x000008, "Wrong size on SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0");
static_assert(offsetof(SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0, BP_CemeteryCreature_A) == 0x000000, "Member 'SequenceDirector_C_SequenceEvent__ENTRYPOINTSequenceDirector_0::BP_CemeteryCreature_A' has a wrong offset!");

// Function LS_Grapple_Ceme_Success.SequenceDirector_C.Cine_Camera_Actor_Event_0
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_Cine_Camera_Actor_Event_0 final
{
public:
	class ACineCameraActor*                       Cine_Camera_Actor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_Cine_Camera_Actor_Event_0) == 0x000008, "Wrong alignment on SequenceDirector_C_Cine_Camera_Actor_Event_0");
static_assert(sizeof(SequenceDirector_C_Cine_Camera_Actor_Event_0) == 0x000008, "Wrong size on SequenceDirector_C_Cine_Camera_Actor_Event_0");
static_assert(offsetof(SequenceDirector_C_Cine_Camera_Actor_Event_0, Cine_Camera_Actor) == 0x000000, "Member 'SequenceDirector_C_Cine_Camera_Actor_Event_0::Cine_Camera_Actor' has a wrong offset!");

// Function LS_Grapple_Ceme_Success.SequenceDirector_C.Cine_Camera_Actor_Event_1
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_Cine_Camera_Actor_Event_1 final
{
public:
	class ACineCameraActor*                       Cine_Camera_Actor;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_Cine_Camera_Actor_Event_1) == 0x000008, "Wrong alignment on SequenceDirector_C_Cine_Camera_Actor_Event_1");
static_assert(sizeof(SequenceDirector_C_Cine_Camera_Actor_Event_1) == 0x000008, "Wrong size on SequenceDirector_C_Cine_Camera_Actor_Event_1");
static_assert(offsetof(SequenceDirector_C_Cine_Camera_Actor_Event_1, Cine_Camera_Actor) == 0x000000, "Member 'SequenceDirector_C_Cine_Camera_Actor_Event_1::Cine_Camera_Actor' has a wrong offset!");

// Function LS_Grapple_Ceme_Success.SequenceDirector_C.stopEnemyCinematicMode
// 0x0008 (0x0008 - 0x0000)
struct SequenceDirector_C_StopEnemyCinematicMode final
{
public:
	class ABP_CemeteryCreature_A_C*               BP_CemeteryCreature_A;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_StopEnemyCinematicMode) == 0x000008, "Wrong alignment on SequenceDirector_C_StopEnemyCinematicMode");
static_assert(sizeof(SequenceDirector_C_StopEnemyCinematicMode) == 0x000008, "Wrong size on SequenceDirector_C_StopEnemyCinematicMode");
static_assert(offsetof(SequenceDirector_C_StopEnemyCinematicMode, BP_CemeteryCreature_A) == 0x000000, "Member 'SequenceDirector_C_StopEnemyCinematicMode::BP_CemeteryCreature_A' has a wrong offset!");

// Function LS_Grapple_Ceme_Success.SequenceDirector_C.ExecuteUbergraph_SequenceDirector
// 0x0050 (0x0050 - 0x0000)
struct SequenceDirector_C_ExecuteUbergraph_SequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_CemeteryCreature_A_C*               K2Node_CustomEvent_BP_CemeteryCreature_A;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACineCameraActor*                       K2Node_CustomEvent_Cine_Camera_Actor_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ACineCameraActor*                       K2Node_CustomEvent_Cine_Camera_Actor;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000008, "Wrong alignment on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(sizeof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector) == 0x000050, "Wrong size on SequenceDirector_C_ExecuteUbergraph_SequenceDirector");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, EntryPoint) == 0x000000, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::EntryPoint' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_BP_CemeteryCreature_A) == 0x000008, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_BP_CemeteryCreature_A' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Cine_Camera_Actor_1) == 0x000010, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Cine_Camera_Actor_1' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, CallFunc_MakeRotator_ReturnValue) == 0x00003C, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(SequenceDirector_C_ExecuteUbergraph_SequenceDirector, K2Node_CustomEvent_Cine_Camera_Actor) == 0x000048, "Member 'SequenceDirector_C_ExecuteUbergraph_SequenceDirector::K2Node_CustomEvent_Cine_Camera_Actor' has a wrong offset!");

}

