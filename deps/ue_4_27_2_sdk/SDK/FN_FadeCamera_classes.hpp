#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_FadeCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flow_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FN_FadeCamera.FN_FadeCamera_C
// 0x0028 (0x01F8 - 0x01D0)
class UFN_FadeCamera_C final : public UFlowNode
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         From_Alpha;                                        // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         To_Alpha;                                          // 0x01DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x01E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x01E4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Should_Fade_Audio;                                 // 0x01F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Hold_when_Finished;                                // 0x01F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void K2_ExecuteInput(const class FName& PinName);
	void K2_Cleanup();
	void FinishedFade();
	void OnLoad();
	void ExecuteUbergraph_FN_FadeCamera(int32 EntryPoint);

	class FString K2_GetNodeDescription() const;
	class UPlayerInteractionComponent* Get_Player_Interaction_Component() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FN_FadeCamera_C">();
	}
	static class UFN_FadeCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFN_FadeCamera_C>();
	}
};
static_assert(alignof(UFN_FadeCamera_C) == 0x000008, "Wrong alignment on UFN_FadeCamera_C");
static_assert(sizeof(UFN_FadeCamera_C) == 0x0001F8, "Wrong size on UFN_FadeCamera_C");
static_assert(offsetof(UFN_FadeCamera_C, UberGraphFrame) == 0x0001D0, "Member 'UFN_FadeCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFN_FadeCamera_C, From_Alpha) == 0x0001D8, "Member 'UFN_FadeCamera_C::From_Alpha' has a wrong offset!");
static_assert(offsetof(UFN_FadeCamera_C, To_Alpha) == 0x0001DC, "Member 'UFN_FadeCamera_C::To_Alpha' has a wrong offset!");
static_assert(offsetof(UFN_FadeCamera_C, Duration) == 0x0001E0, "Member 'UFN_FadeCamera_C::Duration' has a wrong offset!");
static_assert(offsetof(UFN_FadeCamera_C, Color) == 0x0001E4, "Member 'UFN_FadeCamera_C::Color' has a wrong offset!");
static_assert(offsetof(UFN_FadeCamera_C, Should_Fade_Audio) == 0x0001F4, "Member 'UFN_FadeCamera_C::Should_Fade_Audio' has a wrong offset!");
static_assert(offsetof(UFN_FadeCamera_C, Hold_when_Finished) == 0x0001F5, "Member 'UFN_FadeCamera_C::Hold_when_Finished' has a wrong offset!");

}

