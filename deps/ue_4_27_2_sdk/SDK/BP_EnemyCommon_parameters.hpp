#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnemyCommon

#include "Basic.hpp"

#include "FMODStudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"
#include "CharacterSize_structs.hpp"
#include "AnimationMontageIdentifier_structs.hpp"
#include "CemeteryCreatureType_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetHasBeenBurned
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_GetHasBeenBurned final
{
public:
	bool                                          HasBeenBurned_0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_GetHasBeenBurned) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_GetHasBeenBurned");
static_assert(sizeof(BP_EnemyCommon_C_GetHasBeenBurned) == 0x000001, "Wrong size on BP_EnemyCommon_C_GetHasBeenBurned");
static_assert(offsetof(BP_EnemyCommon_C_GetHasBeenBurned, HasBeenBurned_0) == 0x000000, "Member 'BP_EnemyCommon_C_GetHasBeenBurned::HasBeenBurned_0' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetAimAssistSocketComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyCommon_C_GetAimAssistSocketComponent final
{
public:
	const class USceneComponent*                  ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_GetAimAssistSocketComponent) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_GetAimAssistSocketComponent");
static_assert(sizeof(BP_EnemyCommon_C_GetAimAssistSocketComponent) == 0x000008, "Wrong size on BP_EnemyCommon_C_GetAimAssistSocketComponent");
static_assert(offsetof(BP_EnemyCommon_C_GetAimAssistSocketComponent, ReturnValue) == 0x000000, "Member 'BP_EnemyCommon_C_GetAimAssistSocketComponent::ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetAimAssistMainSocket
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyCommon_C_GetAimAssistMainSocket final
{
public:
	class FName                                   ReturnValue;                                       // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_GetAimAssistMainSocket) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_GetAimAssistMainSocket");
static_assert(sizeof(BP_EnemyCommon_C_GetAimAssistMainSocket) == 0x000008, "Wrong size on BP_EnemyCommon_C_GetAimAssistMainSocket");
static_assert(offsetof(BP_EnemyCommon_C_GetAimAssistMainSocket, ReturnValue) == 0x000000, "Member 'BP_EnemyCommon_C_GetAimAssistMainSocket::ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetAimAssistSockets
// 0x0038 (0x0038 - 0x0000)
struct BP_EnemyCommon_C_GetAimAssistSockets final
{
public:
	bool                                          bIncludeMainAimSocket;                             // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           ReturnValue;                                       // 0x0008(0x0010)(ConstParm, Parm, OutParm, ReturnParm)
	TArray<class FName>                           Full_Socket_Name_Array;                            // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_EnemyCommon_C_GetAimAssistSockets) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_GetAimAssistSockets");
static_assert(sizeof(BP_EnemyCommon_C_GetAimAssistSockets) == 0x000038, "Wrong size on BP_EnemyCommon_C_GetAimAssistSockets");
static_assert(offsetof(BP_EnemyCommon_C_GetAimAssistSockets, bIncludeMainAimSocket) == 0x000000, "Member 'BP_EnemyCommon_C_GetAimAssistSockets::bIncludeMainAimSocket' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_GetAimAssistSockets, ReturnValue) == 0x000008, "Member 'BP_EnemyCommon_C_GetAimAssistSockets::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_GetAimAssistSockets, Full_Socket_Name_Array) == 0x000018, "Member 'BP_EnemyCommon_C_GetAimAssistSockets::Full_Socket_Name_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_GetAimAssistSockets, K2Node_MakeArray_Array) == 0x000028, "Member 'BP_EnemyCommon_C_GetAimAssistSockets::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetHasDeathReactionHappened
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_GetHasDeathReactionHappened final
{
public:
	bool                                          HasDied;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_GetHasDeathReactionHappened) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_GetHasDeathReactionHappened");
static_assert(sizeof(BP_EnemyCommon_C_GetHasDeathReactionHappened) == 0x000001, "Wrong size on BP_EnemyCommon_C_GetHasDeathReactionHappened");
static_assert(offsetof(BP_EnemyCommon_C_GetHasDeathReactionHappened, HasDied) == 0x000000, "Member 'BP_EnemyCommon_C_GetHasDeathReactionHappened::HasDied' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetMobPlayerCollision
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyCommon_C_GetMobPlayerCollision final
{
public:
	class UCapsuleComponent*                      MobPlayerCollission;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_GetMobPlayerCollision) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_GetMobPlayerCollision");
static_assert(sizeof(BP_EnemyCommon_C_GetMobPlayerCollision) == 0x000008, "Wrong size on BP_EnemyCommon_C_GetMobPlayerCollision");
static_assert(offsetof(BP_EnemyCommon_C_GetMobPlayerCollision, MobPlayerCollission) == 0x000000, "Member 'BP_EnemyCommon_C_GetMobPlayerCollision::MobPlayerCollission' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setStartBurrowed
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyCommon_C_SetStartBurrowed final
{
public:
	bool                                          beginBurrowed;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SetStartBurrowed) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_SetStartBurrowed");
static_assert(sizeof(BP_EnemyCommon_C_SetStartBurrowed) == 0x000002, "Wrong size on BP_EnemyCommon_C_SetStartBurrowed");
static_assert(offsetof(BP_EnemyCommon_C_SetStartBurrowed, beginBurrowed) == 0x000000, "Member 'BP_EnemyCommon_C_SetStartBurrowed::beginBurrowed' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetStartBurrowed, Success) == 0x000001, "Member 'BP_EnemyCommon_C_SetStartBurrowed::Success' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setOrderTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyCommon_C_SetOrderTarget final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SetOrderTarget) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_SetOrderTarget");
static_assert(sizeof(BP_EnemyCommon_C_SetOrderTarget) == 0x000010, "Wrong size on BP_EnemyCommon_C_SetOrderTarget");
static_assert(offsetof(BP_EnemyCommon_C_SetOrderTarget, Location) == 0x000000, "Member 'BP_EnemyCommon_C_SetOrderTarget::Location' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetOrderTarget, Success) == 0x00000C, "Member 'BP_EnemyCommon_C_SetOrderTarget::Success' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.hitscanWeaponFired
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_HitscanWeaponFired final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_HitscanWeaponFired) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_HitscanWeaponFired");
static_assert(sizeof(BP_EnemyCommon_C_HitscanWeaponFired) == 0x000001, "Wrong size on BP_EnemyCommon_C_HitscanWeaponFired");
static_assert(offsetof(BP_EnemyCommon_C_HitscanWeaponFired, Success) == 0x000000, "Member 'BP_EnemyCommon_C_HitscanWeaponFired::Success' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_GetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_GetMostSuitableMeleeSection");
static_assert(sizeof(BP_EnemyCommon_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong size on BP_EnemyCommon_C_GetMostSuitableMeleeSection");
static_assert(offsetof(BP_EnemyCommon_C_GetMostSuitableMeleeSection, Value) == 0x000000, "Member 'BP_EnemyCommon_C_GetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.getAggroState
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_GetAggroState final
{
public:
	bool                                          Aggro;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_GetAggroState) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_GetAggroState");
static_assert(sizeof(BP_EnemyCommon_C_GetAggroState) == 0x000001, "Wrong size on BP_EnemyCommon_C_GetAggroState");
static_assert(offsetof(BP_EnemyCommon_C_GetAggroState, Aggro) == 0x000000, "Member 'BP_EnemyCommon_C_GetAggroState::Aggro' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setNewAggro
// 0x0038 (0x0038 - 0x0000)
struct BP_EnemyCommon_C_SetNewAggro final
{
public:
	bool                                          NewAggro;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CombatInterface_C> K2Node_DynamicCast_AsBPI_Combat_Interface;         // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_setNewAggro_success;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SetNewAggro) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_SetNewAggro");
static_assert(sizeof(BP_EnemyCommon_C_SetNewAggro) == 0x000038, "Wrong size on BP_EnemyCommon_C_SetNewAggro");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, NewAggro) == 0x000000, "Member 'BP_EnemyCommon_C_SetNewAggro::NewAggro' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, Success) == 0x000001, "Member 'BP_EnemyCommon_C_SetNewAggro::Success' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'BP_EnemyCommon_C_SetNewAggro::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, CallFunc_GetValueAsFloat_ReturnValue) == 0x000010, "Member 'BP_EnemyCommon_C_SetNewAggro::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, CallFunc_GetAIController_ReturnValue) == 0x000018, "Member 'BP_EnemyCommon_C_SetNewAggro::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, K2Node_DynamicCast_AsBPI_Combat_Interface) == 0x000020, "Member 'BP_EnemyCommon_C_SetNewAggro::K2Node_DynamicCast_AsBPI_Combat_Interface' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_EnemyCommon_C_SetNewAggro::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetNewAggro, CallFunc_setNewAggro_success) == 0x000031, "Member 'BP_EnemyCommon_C_SetNewAggro::CallFunc_setNewAggro_success' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.IncrementJac3ProneCounter
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyCommon_C_IncrementJac3ProneCounter final
{
public:
	int32                                         ProneCounter;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_IncrementJac3ProneCounter) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_IncrementJac3ProneCounter");
static_assert(sizeof(BP_EnemyCommon_C_IncrementJac3ProneCounter) == 0x000004, "Wrong size on BP_EnemyCommon_C_IncrementJac3ProneCounter");
static_assert(offsetof(BP_EnemyCommon_C_IncrementJac3ProneCounter, ProneCounter) == 0x000000, "Member 'BP_EnemyCommon_C_IncrementJac3ProneCounter::ProneCounter' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetCharacterSize
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_GetCharacterSize final
{
public:
	ECharacterSize                                Size_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_GetCharacterSize) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_GetCharacterSize");
static_assert(sizeof(BP_EnemyCommon_C_GetCharacterSize) == 0x000001, "Wrong size on BP_EnemyCommon_C_GetCharacterSize");
static_assert(offsetof(BP_EnemyCommon_C_GetCharacterSize, Size_0) == 0x000000, "Member 'BP_EnemyCommon_C_GetCharacterSize::Size_0' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.getCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_GetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CemeteryCreatureType;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_GetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_GetCemeteryCreatureType");
static_assert(sizeof(BP_EnemyCommon_C_GetCemeteryCreatureType) == 0x000001, "Wrong size on BP_EnemyCommon_C_GetCemeteryCreatureType");
static_assert(offsetof(BP_EnemyCommon_C_GetCemeteryCreatureType, CemeteryCreatureType) == 0x000000, "Member 'BP_EnemyCommon_C_GetCemeteryCreatureType::CemeteryCreatureType' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setCanCirculate
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyCommon_C_SetCanCirculate final
{
public:
	bool                                          CanCirculate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SetCanCirculate) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_SetCanCirculate");
static_assert(sizeof(BP_EnemyCommon_C_SetCanCirculate) == 0x000002, "Wrong size on BP_EnemyCommon_C_SetCanCirculate");
static_assert(offsetof(BP_EnemyCommon_C_SetCanCirculate, CanCirculate) == 0x000000, "Member 'BP_EnemyCommon_C_SetCanCirculate::CanCirculate' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetCanCirculate, Success) == 0x000001, "Member 'BP_EnemyCommon_C_SetCanCirculate::Success' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setStartOnWall
// 0x0002 (0x0002 - 0x0000)
struct BP_EnemyCommon_C_SetStartOnWall final
{
public:
	bool                                          StartOnWall;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SetStartOnWall) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_SetStartOnWall");
static_assert(sizeof(BP_EnemyCommon_C_SetStartOnWall) == 0x000002, "Wrong size on BP_EnemyCommon_C_SetStartOnWall");
static_assert(offsetof(BP_EnemyCommon_C_SetStartOnWall, StartOnWall) == 0x000000, "Member 'BP_EnemyCommon_C_SetStartOnWall::StartOnWall' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetStartOnWall, Success) == 0x000001, "Member 'BP_EnemyCommon_C_SetStartOnWall::Success' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.AimedAt
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_AimedAt final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_AimedAt) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_AimedAt");
static_assert(sizeof(BP_EnemyCommon_C_AimedAt) == 0x000001, "Wrong size on BP_EnemyCommon_C_AimedAt");
static_assert(offsetof(BP_EnemyCommon_C_AimedAt, Return) == 0x000000, "Member 'BP_EnemyCommon_C_AimedAt::Return' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.GetUpgradeComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyCommon_C_GetUpgradeComponent final
{
public:
	class UWeaponUpgradeComponent_C*              UpgradeComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_GetUpgradeComponent) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_GetUpgradeComponent");
static_assert(sizeof(BP_EnemyCommon_C_GetUpgradeComponent) == 0x000008, "Wrong size on BP_EnemyCommon_C_GetUpgradeComponent");
static_assert(offsetof(BP_EnemyCommon_C_GetUpgradeComponent, UpgradeComponent) == 0x000000, "Member 'BP_EnemyCommon_C_GetUpgradeComponent::UpgradeComponent' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.FlashlightHit
// 0x0030 (0x0030 - 0x0000)
struct BP_EnemyCommon_C_FlashlightHit final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_FlashlightHit) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_FlashlightHit");
static_assert(sizeof(BP_EnemyCommon_C_FlashlightHit) == 0x000030, "Wrong size on BP_EnemyCommon_C_FlashlightHit");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, Distance) == 0x000000, "Member 'BP_EnemyCommon_C_FlashlightHit::Distance' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, Success) == 0x000004, "Member 'BP_EnemyCommon_C_FlashlightHit::Success' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'BP_EnemyCommon_C_FlashlightHit::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, CallFunc_MakeLiteralName_ReturnValue) == 0x00000C, "Member 'BP_EnemyCommon_C_FlashlightHit::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'BP_EnemyCommon_C_FlashlightHit::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, CallFunc_GetValueAsFloat_ReturnValue) == 0x000020, "Member 'BP_EnemyCommon_C_FlashlightHit::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_EnemyCommon_C_FlashlightHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_FlashlightHit, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_EnemyCommon_C_FlashlightHit::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.removeComponentByTag
// 0x0038 (0x0038 - 0x0000)
struct BP_EnemyCommon_C_RemoveComponentByTag final
{
public:
	class FName                                   Tag;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UActorComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_RemoveComponentByTag) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_RemoveComponentByTag");
static_assert(sizeof(BP_EnemyCommon_C_RemoveComponentByTag) == 0x000038, "Wrong size on BP_EnemyCommon_C_RemoveComponentByTag");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, Tag) == 0x000000, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::Tag' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, CallFunc_GetComponentsByTag_ReturnValue) == 0x000008, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveComponentByTag, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_EnemyCommon_C_RemoveComponentByTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.On Difficulty Changed
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyCommon_C_On_Difficulty_Changed final
{
public:
	EDifficulty                                   NewDifficulty;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_On_Difficulty_Changed) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_On_Difficulty_Changed");
static_assert(sizeof(BP_EnemyCommon_C_On_Difficulty_Changed) == 0x000018, "Wrong size on BP_EnemyCommon_C_On_Difficulty_Changed");
static_assert(offsetof(BP_EnemyCommon_C_On_Difficulty_Changed, NewDifficulty) == 0x000000, "Member 'BP_EnemyCommon_C_On_Difficulty_Changed::NewDifficulty' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_On_Difficulty_Changed, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_EnemyCommon_C_On_Difficulty_Changed::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_On_Difficulty_Changed, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000010, "Member 'BP_EnemyCommon_C_On_Difficulty_Changed::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.RandomizeColorTints
// 0x000C (0x000C - 0x0000)
struct BP_EnemyCommon_C_RandomizeColorTints final
{
public:
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_RandomizeColorTints) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_RandomizeColorTints");
static_assert(sizeof(BP_EnemyCommon_C_RandomizeColorTints) == 0x00000C, "Wrong size on BP_EnemyCommon_C_RandomizeColorTints");
static_assert(offsetof(BP_EnemyCommon_C_RandomizeColorTints, CallFunc_RandomFloatInRange_ReturnValue) == 0x000000, "Member 'BP_EnemyCommon_C_RandomizeColorTints::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RandomizeColorTints, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x000004, "Member 'BP_EnemyCommon_C_RandomizeColorTints::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RandomizeColorTints, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x000008, "Member 'BP_EnemyCommon_C_RandomizeColorTints::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.blackboardSetup
// 0x0090 (0x0090 - 0x0000)
struct BP_EnemyCommon_C_blackboardSetup final
{
public:
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_2;              // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PatrolPath_C*                       K2Node_DynamicCast_AsBP_Patrol_Path;               // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_3;              // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_4;              // 0x0088(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_blackboardSetup) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_blackboardSetup");
static_assert(sizeof(BP_EnemyCommon_C_blackboardSetup) == 0x000090, "Wrong size on BP_EnemyCommon_C_blackboardSetup");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_MakeLiteralName_ReturnValue) == 0x000000, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000020, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_GetBlackboard_ReturnValue_1) == 0x000028, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_GetBlackboard_ReturnValue_2) == 0x000038, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_GetBlackboard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, K2Node_DynamicCast_AsBP_Patrol_Path) == 0x000040, "Member 'BP_EnemyCommon_C_blackboardSetup::K2Node_DynamicCast_AsBP_Patrol_Path' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyCommon_C_blackboardSetup::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00004C, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000058, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_GetBlackboard_ReturnValue_3) == 0x000060, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_GetBlackboard_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_MakeLiteralName_ReturnValue_3) == 0x000068, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000074, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_MakeLiteralName_ReturnValue_4) == 0x000080, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_blackboardSetup, CallFunc_GetBlackboard_ReturnValue_4) == 0x000088, "Member 'BP_EnemyCommon_C_blackboardSetup::CallFunc_GetBlackboard_ReturnValue_4' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setDefendLocation
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyCommon_C_SetDefendLocation final
{
public:
	struct FVector                                DefendLocation;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_SetDefendLocation) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_SetDefendLocation");
static_assert(sizeof(BP_EnemyCommon_C_SetDefendLocation) == 0x000020, "Wrong size on BP_EnemyCommon_C_SetDefendLocation");
static_assert(offsetof(BP_EnemyCommon_C_SetDefendLocation, DefendLocation) == 0x000000, "Member 'BP_EnemyCommon_C_SetDefendLocation::DefendLocation' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetDefendLocation, CallFunc_MakeLiteralName_ReturnValue) == 0x00000C, "Member 'BP_EnemyCommon_C_SetDefendLocation::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetDefendLocation, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'BP_EnemyCommon_C_SetDefendLocation::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.removeFromGroupCombat
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyCommon_C_RemoveFromGroupCombat final
{
public:
	TArray<class ABP_Group_Combat_Master_C*>      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0000(0x0010)(ReferenceParm)
	class ABP_Group_Combat_Master_C*              CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_RemoveFromGroupCombat) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_RemoveFromGroupCombat");
static_assert(sizeof(BP_EnemyCommon_C_RemoveFromGroupCombat) == 0x000020, "Wrong size on BP_EnemyCommon_C_RemoveFromGroupCombat");
static_assert(offsetof(BP_EnemyCommon_C_RemoveFromGroupCombat, CallFunc_GetAllActorsOfClass_OutActors) == 0x000000, "Member 'BP_EnemyCommon_C_RemoveFromGroupCombat::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveFromGroupCombat, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_EnemyCommon_C_RemoveFromGroupCombat::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveFromGroupCombat, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_EnemyCommon_C_RemoveFromGroupCombat::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveFromGroupCombat, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'BP_EnemyCommon_C_RemoveFromGroupCombat::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_RemoveFromGroupCombat, CallFunc_IsValid_ReturnValue) == 0x00001D, "Member 'BP_EnemyCommon_C_RemoveFromGroupCombat::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.wakeUpFromSleep
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyCommon_C_WakeUpFromSleep final
{
public:
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_LoadClasses_ReturnValue;                  // 0x0028(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Ability;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateAbilityByClass_ReturnValue;    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_WakeUpFromSleep) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_WakeUpFromSleep");
static_assert(sizeof(BP_EnemyCommon_C_WakeUpFromSleep) == 0x000050, "Wrong size on BP_EnemyCommon_C_WakeUpFromSleep");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000000, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000010, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, CallFunc_LoadClasses_ReturnValue) == 0x000028, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::CallFunc_LoadClasses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, K2Node_ClassDynamicCast_AsGameplay_Ability) == 0x000040, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::K2Node_ClassDynamicCast_AsGameplay_Ability' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, K2Node_ClassDynamicCast_bSuccess) == 0x000048, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WakeUpFromSleep, CallFunc_TryActivateAbilityByClass_ReturnValue) == 0x000049, "Member 'BP_EnemyCommon_C_WakeUpFromSleep::CallFunc_TryActivateAbilityByClass_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setPatrolPathRef
// 0x0050 (0x0050 - 0x0000)
struct BP_EnemyCommon_C_SetPatrolPathRef final
{
public:
	TSoftObjectPtr<class ABP_PatrolPath_C>        Input;                                             // 0x0000(0x0028)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PatrolPath_C*                       K2Node_DynamicCast_AsBP_Patrol_Path;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_SetPatrolPathRef) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_SetPatrolPathRef");
static_assert(sizeof(BP_EnemyCommon_C_SetPatrolPathRef) == 0x000050, "Wrong size on BP_EnemyCommon_C_SetPatrolPathRef");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrolPathRef, Input) == 0x000000, "Member 'BP_EnemyCommon_C_SetPatrolPathRef::Input' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrolPathRef, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000028, "Member 'BP_EnemyCommon_C_SetPatrolPathRef::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrolPathRef, CallFunc_MakeLiteralName_ReturnValue) == 0x000030, "Member 'BP_EnemyCommon_C_SetPatrolPathRef::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrolPathRef, K2Node_DynamicCast_AsBP_Patrol_Path) == 0x000038, "Member 'BP_EnemyCommon_C_SetPatrolPathRef::K2Node_DynamicCast_AsBP_Patrol_Path' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrolPathRef, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_EnemyCommon_C_SetPatrolPathRef::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrolPathRef, CallFunc_GetBlackboard_ReturnValue) == 0x000048, "Member 'BP_EnemyCommon_C_SetPatrolPathRef::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.playAggroSounds
// 0x0040 (0x0040 - 0x0000)
struct BP_EnemyCommon_C_PlayAggroSounds final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_PlayAggroSounds) == 0x000010, "Wrong alignment on BP_EnemyCommon_C_PlayAggroSounds");
static_assert(sizeof(BP_EnemyCommon_C_PlayAggroSounds) == 0x000040, "Wrong size on BP_EnemyCommon_C_PlayAggroSounds");
static_assert(offsetof(BP_EnemyCommon_C_PlayAggroSounds, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_EnemyCommon_C_PlayAggroSounds::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_PlayAggroSounds, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_EnemyCommon_C_PlayAggroSounds::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_PlayAggroSounds, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'BP_EnemyCommon_C_PlayAggroSounds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_PlayAggroSounds, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'BP_EnemyCommon_C_PlayAggroSounds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_PlayAggroSounds, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000038, "Member 'BP_EnemyCommon_C_PlayAggroSounds::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.spawnGroupCombatActor
// 0x0070 (0x0070 - 0x0000)
struct BP_EnemyCommon_C_SpawnGroupCombatActor final
{
public:
	class ABP_Group_Combat_Master_C*              GroupCombatMasterActor;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	TArray<class ABP_Group_Combat_Master_C*>      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Group_Combat_Master_C*              CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Group_Combat_Master_C*              CallFunc_FinishSpawningActor_ReturnValue;          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SpawnGroupCombatActor) == 0x000010, "Wrong alignment on BP_EnemyCommon_C_SpawnGroupCombatActor");
static_assert(sizeof(BP_EnemyCommon_C_SpawnGroupCombatActor) == 0x000070, "Wrong size on BP_EnemyCommon_C_SpawnGroupCombatActor");
static_assert(offsetof(BP_EnemyCommon_C_SpawnGroupCombatActor, GroupCombatMasterActor) == 0x000000, "Member 'BP_EnemyCommon_C_SpawnGroupCombatActor::GroupCombatMasterActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnGroupCombatActor, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_EnemyCommon_C_SpawnGroupCombatActor::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnGroupCombatActor, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'BP_EnemyCommon_C_SpawnGroupCombatActor::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnGroupCombatActor, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_EnemyCommon_C_SpawnGroupCombatActor::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnGroupCombatActor, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_EnemyCommon_C_SpawnGroupCombatActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnGroupCombatActor, CallFunc_FinishSpawningActor_ReturnValue) == 0x000060, "Member 'BP_EnemyCommon_C_SpawnGroupCombatActor::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnGroupCombatActor, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'BP_EnemyCommon_C_SpawnGroupCombatActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setOrder
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyCommon_C_SetOrder final
{
public:
	struct FVector                                VectorValue;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_SetOrder) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_SetOrder");
static_assert(sizeof(BP_EnemyCommon_C_SetOrder) == 0x000020, "Wrong size on BP_EnemyCommon_C_SetOrder");
static_assert(offsetof(BP_EnemyCommon_C_SetOrder, VectorValue) == 0x000000, "Member 'BP_EnemyCommon_C_SetOrder::VectorValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetOrder, CallFunc_MakeLiteralName_ReturnValue) == 0x00000C, "Member 'BP_EnemyCommon_C_SetOrder::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetOrder, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'BP_EnemyCommon_C_SetOrder::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.Toggle Sight
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyCommon_C_Toggle_Sight final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionComponent*                 CallFunc_GetAIPerceptionComponent_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_Toggle_Sight) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_Toggle_Sight");
static_assert(sizeof(BP_EnemyCommon_C_Toggle_Sight) == 0x000018, "Wrong size on BP_EnemyCommon_C_Toggle_Sight");
static_assert(offsetof(BP_EnemyCommon_C_Toggle_Sight, bEnable) == 0x000000, "Member 'BP_EnemyCommon_C_Toggle_Sight::bEnable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_Toggle_Sight, CallFunc_GetAIController_ReturnValue) == 0x000008, "Member 'BP_EnemyCommon_C_Toggle_Sight::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_Toggle_Sight, CallFunc_GetAIPerceptionComponent_ReturnValue) == 0x000010, "Member 'BP_EnemyCommon_C_Toggle_Sight::CallFunc_GetAIPerceptionComponent_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.setPatrol
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyCommon_C_SetPatrol final
{
public:
	bool                                          ShouldPatrol_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_SetPatrol) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_SetPatrol");
static_assert(sizeof(BP_EnemyCommon_C_SetPatrol) == 0x000018, "Wrong size on BP_EnemyCommon_C_SetPatrol");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrol, ShouldPatrol_0) == 0x000000, "Member 'BP_EnemyCommon_C_SetPatrol::ShouldPatrol_0' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrol, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'BP_EnemyCommon_C_SetPatrol::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SetPatrol, CallFunc_GetBlackboard_ReturnValue) == 0x000010, "Member 'BP_EnemyCommon_C_SetPatrol::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.Apply Sleep if Applicable
// 0x0040 (0x0040 - 0x0000)
struct BP_EnemyCommon_C_Apply_Sleep_if_Applicable final
{
public:
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_LoadClasses_ReturnValue;                  // 0x0010(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Effect;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_Apply_Sleep_if_Applicable");
static_assert(sizeof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable) == 0x000040, "Wrong size on BP_EnemyCommon_C_Apply_Sleep_if_Applicable");
static_assert(offsetof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_EnemyCommon_C_Apply_Sleep_if_Applicable::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable, CallFunc_LoadClasses_ReturnValue) == 0x000010, "Member 'BP_EnemyCommon_C_Apply_Sleep_if_Applicable::CallFunc_LoadClasses_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EnemyCommon_C_Apply_Sleep_if_Applicable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable, K2Node_ClassDynamicCast_AsGameplay_Effect) == 0x000028, "Member 'BP_EnemyCommon_C_Apply_Sleep_if_Applicable::K2Node_ClassDynamicCast_AsGameplay_Effect' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable, K2Node_ClassDynamicCast_bSuccess) == 0x000030, "Member 'BP_EnemyCommon_C_Apply_Sleep_if_Applicable::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_Apply_Sleep_if_Applicable, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000034, "Member 'BP_EnemyCommon_C_Apply_Sleep_if_Applicable::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.SpawnWallHitVFX
// 0x0160 (0x0160 - 0x0000)
struct BP_EnemyCommon_C_SpawnWallHitVFX final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x010C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_118[0x8];                                      // 0x0118(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0120(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PushedIntoWallVFX_C*                CallFunc_FinishSpawningActor_ReturnValue;          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_SpawnWallHitVFX) == 0x000010, "Wrong alignment on BP_EnemyCommon_C_SpawnWallHitVFX");
static_assert(sizeof(BP_EnemyCommon_C_SpawnWallHitVFX) == 0x000160, "Wrong size on BP_EnemyCommon_C_SpawnWallHitVFX");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, Hit) == 0x000000, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::Hit' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_bBlockingHit) == 0x000088, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x000089, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_Time) == 0x00008C, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_Distance) == 0x000090, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_Location) == 0x000094, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_ImpactPoint) == 0x0000A0, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_Normal) == 0x0000AC, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_ImpactNormal) == 0x0000B8, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_PhysMat) == 0x0000C8, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_HitActor) == 0x0000D0, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_HitComponent) == 0x0000D8, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_HitBoneName) == 0x0000E0, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_HitItem) == 0x0000E8, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_ElementIndex) == 0x0000EC, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_FaceIndex) == 0x0000F0, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_TraceStart) == 0x0000F4, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BreakHitResult_TraceEnd) == 0x000100, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_MakeRotFromX_ReturnValue) == 0x00010C, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_MakeTransform_ReturnValue) == 0x000120, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000150, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_SpawnWallHitVFX, CallFunc_FinishSpawningActor_ReturnValue) == 0x000158, "Member 'BP_EnemyCommon_C_SpawnWallHitVFX::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.DestoryDamagePointComponents
// 0x0080 (0x0080 - 0x0000)
struct BP_EnemyCommon_C_DestoryDamagePointComponents final
{
public:
	TArray<class UDamagePoint*>                   DamagePoints;                                      // 0x0000(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class UDamagePointSequence*>           DamagePointSequences;                              // 0x0010(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDamagePointSequence*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UDamagePoint*                           CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDamagePointSequence*>           CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDamagePoint*>                   CallFunc_K2_GetComponentsByClass_ReturnValue_1;    // 0x0070(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_EnemyCommon_C_DestoryDamagePointComponents) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_DestoryDamagePointComponents");
static_assert(sizeof(BP_EnemyCommon_C_DestoryDamagePointComponents) == 0x000080, "Wrong size on BP_EnemyCommon_C_DestoryDamagePointComponents");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, DamagePoints) == 0x000000, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::DamagePoints' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, DamagePointSequences) == 0x000010, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::DamagePointSequences' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, Temp_int_Array_Index_Variable_1) == 0x000038, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000050, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, Temp_int_Loop_Counter_Variable_1) == 0x000060, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Less_IntInt_ReturnValue_1) == 0x000064, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_Add_IntInt_ReturnValue_1) == 0x000068, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_DestoryDamagePointComponents, CallFunc_K2_GetComponentsByClass_ReturnValue_1) == 0x000070, "Member 'BP_EnemyCommon_C_DestoryDamagePointComponents::CallFunc_K2_GetComponentsByClass_ReturnValue_1' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.OnHealthChangedEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_EnemyCommon_C_OnHealthChangedEvent final
{
public:
	float                                         DeltaValue;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SignificantDamage;                                 // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_OnHealthChangedEvent) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_OnHealthChangedEvent");
static_assert(sizeof(BP_EnemyCommon_C_OnHealthChangedEvent) == 0x000010, "Wrong size on BP_EnemyCommon_C_OnHealthChangedEvent");
static_assert(offsetof(BP_EnemyCommon_C_OnHealthChangedEvent, DeltaValue) == 0x000000, "Member 'BP_EnemyCommon_C_OnHealthChangedEvent::DeltaValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnHealthChangedEvent, SignificantDamage) == 0x000004, "Member 'BP_EnemyCommon_C_OnHealthChangedEvent::SignificantDamage' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnHealthChangedEvent, CallFunc_Less_FloatFloat_ReturnValue) == 0x000005, "Member 'BP_EnemyCommon_C_OnHealthChangedEvent::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnHealthChangedEvent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000008, "Member 'BP_EnemyCommon_C_OnHealthChangedEvent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.OnDeathEvent
// 0x0090 (0x0090 - 0x0000)
struct BP_EnemyCommon_C_OnDeathEvent final
{
public:
	struct FGameplayTagContainer                  Tags_0;                                            // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UOFAchievementTrackingSubsystem*        CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0070(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0080(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0088(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_OnDeathEvent) == 0x000010, "Wrong alignment on BP_EnemyCommon_C_OnDeathEvent");
static_assert(sizeof(BP_EnemyCommon_C_OnDeathEvent) == 0x000090, "Wrong size on BP_EnemyCommon_C_OnDeathEvent");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, Tags_0) == 0x000000, "Member 'BP_EnemyCommon_C_OnDeathEvent::Tags_0' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'BP_EnemyCommon_C_OnDeathEvent::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'BP_EnemyCommon_C_OnDeathEvent::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, CallFunc_GetController_ReturnValue) == 0x000060, "Member 'BP_EnemyCommon_C_OnDeathEvent::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000068, "Member 'BP_EnemyCommon_C_OnDeathEvent::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000070, "Member 'BP_EnemyCommon_C_OnDeathEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000080, "Member 'BP_EnemyCommon_C_OnDeathEvent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_OnDeathEvent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000088, "Member 'BP_EnemyCommon_C_OnDeathEvent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.OnLoaded_47F0ADFB4297F805BA211391D20F7C8F
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F");
static_assert(sizeof(BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F) == 0x000008, "Wrong size on BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F");
static_assert(offsetof(BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F, Loaded) == 0x000000, "Member 'BP_EnemyCommon_C_OnLoaded_47F0ADFB4297F805BA211391D20F7C8F::Loaded' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.SetCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_SetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CreatureType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_SetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_SetCemeteryCreatureType");
static_assert(sizeof(BP_EnemyCommon_C_SetCemeteryCreatureType) == 0x000001, "Wrong size on BP_EnemyCommon_C_SetCemeteryCreatureType");
static_assert(offsetof(BP_EnemyCommon_C_SetCemeteryCreatureType, CreatureType) == 0x000000, "Member 'BP_EnemyCommon_C_SetCemeteryCreatureType::CreatureType' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.QuicktimeInput
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyCommon_C_QuicktimeInput final
{
public:
	float                                         CurrentProgress;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxProgress;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_QuicktimeInput) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_QuicktimeInput");
static_assert(sizeof(BP_EnemyCommon_C_QuicktimeInput) == 0x000008, "Wrong size on BP_EnemyCommon_C_QuicktimeInput");
static_assert(offsetof(BP_EnemyCommon_C_QuicktimeInput, CurrentProgress) == 0x000000, "Member 'BP_EnemyCommon_C_QuicktimeInput::CurrentProgress' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_QuicktimeInput, MaxProgress) == 0x000004, "Member 'BP_EnemyCommon_C_QuicktimeInput::MaxProgress' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.MeleeAttackTranslate
// 0x0018 (0x0018 - 0x0000)
struct BP_EnemyCommon_C_MeleeAttackTranslate final
{
public:
	struct FVector                                StartVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndVector;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_MeleeAttackTranslate) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_MeleeAttackTranslate");
static_assert(sizeof(BP_EnemyCommon_C_MeleeAttackTranslate) == 0x000018, "Wrong size on BP_EnemyCommon_C_MeleeAttackTranslate");
static_assert(offsetof(BP_EnemyCommon_C_MeleeAttackTranslate, StartVector) == 0x000000, "Member 'BP_EnemyCommon_C_MeleeAttackTranslate::StartVector' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_MeleeAttackTranslate, EndVector) == 0x00000C, "Member 'BP_EnemyCommon_C_MeleeAttackTranslate::EndVector' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.ControlRotationFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_EnemyCommon_C_ControlRotationFocus final
{
public:
	class AActor*                                 FocusTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_ControlRotationFocus) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_ControlRotationFocus");
static_assert(sizeof(BP_EnemyCommon_C_ControlRotationFocus) == 0x000008, "Wrong size on BP_EnemyCommon_C_ControlRotationFocus");
static_assert(offsetof(BP_EnemyCommon_C_ControlRotationFocus, FocusTarget) == 0x000000, "Member 'BP_EnemyCommon_C_ControlRotationFocus::FocusTarget' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.SetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_SetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_SetMostSuitableMeleeSection");
static_assert(sizeof(BP_EnemyCommon_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong size on BP_EnemyCommon_C_SetMostSuitableMeleeSection");
static_assert(offsetof(BP_EnemyCommon_C_SetMostSuitableMeleeSection, Value) == 0x000000, "Member 'BP_EnemyCommon_C_SetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.updateBossHealthData
// 0x0004 (0x0004 - 0x0000)
struct BP_EnemyCommon_C_UpdateBossHealthData final
{
public:
	float                                         CurrentHealthPercentage;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_UpdateBossHealthData) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_UpdateBossHealthData");
static_assert(sizeof(BP_EnemyCommon_C_UpdateBossHealthData) == 0x000004, "Wrong size on BP_EnemyCommon_C_UpdateBossHealthData");
static_assert(offsetof(BP_EnemyCommon_C_UpdateBossHealthData, CurrentHealthPercentage) == 0x000000, "Member 'BP_EnemyCommon_C_UpdateBossHealthData::CurrentHealthPercentage' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.Receive Death Event
// 0x0020 (0x0020 - 0x0000)
struct BP_EnemyCommon_C_Receive_Death_Event final
{
public:
	struct FGameplayTagContainer                  EventTags;                                         // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_EnemyCommon_C_Receive_Death_Event) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_Receive_Death_Event");
static_assert(sizeof(BP_EnemyCommon_C_Receive_Death_Event) == 0x000020, "Wrong size on BP_EnemyCommon_C_Receive_Death_Event");
static_assert(offsetof(BP_EnemyCommon_C_Receive_Death_Event, EventTags) == 0x000000, "Member 'BP_EnemyCommon_C_Receive_Death_Event::EventTags' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.ReceiveHealthChangedEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_EnemyCommon_C_ReceiveHealthChangedEvent final
{
public:
	float                                         NewCurrentHealth;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  EventTags;                                         // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_EnemyCommon_C_ReceiveHealthChangedEvent) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_ReceiveHealthChangedEvent");
static_assert(sizeof(BP_EnemyCommon_C_ReceiveHealthChangedEvent) == 0x000028, "Wrong size on BP_EnemyCommon_C_ReceiveHealthChangedEvent");
static_assert(offsetof(BP_EnemyCommon_C_ReceiveHealthChangedEvent, NewCurrentHealth) == 0x000000, "Member 'BP_EnemyCommon_C_ReceiveHealthChangedEvent::NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ReceiveHealthChangedEvent, DeltaValue) == 0x000004, "Member 'BP_EnemyCommon_C_ReceiveHealthChangedEvent::DeltaValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ReceiveHealthChangedEvent, EventTags) == 0x000008, "Member 'BP_EnemyCommon_C_ReceiveHealthChangedEvent::EventTags' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.onSleepChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_OnSleepChanged final
{
public:
	bool                                          IsSleeping;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_OnSleepChanged) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_OnSleepChanged");
static_assert(sizeof(BP_EnemyCommon_C_OnSleepChanged) == 0x000001, "Wrong size on BP_EnemyCommon_C_OnSleepChanged");
static_assert(offsetof(BP_EnemyCommon_C_OnSleepChanged, IsSleeping) == 0x000000, "Member 'BP_EnemyCommon_C_OnSleepChanged::IsSleeping' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.aggroEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_AggroEvent final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_AggroEvent) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_AggroEvent");
static_assert(sizeof(BP_EnemyCommon_C_AggroEvent) == 0x000001, "Wrong size on BP_EnemyCommon_C_AggroEvent");
static_assert(offsetof(BP_EnemyCommon_C_AggroEvent, bEnabled) == 0x000000, "Member 'BP_EnemyCommon_C_AggroEvent::bEnabled' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.WeaponHit
// 0x00C0 (0x00C0 - 0x0000)
struct BP_EnemyCommon_C_WeaponHit final
{
public:
	class AActor*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Payload;                                           // 0x0010(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_EnemyCommon_C_WeaponHit) == 0x000008, "Wrong alignment on BP_EnemyCommon_C_WeaponHit");
static_assert(sizeof(BP_EnemyCommon_C_WeaponHit) == 0x0000C0, "Wrong size on BP_EnemyCommon_C_WeaponHit");
static_assert(offsetof(BP_EnemyCommon_C_WeaponHit, Weapon) == 0x000000, "Member 'BP_EnemyCommon_C_WeaponHit::Weapon' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WeaponHit, EventTag) == 0x000008, "Member 'BP_EnemyCommon_C_WeaponHit::EventTag' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_WeaponHit, Payload) == 0x000010, "Member 'BP_EnemyCommon_C_WeaponHit::Payload' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.MoveToGrappleLocatio
// 0x000C (0x000C - 0x0000)
struct BP_EnemyCommon_C_MoveToGrappleLocatio final
{
public:
	struct FVector                                Grapple_Location;                                  // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EnemyCommon_C_MoveToGrappleLocatio) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_MoveToGrappleLocatio");
static_assert(sizeof(BP_EnemyCommon_C_MoveToGrappleLocatio) == 0x00000C, "Wrong size on BP_EnemyCommon_C_MoveToGrappleLocatio");
static_assert(offsetof(BP_EnemyCommon_C_MoveToGrappleLocatio, Grapple_Location) == 0x000000, "Member 'BP_EnemyCommon_C_MoveToGrappleLocatio::Grapple_Location' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.SpawnCharacterDecal
// 0x0088 (0x0088 - 0x0000)
struct BP_EnemyCommon_C_SpawnCharacterDecal final
{
public:
	struct FHitResult                             HitResult;                                         // 0x0000(0x0088)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EnemyCommon_C_SpawnCharacterDecal) == 0x000004, "Wrong alignment on BP_EnemyCommon_C_SpawnCharacterDecal");
static_assert(sizeof(BP_EnemyCommon_C_SpawnCharacterDecal) == 0x000088, "Wrong size on BP_EnemyCommon_C_SpawnCharacterDecal");
static_assert(offsetof(BP_EnemyCommon_C_SpawnCharacterDecal, HitResult) == 0x000000, "Member 'BP_EnemyCommon_C_SpawnCharacterDecal::HitResult' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.SetHasBeenBurned
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_SetHasBeenBurned final
{
public:
	bool                                          HasBeenBurned_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SetHasBeenBurned) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_SetHasBeenBurned");
static_assert(sizeof(BP_EnemyCommon_C_SetHasBeenBurned) == 0x000001, "Wrong size on BP_EnemyCommon_C_SetHasBeenBurned");
static_assert(offsetof(BP_EnemyCommon_C_SetHasBeenBurned, HasBeenBurned_0) == 0x000000, "Member 'BP_EnemyCommon_C_SetHasBeenBurned::HasBeenBurned_0' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.SetHasDeathReactionHappened
// 0x0001 (0x0001 - 0x0000)
struct BP_EnemyCommon_C_SetHasDeathReactionHappened final
{
public:
	bool                                          HasDied;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_SetHasDeathReactionHappened) == 0x000001, "Wrong alignment on BP_EnemyCommon_C_SetHasDeathReactionHappened");
static_assert(sizeof(BP_EnemyCommon_C_SetHasDeathReactionHappened) == 0x000001, "Wrong size on BP_EnemyCommon_C_SetHasDeathReactionHappened");
static_assert(offsetof(BP_EnemyCommon_C_SetHasDeathReactionHappened, HasDied) == 0x000000, "Member 'BP_EnemyCommon_C_SetHasDeathReactionHappened::HasDied' has a wrong offset!");

// Function BP_EnemyCommon.BP_EnemyCommon_C.ExecuteUbergraph_BP_EnemyCommon
// 0x04B0 (0x04B0 - 0x0000)
struct BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOFSaveGameDataSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECemeteryCreatureType                         K2Node_Event_CreatureType;                         // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentProgress;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxProgress;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_StartVector;                          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndVector;                            // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_FocusTarget;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationMontageIdentifier                   K2Node_Event_Value;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_currentHealthPercentage;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_EventTags_1;                    // 0x0068(0x0020)(ConstParm)
	float                                         K2Node_CustomEvent_NewCurrentHealth;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaValue;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_EventTags;                      // 0x0090(0x0020)(ConstParm)
	bool                                          CallFunc_OnHealthChangedEvent_SignificantDamage;   // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFAnimInstance*                        K2Node_DynamicCast_AsOFAnim_Instance;              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_isSleeping;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bEnabled;                       // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Group_Combat_Master_C*              CallFunc_spawnGroupCombatActor_GroupCombatMasterActor; // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Weapon;                               // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x0108(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_Payload;                              // 0x0110(0x00B0)()
	class FName                                   K2Node_Select_Default;                             // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C9[0x3];                                      // 0x01C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x01CC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float NewCurrentHealth, float DeltaValue, struct FGameplayTagContainer& EventTags)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0210(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Grapple_Location;                     // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0230(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x02B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_343[0x1];                                      // 0x0343(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x034C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0364(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0370(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0390(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x03AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x03B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x03C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D4[0xC];                                      // 0x03D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Conv_VectorToQuaternion_ReturnValue;      // 0x03E0(0x0010)(IsPlainOldData, NoDestructor)
	int32                                         CallFunc_SpawnDecal_ReturnValue;                   // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bEnabled)>                K2Node_CreateDelegate_OutputDelegate_2;            // 0x03F4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCharacterPool*                         CallFunc_GetOwningPool_ReturnValue;                // 0x0408(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_412[0x6];                                      // 0x0412(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0424(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0438(0x0008)(NoDestructor, HasGetValueTypeHash)
	TArray<class UMeleeWeaponComponent_C*>        CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0440(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UMeleeWeaponComponent_C*                CallFunc_Array_Get_Item;                           // 0x0450(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x045C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45D[0x3];                                      // 0x045D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_HasBeenBurned;                        // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBehaviourTreeRunning_ReturnValue;       // 0x046A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46B[0x1];                                      // 0x046B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FGameplayTagContainer& EventTags)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x046C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EDifficulty NewDifficulty)>    K2Node_CreateDelegate_OutputDelegate_5;            // 0x047C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_HasDied;                              // 0x048C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_48D[0x3];                                      // 0x048D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0490(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_EnemyThreat_C*                     K2Node_DynamicCast_AsWBP_Enemy_Threat;             // 0x0498(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon) == 0x000010, "Wrong alignment on BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon");
static_assert(sizeof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon) == 0x0004B0, "Wrong size on BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, EntryPoint) == 0x000000, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_name_Variable) == 0x000004, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_name_Variable_1) == 0x00000C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CustomEvent_Loaded) == 0x000018, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_object_Variable) == 0x000020, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_bool_Variable) == 0x000034, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_CreatureType) == 0x000035, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_CreatureType' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_CurrentProgress) == 0x000038, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_CurrentProgress' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_MaxProgress) == 0x00003C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_MaxProgress' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_StartVector) == 0x000040, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_StartVector' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_EndVector) == 0x00004C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_EndVector' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_FocusTarget) == 0x000058, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_FocusTarget' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_Value) == 0x000060, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_currentHealthPercentage) == 0x000064, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_currentHealthPercentage' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CustomEvent_EventTags_1) == 0x000068, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CustomEvent_EventTags_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CustomEvent_NewCurrentHealth) == 0x000088, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CustomEvent_NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CustomEvent_DeltaValue) == 0x00008C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CustomEvent_DeltaValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CustomEvent_EventTags) == 0x000090, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CustomEvent_EventTags' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_OnHealthChangedEvent_SignificantDamage) == 0x0000B0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_OnHealthChangedEvent_SignificantDamage' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_bool_IsClosed_Variable) == 0x0000B1, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_GetAnimInstance_ReturnValue) == 0x0000B8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_DynamicCast_AsOFAnim_Instance) == 0x0000C8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_DynamicCast_AsOFAnim_Instance' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D4, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CustomEvent_isSleeping) == 0x0000E0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CustomEvent_isSleeping' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CustomEvent_bEnabled) == 0x0000E1, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CustomEvent_bEnabled' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_spawnGroupCombatActor_GroupCombatMasterActor) == 0x0000E8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_spawnGroupCombatActor_GroupCombatMasterActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_IsValid_ReturnValue_1) == 0x0000F0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_int_Loop_Counter_Variable) == 0x0000F4, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_Add_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_DoesSocketExist_ReturnValue) == 0x0000FC, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_Weapon) == 0x000100, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_Weapon' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_EventTag) == 0x000108, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_Payload) == 0x000110, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Select_Default) == 0x0001C0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0001C8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0001CC, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CreateDelegate_OutputDelegate) == 0x0001D4, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0001E4, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001E8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001F8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_DynamicCast_AsNiagara_System) == 0x000200, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_DynamicCast_bSuccess_1) == 0x000208, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000210, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_Grapple_Location) == 0x000218, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_Grapple_Location' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_VLerp_ReturnValue) == 0x000224, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_HitResult) == 0x000230, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0002B8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000340, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_bBlockingHit) == 0x000341, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_bInitialOverlap) == 0x000342, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_Time) == 0x000344, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_Distance) == 0x000348, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_Location) == 0x00034C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_ImpactPoint) == 0x000358, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_Normal) == 0x000364, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_ImpactNormal) == 0x000370, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_PhysMat) == 0x000380, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_HitActor) == 0x000388, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_HitComponent) == 0x000390, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_HitBoneName) == 0x000398, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_HitItem) == 0x0003A0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_ElementIndex) == 0x0003A4, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_FaceIndex) == 0x0003A8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_TraceStart) == 0x0003AC, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_BreakHitResult_TraceEnd) == 0x0003B8, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0003C4, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_RandomIntegerInRange_ReturnValue) == 0x0003D0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_Conv_VectorToQuaternion_ReturnValue) == 0x0003E0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_Conv_VectorToQuaternion_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_SpawnDecal_ReturnValue) == 0x0003F0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_SpawnDecal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CreateDelegate_OutputDelegate_2) == 0x0003F4, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_GetOwningPool_ReturnValue) == 0x000408, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_GetOwningPool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_IsValid_ReturnValue_2) == 0x000410, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, Temp_bool_Has_Been_Initd_Variable) == 0x000411, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000418, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_GetDistanceTo_ReturnValue) == 0x000420, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CreateDelegate_OutputDelegate_3) == 0x000424, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_MapRangeClamped_ReturnValue) == 0x000434, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000438, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000440, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_Array_Get_Item) == 0x000450, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_Array_Length_ReturnValue) == 0x000458, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_Less_IntInt_ReturnValue) == 0x00045C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_GetAIController_ReturnValue) == 0x000460, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_HasBeenBurned) == 0x000468, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_HasBeenBurned' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_IsValid_ReturnValue_3) == 0x000469, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_IsBehaviourTreeRunning_ReturnValue) == 0x00046A, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_IsBehaviourTreeRunning_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CreateDelegate_OutputDelegate_4) == 0x00046C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_CreateDelegate_OutputDelegate_5) == 0x00047C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_Event_HasDied) == 0x00048C, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_Event_HasDied' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, CallFunc_GetWidget_ReturnValue) == 0x000490, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_DynamicCast_AsWBP_Enemy_Threat) == 0x000498, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_DynamicCast_AsWBP_Enemy_Threat' has a wrong offset!");
static_assert(offsetof(BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon, K2Node_DynamicCast_bSuccess_2) == 0x0004A0, "Member 'BP_EnemyCommon_C_ExecuteUbergraph_BP_EnemyCommon::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

}

