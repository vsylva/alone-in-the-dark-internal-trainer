#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_JeanBatiste

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ENPCLocation_Batiste_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ENPCLocation_Ruth_structs.hpp"
#include "ENPCLocation_Grace_structs.hpp"
#include "ENPCGrayAptLocation_structs.hpp"


namespace SDK::Params
{

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.ExecuteUbergraph_ABP_JeanBatiste
// 0x0038 (0x0038 - 0x0000)
struct ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCLocation_Ruth                             K2Node_Event_Value_3;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCGrayAptLocation                           K2Node_Event_Value_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCLocation_Grace                            K2Node_Event_Value_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCLocation_Batiste                          K2Node_Event_Value;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NPC_C>            K2Node_DynamicCast_AsBPI_NPC;                      // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasPlayedAllDialogs_Value;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste) == 0x000008, "Wrong alignment on ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste");
static_assert(sizeof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste) == 0x000038, "Wrong size on ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, EntryPoint) == 0x000000, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, K2Node_Event_Value_3) == 0x000004, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, K2Node_Event_Value_1) == 0x000005, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::K2Node_Event_Value_1' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, K2Node_Event_Value_2) == 0x000006, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000010, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, K2Node_Event_Value) == 0x000018, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, K2Node_DynamicCast_AsBPI_NPC) == 0x000020, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::K2Node_DynamicCast_AsBPI_NPC' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste, CallFunc_HasPlayedAllDialogs_Value) == 0x000031, "Member 'ABP_JeanBatiste_C_ExecuteUbergraph_ABP_JeanBatiste::CallFunc_HasPlayedAllDialogs_Value' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.SetBatisteLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_JeanBatiste_C_SetBatisteLocation final
{
public:
	ENPCLocation_Batiste                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_JeanBatiste_C_SetBatisteLocation) == 0x000001, "Wrong alignment on ABP_JeanBatiste_C_SetBatisteLocation");
static_assert(sizeof(ABP_JeanBatiste_C_SetBatisteLocation) == 0x000001, "Wrong size on ABP_JeanBatiste_C_SetBatisteLocation");
static_assert(offsetof(ABP_JeanBatiste_C_SetBatisteLocation, Value) == 0x000000, "Member 'ABP_JeanBatiste_C_SetBatisteLocation::Value' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_JeanBatiste_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_JeanBatiste_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_JeanBatiste_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_JeanBatiste_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_JeanBatiste_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_JeanBatiste_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_JeanBatiste_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.SetGraysAptLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_JeanBatiste_C_SetGraysAptLocation final
{
public:
	ENPCGrayAptLocation                           Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_JeanBatiste_C_SetGraysAptLocation) == 0x000001, "Wrong alignment on ABP_JeanBatiste_C_SetGraysAptLocation");
static_assert(sizeof(ABP_JeanBatiste_C_SetGraysAptLocation) == 0x000001, "Wrong size on ABP_JeanBatiste_C_SetGraysAptLocation");
static_assert(offsetof(ABP_JeanBatiste_C_SetGraysAptLocation, Value) == 0x000000, "Member 'ABP_JeanBatiste_C_SetGraysAptLocation::Value' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.SetGraceLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_JeanBatiste_C_SetGraceLocation final
{
public:
	ENPCLocation_Grace                            Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_JeanBatiste_C_SetGraceLocation) == 0x000001, "Wrong alignment on ABP_JeanBatiste_C_SetGraceLocation");
static_assert(sizeof(ABP_JeanBatiste_C_SetGraceLocation) == 0x000001, "Wrong size on ABP_JeanBatiste_C_SetGraceLocation");
static_assert(offsetof(ABP_JeanBatiste_C_SetGraceLocation, Value) == 0x000000, "Member 'ABP_JeanBatiste_C_SetGraceLocation::Value' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.SetRuthLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_JeanBatiste_C_SetRuthLocation final
{
public:
	ENPCLocation_Ruth                             Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_JeanBatiste_C_SetRuthLocation) == 0x000001, "Wrong alignment on ABP_JeanBatiste_C_SetRuthLocation");
static_assert(sizeof(ABP_JeanBatiste_C_SetRuthLocation) == 0x000001, "Wrong size on ABP_JeanBatiste_C_SetRuthLocation");
static_assert(offsetof(ABP_JeanBatiste_C_SetRuthLocation, Value) == 0x000000, "Member 'ABP_JeanBatiste_C_SetRuthLocation::Value' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_JeanBatiste_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_JeanBatiste_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_JeanBatiste_C_AnimGraph");
static_assert(sizeof(ABP_JeanBatiste_C_AnimGraph) == 0x000010, "Wrong size on ABP_JeanBatiste_C_AnimGraph");
static_assert(offsetof(ABP_JeanBatiste_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_JeanBatiste_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.FootIKLayer
// 0x0028 (0x0028 - 0x0000)
struct ABP_JeanBatiste_C_FootIKLayer final
{
public:
	struct FPoseLink                              FootIKInputPose;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UOFCharacterMovementComponent*          MovementComponent;                                 // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseLink                              FootIKLayer_0;                                     // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_JeanBatiste_C_FootIKLayer) == 0x000008, "Wrong alignment on ABP_JeanBatiste_C_FootIKLayer");
static_assert(sizeof(ABP_JeanBatiste_C_FootIKLayer) == 0x000028, "Wrong size on ABP_JeanBatiste_C_FootIKLayer");
static_assert(offsetof(ABP_JeanBatiste_C_FootIKLayer, FootIKInputPose) == 0x000000, "Member 'ABP_JeanBatiste_C_FootIKLayer::FootIKInputPose' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_FootIKLayer, MovementComponent) == 0x000010, "Member 'ABP_JeanBatiste_C_FootIKLayer::MovementComponent' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_FootIKLayer, FootIKLayer_0) == 0x000018, "Member 'ABP_JeanBatiste_C_FootIKLayer::FootIKLayer_0' has a wrong offset!");

// Function ABP_JeanBatiste.ABP_JeanBatiste_C.BodyFocusLayer
// 0x01B0 (0x01B0 - 0x0000)
struct ABP_JeanBatiste_C_BodyFocusLayer final
{
public:
	struct FPoseLink                              BodyFocusLayerInputPose;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFocusPointsVariables                  FocusPointSettings;                                // 0x0010(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FPoseLink                              BodyFocusLayer_0;                                  // 0x01A0(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_JeanBatiste_C_BodyFocusLayer) == 0x000008, "Wrong alignment on ABP_JeanBatiste_C_BodyFocusLayer");
static_assert(sizeof(ABP_JeanBatiste_C_BodyFocusLayer) == 0x0001B0, "Wrong size on ABP_JeanBatiste_C_BodyFocusLayer");
static_assert(offsetof(ABP_JeanBatiste_C_BodyFocusLayer, BodyFocusLayerInputPose) == 0x000000, "Member 'ABP_JeanBatiste_C_BodyFocusLayer::BodyFocusLayerInputPose' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_BodyFocusLayer, FocusPointSettings) == 0x000010, "Member 'ABP_JeanBatiste_C_BodyFocusLayer::FocusPointSettings' has a wrong offset!");
static_assert(offsetof(ABP_JeanBatiste_C_BodyFocusLayer, BodyFocusLayer_0) == 0x0001A0, "Member 'ABP_JeanBatiste_C_BodyFocusLayer::BodyFocusLayer_0' has a wrong offset!");

}

