#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesWorldTransition

#include "Basic.hpp"


namespace SDK::Params
{

// Function PiecesWorldTransition.PiecesWorldTransition_BFL.LoadAutoSaveAndTravelToLevel
// 0x0010 (0x0010 - 0x0000)
struct PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel) == 0x000008, "Wrong alignment on PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel");
static_assert(sizeof(PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel) == 0x000010, "Wrong size on PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel");
static_assert(offsetof(PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel, WorldContextObject) == 0x000000, "Member 'PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel, ReturnValue) == 0x000008, "Member 'PiecesWorldTransition_BFL_LoadAutoSaveAndTravelToLevel::ReturnValue' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_BFL.LoadLatestSaveAndTravelToLevel
// 0x0010 (0x0010 - 0x0000)
struct PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel) == 0x000008, "Wrong alignment on PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel");
static_assert(sizeof(PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel) == 0x000010, "Wrong size on PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel");
static_assert(offsetof(PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel, WorldContextObject) == 0x000000, "Member 'PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel, ReturnValue) == 0x000008, "Member 'PiecesWorldTransition_BFL_LoadLatestSaveAndTravelToLevel::ReturnValue' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_BFL.LoadSaveFromSlotAndTravelToLevel
// 0x0010 (0x0010 - 0x0000)
struct PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InSlotIndex;                                       // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel) == 0x000008, "Wrong alignment on PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel");
static_assert(sizeof(PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel) == 0x000010, "Wrong size on PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel");
static_assert(offsetof(PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel, WorldContextObject) == 0x000000, "Member 'PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel, InSlotIndex) == 0x000008, "Member 'PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel::InSlotIndex' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel, ReturnValue) == 0x00000C, "Member 'PiecesWorldTransition_BFL_LoadSaveFromSlotAndTravelToLevel::ReturnValue' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_BFL.TravelToLevel
// 0x0040 (0x0040 - 0x0000)
struct PiecesWorldTransition_BFL_TravelToLevel final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UWorld>                  InLevel;                                           // 0x0008(0x0028)(ConstParm, Parm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class ULoadingScreen_Widget>      WidgetType;                                        // 0x0030(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ULoadingScreen_Widget*                  ReturnValue;                                       // 0x0038(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesWorldTransition_BFL_TravelToLevel) == 0x000008, "Wrong alignment on PiecesWorldTransition_BFL_TravelToLevel");
static_assert(sizeof(PiecesWorldTransition_BFL_TravelToLevel) == 0x000040, "Wrong size on PiecesWorldTransition_BFL_TravelToLevel");
static_assert(offsetof(PiecesWorldTransition_BFL_TravelToLevel, WorldContextObject) == 0x000000, "Member 'PiecesWorldTransition_BFL_TravelToLevel::WorldContextObject' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_BFL_TravelToLevel, InLevel) == 0x000008, "Member 'PiecesWorldTransition_BFL_TravelToLevel::InLevel' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_BFL_TravelToLevel, WidgetType) == 0x000030, "Member 'PiecesWorldTransition_BFL_TravelToLevel::WidgetType' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_BFL_TravelToLevel, ReturnValue) == 0x000038, "Member 'PiecesWorldTransition_BFL_TravelToLevel::ReturnValue' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_GameInstanceSubsystem.DecrementWorkInProgress
// 0x0008 (0x0008 - 0x0000)
struct PiecesWorldTransition_GameInstanceSubsystem_DecrementWorkInProgress final
{
public:
	const class UObject*                          Worker;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesWorldTransition_GameInstanceSubsystem_DecrementWorkInProgress) == 0x000008, "Wrong alignment on PiecesWorldTransition_GameInstanceSubsystem_DecrementWorkInProgress");
static_assert(sizeof(PiecesWorldTransition_GameInstanceSubsystem_DecrementWorkInProgress) == 0x000008, "Wrong size on PiecesWorldTransition_GameInstanceSubsystem_DecrementWorkInProgress");
static_assert(offsetof(PiecesWorldTransition_GameInstanceSubsystem_DecrementWorkInProgress, Worker) == 0x000000, "Member 'PiecesWorldTransition_GameInstanceSubsystem_DecrementWorkInProgress::Worker' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_GameInstanceSubsystem.IncrementWorkInProgress
// 0x0008 (0x0008 - 0x0000)
struct PiecesWorldTransition_GameInstanceSubsystem_IncrementWorkInProgress final
{
public:
	const class UObject*                          Worker;                                            // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesWorldTransition_GameInstanceSubsystem_IncrementWorkInProgress) == 0x000008, "Wrong alignment on PiecesWorldTransition_GameInstanceSubsystem_IncrementWorkInProgress");
static_assert(sizeof(PiecesWorldTransition_GameInstanceSubsystem_IncrementWorkInProgress) == 0x000008, "Wrong size on PiecesWorldTransition_GameInstanceSubsystem_IncrementWorkInProgress");
static_assert(offsetof(PiecesWorldTransition_GameInstanceSubsystem_IncrementWorkInProgress, Worker) == 0x000000, "Member 'PiecesWorldTransition_GameInstanceSubsystem_IncrementWorkInProgress::Worker' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_GameInstanceSubsystem.OnPostLoadMapHandler
// 0x0008 (0x0008 - 0x0000)
struct PiecesWorldTransition_GameInstanceSubsystem_OnPostLoadMapHandler final
{
public:
	class UWorld*                                 LoadedWorld;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesWorldTransition_GameInstanceSubsystem_OnPostLoadMapHandler) == 0x000008, "Wrong alignment on PiecesWorldTransition_GameInstanceSubsystem_OnPostLoadMapHandler");
static_assert(sizeof(PiecesWorldTransition_GameInstanceSubsystem_OnPostLoadMapHandler) == 0x000008, "Wrong size on PiecesWorldTransition_GameInstanceSubsystem_OnPostLoadMapHandler");
static_assert(offsetof(PiecesWorldTransition_GameInstanceSubsystem_OnPostLoadMapHandler, LoadedWorld) == 0x000000, "Member 'PiecesWorldTransition_GameInstanceSubsystem_OnPostLoadMapHandler::LoadedWorld' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_GameInstanceSubsystem.OnSaveGameLoaded
// 0x0010 (0x0010 - 0x0000)
struct PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPiecesSaveGameWorld*             SaveGame;                                          // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded) == 0x000008, "Wrong alignment on PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded");
static_assert(sizeof(PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded) == 0x000010, "Wrong size on PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded");
static_assert(offsetof(PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded, Success) == 0x000000, "Member 'PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded::Success' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded, SaveGame) == 0x000008, "Member 'PiecesWorldTransition_GameInstanceSubsystem_OnSaveGameLoaded::SaveGame' has a wrong offset!");

// Function PiecesWorldTransition.PiecesWorldTransition_WorkerInterface.TryToStartWork
// 0x0038 (0x0038 - 0x0000)
struct PiecesWorldTransition_WorkerInterface_TryToStartWork final
{
public:
	TSoftObjectPtr<class UWorld>                  InWorldTryingToLoad;                               // 0x0000(0x0028)(ConstParm, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPiecesWorldTransition_GameInstanceSubsystem* InPiecesWorldTransition_Subsystem;                 // 0x0028(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesWorldTransition_WorkerInterface_TryToStartWork) == 0x000008, "Wrong alignment on PiecesWorldTransition_WorkerInterface_TryToStartWork");
static_assert(sizeof(PiecesWorldTransition_WorkerInterface_TryToStartWork) == 0x000038, "Wrong size on PiecesWorldTransition_WorkerInterface_TryToStartWork");
static_assert(offsetof(PiecesWorldTransition_WorkerInterface_TryToStartWork, InWorldTryingToLoad) == 0x000000, "Member 'PiecesWorldTransition_WorkerInterface_TryToStartWork::InWorldTryingToLoad' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_WorkerInterface_TryToStartWork, InPiecesWorldTransition_Subsystem) == 0x000028, "Member 'PiecesWorldTransition_WorkerInterface_TryToStartWork::InPiecesWorldTransition_Subsystem' has a wrong offset!");
static_assert(offsetof(PiecesWorldTransition_WorkerInterface_TryToStartWork, ReturnValue) == 0x000030, "Member 'PiecesWorldTransition_WorkerInterface_TryToStartWork::ReturnValue' has a wrong offset!");

}

