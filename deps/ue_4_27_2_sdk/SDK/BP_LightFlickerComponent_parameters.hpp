#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightFlickerComponent

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_LightFlickerComponent.BP_LightFlickerComponent_C.ExecuteUbergraph_BP_LightFlickerComponent
// 0x00F8 (0x00F8 - 0x0000)
struct BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULightComponent*>                K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_LightFixture_C*                     K2Node_DynamicCast_AsBP_Light_Fixture;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ClassIsChildOf_ReturnValue;               // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CallFunc_Map_Find_Value;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULightComponent*                        CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULightComponent*                        CallFunc_Array_Get_Item_1;                         // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ULightComponent*>                K2Node_MakeArray_Array_1;                          // 0x00E8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent) == 0x000008, "Wrong alignment on BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent");
static_assert(sizeof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent) == 0x0000F8, "Wrong size on BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, EntryPoint) == 0x000000, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_GetTimeRange_MinTime) == 0x00001C, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_GetTimeRange_MaxTime) == 0x000020, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_GetFloatValue_ReturnValue) == 0x000034, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Length_ReturnValue_1) == 0x00003C, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_GetOwner_ReturnValue) == 0x000048, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Length_ReturnValue_2) == 0x000050, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, K2Node_DynamicCast_AsBP_Light_Fixture) == 0x000058, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::K2Node_DynamicCast_AsBP_Light_Fixture' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000068, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_GetObjectClass_ReturnValue) == 0x000070, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_BooleanAND_ReturnValue) == 0x000078, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_ClassIsChildOf_ReturnValue) == 0x000079, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_ClassIsChildOf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Map_Find_Value) == 0x000080, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Map_Find_ReturnValue) == 0x000088, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Add_ReturnValue_1) == 0x000090, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, Temp_int_Array_Index_Variable) == 0x000098, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Add_FloatFloat_ReturnValue) == 0x00009C, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0000A8, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_BooleanAND_ReturnValue_1) == 0x0000AC, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, Temp_int_Loop_Counter_Variable_1) == 0x0000B0, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, Temp_int_Array_Index_Variable_1) == 0x0000B4, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Get_Item_1) == 0x0000C0, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_BooleanAND_ReturnValue_2) == 0x0000C8, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Lerp_ReturnValue) == 0x0000CC, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Add_ReturnValue_2) == 0x0000D4, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Length_ReturnValue_3) == 0x0000D8, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_Array_Length_ReturnValue_4) == 0x0000DC, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E0, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent, K2Node_MakeArray_Array_1) == 0x0000E8, "Member 'BP_LightFlickerComponent_C_ExecuteUbergraph_BP_LightFlickerComponent::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function BP_LightFlickerComponent.BP_LightFlickerComponent_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LightFlickerComponent_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightFlickerComponent_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LightFlickerComponent_C_ReceiveTick");
static_assert(sizeof(BP_LightFlickerComponent_C_ReceiveTick) == 0x000004, "Wrong size on BP_LightFlickerComponent_C_ReceiveTick");
static_assert(offsetof(BP_LightFlickerComponent_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LightFlickerComponent_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LightFlickerComponent.BP_LightFlickerComponent_C.ValidateMobilityOfLights
// 0x0120 (0x0120 - 0x0000)
struct BP_LightFlickerComponent_C_ValidateMobilityOfLights final
{
public:
	TArray<class ULightComponent*>                Array;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Problem;                                           // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ThereWasAnError;                                   // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                MeAndMyParents;                                    // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<class USceneComponent*>                ComponentWorkingSet;                               // 0x0028(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            K2Node_MakeMap_Map;                                // 0x0048(0x0050)()
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetParentComponents_Parents;              // 0x00A8(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LightFlickerComponent_C_ValidateMobilityOfLights) == 0x000008, "Wrong alignment on BP_LightFlickerComponent_C_ValidateMobilityOfLights");
static_assert(sizeof(BP_LightFlickerComponent_C_ValidateMobilityOfLights) == 0x000120, "Wrong size on BP_LightFlickerComponent_C_ValidateMobilityOfLights");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, Array) == 0x000000, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::Array' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, Problem) == 0x000010, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::Problem' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, ThereWasAnError) == 0x000011, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::ThereWasAnError' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, MeAndMyParents) == 0x000018, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::MeAndMyParents' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, ComponentWorkingSet) == 0x000028, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::ComponentWorkingSet' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, Temp_int_Array_Index_Variable) == 0x000038, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, K2Node_MakeMap_Map) == 0x000048, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, Temp_int_Loop_Counter_Variable_1) == 0x000098, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_GetParentComponents_Parents) == 0x0000A8, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_GetParentComponents_Parents' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_GetOwner_ReturnValue) == 0x0000D0, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_GetPathName_ReturnValue) == 0x0000D8, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E8, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, K2Node_SwitchEnum_CmpSuccess) == 0x0000F8, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000100, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Array_Length_ReturnValue_1) == 0x000110, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Array_Add_ReturnValue) == 0x000114, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightFlickerComponent_C_ValidateMobilityOfLights, CallFunc_Less_IntInt_ReturnValue_1) == 0x000118, "Member 'BP_LightFlickerComponent_C_ValidateMobilityOfLights::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

}

