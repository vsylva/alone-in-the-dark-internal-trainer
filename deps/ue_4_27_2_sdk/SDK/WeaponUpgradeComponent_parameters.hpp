#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponUpgradeComponent

#include "Basic.hpp"

#include "EWeapons_structs.hpp"
#include "WeaponUpgrades_structs.hpp"


namespace SDK::Params
{

// Function WeaponUpgradeComponent.WeaponUpgradeComponent_C.getReloadRate
// 0x0030 (0x0030 - 0x0000)
struct WeaponUpgradeComponent_C_GetReloadRate final
{
public:
	EWeapons                                      Weapon;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ReloadRate;                                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ModifiedValue;                                     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponUpgrades                        CallFunc_Array_Get_Item;                           // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponUpgradeComponent_C_GetReloadRate) == 0x000004, "Wrong alignment on WeaponUpgradeComponent_C_GetReloadRate");
static_assert(sizeof(WeaponUpgradeComponent_C_GetReloadRate) == 0x000030, "Wrong size on WeaponUpgradeComponent_C_GetReloadRate");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, Weapon) == 0x000000, "Member 'WeaponUpgradeComponent_C_GetReloadRate::Weapon' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, ReloadRate) == 0x000004, "Member 'WeaponUpgradeComponent_C_GetReloadRate::ReloadRate' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, ModifiedValue) == 0x000008, "Member 'WeaponUpgradeComponent_C_GetReloadRate::ModifiedValue' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'WeaponUpgradeComponent_C_GetReloadRate::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'WeaponUpgradeComponent_C_GetReloadRate::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_Array_Get_Item) == 0x00001C, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_Less_IntInt_ReturnValue) == 0x000024, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000028, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00002C, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002D, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_GetReloadRate, CallFunc_BooleanAND_ReturnValue) == 0x00002E, "Member 'WeaponUpgradeComponent_C_GetReloadRate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WeaponUpgradeComponent.WeaponUpgradeComponent_C.addWeaponUpgrade
// 0x0008 (0x0008 - 0x0000)
struct WeaponUpgradeComponent_C_AddWeaponUpgrade final
{
public:
	struct FWeaponUpgrades                        Upgrade;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponUpgradeComponent_C_AddWeaponUpgrade) == 0x000004, "Wrong alignment on WeaponUpgradeComponent_C_AddWeaponUpgrade");
static_assert(sizeof(WeaponUpgradeComponent_C_AddWeaponUpgrade) == 0x000008, "Wrong size on WeaponUpgradeComponent_C_AddWeaponUpgrade");
static_assert(offsetof(WeaponUpgradeComponent_C_AddWeaponUpgrade, Upgrade) == 0x000000, "Member 'WeaponUpgradeComponent_C_AddWeaponUpgrade::Upgrade' has a wrong offset!");

// Function WeaponUpgradeComponent.WeaponUpgradeComponent_C.ExecuteUbergraph_WeaponUpgradeComponent
// 0x0010 (0x0010 - 0x0000)
struct WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeaponUpgrades                        K2Node_CustomEvent_Upgrade;                        // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent) == 0x000004, "Wrong alignment on WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent");
static_assert(sizeof(WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent) == 0x000010, "Wrong size on WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent");
static_assert(offsetof(WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent, EntryPoint) == 0x000000, "Member 'WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent, K2Node_CustomEvent_Upgrade) == 0x000004, "Member 'WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent::K2Node_CustomEvent_Upgrade' has a wrong offset!");
static_assert(offsetof(WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent, CallFunc_Array_Add_ReturnValue) == 0x00000C, "Member 'WeaponUpgradeComponent_C_ExecuteUbergraph_WeaponUpgradeComponent::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

