#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesObjectPool

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "OBJPool_structs.hpp"
#include "PiecesObjectPool_structs.hpp"


namespace SDK
{

// Class PiecesObjectPool.ObjectPoolManagerWorldSubsystem
// 0x0108 (0x0138 - 0x0030)
class UObjectPoolManagerWorldSubsystem final : public UWorldSubsystem
{
public:
	TMap<TSubclassOf<class APooledCharacter>, class UCharacterPool*> PooledCharacterComponents;                         // 0x0030(0x0050)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<TSubclassOf<class APooledPawn>, class UPawnPool*> PooledPawnComponents;                              // 0x0080(0x0050)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<TSubclassOf<class APooledActor>, class UObjectPool*> PooledActorComponents;                             // 0x00D0(0x0050)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UPoolManagerDataAsset*                  PoolManagerDataAsset;                              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_128[0x10];                                     // 0x0128(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void ClearAllPools();
	void ClearPooledActorComponents();
	void ClearPooledCharacterComponents();
	void ClearPooledPawnComponents();
	bool GetActorPoolOfClass(TSubclassOf<class APooledActor> InClass, class UObjectPool** OutPool);
	bool GetCharacterPoolOfClass(TSubclassOf<class APooledCharacter> InClass, class UCharacterPool** OutPool);
	bool GetPawnPoolOfClass(TSubclassOf<class APooledPawn> InClass, class UPawnPool** OutPool);
	void PopulatePools();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectPoolManagerWorldSubsystem">();
	}
	static class UObjectPoolManagerWorldSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectPoolManagerWorldSubsystem>();
	}
};
static_assert(alignof(UObjectPoolManagerWorldSubsystem) == 0x000008, "Wrong alignment on UObjectPoolManagerWorldSubsystem");
static_assert(sizeof(UObjectPoolManagerWorldSubsystem) == 0x000138, "Wrong size on UObjectPoolManagerWorldSubsystem");
static_assert(offsetof(UObjectPoolManagerWorldSubsystem, PooledCharacterComponents) == 0x000030, "Member 'UObjectPoolManagerWorldSubsystem::PooledCharacterComponents' has a wrong offset!");
static_assert(offsetof(UObjectPoolManagerWorldSubsystem, PooledPawnComponents) == 0x000080, "Member 'UObjectPoolManagerWorldSubsystem::PooledPawnComponents' has a wrong offset!");
static_assert(offsetof(UObjectPoolManagerWorldSubsystem, PooledActorComponents) == 0x0000D0, "Member 'UObjectPoolManagerWorldSubsystem::PooledActorComponents' has a wrong offset!");
static_assert(offsetof(UObjectPoolManagerWorldSubsystem, PoolManagerDataAsset) == 0x000120, "Member 'UObjectPoolManagerWorldSubsystem::PoolManagerDataAsset' has a wrong offset!");

// Class PiecesObjectPool.PooledCharacterSpawner
// 0x0018 (0x0278 - 0x0260)
class APooledCharacterSpawner final : public ANavigationObjectBase
{
public:
	TSubclassOf<class APooledCharacter>           ClassToSpawn;                                      // 0x0260(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   UniqueSaveName;                                    // 0x0268(0x0008)(Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APooledCharacter*                       SpawnedCharacter;                                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PooledCharacterSpawner">();
	}
	static class APooledCharacterSpawner* GetDefaultObj()
	{
		return GetDefaultObjImpl<APooledCharacterSpawner>();
	}
};
static_assert(alignof(APooledCharacterSpawner) == 0x000008, "Wrong alignment on APooledCharacterSpawner");
static_assert(sizeof(APooledCharacterSpawner) == 0x000278, "Wrong size on APooledCharacterSpawner");
static_assert(offsetof(APooledCharacterSpawner, ClassToSpawn) == 0x000260, "Member 'APooledCharacterSpawner::ClassToSpawn' has a wrong offset!");
static_assert(offsetof(APooledCharacterSpawner, UniqueSaveName) == 0x000268, "Member 'APooledCharacterSpawner::UniqueSaveName' has a wrong offset!");
static_assert(offsetof(APooledCharacterSpawner, SpawnedCharacter) == 0x000270, "Member 'APooledCharacterSpawner::SpawnedCharacter' has a wrong offset!");

// Class PiecesObjectPool.ObjectPoolSpawnHelperUtils
// 0x0000 (0x0028 - 0x0028)
class UObjectPoolSpawnHelperUtils final : public UBlueprintFunctionLibrary
{
public:
	static void ReturnPooledCharacterNoSave(const class UObject* WorldContextObject, class APooledCharacter* InPooledCharacter);
	static void ReturnPooledCharacterWithSave(const class UObject* WorldContextObject, class APooledCharacter* InPooledCharacter);
	static class APooledCharacter* SpawnPooledCharacterNoSave(const class UObject* WorldContextObject, TSubclassOf<class APooledCharacter> InClass, const struct FTransform& InTransform, EPoolCollisionType InPoolCollisionType, const bool bUseBackupMethod, bool* bSpawnSuccesful);
	static class APooledCharacter* SpawnPooledCharacterWithSave(const class UObject* WorldContextObject, const TSubclassOf<class APooledCharacter> InClass, const class FName UniqueSaveName, const struct FTransform& InTransform, const EPoolCollisionType InPoolCollisionType, bool* bSpawnSuccesful);

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ObjectPoolSpawnHelperUtils">();
	}
	static class UObjectPoolSpawnHelperUtils* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObjectPoolSpawnHelperUtils>();
	}
};
static_assert(alignof(UObjectPoolSpawnHelperUtils) == 0x000008, "Wrong alignment on UObjectPoolSpawnHelperUtils");
static_assert(sizeof(UObjectPoolSpawnHelperUtils) == 0x000028, "Wrong size on UObjectPoolSpawnHelperUtils");

// Class PiecesObjectPool.PoolManagerDataAsset
// 0x0038 (0x0068 - 0x0030)
class UPoolManagerDataAsset final : public UDataAsset
{
public:
	TArray<struct FCharacterPoolData>             CharacterPools;                                    // 0x0030(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FPawnPoolData>                  PawnPools;                                         // 0x0040(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FActorPoolData>                 ActorPools;                                        // 0x0050(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          PopulateManually;                                  // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PoolManagerDataAsset">();
	}
	static class UPoolManagerDataAsset* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPoolManagerDataAsset>();
	}
};
static_assert(alignof(UPoolManagerDataAsset) == 0x000008, "Wrong alignment on UPoolManagerDataAsset");
static_assert(sizeof(UPoolManagerDataAsset) == 0x000068, "Wrong size on UPoolManagerDataAsset");
static_assert(offsetof(UPoolManagerDataAsset, CharacterPools) == 0x000030, "Member 'UPoolManagerDataAsset::CharacterPools' has a wrong offset!");
static_assert(offsetof(UPoolManagerDataAsset, PawnPools) == 0x000040, "Member 'UPoolManagerDataAsset::PawnPools' has a wrong offset!");
static_assert(offsetof(UPoolManagerDataAsset, ActorPools) == 0x000050, "Member 'UPoolManagerDataAsset::ActorPools' has a wrong offset!");
static_assert(offsetof(UPoolManagerDataAsset, PopulateManually) == 0x000060, "Member 'UPoolManagerDataAsset::PopulateManually' has a wrong offset!");

}

