#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_HealthBar

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"


namespace SDK::Params
{

// Function WBP_HealthBar.WBP_HealthBar_C.Poll Visibility Changes
// 0x0003 (0x0003 - 0x0000)
struct WBP_HealthBar_C_Poll_Visibility_Changes final
{
public:
	bool                                          CallFunc_GetIsVisibilityAllowed_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsVisibilityAllowed_ReturnValue_1;     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_Poll_Visibility_Changes) == 0x000001, "Wrong alignment on WBP_HealthBar_C_Poll_Visibility_Changes");
static_assert(sizeof(WBP_HealthBar_C_Poll_Visibility_Changes) == 0x000003, "Wrong size on WBP_HealthBar_C_Poll_Visibility_Changes");
static_assert(offsetof(WBP_HealthBar_C_Poll_Visibility_Changes, CallFunc_GetIsVisibilityAllowed_ReturnValue) == 0x000000, "Member 'WBP_HealthBar_C_Poll_Visibility_Changes::CallFunc_GetIsVisibilityAllowed_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Poll_Visibility_Changes, CallFunc_GetIsVisibilityAllowed_ReturnValue_1) == 0x000001, "Member 'WBP_HealthBar_C_Poll_Visibility_Changes::CallFunc_GetIsVisibilityAllowed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_Poll_Visibility_Changes, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'WBP_HealthBar_C_Poll_Visibility_Changes::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.HealthGained
// 0x000C (0x000C - 0x0000)
struct WBP_HealthBar_C_HealthGained final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_HealthGained) == 0x000004, "Wrong alignment on WBP_HealthBar_C_HealthGained");
static_assert(sizeof(WBP_HealthBar_C_HealthGained) == 0x00000C, "Wrong size on WBP_HealthBar_C_HealthGained");
static_assert(offsetof(WBP_HealthBar_C_HealthGained, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'WBP_HealthBar_C_HealthGained::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_HealthGained, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'WBP_HealthBar_C_HealthGained::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_HealthGained, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WBP_HealthBar_C_HealthGained::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.UpdateHealth
// 0x0048 (0x0048 - 0x0000)
struct WBP_HealthBar_C_UpdateHealth final
{
public:
	float                                         Health;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHealth;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SafeDivide_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x000C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_HealthBar_C_UpdateHealth) == 0x000008, "Wrong alignment on WBP_HealthBar_C_UpdateHealth");
static_assert(sizeof(WBP_HealthBar_C_UpdateHealth) == 0x000048, "Wrong size on WBP_HealthBar_C_UpdateHealth");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, Health) == 0x000000, "Member 'WBP_HealthBar_C_UpdateHealth::Health' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, MaxHealth) == 0x000004, "Member 'WBP_HealthBar_C_UpdateHealth::MaxHealth' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, CallFunc_SafeDivide_ReturnValue) == 0x000008, "Member 'WBP_HealthBar_C_UpdateHealth::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, K2Node_CreateDelegate_OutputDelegate) == 0x00000C, "Member 'WBP_HealthBar_C_UpdateHealth::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'WBP_HealthBar_C_UpdateHealth::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, K2Node_CreateDelegate_OutputDelegate_1) == 0x000028, "Member 'WBP_HealthBar_C_UpdateHealth::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000038, "Member 'WBP_HealthBar_C_UpdateHealth::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_UpdateHealth, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000040, "Member 'WBP_HealthBar_C_UpdateHealth::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.OnCharacterHealthChanged
// 0x0028 (0x0028 - 0x0000)
struct WBP_HealthBar_C_OnCharacterHealthChanged final
{
public:
	float                                         NewCurrentHealth;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaValue;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  EventTags;                                         // 0x0008(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_HealthBar_C_OnCharacterHealthChanged) == 0x000008, "Wrong alignment on WBP_HealthBar_C_OnCharacterHealthChanged");
static_assert(sizeof(WBP_HealthBar_C_OnCharacterHealthChanged) == 0x000028, "Wrong size on WBP_HealthBar_C_OnCharacterHealthChanged");
static_assert(offsetof(WBP_HealthBar_C_OnCharacterHealthChanged, NewCurrentHealth) == 0x000000, "Member 'WBP_HealthBar_C_OnCharacterHealthChanged::NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_OnCharacterHealthChanged, DeltaValue) == 0x000004, "Member 'WBP_HealthBar_C_OnCharacterHealthChanged::DeltaValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_OnCharacterHealthChanged, EventTags) == 0x000008, "Member 'WBP_HealthBar_C_OnCharacterHealthChanged::EventTags' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.OnCombatStateChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_HealthBar_C_OnCombatStateChanged final
{
public:
	bool                                          bNewIsInCombat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_OnCombatStateChanged) == 0x000001, "Wrong alignment on WBP_HealthBar_C_OnCombatStateChanged");
static_assert(sizeof(WBP_HealthBar_C_OnCombatStateChanged) == 0x000001, "Wrong size on WBP_HealthBar_C_OnCombatStateChanged");
static_assert(offsetof(WBP_HealthBar_C_OnCombatStateChanged, bNewIsInCombat) == 0x000000, "Member 'WBP_HealthBar_C_OnCombatStateChanged::bNewIsInCombat' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.OnAiming
// 0x0001 (0x0001 - 0x0000)
struct WBP_HealthBar_C_OnAiming final
{
public:
	bool                                          bIsAiming;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_OnAiming) == 0x000001, "Wrong alignment on WBP_HealthBar_C_OnAiming");
static_assert(sizeof(WBP_HealthBar_C_OnAiming) == 0x000001, "Wrong size on WBP_HealthBar_C_OnAiming");
static_assert(offsetof(WBP_HealthBar_C_OnAiming, bIsAiming) == 0x000000, "Member 'WBP_HealthBar_C_OnAiming::bIsAiming' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.PlayerHUDVisibilityChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_HealthBar_C_PlayerHUDVisibilityChanged final
{
public:
	bool                                          bNewHUDVisibility;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_PlayerHUDVisibilityChanged) == 0x000001, "Wrong alignment on WBP_HealthBar_C_PlayerHUDVisibilityChanged");
static_assert(sizeof(WBP_HealthBar_C_PlayerHUDVisibilityChanged) == 0x000001, "Wrong size on WBP_HealthBar_C_PlayerHUDVisibilityChanged");
static_assert(offsetof(WBP_HealthBar_C_PlayerHUDVisibilityChanged, bNewHUDVisibility) == 0x000000, "Member 'WBP_HealthBar_C_PlayerHUDVisibilityChanged::bNewHUDVisibility' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.ExecuteUbergraph_WBP_HealthBar
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float NewCurrentHealth, float DeltaValue, struct FGameplayTagContainer& EventTags)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bNewIsInCombat)>          K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bIsAiming)>               K2Node_CreateDelegate_OutputDelegate_2;            // 0x0024(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(bool bNewHUDVisibility)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0034(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_DarkMan*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetObsessionStage3Threshold_ReturnValue;  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetObsession_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_NewCurrentHealth;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaValue;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  K2Node_CustomEvent_EventTags;                      // 0x0068(0x0020)(ConstParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetFloatAttributeBase_bSuccessfullyFoundAttribute; // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeBase_ReturnValue;        // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerHealthState                            CallFunc_GetPlayerHealthState_ReturnValue;         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewIsInCombat;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bIsAiming;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bNewHUDVisibility;              // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1; // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue_1;          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerHealthState                            Temp_byte_Variable;                                // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	EProjectType                                  CallFunc_GetProjectType_ReturnValue;               // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar) == 0x000008, "Wrong alignment on WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar");
static_assert(sizeof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar) == 0x0000C8, "Wrong size on WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, EntryPoint) == 0x000000, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CreateDelegate_OutputDelegate_2) == 0x000024, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CreateDelegate_OutputDelegate_3) == 0x000034, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000048, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetObsessionStage3Threshold_ReturnValue) == 0x000050, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetObsessionStage3Threshold_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetObsession_ReturnValue) == 0x000054, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetObsession_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_NewCurrentHealth) == 0x00005C, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_DeltaValue) == 0x000060, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_DeltaValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_EventTags) == 0x000068, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_EventTags' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetFloatAttributeBase_bSuccessfullyFoundAttribute) == 0x000089, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetFloatAttributeBase_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetFloatAttributeBase_ReturnValue) == 0x00008C, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetFloatAttributeBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetPlayerHealthState_ReturnValue) == 0x000090, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetPlayerHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000098, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_bNewIsInCombat) == 0x0000A0, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_bNewIsInCombat' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_bIsAiming) == 0x0000A1, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_bIsAiming' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_CustomEvent_bNewHUDVisibility) == 0x0000A2, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_CustomEvent_bNewHUDVisibility' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x0000A3, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetFloatAttribute_ReturnValue) == 0x0000A4, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1) == 0x0000A8, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetFloatAttribute_ReturnValue_1) == 0x0000AC, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetFloatAttribute_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, Temp_byte_Variable) == 0x0000B0, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_Select_Default) == 0x0000B4, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_K2_SetTimer_ReturnValue) == 0x0000B8, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, CallFunc_GetProjectType_ReturnValue) == 0x0000C0, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::CallFunc_GetProjectType_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar, K2Node_SwitchEnum_CmpSuccess) == 0x0000C1, "Member 'WBP_HealthBar_C_ExecuteUbergraph_WBP_HealthBar::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_HealthBar.WBP_HealthBar_C.GetIsVisibilityAllowed
// 0x0028 (0x0028 - 0x0000)
struct WBP_HealthBar_C_GetIsVisibilityAllowed final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerSubsystem_PlayerHUD*             CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerSubsystem_PlayerHUD*             CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetForceShowHealthBar_ReturnValue;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue; // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsInCombat_ReturnValue;                // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsVisibilityAllowed_ReturnValue;       // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_HealthBar_C_GetIsVisibilityAllowed) == 0x000008, "Wrong alignment on WBP_HealthBar_C_GetIsVisibilityAllowed");
static_assert(sizeof(WBP_HealthBar_C_GetIsVisibilityAllowed) == 0x000028, "Wrong size on WBP_HealthBar_C_GetIsVisibilityAllowed");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, ReturnValue) == 0x000000, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000010, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_GetForceShowHealthBar_ReturnValue) == 0x000019, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_GetForceShowHealthBar_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue) == 0x00001C, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_K2_GetTimerRemainingTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_GetIsInCombat_ReturnValue) == 0x000021, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_GetIsInCombat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_HealthBar_C_GetIsVisibilityAllowed, CallFunc_GetIsVisibilityAllowed_ReturnValue) == 0x000022, "Member 'WBP_HealthBar_C_GetIsVisibilityAllowed::CallFunc_GetIsVisibilityAllowed_ReturnValue' has a wrong offset!");

}

