#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Eml_PostProcess

#include "Basic.hpp"

#include "ControlRig_structs.hpp"
#include "PiecesAnimNodes_structs.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Eml_PostProcess.ABP_Eml_PostProcess_C
// 0x7820 (0x8290 - 0x0A70)
class UABP_Eml_PostProcess_C final : public UOFPostProcessAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A70(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x0A78(0x0018)()
	struct FAnimNode_LayeredBoneBlend             AnimGraphNode_LayeredBoneBlend;                    // 0x0A90(0x00C0)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x0B50(0x0368)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_1;             // 0x0EB8(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_1;             // 0x0ED8(0x0020)()
	uint8                                         Pad_EF8[0x8];                                      // 0x0EF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPiecesAnimNode_RigidBody              PiecesAnimGraphNode_RigidBody;                     // 0x0F00(0x0860)()
	struct FAnimNode_ApplyLimits                  AnimGraphNode_ApplyLimits;                         // 0x1760(0x00E8)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x1848(0x0030)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x1878(0x0020)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x1898(0x0020)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x18B8(0x0118)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_23;                     // 0x19D0(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_22;                     // 0x1E10(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_21;                     // 0x2250(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_20;                     // 0x2690(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_19;                     // 0x2AD0(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_18;                     // 0x2F10(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_17;                     // 0x3350(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_16;                     // 0x3790(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_15;                     // 0x3BD0(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_14;                     // 0x4010(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_13;                     // 0x4450(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_12;                     // 0x4890(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_11;                     // 0x4CD0(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_10;                     // 0x5110(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_9;                      // 0x5550(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_8;                      // 0x5990(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_7;                      // 0x5DD0(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_6;                      // 0x6210(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_5;                      // 0x6650(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_4;                      // 0x6A90(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_3;                      // 0x6ED0(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_2;                      // 0x7310(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics_1;                      // 0x7750(0x0440)()
	struct FAnimNode_AnimDynamics                 AnimGraphNode_AnimDynamics;                        // 0x7B90(0x0440)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x7FD0(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x80E8(0x0030)()
	struct FAnimNode_LinkedAnimLayer              AnimGraphNode_LinkedAnimLayer;                     // 0x8118(0x00B0)()
	uint8                                         Pad_81C8[0x8];                                     // 0x81C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPiecesAnimNode_DynamicsResetter       PiecesAnimGraphNode_DynamicsResetter;              // 0x81D0(0x00A0)()
	float                                         PaintingTubeDynamicsAlpha;                         // 0x8270(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_PaintingTubeDynamicsAlpha_448E120F4627064A5A1B24829FC8A6FA; // 0x8274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WindDirection;                                     // 0x8278(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HairDynamicsAlpha;                                 // 0x8284(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PaintingTubeAlpha;                                 // 0x8288(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PaintingTubeDynamics(const struct FPoseLink& PaintingTubeDynamicsInputPose, float PaintingTubeDynamicsAlpha_0, struct FPoseLink* PaintingTubeDynamics_0);
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* AnimGraph_0);
	struct FVector GetRandomVector(float* Magnitude);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_ABP_Eml_PostProcess(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Eml_PostProcess_C">();
	}
	static class UABP_Eml_PostProcess_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Eml_PostProcess_C>();
	}
};
static_assert(alignof(UABP_Eml_PostProcess_C) == 0x000010, "Wrong alignment on UABP_Eml_PostProcess_C");
static_assert(sizeof(UABP_Eml_PostProcess_C) == 0x008290, "Wrong size on UABP_Eml_PostProcess_C");
static_assert(offsetof(UABP_Eml_PostProcess_C, UberGraphFrame) == 0x000A70, "Member 'UABP_Eml_PostProcess_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_LocalRefPose) == 0x000A78, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_LayeredBoneBlend) == 0x000A90, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_LayeredBoneBlend' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_ControlRig) == 0x000B50, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_LocalToComponentSpace_1) == 0x000EB8, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_LocalToComponentSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_ComponentToLocalSpace_1) == 0x000ED8, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_ComponentToLocalSpace_1' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, PiecesAnimGraphNode_RigidBody) == 0x000F00, "Member 'UABP_Eml_PostProcess_C::PiecesAnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_ApplyLimits) == 0x001760, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_ApplyLimits' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_Root_1) == 0x001848, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_LocalToComponentSpace) == 0x001878, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_ComponentToLocalSpace) == 0x001898, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_LinkedInputPose_1) == 0x0018B8, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_23) == 0x0019D0, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_23' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_22) == 0x001E10, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_22' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_21) == 0x002250, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_21' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_20) == 0x002690, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_20' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_19) == 0x002AD0, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_19' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_18) == 0x002F10, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_18' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_17) == 0x003350, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_17' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_16) == 0x003790, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_16' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_15) == 0x003BD0, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_15' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_14) == 0x004010, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_14' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_13) == 0x004450, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_13' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_12) == 0x004890, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_12' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_11) == 0x004CD0, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_11' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_10) == 0x005110, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_10' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_9) == 0x005550, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_9' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_8) == 0x005990, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_8' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_7) == 0x005DD0, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_7' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_6) == 0x006210, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_6' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_5) == 0x006650, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_5' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_4) == 0x006A90, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_4' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_3) == 0x006ED0, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_3' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_2) == 0x007310, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_2' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics_1) == 0x007750, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics_1' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_AnimDynamics) == 0x007B90, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_AnimDynamics' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_LinkedInputPose) == 0x007FD0, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_Root) == 0x0080E8, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, AnimGraphNode_LinkedAnimLayer) == 0x008118, "Member 'UABP_Eml_PostProcess_C::AnimGraphNode_LinkedAnimLayer' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, PiecesAnimGraphNode_DynamicsResetter) == 0x0081D0, "Member 'UABP_Eml_PostProcess_C::PiecesAnimGraphNode_DynamicsResetter' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, PaintingTubeDynamicsAlpha) == 0x008270, "Member 'UABP_Eml_PostProcess_C::PaintingTubeDynamicsAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, __CustomProperty_PaintingTubeDynamicsAlpha_448E120F4627064A5A1B24829FC8A6FA) == 0x008274, "Member 'UABP_Eml_PostProcess_C::__CustomProperty_PaintingTubeDynamicsAlpha_448E120F4627064A5A1B24829FC8A6FA' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, WindDirection) == 0x008278, "Member 'UABP_Eml_PostProcess_C::WindDirection' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, HairDynamicsAlpha) == 0x008284, "Member 'UABP_Eml_PostProcess_C::HairDynamicsAlpha' has a wrong offset!");
static_assert(offsetof(UABP_Eml_PostProcess_C, PaintingTubeAlpha) == 0x008288, "Member 'UABP_Eml_PostProcess_C::PaintingTubeAlpha' has a wrong offset!");

}

