#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_DamageScreenEffect

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CM_DamageScreenEffect.CM_DamageScreenEffect_C
// 0x0058 (0x00A0 - 0x0048)
class UCM_DamageScreenEffect_C final : public UCameraModifier
{
public:
	float                                         Slope;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Toe;                                               // 0x004C(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Shoulder;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlackClip;                                         // 0x0054(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WhiteClip;                                         // 0x0058(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BloomIntensity;                                    // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BloomThreshold;                                    // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           LensFlareTint;                                     // 0x0064(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LensFlareIntensity;                                // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrainJitter;                                       // 0x0078(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GrainIntensity;                                    // 0x007C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmbientOcclusionIntensity;                         // 0x0080(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScreenSpaceReflectionsIntensity;                   // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AmbientOcclusionRadius;                            // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FWeightedBlendable>             ScreenEffects;                                     // 0x0090(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight, struct FPostProcessSettings* PostProcessSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_DamageScreenEffect_C">();
	}
	static class UCM_DamageScreenEffect_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_DamageScreenEffect_C>();
	}
};
static_assert(alignof(UCM_DamageScreenEffect_C) == 0x000008, "Wrong alignment on UCM_DamageScreenEffect_C");
static_assert(sizeof(UCM_DamageScreenEffect_C) == 0x0000A0, "Wrong size on UCM_DamageScreenEffect_C");
static_assert(offsetof(UCM_DamageScreenEffect_C, Slope) == 0x000048, "Member 'UCM_DamageScreenEffect_C::Slope' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, Toe) == 0x00004C, "Member 'UCM_DamageScreenEffect_C::Toe' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, Shoulder) == 0x000050, "Member 'UCM_DamageScreenEffect_C::Shoulder' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, BlackClip) == 0x000054, "Member 'UCM_DamageScreenEffect_C::BlackClip' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, WhiteClip) == 0x000058, "Member 'UCM_DamageScreenEffect_C::WhiteClip' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, BloomIntensity) == 0x00005C, "Member 'UCM_DamageScreenEffect_C::BloomIntensity' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, BloomThreshold) == 0x000060, "Member 'UCM_DamageScreenEffect_C::BloomThreshold' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, LensFlareTint) == 0x000064, "Member 'UCM_DamageScreenEffect_C::LensFlareTint' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, LensFlareIntensity) == 0x000074, "Member 'UCM_DamageScreenEffect_C::LensFlareIntensity' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, GrainJitter) == 0x000078, "Member 'UCM_DamageScreenEffect_C::GrainJitter' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, GrainIntensity) == 0x00007C, "Member 'UCM_DamageScreenEffect_C::GrainIntensity' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, AmbientOcclusionIntensity) == 0x000080, "Member 'UCM_DamageScreenEffect_C::AmbientOcclusionIntensity' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, ScreenSpaceReflectionsIntensity) == 0x000084, "Member 'UCM_DamageScreenEffect_C::ScreenSpaceReflectionsIntensity' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, AmbientOcclusionRadius) == 0x000088, "Member 'UCM_DamageScreenEffect_C::AmbientOcclusionRadius' has a wrong offset!");
static_assert(offsetof(UCM_DamageScreenEffect_C, ScreenEffects) == 0x000090, "Member 'UCM_DamageScreenEffect_C::ScreenEffects' has a wrong offset!");

}

