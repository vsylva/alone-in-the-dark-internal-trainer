#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModelingComponents

#include "Basic.hpp"

#include "InteractiveToolsFramework_classes.hpp"
#include "ModelingComponents_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class ModelingComponents.BaseDynamicMeshComponent
// 0x0040 (0x04D0 - 0x0490)
class UBaseDynamicMeshComponent : public UMeshComponent
{
public:
	uint8                                         Pad_488[0x48];                                     // 0x0488(0x0048)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseDynamicMeshComponent">();
	}
	static class UBaseDynamicMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseDynamicMeshComponent>();
	}
};
static_assert(alignof(UBaseDynamicMeshComponent) == 0x000010, "Wrong alignment on UBaseDynamicMeshComponent");
static_assert(sizeof(UBaseDynamicMeshComponent) == 0x0004D0, "Wrong size on UBaseDynamicMeshComponent");

// Class ModelingComponents.BaseCreateFromSelectedToolBuilder
// 0x0008 (0x0030 - 0x0028)
class UBaseCreateFromSelectedToolBuilder : public UInteractiveToolBuilder
{
public:
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseCreateFromSelectedToolBuilder">();
	}
	static class UBaseCreateFromSelectedToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCreateFromSelectedToolBuilder>();
	}
};
static_assert(alignof(UBaseCreateFromSelectedToolBuilder) == 0x000008, "Wrong alignment on UBaseCreateFromSelectedToolBuilder");
static_assert(sizeof(UBaseCreateFromSelectedToolBuilder) == 0x000030, "Wrong size on UBaseCreateFromSelectedToolBuilder");

// Class ModelingComponents.OnAcceptHandleSourcesProperties
// 0x0008 (0x0068 - 0x0060)
class UOnAcceptHandleSourcesProperties : public UInteractiveToolPropertySet
{
public:
	EHandleSourcesMethod                          OnToolAccept;                                      // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OnAcceptHandleSourcesProperties">();
	}
	static class UOnAcceptHandleSourcesProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOnAcceptHandleSourcesProperties>();
	}
};
static_assert(alignof(UOnAcceptHandleSourcesProperties) == 0x000008, "Wrong alignment on UOnAcceptHandleSourcesProperties");
static_assert(sizeof(UOnAcceptHandleSourcesProperties) == 0x000068, "Wrong size on UOnAcceptHandleSourcesProperties");
static_assert(offsetof(UOnAcceptHandleSourcesProperties, OnToolAccept) == 0x000060, "Member 'UOnAcceptHandleSourcesProperties::OnToolAccept' has a wrong offset!");

// Class ModelingComponents.BaseMeshProcessingTool
// 0x0378 (0x0400 - 0x0088)
class alignas(0x10) UBaseMeshProcessingTool : public USingleSelectionTool
{
public:
	uint8                                         Pad_88[0x28];                                      // 0x0088(0x0028)(Fixing Size After Last Property [ Dumper-7 ])
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_B8[0x348];                                     // 0x00B8(0x0348)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseMeshProcessingTool">();
	}
	static class UBaseMeshProcessingTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseMeshProcessingTool>();
	}
};
static_assert(alignof(UBaseMeshProcessingTool) == 0x000010, "Wrong alignment on UBaseMeshProcessingTool");
static_assert(sizeof(UBaseMeshProcessingTool) == 0x000400, "Wrong size on UBaseMeshProcessingTool");
static_assert(offsetof(UBaseMeshProcessingTool, Preview) == 0x0000B0, "Member 'UBaseMeshProcessingTool::Preview' has a wrong offset!");

// Class ModelingComponents.BaseCreateFromSelectedHandleSourceProperties
// 0x0028 (0x0090 - 0x0068)
class UBaseCreateFromSelectedHandleSourceProperties final : public UOnAcceptHandleSourcesProperties
{
public:
	EBaseCreateFromSelectedTargetType             WriteOutputTo;                                     // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OutputName;                                        // 0x0070(0x0010)(Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 OutputAsset;                                       // 0x0080(0x0010)(Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseCreateFromSelectedHandleSourceProperties">();
	}
	static class UBaseCreateFromSelectedHandleSourceProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCreateFromSelectedHandleSourceProperties>();
	}
};
static_assert(alignof(UBaseCreateFromSelectedHandleSourceProperties) == 0x000008, "Wrong alignment on UBaseCreateFromSelectedHandleSourceProperties");
static_assert(sizeof(UBaseCreateFromSelectedHandleSourceProperties) == 0x000090, "Wrong size on UBaseCreateFromSelectedHandleSourceProperties");
static_assert(offsetof(UBaseCreateFromSelectedHandleSourceProperties, WriteOutputTo) == 0x000068, "Member 'UBaseCreateFromSelectedHandleSourceProperties::WriteOutputTo' has a wrong offset!");
static_assert(offsetof(UBaseCreateFromSelectedHandleSourceProperties, OutputName) == 0x000070, "Member 'UBaseCreateFromSelectedHandleSourceProperties::OutputName' has a wrong offset!");
static_assert(offsetof(UBaseCreateFromSelectedHandleSourceProperties, OutputAsset) == 0x000080, "Member 'UBaseCreateFromSelectedHandleSourceProperties::OutputAsset' has a wrong offset!");

// Class ModelingComponents.TransformInputsToolProperties
// 0x0008 (0x0068 - 0x0060)
class UTransformInputsToolProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bShowTransformUI;                                  // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSnapToWorldGrid;                                  // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TransformInputsToolProperties">();
	}
	static class UTransformInputsToolProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTransformInputsToolProperties>();
	}
};
static_assert(alignof(UTransformInputsToolProperties) == 0x000008, "Wrong alignment on UTransformInputsToolProperties");
static_assert(sizeof(UTransformInputsToolProperties) == 0x000068, "Wrong size on UTransformInputsToolProperties");
static_assert(offsetof(UTransformInputsToolProperties, bShowTransformUI) == 0x000060, "Member 'UTransformInputsToolProperties::bShowTransformUI' has a wrong offset!");
static_assert(offsetof(UTransformInputsToolProperties, bSnapToWorldGrid) == 0x000061, "Member 'UTransformInputsToolProperties::bSnapToWorldGrid' has a wrong offset!");

// Class ModelingComponents.BaseCreateFromSelectedTool
// 0x0060 (0x00F0 - 0x0090)
class UBaseCreateFromSelectedTool : public UMultiSelectionTool
{
public:
	uint8                                         Pad_90[0x8];                                       // 0x0090(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformInputsToolProperties*         TransformProperties;                               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBaseCreateFromSelectedHandleSourceProperties* HandleSourcesProperties;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMeshOpPreviewWithBackgroundCompute*    Preview;                                           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTransformProxy*>                TransformProxies;                                  // 0x00B0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UTransformGizmo*>                TransformGizmos;                                   // 0x00C0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	TArray<struct FVector>                        TransformInitialScales;                            // 0x00D0(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_E0[0x10];                                      // 0x00E0(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseCreateFromSelectedTool">();
	}
	static class UBaseCreateFromSelectedTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseCreateFromSelectedTool>();
	}
};
static_assert(alignof(UBaseCreateFromSelectedTool) == 0x000008, "Wrong alignment on UBaseCreateFromSelectedTool");
static_assert(sizeof(UBaseCreateFromSelectedTool) == 0x0000F0, "Wrong size on UBaseCreateFromSelectedTool");
static_assert(offsetof(UBaseCreateFromSelectedTool, TransformProperties) == 0x000098, "Member 'UBaseCreateFromSelectedTool::TransformProperties' has a wrong offset!");
static_assert(offsetof(UBaseCreateFromSelectedTool, HandleSourcesProperties) == 0x0000A0, "Member 'UBaseCreateFromSelectedTool::HandleSourcesProperties' has a wrong offset!");
static_assert(offsetof(UBaseCreateFromSelectedTool, Preview) == 0x0000A8, "Member 'UBaseCreateFromSelectedTool::Preview' has a wrong offset!");
static_assert(offsetof(UBaseCreateFromSelectedTool, TransformProxies) == 0x0000B0, "Member 'UBaseCreateFromSelectedTool::TransformProxies' has a wrong offset!");
static_assert(offsetof(UBaseCreateFromSelectedTool, TransformGizmos) == 0x0000C0, "Member 'UBaseCreateFromSelectedTool::TransformGizmos' has a wrong offset!");
static_assert(offsetof(UBaseCreateFromSelectedTool, TransformInitialScales) == 0x0000D0, "Member 'UBaseCreateFromSelectedTool::TransformInitialScales' has a wrong offset!");

// Class ModelingComponents.BaseMeshProcessingToolBuilder
// 0x0000 (0x0028 - 0x0028)
class UBaseMeshProcessingToolBuilder : public UInteractiveToolBuilder
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseMeshProcessingToolBuilder">();
	}
	static class UBaseMeshProcessingToolBuilder* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseMeshProcessingToolBuilder>();
	}
};
static_assert(alignof(UBaseMeshProcessingToolBuilder) == 0x000008, "Wrong alignment on UBaseMeshProcessingToolBuilder");
static_assert(sizeof(UBaseMeshProcessingToolBuilder) == 0x000028, "Wrong size on UBaseMeshProcessingToolBuilder");

// Class ModelingComponents.BaseVoxelTool
// 0x0018 (0x0108 - 0x00F0)
class UBaseVoxelTool : public UBaseCreateFromSelectedTool
{
public:
	class UVoxelProperties*                       VoxProperties;                                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_F8[0x10];                                      // 0x00F8(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BaseVoxelTool">();
	}
	static class UBaseVoxelTool* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBaseVoxelTool>();
	}
};
static_assert(alignof(UBaseVoxelTool) == 0x000008, "Wrong alignment on UBaseVoxelTool");
static_assert(sizeof(UBaseVoxelTool) == 0x000108, "Wrong size on UBaseVoxelTool");
static_assert(offsetof(UBaseVoxelTool, VoxProperties) == 0x0000F0, "Member 'UBaseVoxelTool::VoxProperties' has a wrong offset!");

// Class ModelingComponents.CollectSurfacePathMechanic
// 0x0520 (0x0550 - 0x0030)
class UCollectSurfacePathMechanic final : public UInteractionMechanic
{
public:
	uint8                                         Pad_30[0x520];                                     // 0x0030(0x0520)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CollectSurfacePathMechanic">();
	}
	static class UCollectSurfacePathMechanic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCollectSurfacePathMechanic>();
	}
};
static_assert(alignof(UCollectSurfacePathMechanic) == 0x000008, "Wrong alignment on UCollectSurfacePathMechanic");
static_assert(sizeof(UCollectSurfacePathMechanic) == 0x000550, "Wrong size on UCollectSurfacePathMechanic");

// Class ModelingComponents.ConstructionPlaneMechanic
// 0x00C0 (0x00F0 - 0x0030)
class alignas(0x10) UConstructionPlaneMechanic final : public UInteractionMechanic
{
public:
	uint8                                         Pad_30[0x98];                                      // 0x0030(0x0098)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformGizmo*                        PlaneTransformGizmo;                               // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTransformProxy*                        PlaneTransformProxy;                               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_D8[0x10];                                      // 0x00D8(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USingleClickInputBehavior*              ClickToSetPlaneBehavior;                           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"ConstructionPlaneMechanic">();
	}
	static class UConstructionPlaneMechanic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UConstructionPlaneMechanic>();
	}
};
static_assert(alignof(UConstructionPlaneMechanic) == 0x000010, "Wrong alignment on UConstructionPlaneMechanic");
static_assert(sizeof(UConstructionPlaneMechanic) == 0x0000F0, "Wrong size on UConstructionPlaneMechanic");
static_assert(offsetof(UConstructionPlaneMechanic, PlaneTransformGizmo) == 0x0000C8, "Member 'UConstructionPlaneMechanic::PlaneTransformGizmo' has a wrong offset!");
static_assert(offsetof(UConstructionPlaneMechanic, PlaneTransformProxy) == 0x0000D0, "Member 'UConstructionPlaneMechanic::PlaneTransformProxy' has a wrong offset!");
static_assert(offsetof(UConstructionPlaneMechanic, ClickToSetPlaneBehavior) == 0x0000E8, "Member 'UConstructionPlaneMechanic::ClickToSetPlaneBehavior' has a wrong offset!");

// Class ModelingComponents.CurveControlPointsMechanic
// 0x0620 (0x0650 - 0x0030)
class alignas(0x10) UCurveControlPointsMechanic final : public UInteractionMechanic
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USingleClickInputBehavior*              ClickBehavior;                                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMouseHoverBehavior*                    HoverBehavior;                                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x498];                                     // 0x0050(0x0498)(Fixing Size After Last Property [ Dumper-7 ])
	class APreviewGeometryActor*                  PreviewGeometryActor;                              // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPointSetComponent*                     DrawnControlPoints;                                // 0x04F0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULineSetComponent*                      DrawnControlSegments;                              // 0x04F8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPointSetComponent*                     PreviewPoint;                                      // 0x0500(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULineSetComponent*                      PreviewSegment;                                    // 0x0508(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_510[0x78];                                     // 0x0510(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformProxy*                        PointTransformProxy;                               // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformGizmo*                        PointTransformGizmo;                               // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_598[0xB8];                                     // 0x0598(0x00B8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"CurveControlPointsMechanic">();
	}
	static class UCurveControlPointsMechanic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCurveControlPointsMechanic>();
	}
};
static_assert(alignof(UCurveControlPointsMechanic) == 0x000010, "Wrong alignment on UCurveControlPointsMechanic");
static_assert(sizeof(UCurveControlPointsMechanic) == 0x000650, "Wrong size on UCurveControlPointsMechanic");
static_assert(offsetof(UCurveControlPointsMechanic, ClickBehavior) == 0x000040, "Member 'UCurveControlPointsMechanic::ClickBehavior' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, HoverBehavior) == 0x000048, "Member 'UCurveControlPointsMechanic::HoverBehavior' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, PreviewGeometryActor) == 0x0004E8, "Member 'UCurveControlPointsMechanic::PreviewGeometryActor' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, DrawnControlPoints) == 0x0004F0, "Member 'UCurveControlPointsMechanic::DrawnControlPoints' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, DrawnControlSegments) == 0x0004F8, "Member 'UCurveControlPointsMechanic::DrawnControlSegments' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, PreviewPoint) == 0x000500, "Member 'UCurveControlPointsMechanic::PreviewPoint' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, PreviewSegment) == 0x000508, "Member 'UCurveControlPointsMechanic::PreviewSegment' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, PointTransformProxy) == 0x000588, "Member 'UCurveControlPointsMechanic::PointTransformProxy' has a wrong offset!");
static_assert(offsetof(UCurveControlPointsMechanic, PointTransformGizmo) == 0x000590, "Member 'UCurveControlPointsMechanic::PointTransformGizmo' has a wrong offset!");

// Class ModelingComponents.DynamicMeshReplacementChangeTarget
// 0x0030 (0x0058 - 0x0028)
class UDynamicMeshReplacementChangeTarget final : public UObject
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DynamicMeshReplacementChangeTarget">();
	}
	static class UDynamicMeshReplacementChangeTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDynamicMeshReplacementChangeTarget>();
	}
};
static_assert(alignof(UDynamicMeshReplacementChangeTarget) == 0x000008, "Wrong alignment on UDynamicMeshReplacementChangeTarget");
static_assert(sizeof(UDynamicMeshReplacementChangeTarget) == 0x000058, "Wrong size on UDynamicMeshReplacementChangeTarget");

// Class ModelingComponents.LineSetComponent
// 0x0060 (0x04F0 - 0x0490)
class ULineSetComponent final : public UMeshComponent
{
public:
	class UMaterialInterface*                     LineMaterial;                                      // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBoxSphereBounds                       Bounds;                                            // 0x0490(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bBoundsDirty;                                      // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4AD[0x43];                                     // 0x04AD(0x0043)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"LineSetComponent">();
	}
	static class ULineSetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULineSetComponent>();
	}
};
static_assert(alignof(ULineSetComponent) == 0x000010, "Wrong alignment on ULineSetComponent");
static_assert(sizeof(ULineSetComponent) == 0x0004F0, "Wrong size on ULineSetComponent");
static_assert(offsetof(ULineSetComponent, LineMaterial) == 0x000488, "Member 'ULineSetComponent::LineMaterial' has a wrong offset!");
static_assert(offsetof(ULineSetComponent, Bounds) == 0x000490, "Member 'ULineSetComponent::Bounds' has a wrong offset!");
static_assert(offsetof(ULineSetComponent, bBoundsDirty) == 0x0004AC, "Member 'ULineSetComponent::bBoundsDirty' has a wrong offset!");

// Class ModelingComponents.MeshCommandChangeTarget
// 0x0000 (0x0028 - 0x0028)
class IMeshCommandChangeTarget final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshCommandChangeTarget">();
	}
	static class IMeshCommandChangeTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMeshCommandChangeTarget>();
	}
};
static_assert(alignof(IMeshCommandChangeTarget) == 0x000008, "Wrong alignment on IMeshCommandChangeTarget");
static_assert(sizeof(IMeshCommandChangeTarget) == 0x000028, "Wrong size on IMeshCommandChangeTarget");

// Class ModelingComponents.MeshOpPreviewWithBackgroundCompute
// 0x0068 (0x0090 - 0x0028)
class UMeshOpPreviewWithBackgroundCompute final : public UObject
{
public:
	uint8                                         Pad_28[0x30];                                      // 0x0028(0x0030)(Fixing Size After Last Property [ Dumper-7 ])
	class UPreviewMesh*                           PreviewMesh;                                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UMaterialInterface*>             StandardMaterials;                                 // 0x0060(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     OverrideMaterial;                                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInterface*                     WorkingMaterial;                                   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_80[0x10];                                      // 0x0080(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshOpPreviewWithBackgroundCompute">();
	}
	static class UMeshOpPreviewWithBackgroundCompute* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMeshOpPreviewWithBackgroundCompute>();
	}
};
static_assert(alignof(UMeshOpPreviewWithBackgroundCompute) == 0x000008, "Wrong alignment on UMeshOpPreviewWithBackgroundCompute");
static_assert(sizeof(UMeshOpPreviewWithBackgroundCompute) == 0x000090, "Wrong size on UMeshOpPreviewWithBackgroundCompute");
static_assert(offsetof(UMeshOpPreviewWithBackgroundCompute, PreviewMesh) == 0x000058, "Member 'UMeshOpPreviewWithBackgroundCompute::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UMeshOpPreviewWithBackgroundCompute, StandardMaterials) == 0x000060, "Member 'UMeshOpPreviewWithBackgroundCompute::StandardMaterials' has a wrong offset!");
static_assert(offsetof(UMeshOpPreviewWithBackgroundCompute, OverrideMaterial) == 0x000070, "Member 'UMeshOpPreviewWithBackgroundCompute::OverrideMaterial' has a wrong offset!");
static_assert(offsetof(UMeshOpPreviewWithBackgroundCompute, WorkingMaterial) == 0x000078, "Member 'UMeshOpPreviewWithBackgroundCompute::WorkingMaterial' has a wrong offset!");

// Class ModelingComponents.MeshReplacementCommandChangeTarget
// 0x0000 (0x0028 - 0x0028)
class IMeshReplacementCommandChangeTarget final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshReplacementCommandChangeTarget">();
	}
	static class IMeshReplacementCommandChangeTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMeshReplacementCommandChangeTarget>();
	}
};
static_assert(alignof(IMeshReplacementCommandChangeTarget) == 0x000008, "Wrong alignment on IMeshReplacementCommandChangeTarget");
static_assert(sizeof(IMeshReplacementCommandChangeTarget) == 0x000028, "Wrong size on IMeshReplacementCommandChangeTarget");

// Class ModelingComponents.MeshVertexCommandChangeTarget
// 0x0000 (0x0028 - 0x0028)
class IMeshVertexCommandChangeTarget final : public IInterface
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MeshVertexCommandChangeTarget">();
	}
	static class IMeshVertexCommandChangeTarget* GetDefaultObj()
	{
		return GetDefaultObjImpl<IMeshVertexCommandChangeTarget>();
	}
};
static_assert(alignof(IMeshVertexCommandChangeTarget) == 0x000008, "Wrong alignment on IMeshVertexCommandChangeTarget");
static_assert(sizeof(IMeshVertexCommandChangeTarget) == 0x000028, "Wrong size on IMeshVertexCommandChangeTarget");

// Class ModelingComponents.MultiTransformer
// 0x0118 (0x0140 - 0x0028)
class alignas(0x10) UMultiTransformer final : public UObject
{
public:
	uint8                                         Pad_28[0x48];                                      // 0x0028(0x0048)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractiveGizmoManager*               GizmoManager;                                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_78[0x68];                                      // 0x0078(0x0068)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformGizmo*                        TransformGizmo;                                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTransformProxy*                        TransformProxy;                                    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_F0[0x50];                                      // 0x00F0(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MultiTransformer">();
	}
	static class UMultiTransformer* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMultiTransformer>();
	}
};
static_assert(alignof(UMultiTransformer) == 0x000010, "Wrong alignment on UMultiTransformer");
static_assert(sizeof(UMultiTransformer) == 0x000140, "Wrong size on UMultiTransformer");
static_assert(offsetof(UMultiTransformer, GizmoManager) == 0x000070, "Member 'UMultiTransformer::GizmoManager' has a wrong offset!");
static_assert(offsetof(UMultiTransformer, TransformGizmo) == 0x0000E0, "Member 'UMultiTransformer::TransformGizmo' has a wrong offset!");
static_assert(offsetof(UMultiTransformer, TransformProxy) == 0x0000E8, "Member 'UMultiTransformer::TransformProxy' has a wrong offset!");

// Class ModelingComponents.OctreeDynamicMeshComponent
// 0x0110 (0x05E0 - 0x04D0)
class UOctreeDynamicMeshComponent final : public UBaseDynamicMeshComponent
{
public:
	uint8                                         Pad_4D0[0x18];                                     // 0x04D0(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bExplicitShowWireframe;                            // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4E9[0xF7];                                     // 0x04E9(0x00F7)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"OctreeDynamicMeshComponent">();
	}
	static class UOctreeDynamicMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UOctreeDynamicMeshComponent>();
	}
};
static_assert(alignof(UOctreeDynamicMeshComponent) == 0x000010, "Wrong alignment on UOctreeDynamicMeshComponent");
static_assert(sizeof(UOctreeDynamicMeshComponent) == 0x0005E0, "Wrong size on UOctreeDynamicMeshComponent");
static_assert(offsetof(UOctreeDynamicMeshComponent, bExplicitShowWireframe) == 0x0004E8, "Member 'UOctreeDynamicMeshComponent::bExplicitShowWireframe' has a wrong offset!");

// Class ModelingComponents.PlaneDistanceFromHitMechanic
// 0x0470 (0x04A0 - 0x0030)
class UPlaneDistanceFromHitMechanic final : public UInteractionMechanic
{
public:
	uint8                                         Pad_30[0x470];                                     // 0x0030(0x0470)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PlaneDistanceFromHitMechanic">();
	}
	static class UPlaneDistanceFromHitMechanic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlaneDistanceFromHitMechanic>();
	}
};
static_assert(alignof(UPlaneDistanceFromHitMechanic) == 0x000008, "Wrong alignment on UPlaneDistanceFromHitMechanic");
static_assert(sizeof(UPlaneDistanceFromHitMechanic) == 0x0004A0, "Wrong size on UPlaneDistanceFromHitMechanic");

// Class ModelingComponents.PointSetComponent
// 0x0060 (0x04F0 - 0x0490)
class UPointSetComponent final : public UMeshComponent
{
public:
	class UMaterialInterface*                     PointMaterial;                                     // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBoxSphereBounds                       Bounds;                                            // 0x0490(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bBoundsDirty;                                      // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4AD[0x43];                                     // 0x04AD(0x0043)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PointSetComponent">();
	}
	static class UPointSetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPointSetComponent>();
	}
};
static_assert(alignof(UPointSetComponent) == 0x000010, "Wrong alignment on UPointSetComponent");
static_assert(sizeof(UPointSetComponent) == 0x0004F0, "Wrong size on UPointSetComponent");
static_assert(offsetof(UPointSetComponent, PointMaterial) == 0x000488, "Member 'UPointSetComponent::PointMaterial' has a wrong offset!");
static_assert(offsetof(UPointSetComponent, Bounds) == 0x000490, "Member 'UPointSetComponent::Bounds' has a wrong offset!");
static_assert(offsetof(UPointSetComponent, bBoundsDirty) == 0x0004AC, "Member 'UPointSetComponent::bBoundsDirty' has a wrong offset!");

// Class ModelingComponents.PreviewMesh
// 0x00B8 (0x00E0 - 0x0028)
class UPreviewMesh : public UObject
{
public:
	uint8                                         Pad_28[0x18];                                      // 0x0028(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bBuildSpatialDataStructure;                        // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDrawOnTop;                                        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_42[0xE];                                       // 0x0042(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	class USimpleDynamicMeshComponent*            DynamicMeshComponent;                              // 0x0050(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0x88];                                      // 0x0058(0x0088)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PreviewMesh">();
	}
	static class UPreviewMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPreviewMesh>();
	}
};
static_assert(alignof(UPreviewMesh) == 0x000008, "Wrong alignment on UPreviewMesh");
static_assert(sizeof(UPreviewMesh) == 0x0000E0, "Wrong size on UPreviewMesh");
static_assert(offsetof(UPreviewMesh, bBuildSpatialDataStructure) == 0x000040, "Member 'UPreviewMesh::bBuildSpatialDataStructure' has a wrong offset!");
static_assert(offsetof(UPreviewMesh, bDrawOnTop) == 0x000041, "Member 'UPreviewMesh::bDrawOnTop' has a wrong offset!");
static_assert(offsetof(UPreviewMesh, DynamicMeshComponent) == 0x000050, "Member 'UPreviewMesh::DynamicMeshComponent' has a wrong offset!");

// Class ModelingComponents.PolyEditPreviewMesh
// 0x03F0 (0x04D0 - 0x00E0)
class UPolyEditPreviewMesh final : public UPreviewMesh
{
public:
	uint8                                         Pad_E0[0x3F0];                                     // 0x00E0(0x03F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolyEditPreviewMesh">();
	}
	static class UPolyEditPreviewMesh* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolyEditPreviewMesh>();
	}
};
static_assert(alignof(UPolyEditPreviewMesh) == 0x000008, "Wrong alignment on UPolyEditPreviewMesh");
static_assert(sizeof(UPolyEditPreviewMesh) == 0x0004D0, "Wrong size on UPolyEditPreviewMesh");

// Class ModelingComponents.PolygonSelectionMechanicProperties
// 0x0008 (0x0068 - 0x0060)
class UPolygonSelectionMechanicProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bSelectFaces;                                      // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectEdges;                                      // 0x0061(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectVertices;                                   // 0x0062(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectEdgeLoops;                                  // 0x0063(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectEdgeRings;                                  // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bPreferProjectedElement;                           // 0x0065(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bSelectDownRay;                                    // 0x0066(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIgnoreOcclusion;                                  // 0x0067(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolygonSelectionMechanicProperties">();
	}
	static class UPolygonSelectionMechanicProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolygonSelectionMechanicProperties>();
	}
};
static_assert(alignof(UPolygonSelectionMechanicProperties) == 0x000008, "Wrong alignment on UPolygonSelectionMechanicProperties");
static_assert(sizeof(UPolygonSelectionMechanicProperties) == 0x000068, "Wrong size on UPolygonSelectionMechanicProperties");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bSelectFaces) == 0x000060, "Member 'UPolygonSelectionMechanicProperties::bSelectFaces' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bSelectEdges) == 0x000061, "Member 'UPolygonSelectionMechanicProperties::bSelectEdges' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bSelectVertices) == 0x000062, "Member 'UPolygonSelectionMechanicProperties::bSelectVertices' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bSelectEdgeLoops) == 0x000063, "Member 'UPolygonSelectionMechanicProperties::bSelectEdgeLoops' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bSelectEdgeRings) == 0x000064, "Member 'UPolygonSelectionMechanicProperties::bSelectEdgeRings' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bPreferProjectedElement) == 0x000065, "Member 'UPolygonSelectionMechanicProperties::bPreferProjectedElement' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bSelectDownRay) == 0x000066, "Member 'UPolygonSelectionMechanicProperties::bSelectDownRay' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanicProperties, bIgnoreOcclusion) == 0x000067, "Member 'UPolygonSelectionMechanicProperties::bIgnoreOcclusion' has a wrong offset!");

// Class ModelingComponents.PolygonSelectionMechanic
// 0x0800 (0x0830 - 0x0030)
class alignas(0x10) UPolygonSelectionMechanic final : public UInteractionMechanic
{
public:
	uint8                                         Pad_30[0x20];                                      // 0x0030(0x0020)(Fixing Size After Last Property [ Dumper-7 ])
	class UPolygonSelectionMechanicProperties*    Properties;                                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_58[0x4C8];                                     // 0x0058(0x04C8)(Fixing Size After Last Property [ Dumper-7 ])
	class APreviewGeometryActor*                  PreviewGeometryActor;                              // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTriangleSetComponent*                  DrawnTriangleSetComponent;                         // 0x0528(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_530[0x50];                                     // 0x0530(0x0050)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     HighlightedFaceMaterial;                           // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_588[0x2A8];                                    // 0x0588(0x02A8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PolygonSelectionMechanic">();
	}
	static class UPolygonSelectionMechanic* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPolygonSelectionMechanic>();
	}
};
static_assert(alignof(UPolygonSelectionMechanic) == 0x000010, "Wrong alignment on UPolygonSelectionMechanic");
static_assert(sizeof(UPolygonSelectionMechanic) == 0x000830, "Wrong size on UPolygonSelectionMechanic");
static_assert(offsetof(UPolygonSelectionMechanic, Properties) == 0x000050, "Member 'UPolygonSelectionMechanic::Properties' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanic, PreviewGeometryActor) == 0x000520, "Member 'UPolygonSelectionMechanic::PreviewGeometryActor' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanic, DrawnTriangleSetComponent) == 0x000528, "Member 'UPolygonSelectionMechanic::DrawnTriangleSetComponent' has a wrong offset!");
static_assert(offsetof(UPolygonSelectionMechanic, HighlightedFaceMaterial) == 0x000580, "Member 'UPolygonSelectionMechanic::HighlightedFaceMaterial' has a wrong offset!");

// Class ModelingComponents.PreviewGeometryActor
// 0x0000 (0x0238 - 0x0238)
class APreviewGeometryActor final : public AInternalToolFrameworkActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PreviewGeometryActor">();
	}
	static class APreviewGeometryActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APreviewGeometryActor>();
	}
};
static_assert(alignof(APreviewGeometryActor) == 0x000008, "Wrong alignment on APreviewGeometryActor");
static_assert(sizeof(APreviewGeometryActor) == 0x000238, "Wrong size on APreviewGeometryActor");

// Class ModelingComponents.PreviewGeometry
// 0x0058 (0x0080 - 0x0028)
class UPreviewGeometry final : public UObject
{
public:
	class APreviewGeometryActor*                  ParentActor;                                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class FString, class ULineSetComponent*> LineSets;                                          // 0x0030(0x0050)(ExportObject, ContainsInstancedReference, NativeAccessSpecifierPublic)

public:
	class ULineSetComponent* AddLineSet(const class FString& LineSetIdentifier);
	void CreateInWorld(class UWorld* World, const struct FTransform& WithTransform);
	void Disconnect();
	class ULineSetComponent* FindLineSet(const class FString& LineSetIdentifier);
	void RemoveAllLineSets(bool bDestroy);
	bool RemoveLineSet(const class FString& LineSetIdentifier, bool bDestroy);
	void SetAllLineSetsMaterial(class UMaterialInterface* Material);
	bool SetLineSetMaterial(const class FString& LineSetIdentifier, class UMaterialInterface* NewMaterial);
	bool SetLineSetVisibility(const class FString& LineSetIdentifier, bool bVisible);

	class APreviewGeometryActor* GetActor() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PreviewGeometry">();
	}
	static class UPreviewGeometry* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPreviewGeometry>();
	}
};
static_assert(alignof(UPreviewGeometry) == 0x000008, "Wrong alignment on UPreviewGeometry");
static_assert(sizeof(UPreviewGeometry) == 0x000080, "Wrong size on UPreviewGeometry");
static_assert(offsetof(UPreviewGeometry, ParentActor) == 0x000028, "Member 'UPreviewGeometry::ParentActor' has a wrong offset!");
static_assert(offsetof(UPreviewGeometry, LineSets) == 0x000030, "Member 'UPreviewGeometry::LineSets' has a wrong offset!");

// Class ModelingComponents.PreviewMeshActor
// 0x0000 (0x0238 - 0x0238)
class APreviewMeshActor final : public AInternalToolFrameworkActor
{
public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PreviewMeshActor">();
	}
	static class APreviewMeshActor* GetDefaultObj()
	{
		return GetDefaultObjImpl<APreviewMeshActor>();
	}
};
static_assert(alignof(APreviewMeshActor) == 0x000008, "Wrong alignment on APreviewMeshActor");
static_assert(sizeof(APreviewMeshActor) == 0x000238, "Wrong size on APreviewMeshActor");

// Class ModelingComponents.SimpleDynamicMeshComponent
// 0x0150 (0x0620 - 0x04D0)
class USimpleDynamicMeshComponent final : public UBaseDynamicMeshComponent
{
public:
	EDynamicMeshTangentCalcType                   TangentsType;                                      // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bInvalidateProxyOnChange;                          // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4D2[0x36];                                     // 0x04D2(0x0036)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bExplicitShowWireframe;                            // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_509[0x47];                                     // 0x0509(0x0047)(Fixing Size After Last Property [ Dumper-7 ])
	bool                                          bDrawOnTop;                                        // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_551[0xCF];                                     // 0x0551(0x00CF)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SimpleDynamicMeshComponent">();
	}
	static class USimpleDynamicMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<USimpleDynamicMeshComponent>();
	}
};
static_assert(alignof(USimpleDynamicMeshComponent) == 0x000010, "Wrong alignment on USimpleDynamicMeshComponent");
static_assert(sizeof(USimpleDynamicMeshComponent) == 0x000620, "Wrong size on USimpleDynamicMeshComponent");
static_assert(offsetof(USimpleDynamicMeshComponent, TangentsType) == 0x0004D0, "Member 'USimpleDynamicMeshComponent::TangentsType' has a wrong offset!");
static_assert(offsetof(USimpleDynamicMeshComponent, bInvalidateProxyOnChange) == 0x0004D1, "Member 'USimpleDynamicMeshComponent::bInvalidateProxyOnChange' has a wrong offset!");
static_assert(offsetof(USimpleDynamicMeshComponent, bExplicitShowWireframe) == 0x000508, "Member 'USimpleDynamicMeshComponent::bExplicitShowWireframe' has a wrong offset!");
static_assert(offsetof(USimpleDynamicMeshComponent, bDrawOnTop) == 0x000550, "Member 'USimpleDynamicMeshComponent::bDrawOnTop' has a wrong offset!");

// Class ModelingComponents.SpaceCurveDeformationMechanicPropertySet
// 0x0010 (0x0070 - 0x0060)
class USpaceCurveDeformationMechanicPropertySet final : public UInteractiveToolPropertySet
{
public:
	ESpaceCurveControlPointTransformMode          TransformMode;                                     // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpaceCurveControlPointOriginMode             TransformOrigin;                                   // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Softness;                                          // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESpaceCurveControlPointFalloffType            SoftFalloff;                                       // 0x006C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpaceCurveDeformationMechanicPropertySet">();
	}
	static class USpaceCurveDeformationMechanicPropertySet* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpaceCurveDeformationMechanicPropertySet>();
	}
};
static_assert(alignof(USpaceCurveDeformationMechanicPropertySet) == 0x000008, "Wrong alignment on USpaceCurveDeformationMechanicPropertySet");
static_assert(sizeof(USpaceCurveDeformationMechanicPropertySet) == 0x000070, "Wrong size on USpaceCurveDeformationMechanicPropertySet");
static_assert(offsetof(USpaceCurveDeformationMechanicPropertySet, TransformMode) == 0x000060, "Member 'USpaceCurveDeformationMechanicPropertySet::TransformMode' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanicPropertySet, TransformOrigin) == 0x000064, "Member 'USpaceCurveDeformationMechanicPropertySet::TransformOrigin' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanicPropertySet, Softness) == 0x000068, "Member 'USpaceCurveDeformationMechanicPropertySet::Softness' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanicPropertySet, SoftFalloff) == 0x00006C, "Member 'USpaceCurveDeformationMechanicPropertySet::SoftFalloff' has a wrong offset!");

// Class ModelingComponents.SpaceCurveDeformationMechanic
// 0x0280 (0x02B0 - 0x0030)
class alignas(0x10) USpaceCurveDeformationMechanic final : public UInteractionMechanic
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Size After Last Property [ Dumper-7 ])
	class USingleClickInputBehavior*              ClickBehavior;                                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMouseHoverBehavior*                    HoverBehavior;                                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0x18];                                      // 0x0050(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	class USpaceCurveDeformationMechanicPropertySet* TransformProperties;                               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_70[0xF8];                                      // 0x0070(0x00F8)(Fixing Size After Last Property [ Dumper-7 ])
	class APreviewGeometryActor*                  PreviewGeometryActor;                              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPointSetComponent*                     RenderPoints;                                      // 0x0170(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULineSetComponent*                      RenderSegments;                                    // 0x0178(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_180[0x38];                                     // 0x0180(0x0038)(Fixing Size After Last Property [ Dumper-7 ])
	class UTransformProxy*                        PointTransformProxy;                               // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTransformGizmo*                        PointTransformGizmo;                               // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_1C8[0xE8];                                     // 0x01C8(0x00E8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpaceCurveDeformationMechanic">();
	}
	static class USpaceCurveDeformationMechanic* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpaceCurveDeformationMechanic>();
	}
};
static_assert(alignof(USpaceCurveDeformationMechanic) == 0x000010, "Wrong alignment on USpaceCurveDeformationMechanic");
static_assert(sizeof(USpaceCurveDeformationMechanic) == 0x0002B0, "Wrong size on USpaceCurveDeformationMechanic");
static_assert(offsetof(USpaceCurveDeformationMechanic, ClickBehavior) == 0x000040, "Member 'USpaceCurveDeformationMechanic::ClickBehavior' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanic, HoverBehavior) == 0x000048, "Member 'USpaceCurveDeformationMechanic::HoverBehavior' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanic, TransformProperties) == 0x000068, "Member 'USpaceCurveDeformationMechanic::TransformProperties' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanic, PreviewGeometryActor) == 0x000168, "Member 'USpaceCurveDeformationMechanic::PreviewGeometryActor' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanic, RenderPoints) == 0x000170, "Member 'USpaceCurveDeformationMechanic::RenderPoints' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanic, RenderSegments) == 0x000178, "Member 'USpaceCurveDeformationMechanic::RenderSegments' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanic, PointTransformProxy) == 0x0001B8, "Member 'USpaceCurveDeformationMechanic::PointTransformProxy' has a wrong offset!");
static_assert(offsetof(USpaceCurveDeformationMechanic, PointTransformGizmo) == 0x0001C0, "Member 'USpaceCurveDeformationMechanic::PointTransformGizmo' has a wrong offset!");

// Class ModelingComponents.SpatialCurveDistanceMechanic
// 0x03C0 (0x03F0 - 0x0030)
class USpatialCurveDistanceMechanic final : public UInteractionMechanic
{
public:
	uint8                                         Pad_30[0x3C0];                                     // 0x0030(0x03C0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"SpatialCurveDistanceMechanic">();
	}
	static class USpatialCurveDistanceMechanic* GetDefaultObj()
	{
		return GetDefaultObjImpl<USpatialCurveDistanceMechanic>();
	}
};
static_assert(alignof(USpatialCurveDistanceMechanic) == 0x000008, "Wrong alignment on USpatialCurveDistanceMechanic");
static_assert(sizeof(USpatialCurveDistanceMechanic) == 0x0003F0, "Wrong size on USpatialCurveDistanceMechanic");

// Class ModelingComponents.TriangleSetComponent
// 0x00E0 (0x0570 - 0x0490)
class UTriangleSetComponent final : public UMeshComponent
{
public:
	struct FBoxSphereBounds                       Bounds;                                            // 0x0488(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	bool                                          bBoundsDirty;                                      // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint8                                         Pad_4A5[0xCB];                                     // 0x04A5(0x00CB)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"TriangleSetComponent">();
	}
	static class UTriangleSetComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UTriangleSetComponent>();
	}
};
static_assert(alignof(UTriangleSetComponent) == 0x000010, "Wrong alignment on UTriangleSetComponent");
static_assert(sizeof(UTriangleSetComponent) == 0x000570, "Wrong size on UTriangleSetComponent");
static_assert(offsetof(UTriangleSetComponent, Bounds) == 0x000488, "Member 'UTriangleSetComponent::Bounds' has a wrong offset!");
static_assert(offsetof(UTriangleSetComponent, bBoundsDirty) == 0x0004A4, "Member 'UTriangleSetComponent::bBoundsDirty' has a wrong offset!");

// Class ModelingComponents.UVLayoutPreviewProperties
// 0x0018 (0x0078 - 0x0060)
class UUVLayoutPreviewProperties final : public UInteractiveToolPropertySet
{
public:
	bool                                          bVisible;                                          // 0x0060(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ScaleFactor;                                       // 0x0064(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EUVLayoutPreviewSide                          WhichSide;                                         // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowWireframe;                                    // 0x006C(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Shift;                                             // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVLayoutPreviewProperties">();
	}
	static class UUVLayoutPreviewProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVLayoutPreviewProperties>();
	}
};
static_assert(alignof(UUVLayoutPreviewProperties) == 0x000008, "Wrong alignment on UUVLayoutPreviewProperties");
static_assert(sizeof(UUVLayoutPreviewProperties) == 0x000078, "Wrong size on UUVLayoutPreviewProperties");
static_assert(offsetof(UUVLayoutPreviewProperties, bVisible) == 0x000060, "Member 'UUVLayoutPreviewProperties::bVisible' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreviewProperties, ScaleFactor) == 0x000064, "Member 'UUVLayoutPreviewProperties::ScaleFactor' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreviewProperties, WhichSide) == 0x000068, "Member 'UUVLayoutPreviewProperties::WhichSide' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreviewProperties, bShowWireframe) == 0x00006C, "Member 'UUVLayoutPreviewProperties::bShowWireframe' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreviewProperties, Shift) == 0x000070, "Member 'UUVLayoutPreviewProperties::Shift' has a wrong offset!");

// Class ModelingComponents.UVLayoutPreview
// 0x0118 (0x0140 - 0x0028)
class alignas(0x10) UUVLayoutPreview final : public UObject
{
public:
	class UUVLayoutPreviewProperties*             Settings;                                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPreviewMesh*                           PreviewMesh;                                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTriangleSetComponent*                  TriangleComponent;                                 // 0x0038(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bShowBackingRectangle;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     BackingRectangleMaterial;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_50[0xF0];                                      // 0x0050(0x00F0)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"UVLayoutPreview">();
	}
	static class UUVLayoutPreview* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUVLayoutPreview>();
	}
};
static_assert(alignof(UUVLayoutPreview) == 0x000010, "Wrong alignment on UUVLayoutPreview");
static_assert(sizeof(UUVLayoutPreview) == 0x000140, "Wrong size on UUVLayoutPreview");
static_assert(offsetof(UUVLayoutPreview, Settings) == 0x000028, "Member 'UUVLayoutPreview::Settings' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreview, PreviewMesh) == 0x000030, "Member 'UUVLayoutPreview::PreviewMesh' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreview, TriangleComponent) == 0x000038, "Member 'UUVLayoutPreview::TriangleComponent' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreview, bShowBackingRectangle) == 0x000040, "Member 'UUVLayoutPreview::bShowBackingRectangle' has a wrong offset!");
static_assert(offsetof(UUVLayoutPreview, BackingRectangleMaterial) == 0x000048, "Member 'UUVLayoutPreview::BackingRectangleMaterial' has a wrong offset!");

// Class ModelingComponents.VoxelProperties
// 0x0018 (0x0078 - 0x0060)
class UVoxelProperties final : public UInteractiveToolPropertySet
{
public:
	int32                                         VoxelCount;                                        // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoSimplify;                                     // 0x0064(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bRemoveInternalSurfaces;                           // 0x0065(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        SimplifyMaxErrorFactor;                            // 0x0068(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	double                                        CubeRootMinComponentVolume;                        // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"VoxelProperties">();
	}
	static class UVoxelProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVoxelProperties>();
	}
};
static_assert(alignof(UVoxelProperties) == 0x000008, "Wrong alignment on UVoxelProperties");
static_assert(sizeof(UVoxelProperties) == 0x000078, "Wrong size on UVoxelProperties");
static_assert(offsetof(UVoxelProperties, VoxelCount) == 0x000060, "Member 'UVoxelProperties::VoxelCount' has a wrong offset!");
static_assert(offsetof(UVoxelProperties, bAutoSimplify) == 0x000064, "Member 'UVoxelProperties::bAutoSimplify' has a wrong offset!");
static_assert(offsetof(UVoxelProperties, bRemoveInternalSurfaces) == 0x000065, "Member 'UVoxelProperties::bRemoveInternalSurfaces' has a wrong offset!");
static_assert(offsetof(UVoxelProperties, SimplifyMaxErrorFactor) == 0x000068, "Member 'UVoxelProperties::SimplifyMaxErrorFactor' has a wrong offset!");
static_assert(offsetof(UVoxelProperties, CubeRootMinComponentVolume) == 0x000070, "Member 'UVoxelProperties::CubeRootMinComponentVolume' has a wrong offset!");

// Class ModelingComponents.WeightMapSetProperties
// 0x0020 (0x0080 - 0x0060)
class UWeightMapSetProperties : public UInteractiveToolPropertySet
{
public:
	class FName                                   WeightMap;                                         // 0x0060(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         WeightMapsList;                                    // 0x0068(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          bInvertWeightMap;                                  // 0x0078(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	TArray<class FString> GetWeightMapsFunc();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"WeightMapSetProperties">();
	}
	static class UWeightMapSetProperties* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeightMapSetProperties>();
	}
};
static_assert(alignof(UWeightMapSetProperties) == 0x000008, "Wrong alignment on UWeightMapSetProperties");
static_assert(sizeof(UWeightMapSetProperties) == 0x000080, "Wrong size on UWeightMapSetProperties");
static_assert(offsetof(UWeightMapSetProperties, WeightMap) == 0x000060, "Member 'UWeightMapSetProperties::WeightMap' has a wrong offset!");
static_assert(offsetof(UWeightMapSetProperties, WeightMapsList) == 0x000068, "Member 'UWeightMapSetProperties::WeightMapsList' has a wrong offset!");
static_assert(offsetof(UWeightMapSetProperties, bInvertWeightMap) == 0x000078, "Member 'UWeightMapSetProperties::bInvertWeightMap' has a wrong offset!");

}

