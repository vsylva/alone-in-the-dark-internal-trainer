#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_StreamingValidator_LoadThrobber

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FN_StreamingValidator_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FN_StreamingValidator_LoadThrobber.FN_StreamingValidator_LoadThrobber_C
// 0x0038 (0x0280 - 0x0248)
class UFN_StreamingValidator_LoadThrobber_C : public UFN_StreamingValidator_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_FN_StreamingValidator_LoadThrobber_C; // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FName                                   Out_Pin__Throbber_Added;                           // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Out_Pin__Throbber_Removed;                         // 0x0258(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   In_Pin__Remove_Throbber;                           // 0x0260(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Streaming_Check_Fail_Time_Limit;                   // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Fail_Limit_Timer_Handle;                           // 0x0270(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bFinished;                                         // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void Log_Failed_Streaming();
	void Remove_Throbber();
	void Add_Throbber();
	void K2_Cleanup();
	void TimeLimitReached();
	void OnSuccessfullyStreamed();
	void OnTimeLimitReached();
	void Streaming_Check_Time_Limit_reached();
	void K2_ExecuteInput(const class FName& PinName);
	void ExecuteUbergraph_FN_StreamingValidator_LoadThrobber(int32 EntryPoint);

	class FString K2_GetStatusString() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FN_StreamingValidator_LoadThrobber_C">();
	}
	static class UFN_StreamingValidator_LoadThrobber_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFN_StreamingValidator_LoadThrobber_C>();
	}
};
static_assert(alignof(UFN_StreamingValidator_LoadThrobber_C) == 0x000008, "Wrong alignment on UFN_StreamingValidator_LoadThrobber_C");
static_assert(sizeof(UFN_StreamingValidator_LoadThrobber_C) == 0x000280, "Wrong size on UFN_StreamingValidator_LoadThrobber_C");
static_assert(offsetof(UFN_StreamingValidator_LoadThrobber_C, UberGraphFrame_FN_StreamingValidator_LoadThrobber_C) == 0x000248, "Member 'UFN_StreamingValidator_LoadThrobber_C::UberGraphFrame_FN_StreamingValidator_LoadThrobber_C' has a wrong offset!");
static_assert(offsetof(UFN_StreamingValidator_LoadThrobber_C, Out_Pin__Throbber_Added) == 0x000250, "Member 'UFN_StreamingValidator_LoadThrobber_C::Out_Pin__Throbber_Added' has a wrong offset!");
static_assert(offsetof(UFN_StreamingValidator_LoadThrobber_C, Out_Pin__Throbber_Removed) == 0x000258, "Member 'UFN_StreamingValidator_LoadThrobber_C::Out_Pin__Throbber_Removed' has a wrong offset!");
static_assert(offsetof(UFN_StreamingValidator_LoadThrobber_C, In_Pin__Remove_Throbber) == 0x000260, "Member 'UFN_StreamingValidator_LoadThrobber_C::In_Pin__Remove_Throbber' has a wrong offset!");
static_assert(offsetof(UFN_StreamingValidator_LoadThrobber_C, Streaming_Check_Fail_Time_Limit) == 0x000268, "Member 'UFN_StreamingValidator_LoadThrobber_C::Streaming_Check_Fail_Time_Limit' has a wrong offset!");
static_assert(offsetof(UFN_StreamingValidator_LoadThrobber_C, Fail_Limit_Timer_Handle) == 0x000270, "Member 'UFN_StreamingValidator_LoadThrobber_C::Fail_Limit_Timer_Handle' has a wrong offset!");
static_assert(offsetof(UFN_StreamingValidator_LoadThrobber_C, bFinished) == 0x000278, "Member 'UFN_StreamingValidator_LoadThrobber_C::bFinished' has a wrong offset!");

}

