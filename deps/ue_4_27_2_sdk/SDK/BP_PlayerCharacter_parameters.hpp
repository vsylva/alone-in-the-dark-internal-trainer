#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacter

#include "Basic.hpp"

#include "FMODStudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CharacterSize_structs.hpp"
#include "AnimationMontageIdentifier_structs.hpp"
#include "CemeteryCreatureType_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "InputCore_structs.hpp"
#include "FaceButtonType_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setStartBurrowed
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_SetStartBurrowed final
{
public:
	bool                                          beginBurrowed;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetStartBurrowed) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetStartBurrowed");
static_assert(sizeof(BP_PlayerCharacter_C_SetStartBurrowed) == 0x000002, "Wrong size on BP_PlayerCharacter_C_SetStartBurrowed");
static_assert(offsetof(BP_PlayerCharacter_C_SetStartBurrowed, beginBurrowed) == 0x000000, "Member 'BP_PlayerCharacter_C_SetStartBurrowed::beginBurrowed' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetStartBurrowed, Success) == 0x000001, "Member 'BP_PlayerCharacter_C_SetStartBurrowed::Success' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setOrderTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_SetOrderTarget final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetOrderTarget) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SetOrderTarget");
static_assert(sizeof(BP_PlayerCharacter_C_SetOrderTarget) == 0x000010, "Wrong size on BP_PlayerCharacter_C_SetOrderTarget");
static_assert(offsetof(BP_PlayerCharacter_C_SetOrderTarget, Location) == 0x000000, "Member 'BP_PlayerCharacter_C_SetOrderTarget::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetOrderTarget, Success) == 0x00000C, "Member 'BP_PlayerCharacter_C_SetOrderTarget::Success' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.hitscanWeaponFired
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_HitscanWeaponFired final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_HitscanWeaponFired) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_HitscanWeaponFired");
static_assert(sizeof(BP_PlayerCharacter_C_HitscanWeaponFired) == 0x000001, "Wrong size on BP_PlayerCharacter_C_HitscanWeaponFired");
static_assert(offsetof(BP_PlayerCharacter_C_HitscanWeaponFired, Success) == 0x000000, "Member 'BP_PlayerCharacter_C_HitscanWeaponFired::Success' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_GetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_GetMostSuitableMeleeSection");
static_assert(sizeof(BP_PlayerCharacter_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong size on BP_PlayerCharacter_C_GetMostSuitableMeleeSection");
static_assert(offsetof(BP_PlayerCharacter_C_GetMostSuitableMeleeSection, Value) == 0x000000, "Member 'BP_PlayerCharacter_C_GetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.getAggroState
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_GetAggroState final
{
public:
	bool                                          Aggro;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_GetAggroState) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_GetAggroState");
static_assert(sizeof(BP_PlayerCharacter_C_GetAggroState) == 0x000001, "Wrong size on BP_PlayerCharacter_C_GetAggroState");
static_assert(offsetof(BP_PlayerCharacter_C_GetAggroState, Aggro) == 0x000000, "Member 'BP_PlayerCharacter_C_GetAggroState::Aggro' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setNewAggro
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_SetNewAggro final
{
public:
	bool                                          NewAggro;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetNewAggro) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetNewAggro");
static_assert(sizeof(BP_PlayerCharacter_C_SetNewAggro) == 0x000002, "Wrong size on BP_PlayerCharacter_C_SetNewAggro");
static_assert(offsetof(BP_PlayerCharacter_C_SetNewAggro, NewAggro) == 0x000000, "Member 'BP_PlayerCharacter_C_SetNewAggro::NewAggro' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetNewAggro, Success) == 0x000001, "Member 'BP_PlayerCharacter_C_SetNewAggro::Success' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IncrementJac3ProneCounter
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_IncrementJac3ProneCounter final
{
public:
	int32                                         ProneCounter;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_IncrementJac3ProneCounter) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_IncrementJac3ProneCounter");
static_assert(sizeof(BP_PlayerCharacter_C_IncrementJac3ProneCounter) == 0x000004, "Wrong size on BP_PlayerCharacter_C_IncrementJac3ProneCounter");
static_assert(offsetof(BP_PlayerCharacter_C_IncrementJac3ProneCounter, ProneCounter) == 0x000000, "Member 'BP_PlayerCharacter_C_IncrementJac3ProneCounter::ProneCounter' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetCharacterSize
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_GetCharacterSize final
{
public:
	ECharacterSize                                Size;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_GetCharacterSize) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_GetCharacterSize");
static_assert(sizeof(BP_PlayerCharacter_C_GetCharacterSize) == 0x000001, "Wrong size on BP_PlayerCharacter_C_GetCharacterSize");
static_assert(offsetof(BP_PlayerCharacter_C_GetCharacterSize, Size) == 0x000000, "Member 'BP_PlayerCharacter_C_GetCharacterSize::Size' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.getCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_GetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CemeteryCreatureType;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_GetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_GetCemeteryCreatureType");
static_assert(sizeof(BP_PlayerCharacter_C_GetCemeteryCreatureType) == 0x000001, "Wrong size on BP_PlayerCharacter_C_GetCemeteryCreatureType");
static_assert(offsetof(BP_PlayerCharacter_C_GetCemeteryCreatureType, CemeteryCreatureType) == 0x000000, "Member 'BP_PlayerCharacter_C_GetCemeteryCreatureType::CemeteryCreatureType' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setCanCirculate
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_SetCanCirculate final
{
public:
	bool                                          CanCirculate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetCanCirculate) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetCanCirculate");
static_assert(sizeof(BP_PlayerCharacter_C_SetCanCirculate) == 0x000002, "Wrong size on BP_PlayerCharacter_C_SetCanCirculate");
static_assert(offsetof(BP_PlayerCharacter_C_SetCanCirculate, CanCirculate) == 0x000000, "Member 'BP_PlayerCharacter_C_SetCanCirculate::CanCirculate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetCanCirculate, Success) == 0x000001, "Member 'BP_PlayerCharacter_C_SetCanCirculate::Success' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setStartOnWall
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_SetStartOnWall final
{
public:
	bool                                          StartOnWall;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetStartOnWall) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetStartOnWall");
static_assert(sizeof(BP_PlayerCharacter_C_SetStartOnWall) == 0x000002, "Wrong size on BP_PlayerCharacter_C_SetStartOnWall");
static_assert(offsetof(BP_PlayerCharacter_C_SetStartOnWall, StartOnWall) == 0x000000, "Member 'BP_PlayerCharacter_C_SetStartOnWall::StartOnWall' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SetStartOnWall, Success) == 0x000001, "Member 'BP_PlayerCharacter_C_SetStartOnWall::Success' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AimedAt
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_AimedAt final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_AimedAt) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_AimedAt");
static_assert(sizeof(BP_PlayerCharacter_C_AimedAt) == 0x000001, "Wrong size on BP_PlayerCharacter_C_AimedAt");
static_assert(offsetof(BP_PlayerCharacter_C_AimedAt, Return) == 0x000000, "Member 'BP_PlayerCharacter_C_AimedAt::Return' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetUpgradeComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_GetUpgradeComponent final
{
public:
	class UWeaponUpgradeComponent_C*              UpgradeComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_GetUpgradeComponent) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_GetUpgradeComponent");
static_assert(sizeof(BP_PlayerCharacter_C_GetUpgradeComponent) == 0x000008, "Wrong size on BP_PlayerCharacter_C_GetUpgradeComponent");
static_assert(offsetof(BP_PlayerCharacter_C_GetUpgradeComponent, UpgradeComponent) == 0x000000, "Member 'BP_PlayerCharacter_C_GetUpgradeComponent::UpgradeComponent' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.FlashlightHit
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_FlashlightHit final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_FlashlightHit) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_FlashlightHit");
static_assert(sizeof(BP_PlayerCharacter_C_FlashlightHit) == 0x000008, "Wrong size on BP_PlayerCharacter_C_FlashlightHit");
static_assert(offsetof(BP_PlayerCharacter_C_FlashlightHit, Distance) == 0x000000, "Member 'BP_PlayerCharacter_C_FlashlightHit::Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_FlashlightHit, Success) == 0x000004, "Member 'BP_PlayerCharacter_C_FlashlightHit::Success' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.addNGPlusWeapons
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerCharacter_C_AddNGPlusWeapons final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemData_Equippable*>           CallFunc_GetAvailableWeapons_ReturnValue;          // 0x0010(0x0010)(ReferenceParm)
	class UItemData_Equippable*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponInfo                            CallFunc_EquipWeapon_ReturnValue;                  // 0x0030(0x0010)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItemToInventory_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsNewGamePlus_ReturnValue;                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_AddNGPlusWeapons) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_AddNGPlusWeapons");
static_assert(sizeof(BP_PlayerCharacter_C_AddNGPlusWeapons) == 0x000050, "Wrong size on BP_PlayerCharacter_C_AddNGPlusWeapons");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_GetAvailableWeapons_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_GetAvailableWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_EquipWeapon_ReturnValue) == 0x000030, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_EquipWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_AddItemToInventory_ReturnValue) == 0x000041, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_AddItemToInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_Array_Find_ReturnValue) == 0x000044, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000048, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_AddNGPlusWeapons, CallFunc_IsNewGamePlus_ReturnValue) == 0x000049, "Member 'BP_PlayerCharacter_C_AddNGPlusWeapons::CallFunc_IsNewGamePlus_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Start Loading Animations
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerCharacter_C_Start_Loading_Animations final
{
public:
	class UGameSubsystem_AnimationAssetManager*   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            CallFunc_GetMontageForSkeleton_ReturnValue;        // 0x0008(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ReferenceParm)
	TArray<class UObject*>                        CallFunc_LoadAssets_ReturnValue;                   // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_PlayerCharacter_C_Start_Loading_Animations) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Start_Loading_Animations");
static_assert(sizeof(BP_PlayerCharacter_C_Start_Loading_Animations) == 0x000050, "Wrong size on BP_PlayerCharacter_C_Start_Loading_Animations");
static_assert(offsetof(BP_PlayerCharacter_C_Start_Loading_Animations, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_Start_Loading_Animations::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Start_Loading_Animations, CallFunc_GetMontageForSkeleton_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_Start_Loading_Animations::CallFunc_GetMontageForSkeleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Start_Loading_Animations, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_PlayerCharacter_C_Start_Loading_Animations::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Start_Loading_Animations, CallFunc_LoadAssets_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_Start_Loading_Animations::CallFunc_LoadAssets_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Set Combat Sprint
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerCharacter_C_Set_Combat_Sprint final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_Set_Combat_Sprint) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_Set_Combat_Sprint");
static_assert(sizeof(BP_PlayerCharacter_C_Set_Combat_Sprint) == 0x000014, "Wrong size on BP_PlayerCharacter_C_Set_Combat_Sprint");
static_assert(offsetof(BP_PlayerCharacter_C_Set_Combat_Sprint, Condition) == 0x000000, "Member 'BP_PlayerCharacter_C_Set_Combat_Sprint::Condition' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Set_Combat_Sprint, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_Set_Combat_Sprint::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Set_Combat_Sprint, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_Set_Combat_Sprint::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Set_Combat_Sprint, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_Set_Combat_Sprint::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TurnOffFlashlight
// 0x0100 (0x0100 - 0x0000)
struct BP_PlayerCharacter_C_TurnOffFlashlight final
{
public:
	TSoftObjectPtr<class UItemData>               Temp_softobject_Variable;                          // 0x0000(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemData>               Temp_softobject_Variable_1;                        // 0x0028(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class UDevicePropertySubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AOFPlayerController*                    CallFunc_GetObsidianFoxPlayerController_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TMap<TSoftObjectPtr<class UItemData>, struct FItemInfo> CallFunc_GetAllItems_ReturnValue;                  // 0x00A0(0x0050)(ConstParm)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_TurnOffFlashlight) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_TurnOffFlashlight");
static_assert(sizeof(BP_PlayerCharacter_C_TurnOffFlashlight) == 0x000100, "Wrong size on BP_PlayerCharacter_C_TurnOffFlashlight");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, Temp_softobject_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, Temp_softobject_Variable_1) == 0x000028, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_GetObsidianFoxPlayerController_ReturnValue) == 0x000090, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_GetObsidianFoxPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000098, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_GetAllItems_ReturnValue) == 0x0000A0, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_GetAllItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_Map_Contains_ReturnValue) == 0x0000F0, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_Map_Contains_ReturnValue_1) == 0x0000F1, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOffFlashlight, CallFunc_BooleanOR_ReturnValue) == 0x0000F2, "Member 'BP_PlayerCharacter_C_TurnOffFlashlight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TurnOnFlashlight
// 0x0100 (0x0100 - 0x0000)
struct BP_PlayerCharacter_C_TurnOnFlashlight final
{
public:
	TSoftObjectPtr<class UItemData>               Temp_softobject_Variable;                          // 0x0000(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemData>               Temp_softobject_Variable_1;                        // 0x0028(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDevicePropertySubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerController*                    CallFunc_GetObsidianFoxPlayerController_ReturnValue; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<TSoftObjectPtr<class UItemData>, struct FItemInfo> CallFunc_GetAllItems_ReturnValue;                  // 0x00A0(0x0050)(ConstParm)
	bool                                          CallFunc_Map_Contains_ReturnValue;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Contains_ReturnValue_1;               // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_TurnOnFlashlight) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_TurnOnFlashlight");
static_assert(sizeof(BP_PlayerCharacter_C_TurnOnFlashlight) == 0x000100, "Wrong size on BP_PlayerCharacter_C_TurnOnFlashlight");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, Temp_softobject_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, Temp_softobject_Variable_1) == 0x000028, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000080, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000088, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_GetObsidianFoxPlayerController_ReturnValue) == 0x000098, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_GetObsidianFoxPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_GetAllItems_ReturnValue) == 0x0000A0, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_GetAllItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_Map_Contains_ReturnValue) == 0x0000F0, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_Map_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_Map_Contains_ReturnValue_1) == 0x0000F1, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_Map_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_TurnOnFlashlight, CallFunc_BooleanOR_ReturnValue) == 0x0000F2, "Member 'BP_PlayerCharacter_C_TurnOnFlashlight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateSlopGE
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_UpdateSlopGE final
{
public:
	bool                                          CallFunc_IsOnSlope_Value;                          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_RemoveActiveEffectsWithTags_ReturnValue;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateSlopGE) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_UpdateSlopGE");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateSlopGE) == 0x000010, "Wrong size on BP_PlayerCharacter_C_UpdateSlopGE");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSlopGE, CallFunc_IsOnSlope_Value) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateSlopGE::CallFunc_IsOnSlope_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSlopGE, CallFunc_RemoveActiveEffectsWithTags_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_UpdateSlopGE::CallFunc_RemoveActiveEffectsWithTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateSlopGE, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_UpdateSlopGE::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsOnSlope
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_IsOnSlope final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFCharacterMovementComponent*          K2Node_DynamicCast_AsOFCharacter_Movement_Component; // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_IsOnSlope) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_IsOnSlope");
static_assert(sizeof(BP_PlayerCharacter_C_IsOnSlope) == 0x000020, "Wrong size on BP_PlayerCharacter_C_IsOnSlope");
static_assert(offsetof(BP_PlayerCharacter_C_IsOnSlope, Value) == 0x000000, "Member 'BP_PlayerCharacter_C_IsOnSlope::Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsOnSlope, K2Node_DynamicCast_AsOFCharacter_Movement_Component) == 0x000008, "Member 'BP_PlayerCharacter_C_IsOnSlope::K2Node_DynamicCast_AsOFCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsOnSlope, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerCharacter_C_IsOnSlope::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsOnSlope, CallFunc_Abs_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_IsOnSlope::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsOnSlope, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_IsOnSlope::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateFlashlightVisibility
// 0x0006 (0x0006 - 0x0000)
struct BP_PlayerCharacter_C_UpdateFlashlightVisibility final
{
public:
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasItem_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasItem_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateFlashlightVisibility) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_UpdateFlashlightVisibility");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateFlashlightVisibility) == 0x000006, "Wrong size on BP_PlayerCharacter_C_UpdateFlashlightVisibility");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightVisibility, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateFlashlightVisibility::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightVisibility, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_UpdateFlashlightVisibility::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightVisibility, CallFunc_HasItem_ReturnValue) == 0x000002, "Member 'BP_PlayerCharacter_C_UpdateFlashlightVisibility::CallFunc_HasItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightVisibility, CallFunc_HasItem_ReturnValue_1) == 0x000003, "Member 'BP_PlayerCharacter_C_UpdateFlashlightVisibility::CallFunc_HasItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightVisibility, CallFunc_BooleanOR_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_UpdateFlashlightVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'BP_PlayerCharacter_C_UpdateFlashlightVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UnbindOnItemAddedEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_C_UnbindOnItemAddedEvent final
{
public:
	class AActor*                                 Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UItemData* ItemData)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UInventory*                             CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UnbindOnItemAddedEvent) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_UnbindOnItemAddedEvent");
static_assert(sizeof(BP_PlayerCharacter_C_UnbindOnItemAddedEvent) == 0x000028, "Wrong size on BP_PlayerCharacter_C_UnbindOnItemAddedEvent");
static_assert(offsetof(BP_PlayerCharacter_C_UnbindOnItemAddedEvent, Controller_0) == 0x000000, "Member 'BP_PlayerCharacter_C_UnbindOnItemAddedEvent::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UnbindOnItemAddedEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PlayerCharacter_C_UnbindOnItemAddedEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UnbindOnItemAddedEvent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_UnbindOnItemAddedEvent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UnbindOnItemAddedEvent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_UnbindOnItemAddedEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.BindOnItemAddedEvent
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_C_BindOnItemAddedEvent final
{
public:
	class AActor*                                 Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UItemData* ItemData)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class UInventory*                             CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_BindOnItemAddedEvent) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_BindOnItemAddedEvent");
static_assert(sizeof(BP_PlayerCharacter_C_BindOnItemAddedEvent) == 0x000028, "Wrong size on BP_PlayerCharacter_C_BindOnItemAddedEvent");
static_assert(offsetof(BP_PlayerCharacter_C_BindOnItemAddedEvent, Controller_0) == 0x000000, "Member 'BP_PlayerCharacter_C_BindOnItemAddedEvent::Controller_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BindOnItemAddedEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_PlayerCharacter_C_BindOnItemAddedEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BindOnItemAddedEvent, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_BindOnItemAddedEvent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BindOnItemAddedEvent, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_BindOnItemAddedEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnItemAdded_SetFlashlightVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility final
{
public:
	class UItemData*                              AddedItem;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility");
static_assert(sizeof(BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility) == 0x000010, "Wrong size on BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility");
static_assert(offsetof(BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility, AddedItem) == 0x000000, "Member 'BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility::AddedItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000009, "Member 'BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility, CallFunc_BooleanOR_ReturnValue) == 0x00000A, "Member 'BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnItemAddedToInventory
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnItemAddedToInventory final
{
public:
	const class UItemData*                        ItemData;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnItemAddedToInventory) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnItemAddedToInventory");
static_assert(sizeof(BP_PlayerCharacter_C_OnItemAddedToInventory) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnItemAddedToInventory");
static_assert(offsetof(BP_PlayerCharacter_C_OnItemAddedToInventory, ItemData) == 0x000000, "Member 'BP_PlayerCharacter_C_OnItemAddedToInventory::ItemData' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InitializeFlashlightDynMat
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InitializeFlashlightDynMat final
{
public:
	int32                                         CallFunc_GetMaterialIndex_ReturnValue;             // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_GetMaterial_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InitializeFlashlightDynMat) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InitializeFlashlightDynMat");
static_assert(sizeof(BP_PlayerCharacter_C_InitializeFlashlightDynMat) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InitializeFlashlightDynMat");
static_assert(offsetof(BP_PlayerCharacter_C_InitializeFlashlightDynMat, CallFunc_GetMaterialIndex_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_InitializeFlashlightDynMat::CallFunc_GetMaterialIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_InitializeFlashlightDynMat, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_InitializeFlashlightDynMat::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_InitializeFlashlightDynMat, CallFunc_GetMaterial_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_InitializeFlashlightDynMat::CallFunc_GetMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_InitializeFlashlightDynMat, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_InitializeFlashlightDynMat::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetLockFlashlightRotation
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_SetLockFlashlightRotation final
{
public:
	bool                                          IsLocked;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SetLockFlashlightRotation) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetLockFlashlightRotation");
static_assert(sizeof(BP_PlayerCharacter_C_SetLockFlashlightRotation) == 0x000001, "Wrong size on BP_PlayerCharacter_C_SetLockFlashlightRotation");
static_assert(offsetof(BP_PlayerCharacter_C_SetLockFlashlightRotation, IsLocked) == 0x000000, "Member 'BP_PlayerCharacter_C_SetLockFlashlightRotation::IsLocked' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ToggleFlashlight
// 0x00B0 (0x00B0 - 0x0000)
struct BP_PlayerCharacter_C_ToggleFlashlight final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItem_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasItem_ReturnValue_1;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDevicePropertySubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x1];                                       // 0x0093(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_Select_Default;                             // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ToggleFlashlight) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_ToggleFlashlight");
static_assert(sizeof(BP_PlayerCharacter_C_ToggleFlashlight) == 0x0000B0, "Wrong size on BP_PlayerCharacter_C_ToggleFlashlight");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, Temp_bool_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, Temp_object_Variable) == 0x000008, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, Temp_object_Variable_1) == 0x000010, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_HasItem_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_HasItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_HasItem_ReturnValue_1) == 0x000019, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_HasItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000038, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, Temp_bool_Variable_1) == 0x000059, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, Temp_bool_Variable_2) == 0x000090, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_IsValid_ReturnValue) == 0x000091, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_IsActive_ReturnValue) == 0x000092, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, K2Node_Select_Default) == 0x000094, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, K2Node_Select_Default_1) == 0x000098, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_PlayEventAtLocation_ReturnValue) == 0x0000A0, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleFlashlight, CallFunc_SelectFloat_ReturnValue) == 0x0000A8, "Member 'BP_PlayerCharacter_C_ToggleFlashlight::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RotateFlashlight
// 0x00F8 (0x00F8 - 0x0000)
struct BP_PlayerCharacter_C_RotateFlashlight final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue_1;         // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0070(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_RotateFlashlight) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_RotateFlashlight");
static_assert(sizeof(BP_PlayerCharacter_C_RotateFlashlight) == 0x0000F8, "Wrong size on BP_PlayerCharacter_C_RotateFlashlight");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, Temp_bool_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_RotateFlashlight::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, Temp_bool_Variable_1) == 0x000001, "Member 'BP_PlayerCharacter_C_RotateFlashlight::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Roll) == 0x000010, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Pitch) == 0x000014, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Yaw) == 0x000018, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_GetControlRotation_ReturnValue) == 0x00001C, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Roll_1) == 0x00002C, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Pitch_1) == 0x000030, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Yaw_1) == 0x000034, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, K2Node_Select_Default) == 0x000040, "Member 'BP_PlayerCharacter_C_RotateFlashlight::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, K2Node_Select_Default_1) == 0x000044, "Member 'BP_PlayerCharacter_C_RotateFlashlight::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_GetControlRotation_ReturnValue_1) == 0x000048, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_GetControlRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_ClampAngle_ReturnValue) == 0x000054, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Roll_2) == 0x000058, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Pitch_2) == 0x00005C, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_BreakRotator_Yaw_2) == 0x000060, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_MakeRotator_ReturnValue) == 0x000064, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateFlashlight, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000070, "Member 'BP_PlayerCharacter_C_RotateFlashlight::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsHealthBelowThreshold
// 0x0014 (0x0014 - 0x0000)
struct BP_PlayerCharacter_C_IsHealthBelowThreshold final
{
public:
	float                                         NewCurrentHealth;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_IsHealthBelowThreshold) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_IsHealthBelowThreshold");
static_assert(sizeof(BP_PlayerCharacter_C_IsHealthBelowThreshold) == 0x000014, "Wrong size on BP_PlayerCharacter_C_IsHealthBelowThreshold");
static_assert(offsetof(BP_PlayerCharacter_C_IsHealthBelowThreshold, NewCurrentHealth) == 0x000000, "Member 'BP_PlayerCharacter_C_IsHealthBelowThreshold::NewCurrentHealth' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsHealthBelowThreshold, ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_C_IsHealthBelowThreshold::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsHealthBelowThreshold, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000005, "Member 'BP_PlayerCharacter_C_IsHealthBelowThreshold::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsHealthBelowThreshold, CallFunc_GetFloatAttribute_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_IsHealthBelowThreshold::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsHealthBelowThreshold, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_IsHealthBelowThreshold::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsHealthBelowThreshold, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_IsHealthBelowThreshold::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateFlashlightLightFunction
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerCharacter_C_UpdateFlashlightLightFunction final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue;   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetScalarParameterValue_ReturnValue_1; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AThirdPersonPlayerCameraManager*        CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_ReturnValue_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_UpdateFlashlightLightFunction");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction) == 0x000040, "Wrong size on BP_PlayerCharacter_C_UpdateFlashlightLightFunction");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000004, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_K2_GetScalarParameterValue_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_K2_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_K2_GetScalarParameterValue_ReturnValue_1) == 0x00000C, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_K2_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_FClamp_ReturnValue_1) == 0x00002C, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000030, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_FClamp_ReturnValue_2) == 0x000034, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateFlashlightLightFunction, CallFunc_FInterpTo_ReturnValue_1) == 0x000038, "Member 'BP_PlayerCharacter_C_UpdateFlashlightLightFunction::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Debug Movement Speed
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerCharacter_C_Debug_Movement_Speed final
{
public:
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Debug_Movement_Speed) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Debug_Movement_Speed");
static_assert(sizeof(BP_PlayerCharacter_C_Debug_Movement_Speed) == 0x000038, "Wrong size on BP_PlayerCharacter_C_Debug_Movement_Speed");
static_assert(offsetof(BP_PlayerCharacter_C_Debug_Movement_Speed, CallFunc_GetVelocity_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_Debug_Movement_Speed::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Debug_Movement_Speed, CallFunc_VSize_ReturnValue) == 0x00000C, "Member 'BP_PlayerCharacter_C_Debug_Movement_Speed::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Debug_Movement_Speed, CallFunc_FFloor_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_Debug_Movement_Speed::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Debug_Movement_Speed, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_Debug_Movement_Speed::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Debug_Movement_Speed, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_Debug_Movement_Speed::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateBreathingVFX
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_UpdateBreathingVFX final
{
public:
	bool                                          CallFunc_IsInCinematicMode_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvironmentGameSubSystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDegreeCelsius_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateBreathingVFX) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_UpdateBreathingVFX");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateBreathingVFX) == 0x000018, "Wrong size on BP_PlayerCharacter_C_UpdateBreathingVFX");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBreathingVFX, CallFunc_IsInCinematicMode_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateBreathingVFX::CallFunc_IsInCinematicMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBreathingVFX, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_UpdateBreathingVFX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBreathingVFX, CallFunc_IsActive_ReturnValue) == 0x000002, "Member 'BP_PlayerCharacter_C_UpdateBreathingVFX::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBreathingVFX, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_UpdateBreathingVFX::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBreathingVFX, CallFunc_GetDegreeCelsius_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_UpdateBreathingVFX::CallFunc_GetDegreeCelsius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBreathingVFX, CallFunc_Less_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_UpdateBreathingVFX::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBreathingVFX, CallFunc_BooleanAND_ReturnValue) == 0x000015, "Member 'BP_PlayerCharacter_C_UpdateBreathingVFX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RotateCharacterLight
// 0x0148 (0x0148 - 0x0000)
struct BP_PlayerCharacter_C_RotateCharacterLight final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PointLightParentTarget;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_RotateCharacterLight) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_RotateCharacterLight");
static_assert(sizeof(BP_PlayerCharacter_C_RotateCharacterLight) == 0x000148, "Wrong size on BP_PlayerCharacter_C_RotateCharacterLight");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CameraComponent) == 0x000000, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CameraComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, PointLightParentTarget) == 0x000008, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::PointLightParentTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000028, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_RotateCharacterLight, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0000C0, "Member 'BP_PlayerCharacter_C_RotateCharacterLight::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterFadeCloseToCamera
// 0x0080 (0x0080 - 0x0000)
struct BP_PlayerCharacter_C_CharacterFadeCloseToCamera final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue_1;    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_CharacterFadeCloseToCamera");
static_assert(sizeof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera) == 0x000080, "Wrong size on BP_PlayerCharacter_C_CharacterFadeCloseToCamera");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_GetCameraLocation_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_GetComponentBounds_Origin) == 0x000014, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_GetComponentBounds_BoxExtent) == 0x000020, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_GetComponentBounds_SphereRadius) == 0x00002C, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000030, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_BreakVector_X) == 0x000040, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_BreakVector_Y) == 0x000044, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_GetScalarParameterValue_ReturnValue) == 0x00004C, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_Add_FloatFloat_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_GetScalarParameterValue_ReturnValue_1) == 0x000054, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_GetScalarParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_Vector_Distance_ReturnValue) == 0x000064, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000068, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_Less_FloatFloat_ReturnValue) == 0x00006C, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x000070, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_BooleanOR_ReturnValue) == 0x000074, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_BooleanOR_ReturnValue_1) == 0x000075, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterFadeCloseToCamera, CallFunc_SelectFloat_ReturnValue_1) == 0x00007C, "Member 'BP_PlayerCharacter_C_CharacterFadeCloseToCamera::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateBleedingEffects
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_UpdateBleedingEffects final
{
public:
	EPlayerHealthState                            HealthState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateBleedingEffects) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_UpdateBleedingEffects");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateBleedingEffects) == 0x000002, "Wrong size on BP_PlayerCharacter_C_UpdateBleedingEffects");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBleedingEffects, HealthState) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateBleedingEffects::HealthState' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBleedingEffects, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PlayerCharacter_C_UpdateBleedingEffects::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ToggleBloodDrippingBasedOnHealthState
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState final
{
public:
	EPlayerHealthState                            HealthState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState");
static_assert(sizeof(BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState) == 0x000002, "Wrong size on BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState, HealthState) == 0x000000, "Member 'BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState::HealthState' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsAiming
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_IsAiming final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_IsAiming) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_IsAiming");
static_assert(sizeof(BP_PlayerCharacter_C_IsAiming) == 0x000020, "Wrong size on BP_PlayerCharacter_C_IsAiming");
static_assert(offsetof(BP_PlayerCharacter_C_IsAiming, ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_IsAiming::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsAiming, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000008, "Member 'BP_PlayerCharacter_C_IsAiming::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IsAiming, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_IsAiming::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SpawnDamageEffect
// 0x0048 (0x0048 - 0x0000)
struct BP_PlayerCharacter_C_SpawnDamageEffect final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Invert;                                            // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_1;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SpawnDamageEffect) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_SpawnDamageEffect");
static_assert(sizeof(BP_PlayerCharacter_C_SpawnDamageEffect) == 0x000048, "Wrong size on BP_PlayerCharacter_C_SpawnDamageEffect");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, Location) == 0x000000, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, Rotation) == 0x00000C, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::Rotation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, Invert) == 0x000018, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::Invert' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, Temp_float_Variable) == 0x00001C, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, Temp_float_Variable_1) == 0x000024, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, Temp_bool_Variable) == 0x000028, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, K2Node_Select_Default) == 0x00002C, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnDamageEffect, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000040, "Member 'BP_PlayerCharacter_C_SpawnDamageEffect::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Update Play State Health
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_Update_Play_State_Health final
{
public:
	float                                         NewHealth;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute; // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttribute_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Update_Play_State_Health) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Update_Play_State_Health");
static_assert(sizeof(BP_PlayerCharacter_C_Update_Play_State_Health) == 0x000018, "Wrong size on BP_PlayerCharacter_C_Update_Play_State_Health");
static_assert(offsetof(BP_PlayerCharacter_C_Update_Play_State_Health, NewHealth) == 0x000000, "Member 'BP_PlayerCharacter_C_Update_Play_State_Health::NewHealth' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Update_Play_State_Health, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_Update_Play_State_Health::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Update_Play_State_Health, CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute) == 0x000010, "Member 'BP_PlayerCharacter_C_Update_Play_State_Health::CallFunc_GetFloatAttribute_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_Update_Play_State_Health, CallFunc_GetFloatAttribute_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_Update_Play_State_Health::CallFunc_GetFloatAttribute_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IncrementFearEmotionInCombat
// 0x0068 (0x0068 - 0x0000)
struct BP_PlayerCharacter_C_IncrementFearEmotionInCombat final
{
public:
	float                                         Delta_Seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsInCombat_ReturnValue;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EEmotion, float>                         K2Node_MakeMap_Map;                                // 0x0018(0x0050)(ConstParm)
};
static_assert(alignof(BP_PlayerCharacter_C_IncrementFearEmotionInCombat) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_IncrementFearEmotionInCombat");
static_assert(sizeof(BP_PlayerCharacter_C_IncrementFearEmotionInCombat) == 0x000068, "Wrong size on BP_PlayerCharacter_C_IncrementFearEmotionInCombat");
static_assert(offsetof(BP_PlayerCharacter_C_IncrementFearEmotionInCombat, Delta_Seconds) == 0x000000, "Member 'BP_PlayerCharacter_C_IncrementFearEmotionInCombat::Delta_Seconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IncrementFearEmotionInCombat, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_IncrementFearEmotionInCombat::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IncrementFearEmotionInCombat, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_IncrementFearEmotionInCombat::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IncrementFearEmotionInCombat, CallFunc_GetIsInCombat_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_C_IncrementFearEmotionInCombat::CallFunc_GetIsInCombat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_IncrementFearEmotionInCombat, K2Node_MakeMap_Map) == 0x000018, "Member 'BP_PlayerCharacter_C_IncrementFearEmotionInCombat::K2Node_MakeMap_Map' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CalculateLeanAmount
// 0x0030 (0x0030 - 0x0000)
struct BP_PlayerCharacter_C_CalculateLeanAmount final
{
public:
	float                                         LeanAmount;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewParam;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_2;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default_1;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_CalculateLeanAmount) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_CalculateLeanAmount");
static_assert(sizeof(BP_PlayerCharacter_C_CalculateLeanAmount) == 0x000030, "Wrong size on BP_PlayerCharacter_C_CalculateLeanAmount");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, LeanAmount) == 0x000000, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::LeanAmount' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, InterpSpeed) == 0x000004, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, NewParam) == 0x000008, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, Temp_bool_Variable) == 0x00000C, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, Temp_float_Variable) == 0x000010, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, Temp_float_Variable_1) == 0x000014, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, Temp_bool_Variable_1) == 0x000018, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, Temp_float_Variable_2) == 0x00001C, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, CallFunc_IsFalling_ReturnValue) == 0x000024, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, CallFunc_Not_PreBool_ReturnValue) == 0x000025, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, K2Node_Select_Default) == 0x000028, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_CalculateLeanAmount, K2Node_Select_Default_1) == 0x00002C, "Member 'BP_PlayerCharacter_C_CalculateLeanAmount::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnHealthStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_C_OnHealthStateChanged final
{
public:
	EPlayerHealthState                            NewHealthState;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnHealthStateChanged) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_OnHealthStateChanged");
static_assert(sizeof(BP_PlayerCharacter_C_OnHealthStateChanged) == 0x000002, "Wrong size on BP_PlayerCharacter_C_OnHealthStateChanged");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthStateChanged, NewHealthState) == 0x000000, "Member 'BP_PlayerCharacter_C_OnHealthStateChanged::NewHealthState' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_C_OnHealthStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnHealthChange
// 0x00C0 (0x00C0 - 0x0000)
struct BP_PlayerCharacter_C_OnHealthChange final
{
public:
	float                                         New_Current_Health;                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HealthDeltaValue;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  NewParam;                                          // 0x0008(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHealthBelowThreshold_ReturnValue;       // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnHealthChange) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnHealthChange");
static_assert(sizeof(BP_PlayerCharacter_C_OnHealthChange) == 0x0000C0, "Wrong size on BP_PlayerCharacter_C_OnHealthChange");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, New_Current_Health) == 0x000000, "Member 'BP_PlayerCharacter_C_OnHealthChange::New_Current_Health' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, HealthDeltaValue) == 0x000004, "Member 'BP_PlayerCharacter_C_OnHealthChange::HealthDeltaValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, NewParam) == 0x000008, "Member 'BP_PlayerCharacter_C_OnHealthChange::NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_Less_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000029, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_PlayEvent2D_ReturnValue) == 0x000030, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000038, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000048, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_IsHealthBelowThreshold_ReturnValue) == 0x000049, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_IsHealthBelowThreshold_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_MakeLiteralName_ReturnValue) == 0x00004C, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_GetForwardVector_ReturnValue) == 0x000054, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_BreakVector_X) == 0x000060, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_BreakVector_Y) == 0x000064, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_BreakVector_Z) == 0x000068, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_GetSocketLocation_ReturnValue) == 0x00006C, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_GetActorForwardVector_ReturnValue) == 0x000078, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000088, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_BreakVector_X_1) == 0x000090, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_BreakVector_Y_1) == 0x000094, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_BreakVector_Z_1) == 0x000098, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_StartCameraShake_ReturnValue) == 0x0000A0, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnHealthChange, CallFunc_MakeRotFromX_ReturnValue) == 0x0000B4, "Member 'BP_PlayerCharacter_C_OnHealthChange::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnDeathEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_OnDeathEvent final
{
public:
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnDeathEvent) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnDeathEvent");
static_assert(sizeof(BP_PlayerCharacter_C_OnDeathEvent) == 0x000010, "Wrong size on BP_PlayerCharacter_C_OnDeathEvent");
static_assert(offsetof(BP_PlayerCharacter_C_OnDeathEvent, CallFunc_PlayEvent2D_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_OnDeathEvent::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnDeathEvent, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnDeathEvent::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ActivateAimAssistWeapon
// 0x0050 (0x0050 - 0x0000)
struct BP_PlayerCharacter_C_ActivateAimAssistWeapon final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AOFWeaponActor*>                 CallFunc_GetEquippedWeapons_ReturnValue;           // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHitscanWeaponActor*                    K2Node_DynamicCast_AsHitscan_Weapon_Actor;         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUseAimAssist_ReturnValue;              // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_ActivateAimAssistWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ActivateAimAssistWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_ActivateAimAssistWeapon) == 0x000050, "Wrong size on BP_PlayerCharacter_C_ActivateAimAssistWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_GetEquippedWeapons_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_GetEquippedWeapons_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, K2Node_DynamicCast_AsHitscan_Weapon_Actor) == 0x000040, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::K2Node_DynamicCast_AsHitscan_Weapon_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_BooleanAND_ReturnValue) == 0x000049, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ActivateAimAssistWeapon, CallFunc_CanUseAimAssist_ReturnValue) == 0x00004A, "Member 'BP_PlayerCharacter_C_ActivateAimAssistWeapon::CallFunc_CanUseAimAssist_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SpawnWeapon
// 0x0070 (0x0070 - 0x0000)
struct BP_PlayerCharacter_C_SpawnWeapon final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Attach_Socket;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StartEquipped;                                     // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         Weapon;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFWeaponActor*                         CallFunc_FinishSpawningActor_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UnequipWeapon_ReturnValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipWeapon_ReturnValue;                  // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EquipWeapon_ReturnValue_1;                // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_SpawnWeapon) == 0x000010, "Wrong alignment on BP_PlayerCharacter_C_SpawnWeapon");
static_assert(sizeof(BP_PlayerCharacter_C_SpawnWeapon) == 0x000070, "Wrong size on BP_PlayerCharacter_C_SpawnWeapon");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, Class_0) == 0x000000, "Member 'BP_PlayerCharacter_C_SpawnWeapon::Class_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, Attach_Socket) == 0x000008, "Member 'BP_PlayerCharacter_C_SpawnWeapon::Attach_Socket' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, StartEquipped) == 0x000010, "Member 'BP_PlayerCharacter_C_SpawnWeapon::StartEquipped' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, Weapon) == 0x000018, "Member 'BP_PlayerCharacter_C_SpawnWeapon::Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_C_SpawnWeapon::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000050, "Member 'BP_PlayerCharacter_C_SpawnWeapon::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, CallFunc_FinishSpawningActor_ReturnValue) == 0x000058, "Member 'BP_PlayerCharacter_C_SpawnWeapon::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, CallFunc_UnequipWeapon_ReturnValue) == 0x000060, "Member 'BP_PlayerCharacter_C_SpawnWeapon::CallFunc_UnequipWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, CallFunc_EquipWeapon_ReturnValue) == 0x000061, "Member 'BP_PlayerCharacter_C_SpawnWeapon::CallFunc_EquipWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SpawnWeapon, CallFunc_EquipWeapon_ReturnValue_1) == 0x000062, "Member 'BP_PlayerCharacter_C_SpawnWeapon::CallFunc_EquipWeapon_ReturnValue_1' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnGameMainStateChanged
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerCharacter_C_OnGameMainStateChanged final
{
public:
	EGameMainState                                OldGameState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                NewGameState;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsActive_ReturnValue;                     // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnGameMainStateChanged) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnGameMainStateChanged");
static_assert(sizeof(BP_PlayerCharacter_C_OnGameMainStateChanged) == 0x000038, "Wrong size on BP_PlayerCharacter_C_OnGameMainStateChanged");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, OldGameState) == 0x000000, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::OldGameState' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, NewGameState) == 0x000001, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::NewGameState' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x000020, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000031, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, CallFunc_IsActive_ReturnValue) == 0x000032, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::CallFunc_IsActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, Temp_bool_Variable) == 0x000033, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_OnGameMainStateChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'BP_PlayerCharacter_C_OnGameMainStateChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UserConstructionScript
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_UserConstructionScript");
static_assert(sizeof(BP_PlayerCharacter_C_UserConstructionScript) == 0x000001, "Wrong size on BP_PlayerCharacter_C_UserConstructionScript");
static_assert(offsetof(BP_PlayerCharacter_C_UserConstructionScript, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_C_UserConstructionScript::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0");
static_assert(sizeof(BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0) == 0x000018, "Wrong size on BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0");
static_assert(offsetof(BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0, Key) == 0x000000, "Member 'BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0::Key' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69 final
{
public:
	TArray<class UClass*>                         LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69");
static_assert(sizeof(BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69) == 0x000010, "Wrong size on BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69");
static_assert(offsetof(BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69, LoadedAssets) == 0x000000, "Member 'BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69::LoadedAssets' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF");
static_assert(sizeof(BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF");
static_assert(offsetof(BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF, Loaded) == 0x000000, "Member 'BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF::Loaded' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8
// 0x0010 (0x0010 - 0x0000)
struct BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8 final
{
public:
	TArray<class UObject*>                        LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8");
static_assert(sizeof(BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8) == 0x000010, "Wrong size on BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8");
static_assert(offsetof(BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8, LoadedAssets) == 0x000000, "Member 'BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8::LoadedAssets' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_SetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CreatureType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetCemeteryCreatureType");
static_assert(sizeof(BP_PlayerCharacter_C_SetCemeteryCreatureType) == 0x000001, "Wrong size on BP_PlayerCharacter_C_SetCemeteryCreatureType");
static_assert(offsetof(BP_PlayerCharacter_C_SetCemeteryCreatureType, CreatureType) == 0x000000, "Member 'BP_PlayerCharacter_C_SetCemeteryCreatureType::CreatureType' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.QuicktimeInput
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_QuicktimeInput final
{
public:
	float                                         CurrentProgress;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxProgress;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_QuicktimeInput) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_QuicktimeInput");
static_assert(sizeof(BP_PlayerCharacter_C_QuicktimeInput) == 0x000008, "Wrong size on BP_PlayerCharacter_C_QuicktimeInput");
static_assert(offsetof(BP_PlayerCharacter_C_QuicktimeInput, CurrentProgress) == 0x000000, "Member 'BP_PlayerCharacter_C_QuicktimeInput::CurrentProgress' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_QuicktimeInput, MaxProgress) == 0x000004, "Member 'BP_PlayerCharacter_C_QuicktimeInput::MaxProgress' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MoveToGrappleLocatio
// 0x000C (0x000C - 0x0000)
struct BP_PlayerCharacter_C_MoveToGrappleLocatio final
{
public:
	struct FVector                                Grapple_Location;                                  // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_MoveToGrappleLocatio) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_MoveToGrappleLocatio");
static_assert(sizeof(BP_PlayerCharacter_C_MoveToGrappleLocatio) == 0x00000C, "Wrong size on BP_PlayerCharacter_C_MoveToGrappleLocatio");
static_assert(offsetof(BP_PlayerCharacter_C_MoveToGrappleLocatio, Grapple_Location) == 0x000000, "Member 'BP_PlayerCharacter_C_MoveToGrappleLocatio::Grapple_Location' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.updateBossHealthData
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_UpdateBossHealthData final
{
public:
	float                                         CurrentHealthPercentage;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_UpdateBossHealthData) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_UpdateBossHealthData");
static_assert(sizeof(BP_PlayerCharacter_C_UpdateBossHealthData) == 0x000004, "Wrong size on BP_PlayerCharacter_C_UpdateBossHealthData");
static_assert(offsetof(BP_PlayerCharacter_C_UpdateBossHealthData, CurrentHealthPercentage) == 0x000000, "Member 'BP_PlayerCharacter_C_UpdateBossHealthData::CurrentHealthPercentage' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TickDebugTesting
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_TickDebugTesting final
{
public:
	float                                         Delta_Seconds;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_TickDebugTesting) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_TickDebugTesting");
static_assert(sizeof(BP_PlayerCharacter_C_TickDebugTesting) == 0x000004, "Wrong size on BP_PlayerCharacter_C_TickDebugTesting");
static_assert(offsetof(BP_PlayerCharacter_C_TickDebugTesting, Delta_Seconds) == 0x000000, "Member 'BP_PlayerCharacter_C_TickDebugTesting::Delta_Seconds' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Deactivate Lens
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_Deactivate_Lens final
{
public:
	class AActor*                                 MirrorRef;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Deactivate_Lens) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Deactivate_Lens");
static_assert(sizeof(BP_PlayerCharacter_C_Deactivate_Lens) == 0x000008, "Wrong size on BP_PlayerCharacter_C_Deactivate_Lens");
static_assert(offsetof(BP_PlayerCharacter_C_Deactivate_Lens, MirrorRef) == 0x000000, "Member 'BP_PlayerCharacter_C_Deactivate_Lens::MirrorRef' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnConsoleCommandsLoaded
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_OnConsoleCommandsLoaded final
{
public:
	class UConsoleCommandsManager*                ConsoleCommandsManager;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_OnConsoleCommandsLoaded) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_OnConsoleCommandsLoaded");
static_assert(sizeof(BP_PlayerCharacter_C_OnConsoleCommandsLoaded) == 0x000008, "Wrong size on BP_PlayerCharacter_C_OnConsoleCommandsLoaded");
static_assert(offsetof(BP_PlayerCharacter_C_OnConsoleCommandsLoaded, ConsoleCommandsManager) == 0x000000, "Member 'BP_PlayerCharacter_C_OnConsoleCommandsLoaded::ConsoleCommandsManager' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveHit
// 0x00C8 (0x00C8 - 0x0000)
struct BP_PlayerCharacter_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x001C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0028(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0034(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0040(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ReceiveHit");
static_assert(sizeof(BP_PlayerCharacter_C_ReceiveHit) == 0x0000C8, "Wrong size on BP_PlayerCharacter_C_ReceiveHit");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, Other) == 0x000008, "Member 'BP_PlayerCharacter_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_PlayerCharacter_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_PlayerCharacter_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, HitLocation) == 0x00001C, "Member 'BP_PlayerCharacter_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, HitNormal) == 0x000028, "Member 'BP_PlayerCharacter_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, NormalImpulse) == 0x000034, "Member 'BP_PlayerCharacter_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveHit, Hit) == 0x000040, "Member 'BP_PlayerCharacter_C_ReceiveHit::Hit' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PhotoMode
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_PhotoMode final
{
public:
	struct FKey                                   InKey;                                             // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          Exit_To_Menu;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_PhotoMode) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_PhotoMode");
static_assert(sizeof(BP_PlayerCharacter_C_PhotoMode) == 0x000020, "Wrong size on BP_PlayerCharacter_C_PhotoMode");
static_assert(offsetof(BP_PlayerCharacter_C_PhotoMode, InKey) == 0x000000, "Member 'BP_PlayerCharacter_C_PhotoMode::InKey' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_PhotoMode, Exit_To_Menu) == 0x000018, "Member 'BP_PlayerCharacter_C_PhotoMode::Exit_To_Menu' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Bind Cheat Console Input
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_Bind_Cheat_Console_Input final
{
public:
	class AController*                            Controller_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_Bind_Cheat_Console_Input) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_Bind_Cheat_Console_Input");
static_assert(sizeof(BP_PlayerCharacter_C_Bind_Cheat_Console_Input) == 0x000008, "Wrong size on BP_PlayerCharacter_C_Bind_Cheat_Console_Input");
static_assert(offsetof(BP_PlayerCharacter_C_Bind_Cheat_Console_Input, Controller_0) == 0x000000, "Member 'BP_PlayerCharacter_C_Bind_Cheat_Console_Input::Controller_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_ReceiveTick");
static_assert(sizeof(BP_PlayerCharacter_C_ReceiveTick) == 0x000004, "Wrong size on BP_PlayerCharacter_C_ReceiveTick");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LessBleedingInMaterials
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_LessBleedingInMaterials final
{
public:
	class FName                                   RGB;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_LessBleedingInMaterials) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_LessBleedingInMaterials");
static_assert(sizeof(BP_PlayerCharacter_C_LessBleedingInMaterials) == 0x000008, "Wrong size on BP_PlayerCharacter_C_LessBleedingInMaterials");
static_assert(offsetof(BP_PlayerCharacter_C_LessBleedingInMaterials, RGB) == 0x000000, "Member 'BP_PlayerCharacter_C_LessBleedingInMaterials::RGB' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MoreBleedingInMaterials
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_MoreBleedingInMaterials final
{
public:
	class FName                                   RGB;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_MoreBleedingInMaterials) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_MoreBleedingInMaterials");
static_assert(sizeof(BP_PlayerCharacter_C_MoreBleedingInMaterials) == 0x000008, "Wrong size on BP_PlayerCharacter_C_MoreBleedingInMaterials");
static_assert(offsetof(BP_PlayerCharacter_C_MoreBleedingInMaterials, RGB) == 0x000000, "Member 'BP_PlayerCharacter_C_MoreBleedingInMaterials::RGB' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterDeath
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_CharacterDeath final
{
public:
	struct FGameplayTagContainer                  EventTags;                                         // 0x0000(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_PlayerCharacter_C_CharacterDeath) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_CharacterDeath");
static_assert(sizeof(BP_PlayerCharacter_C_CharacterDeath) == 0x000020, "Wrong size on BP_PlayerCharacter_C_CharacterDeath");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterDeath, EventTags) == 0x000000, "Member 'BP_PlayerCharacter_C_CharacterDeath::EventTags' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MoveToGrappleLoc
// 0x000C (0x000C - 0x0000)
struct BP_PlayerCharacter_C_MoveToGrappleLoc final
{
public:
	struct FVector                                GrappleLocation;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_MoveToGrappleLoc) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_MoveToGrappleLoc");
static_assert(sizeof(BP_PlayerCharacter_C_MoveToGrappleLoc) == 0x00000C, "Wrong size on BP_PlayerCharacter_C_MoveToGrappleLoc");
static_assert(offsetof(BP_PlayerCharacter_C_MoveToGrappleLoc, GrappleLocation) == 0x000000, "Member 'BP_PlayerCharacter_C_MoveToGrappleLoc::GrappleLocation' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RemoveSplatter
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_RemoveSplatter final
{
public:
	class FName                                   SplatterStage;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_RemoveSplatter) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_RemoveSplatter");
static_assert(sizeof(BP_PlayerCharacter_C_RemoveSplatter) == 0x000008, "Wrong size on BP_PlayerCharacter_C_RemoveSplatter");
static_assert(offsetof(BP_PlayerCharacter_C_RemoveSplatter, SplatterStage) == 0x000000, "Member 'BP_PlayerCharacter_C_RemoveSplatter::SplatterStage' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SplatterEffect
// 0x001C (0x001C - 0x0000)
struct BP_PlayerCharacter_C_SplatterEffect final
{
public:
	int32                                         StageSplatter;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ColorSplatter;                                     // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RoughnessSplatter;                                 // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaIntensityForStage;                            // 0x0018(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SplatterEffect) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_SplatterEffect");
static_assert(sizeof(BP_PlayerCharacter_C_SplatterEffect) == 0x00001C, "Wrong size on BP_PlayerCharacter_C_SplatterEffect");
static_assert(offsetof(BP_PlayerCharacter_C_SplatterEffect, StageSplatter) == 0x000000, "Member 'BP_PlayerCharacter_C_SplatterEffect::StageSplatter' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SplatterEffect, ColorSplatter) == 0x000004, "Member 'BP_PlayerCharacter_C_SplatterEffect::ColorSplatter' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SplatterEffect, RoughnessSplatter) == 0x000014, "Member 'BP_PlayerCharacter_C_SplatterEffect::RoughnessSplatter' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_SplatterEffect, DeltaIntensityForStage) == 0x000018, "Member 'BP_PlayerCharacter_C_SplatterEffect::DeltaIntensityForStage' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ReceivePossessed");
static_assert(sizeof(BP_PlayerCharacter_C_ReceivePossessed) == 0x000008, "Wrong size on BP_PlayerCharacter_C_ReceivePossessed");
static_assert(offsetof(BP_PlayerCharacter_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveUnpossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_ReceiveUnpossessed final
{
public:
	class AController*                            OldController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceiveUnpossessed) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ReceiveUnpossessed");
static_assert(sizeof(BP_PlayerCharacter_C_ReceiveUnpossessed) == 0x000008, "Wrong size on BP_PlayerCharacter_C_ReceiveUnpossessed");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveUnpossessed, OldController) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceiveUnpossessed::OldController' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.BeamInteraction
// 0x0020 (0x0020 - 0x0000)
struct BP_PlayerCharacter_C_BeamInteraction final
{
public:
	struct FVector                                ImpactPoint;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 MirrorRef;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_BeamInteraction) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_BeamInteraction");
static_assert(sizeof(BP_PlayerCharacter_C_BeamInteraction) == 0x000020, "Wrong size on BP_PlayerCharacter_C_BeamInteraction");
static_assert(offsetof(BP_PlayerCharacter_C_BeamInteraction, ImpactPoint) == 0x000000, "Member 'BP_PlayerCharacter_C_BeamInteraction::ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BeamInteraction, HitComponent) == 0x000010, "Member 'BP_PlayerCharacter_C_BeamInteraction::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_BeamInteraction, MirrorRef) == 0x000018, "Member 'BP_PlayerCharacter_C_BeamInteraction::MirrorRef' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ControlRotationFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_ControlRotationFocus final
{
public:
	class AActor*                                 FocusTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ControlRotationFocus) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ControlRotationFocus");
static_assert(sizeof(BP_PlayerCharacter_C_ControlRotationFocus) == 0x000008, "Wrong size on BP_PlayerCharacter_C_ControlRotationFocus");
static_assert(offsetof(BP_PlayerCharacter_C_ControlRotationFocus, FocusTarget) == 0x000000, "Member 'BP_PlayerCharacter_C_ControlRotationFocus::FocusTarget' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.DrunkWalk
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_DrunkWalk final
{
public:
	bool                                          Stop;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_DrunkWalk) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_DrunkWalk");
static_assert(sizeof(BP_PlayerCharacter_C_DrunkWalk) == 0x000001, "Wrong size on BP_PlayerCharacter_C_DrunkWalk");
static_assert(offsetof(BP_PlayerCharacter_C_DrunkWalk, Stop) == 0x000000, "Member 'BP_PlayerCharacter_C_DrunkWalk::Stop' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetLastQuicktimeInput
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_SetLastQuicktimeInput final
{
public:
	EFaceButtonType                               LastIQuicktimeInput_0;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetLastQuicktimeInput) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetLastQuicktimeInput");
static_assert(sizeof(BP_PlayerCharacter_C_SetLastQuicktimeInput) == 0x000001, "Wrong size on BP_PlayerCharacter_C_SetLastQuicktimeInput");
static_assert(offsetof(BP_PlayerCharacter_C_SetLastQuicktimeInput, LastIQuicktimeInput_0) == 0x000000, "Member 'BP_PlayerCharacter_C_SetLastQuicktimeInput::LastIQuicktimeInput_0' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_SetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetMostSuitableMeleeSection");
static_assert(sizeof(BP_PlayerCharacter_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong size on BP_PlayerCharacter_C_SetMostSuitableMeleeSection");
static_assert(offsetof(BP_PlayerCharacter_C_SetMostSuitableMeleeSection, Value) == 0x000000, "Member 'BP_PlayerCharacter_C_SetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MeleeAttackTranslate
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_C_MeleeAttackTranslate final
{
public:
	struct FVector                                StartVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndVector;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_MeleeAttackTranslate) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_MeleeAttackTranslate");
static_assert(sizeof(BP_PlayerCharacter_C_MeleeAttackTranslate) == 0x000018, "Wrong size on BP_PlayerCharacter_C_MeleeAttackTranslate");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttackTranslate, StartVector) == 0x000000, "Member 'BP_PlayerCharacter_C_MeleeAttackTranslate::StartVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_MeleeAttackTranslate, EndVector) == 0x00000C, "Member 'BP_PlayerCharacter_C_MeleeAttackTranslate::EndVector' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.lowHealthBark
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_LowHealthBark final
{
public:
	bool                                          bNewIsInCombat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_LowHealthBark) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_LowHealthBark");
static_assert(sizeof(BP_PlayerCharacter_C_LowHealthBark) == 0x000001, "Wrong size on BP_PlayerCharacter_C_LowHealthBark");
static_assert(offsetof(BP_PlayerCharacter_C_LowHealthBark, bNewIsInCombat) == 0x000000, "Member 'BP_PlayerCharacter_C_LowHealthBark::bNewIsInCombat' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetLastQuicktimeInput_2
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_SetLastQuicktimeInput_2 final
{
public:
	EFaceButtonType                               LastInput;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_SetLastQuicktimeInput_2) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_SetLastQuicktimeInput_2");
static_assert(sizeof(BP_PlayerCharacter_C_SetLastQuicktimeInput_2) == 0x000001, "Wrong size on BP_PlayerCharacter_C_SetLastQuicktimeInput_2");
static_assert(offsetof(BP_PlayerCharacter_C_SetLastQuicktimeInput_2, LastInput) == 0x000000, "Member 'BP_PlayerCharacter_C_SetLastQuicktimeInput_2::LastInput' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddSmokeBuildup
// 0x0004 (0x0004 - 0x0000)
struct BP_PlayerCharacter_C_AddSmokeBuildup final
{
public:
	float                                         PercentToAdd;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_AddSmokeBuildup) == 0x000004, "Wrong alignment on BP_PlayerCharacter_C_AddSmokeBuildup");
static_assert(sizeof(BP_PlayerCharacter_C_AddSmokeBuildup) == 0x000004, "Wrong size on BP_PlayerCharacter_C_AddSmokeBuildup");
static_assert(offsetof(BP_PlayerCharacter_C_AddSmokeBuildup, PercentToAdd) == 0x000000, "Member 'BP_PlayerCharacter_C_AddSmokeBuildup::PercentToAdd' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.DifficultyChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_DifficultyChanged final
{
public:
	EDifficulty                                   NewDifficulty;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_DifficultyChanged) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_DifficultyChanged");
static_assert(sizeof(BP_PlayerCharacter_C_DifficultyChanged) == 0x000001, "Wrong size on BP_PlayerCharacter_C_DifficultyChanged");
static_assert(offsetof(BP_PlayerCharacter_C_DifficultyChanged, NewDifficulty) == 0x000000, "Member 'BP_PlayerCharacter_C_DifficultyChanged::NewDifficulty' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_ReceiveEndPlay");
static_assert(sizeof(BP_PlayerCharacter_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_PlayerCharacter_C_ReceiveEndPlay");
static_assert(offsetof(BP_PlayerCharacter_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_PlayerCharacter_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterSwitchWarning
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_C_CharacterSwitchWarning final
{
public:
	const class AOFPlayerCharacter*               Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_C_CharacterSwitchWarning) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_CharacterSwitchWarning");
static_assert(sizeof(BP_PlayerCharacter_C_CharacterSwitchWarning) == 0x000008, "Wrong size on BP_PlayerCharacter_C_CharacterSwitchWarning");
static_assert(offsetof(BP_PlayerCharacter_C_CharacterSwitchWarning, Character) == 0x000000, "Member 'BP_PlayerCharacter_C_CharacterSwitchWarning::Character' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCombatStateChanged
// 0x0001 (0x0001 - 0x0000)
struct BP_PlayerCharacter_C_OnCombatStateChanged final
{
public:
	bool                                          bNewIsInCombat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_C_OnCombatStateChanged) == 0x000001, "Wrong alignment on BP_PlayerCharacter_C_OnCombatStateChanged");
static_assert(sizeof(BP_PlayerCharacter_C_OnCombatStateChanged) == 0x000001, "Wrong size on BP_PlayerCharacter_C_OnCombatStateChanged");
static_assert(offsetof(BP_PlayerCharacter_C_OnCombatStateChanged, bNewIsInCombat) == 0x000000, "Member 'BP_PlayerCharacter_C_OnCombatStateChanged::bNewIsInCombat' has a wrong offset!");

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ExecuteUbergraph_BP_PlayerCharacter
// 0x0D90 (0x0D90 - 0x0000)
struct BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UAnimMontage>>    K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UGameSubsystem_AnimationAssetManager*   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFSaveGameDataSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDifficulty NewDifficulty)>    K2Node_CreateDelegate_OutputDelegate;              // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TArray<TSoftObjectPtr<class UAnimMontage>>    K2Node_MakeArray_Array_1;                          // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<class UObject*>                        K2Node_CustomEvent_LoadedAssets;                   // 0x0068(0x0010)(ConstParm, ReferenceParm)
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_2;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_3;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Temp_object_Variable_4;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue_3;   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharactersEngineSubsystem*       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AOFPlayerCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue_4;   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue_5;   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_CharacterSwitch_C*                 CallFunc_Create_ReturnValue;                       // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         K2Node_Event_CreatureType;                         // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentProgress;                      // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxProgress;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Grapple_Location;                     // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_currentHealthPercentage;              // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Delta_Seconds;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_MirrorRef_1;                          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_CustomEvent_Controller;                     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UConsoleCommandsManager*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UConsoleCommandsManager*                K2Node_CustomEvent_ConsoleCommandsManager;         // 0x01B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x01D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0200(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0288(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x02A0(0x0010)(ReferenceParm)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CheatInputActor_C> K2Node_DynamicCast_AsBPI_Cheat_Input_Actor;        // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array_2;                          // 0x02D8(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_CustomEvent_InKey;                          // 0x02F0(0x0018)(HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Exit_To_Menu;                   // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo;           // 0x0310(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue;            // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInputAxisValue_ReturnValue_1;          // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_RGB_1;                          // 0x032C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_RGB;                            // 0x0334(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_1;         // 0x0390(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_2;         // 0x03A0(0x0010)(NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x03B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_3;          // 0x03C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_2;          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_3;          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_3;         // 0x0400(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_4;         // 0x0410(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0420(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_GrappleLocation;                // 0x042C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  K2Node_CustomEvent_EventTags;                      // 0x0438(0x0020)(ConstParm)
	TMap<class FName, float>                      K2Node_MakeMap_Map;                                // 0x0458(0x0050)(ConstParm)
	struct FGameplayEventData                     K2Node_MakeStruct_GameplayEventData;               // 0x04A8(0x00B0)()
	struct FGameplayTag                           CallFunc_GetTagMatchingDeathReactionTag_ReturnValue; // 0x0558(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGameplayTagValid_ReturnValue;           // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_561[0x3];                                      // 0x0561(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_SplatterStage;                  // 0x0564(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x056C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56D[0x3];                                      // 0x056D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0570(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x057C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x0604(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_605[0x3];                                      // 0x0605(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_StageSplatter;                        // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_ColorSplatter;                        // 0x060C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_RoughnessSplatter;                    // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaIntensityForStage;               // 0x0620(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0638(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0650(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0660(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0670(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_4;          // 0x0674(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0680(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_Map_Find_Value;                           // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_5;         // 0x0698(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_6;         // 0x06A8(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_7;         // 0x06B8(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_8;         // 0x06C8(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_9;         // 0x06D8(0x0010)(NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_CustomEvent_LoadedAssets_1;                 // 0x06E8(0x0010)(ConstParm, ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item_2;                         // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsBPC_Photo_Mode_Base;     // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_709[0x7];                                      // 0x0709(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_PhotoModeBase_C*                   CallFunc_AddComponentByClass_ReturnValue;          // 0x0710(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_NewController;                        // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_OldController;                        // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_731[0x3];                                      // 0x0731(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float NewCurrentHealth, float DeltaValue, struct FGameplayTagContainer& EventTags)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0734(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           CallFunc_GetPlayerDeathReactionTag_ReturnValue;    // 0x0744(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ImpactPoint;                          // 0x074C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_HitComponent;                         // 0x0758(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_MirrorRef;                            // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0768(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0770(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_StartVector;                          // 0x0780(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndVector;                            // 0x078C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue_1;                      // 0x0798(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A4[0x4];                                      // 0x07A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_FocusTarget;                          // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult_1;     // 0x07B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue_1;        // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_839[0x3];                                      // 0x0839(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x083C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0858(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0864(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0870(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x087C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0894(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x089C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_stop;                           // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B9[0x3];                                      // 0x08B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_3;            // 0x08BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_4;            // 0x08C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_5;            // 0x08CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaceButtonType                               K2Node_CustomEvent_lastIQuicktimeInput;            // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFGameInstance*                        CallFunc_GetOFGameInstance_ReturnValue;            // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationMontageIdentifier                   K2Node_Event_Value;                                // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheatsEnabled_ReturnValue;                // 0x08E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_bNewIsInCombat_1;               // 0x08E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x08E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerHealthState                            CallFunc_GetPlayerHealthState_ReturnValue;         // 0x08E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E5[0x3];                                      // 0x08E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetBarkMontageBPNodeHelperFunction_ReturnValue; // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F2[0x6];                                      // 0x08F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputActionEvent_Key;                       // 0x08F8(0x0018)(HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetBarkMontageBPNodeHelperFunction_ReturnValue_1; // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0918(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1; // 0x092C(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0934(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0935(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFaceButtonType                               K2Node_Event_LastInput;                            // 0x0936(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_937[0x1];                                      // 0x0937(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_PercentToAdd;                         // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x093C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93D[0x3];                                      // 0x093D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UConsoleCommandsManager* ConsoleCommandsManager)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0940(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0950(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x095C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPausedByTimeDilation_ReturnValue;       // 0x0961(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDifficulty                                   K2Node_CustomEvent_NewDifficulty;                  // 0x0962(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0963(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_964[0x4];                                      // 0x0964(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0978(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_979[0x7];                                      // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character_1;         // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_999[0x7];                                      // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IFaceAnimInterface>    K2Node_DynamicCast_AsFace_Anim_Interface;          // 0x09A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default_1;                           // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IFaceAnimInterface>    K2Node_DynamicCast_AsFace_Anim_Interface_1;        // 0x09C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_GetMontageForSkeleton_ReturnValue;        // 0x09E0(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_3;                          // 0x0A08(0x0010)(ReferenceParm)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue;            // 0x0A18(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_PlayEventAttached_ReturnValue_1;          // 0x0A20(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x3];                                      // 0x0A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bNewIsInCombat)>          K2Node_CreateDelegate_OutputDelegate_6;            // 0x0A2C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UObject*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0A3C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EGameMainState OldGameState, EGameMainState NewGameState)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0A4C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_A5C[0x4];                                      // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AOFPlayerCharacter*               K2Node_CustomEvent_Character;                      // 0x0A68(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_10;        // 0x0A70(0x0010)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_9;            // 0x0A80(0x0010)(ZeroConstructor, NoDestructor)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_11;        // 0x0A90(0x0010)(NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo_12;        // 0x0AA0(0x0010)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewIsInCombat;                 // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AB1[0x3];                                      // 0x0AB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bNewIsInCombat)>          K2Node_CreateDelegate_OutputDelegate_10;           // 0x0AB8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(struct FGameplayTagContainer& EventTags)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x0AC8(0x0010)(ZeroConstructor, NoDestructor)
	EPlayerHealthState                            CallFunc_GetPlayerHealthState_ReturnValue_1;       // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD9[0x3];                                      // 0x0AD9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EPlayerHealthState NewHealthState)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0ADC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(TArray<class UClass*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0AEC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0AFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0AFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0AFE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0AFF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOFGameInstance*                        CallFunc_GetOFGameInstance_ReturnValue_1;          // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheatsEnabled_ReturnValue_1;              // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B09[0x7];                                      // 0x0B09(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFGameInstance*                        CallFunc_GetOFGameInstance_ReturnValue_2;          // 0x0B10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_CharacterSwitch_C*>         CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0B18(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_CheatsEnabled_ReturnValue_2;              // 0x0B28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B29[0x3];                                      // 0x0B29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B31[0x3];                                      // 0x0B31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0B34(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0B40(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0B4C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x0B58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x0B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B69[0x7];                                      // 0x0B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array_4;                          // 0x0B70(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0B80(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0B8C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0B98(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0BA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BA9[0x3];                                      // 0x0BA9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0BAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item_3;                         // 0x0BB0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0C39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0C3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C3B[0x1];                                      // 0x0C3B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0C3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0C44(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0C50(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0C5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0C68(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C74[0x4];                                      // 0x0C74(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0C78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0C80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0C88(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0C90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0C9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0CA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0CA4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0CB0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFEnemyCharacter*                      K2Node_DynamicCast_AsOFEnemy_Character;            // 0x0CC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0CC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC9[0x3];                                      // 0x0CC9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x0CCC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0CD8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0CE4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0CF0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0CFC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddActorWorldOffset_SweepHitResult;    // 0x0D08(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter) == 0x000008, "Wrong alignment on BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter");
static_assert(sizeof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter) == 0x000D90, "Wrong size on BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, EntryPoint) == 0x000000, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeArray_Array) == 0x000008, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Loaded) == 0x000020, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_object_Variable) == 0x000028, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsNiagara_System) == 0x000030, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000040, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate) == 0x000048, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeArray_Array_1) == 0x000058, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_LoadedAssets) == 0x000068, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_LoadedAssets' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_byte_Variable) == 0x000078, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_object_Variable_1) == 0x000088, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsAnim_Montage) == 0x000090, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_PlayAnimMontage_ReturnValue) == 0x00009C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_object_Variable_2) == 0x0000A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_object_Variable_3) == 0x0000A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_object_Variable_4) == 0x0000B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x0000C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameInstanceSubsystem_ReturnValue_3) == 0x0000E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameInstanceSubsystem_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetEngineSubsystem_ReturnValue) == 0x0000E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable) == 0x000100, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable) == 0x000104, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_float_Variable_1) == 0x000108, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameInstanceSubsystem_ReturnValue_4) == 0x000110, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameInstanceSubsystem_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetGameInstanceSubsystem_ReturnValue_5) == 0x000118, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetGameInstanceSubsystem_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Create_ReturnValue) == 0x000120, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_CreatureType) == 0x000128, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_CreatureType' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_CurrentProgress) == 0x00012C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_CurrentProgress' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_MaxProgress) == 0x000130, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_MaxProgress' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Grapple_Location) == 0x000134, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Grapple_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_currentHealthPercentage) == 0x000140, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_currentHealthPercentage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Delta_Seconds) == 0x000144, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Delta_Seconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue) == 0x000148, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000150, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x00015C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_MirrorRef_1) == 0x000168, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_MirrorRef_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000170, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Controller) == 0x000180, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_ComposeRotators_ReturnValue) == 0x000188, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetComponentByClass_ReturnValue) == 0x000198, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakRotator_Roll) == 0x0001A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakRotator_Pitch) == 0x0001A4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakRotator_Yaw) == 0x0001A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeRotator_ReturnValue) == 0x0001AC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_ConsoleCommandsManager) == 0x0001B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_ConsoleCommandsManager' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_MyComp) == 0x0001C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Other) == 0x0001C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_OtherComp) == 0x0001D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_bSelfMoved) == 0x0001D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitLocation) == 0x0001DC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitNormal) == 0x0001E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_NormalImpulse) == 0x0001F4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Hit) == 0x000200, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetDisplayName_ReturnValue) == 0x000288, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_IsClosed_Variable) == 0x000298, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetAllActorsWithInterface_OutActors) == 0x0002A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetController_ReturnValue) == 0x0002B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Get_Item_1) == 0x0002B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsBPI_Cheat_Input_Actor) == 0x0002C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsBPI_Cheat_Input_Actor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_2) == 0x0002D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValid_ReturnValue) == 0x0002D1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeArray_Array_2) == 0x0002D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_1) == 0x0002E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_InKey) == 0x0002F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_InKey' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Exit_To_Menu) == 0x000308, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Exit_To_Menu' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DeltaSeconds) == 0x00030C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo) == 0x000310, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetInputAxisValue_ReturnValue) == 0x000320, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetInputAxisValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetInputAxisValue_ReturnValue_1) == 0x000324, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetInputAxisValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_int_Array_Index_Variable) == 0x000328, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_RGB_1) == 0x00032C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_RGB_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_RGB) == 0x000334, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_RGB' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_NameToString_ReturnValue) == 0x000340, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000350, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Concat_StrStr_ReturnValue) == 0x000360, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000370, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_StringToName_ReturnValue) == 0x000380, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000388, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_1) == 0x000390, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_2) == 0x0003A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_NameToString_ReturnValue_2) == 0x0003B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_NameToString_ReturnValue_3) == 0x0003C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_NameToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0003D0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0003E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_StringToName_ReturnValue_2) == 0x0003F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_StringToName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_StringToName_ReturnValue_3) == 0x0003F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_StringToName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_3) == 0x000400, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_4) == 0x000410, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000420, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_GrappleLocation) == 0x00042C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_GrappleLocation' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_EventTags) == 0x000438, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_EventTags' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeMap_Map) == 0x000458, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeMap_Map' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_GameplayEventData) == 0x0004A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_GameplayEventData' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetTagMatchingDeathReactionTag_ReturnValue) == 0x000558, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetTagMatchingDeathReactionTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsGameplayTagValid_ReturnValue) == 0x000560, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsGameplayTagValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_SplatterStage) == 0x000564, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_SplatterStage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_SwitchName_CmpSuccess) == 0x00056C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_VLerp_ReturnValue) == 0x000570, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x00057C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetActorLocation_ReturnValue) == 0x000604, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_StageSplatter) == 0x000608, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_StageSplatter' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_ColorSplatter) == 0x00060C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_ColorSplatter' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_RoughnessSplatter) == 0x00061C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_RoughnessSplatter' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_DeltaIntensityForStage) == 0x000620, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_DeltaIntensityForStage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_FloatFloat_ReturnValue) == 0x000624, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000628, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FClamp_ReturnValue) == 0x00062C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FClamp_ReturnValue_1) == 0x000630, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_IntToString_ReturnValue) == 0x000638, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_SwitchInteger_CmpSuccess) == 0x000648, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000650, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000660, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000670, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Conv_StringToName_ReturnValue_4) == 0x000674, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Conv_StringToName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FClamp_ReturnValue_2) == 0x00067C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_3) == 0x000680, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Map_Find_Value) == 0x000690, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Map_Find_ReturnValue) == 0x000694, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_5) == 0x000698, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_6) == 0x0006A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_7) == 0x0006B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_8) == 0x0006C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_9) == 0x0006D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_LoadedAssets_1) == 0x0006E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_LoadedAssets_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Get_Item_2) == 0x0006F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_ClassDynamicCast_AsBPC_Photo_Mode_Base) == 0x000700, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_ClassDynamicCast_AsBPC_Photo_Mode_Base' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_ClassDynamicCast_bSuccess) == 0x000708, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_AddComponentByClass_ReturnValue) == 0x000710, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_NewController) == 0x000718, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_OldController) == 0x000720, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_OldController' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsPlayer_Controller) == 0x000728, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_3) == 0x000730, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_4) == 0x000734, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerDeathReactionTag_ReturnValue) == 0x000744, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerDeathReactionTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_ImpactPoint) == 0x00074C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_HitComponent) == 0x000758, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_MirrorRef) == 0x000760, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_MirrorRef' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default) == 0x000768, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000770, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_int_Loop_Counter_Variable) == 0x000778, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_IntInt_ReturnValue) == 0x00077C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_StartVector) == 0x000780, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_StartVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_EndVector) == 0x00078C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_EndVector' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_VLerp_ReturnValue_1) == 0x000798, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_VLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_FocusTarget) == 0x0007A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_FocusTarget' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetActorLocation_SweepHitResult_1) == 0x0007B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetActorLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_SetActorLocation_ReturnValue_1) == 0x000838, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_SetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00083C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000848, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerController_ReturnValue_1) == 0x000850, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetCameraLocation_ReturnValue) == 0x000858, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetControlRotation_ReturnValue) == 0x000864, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FindLookAtRotation_ReturnValue) == 0x000870, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_RLerp_ReturnValue) == 0x00087C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakRotator_Roll_1) == 0x000888, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakRotator_Pitch_1) == 0x00088C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakRotator_Yaw_1) == 0x000890, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeLiteralName_ReturnValue) == 0x000894, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeRotator_ReturnValue_1) == 0x00089C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0008A8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeLiteralName_ReturnValue_2) == 0x0008B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_stop) == 0x0008B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_stop' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeLiteralName_ReturnValue_3) == 0x0008BC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeLiteralName_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeLiteralName_ReturnValue_4) == 0x0008C4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeLiteralName_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_MakeLiteralName_ReturnValue_5) == 0x0008CC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_MakeLiteralName_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_lastIQuicktimeInput) == 0x0008D4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_lastIQuicktimeInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetOFGameInstance_ReturnValue) == 0x0008D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetOFGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_Value) == 0x0008E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CheatsEnabled_ReturnValue) == 0x0008E1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CheatsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bNewIsInCombat_1) == 0x0008E2, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bNewIsInCombat_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue) == 0x0008E3, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerHealthState_ReturnValue) == 0x0008E4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerHealthState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetBarkMontageBPNodeHelperFunction_ReturnValue) == 0x0008E8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetBarkMontageBPNodeHelperFunction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0008F0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0008F1, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_InputActionEvent_Key) == 0x0008F8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_InputActionEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetBarkMontageBPNodeHelperFunction_ReturnValue_1) == 0x000910, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetBarkMontageBPNodeHelperFunction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000918, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000928, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1) == 0x00092C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_1) == 0x000934, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BooleanAND_ReturnValue) == 0x000935, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_LastInput) == 0x000936, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_LastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_PercentToAdd) == 0x000938, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_PercentToAdd' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Has_Been_Initd_Variable) == 0x00093C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_5) == 0x000940, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetVelocity_ReturnValue) == 0x000950, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_VSize_ReturnValue) == 0x00095C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000960, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_IsPausedByTimeDilation_ReturnValue) == 0x000961, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_IsPausedByTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_NewDifficulty) == 0x000962, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_NewDifficulty' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000963, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerPawn_ReturnValue) == 0x000968, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000970, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_4) == 0x000978, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000980, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetAnimInstance_ReturnValue) == 0x000988, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsOFPlayer_Character_1) == 0x000990, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsOFPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_5) == 0x000998, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsFace_Anim_Interface) == 0x0009A0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsFace_Anim_Interface' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_6) == 0x0009B0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_1) == 0x0009B8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0009C0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsFace_Anim_Interface_1) == 0x0009C8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsFace_Anim_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_7) == 0x0009D8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetMontageForSkeleton_ReturnValue) == 0x0009E0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetMontageForSkeleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeArray_Array_3) == 0x000A08, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_PlayEventAttached_ReturnValue) == 0x000A18, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_PlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_PlayEventAttached_ReturnValue_1) == 0x000A20, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_PlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Event_EndPlayReason) == 0x000A28, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_6) == 0x000A2C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_7) == 0x000A3C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_8) == 0x000A4C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000A60, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_Character) == 0x000A68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_10) == 0x000A70, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_9) == 0x000A80, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_11) == 0x000A90, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeStruct_MaterialParameterInfo_12) == 0x000AA0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeStruct_MaterialParameterInfo_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CustomEvent_bNewIsInCombat) == 0x000AB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CustomEvent_bNewIsInCombat' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_Select_Default_2) == 0x000AB4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_10) == 0x000AB8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_11) == 0x000AC8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetPlayerHealthState_ReturnValue_1) == 0x000AD8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetPlayerHealthState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_12) == 0x000ADC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_CreateDelegate_OutputDelegate_13) == 0x000AEC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Variable_2) == 0x000AFC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Not_PreBool_ReturnValue_2) == 0x000AFD, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_Has_Been_Initd_Variable_1) == 0x000AFE, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, Temp_bool_IsClosed_Variable_1) == 0x000AFF, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetOFGameInstance_ReturnValue_1) == 0x000B00, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetOFGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CheatsEnabled_ReturnValue_1) == 0x000B08, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CheatsEnabled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetOFGameInstance_ReturnValue_2) == 0x000B10, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetOFGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000B18, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_CheatsEnabled_ReturnValue_2) == 0x000B28, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_CheatsEnabled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Length_ReturnValue) == 0x000B2C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Greater_IntInt_ReturnValue) == 0x000B30, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetActorForwardVector_ReturnValue) == 0x000B34, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000B40, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000B4C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x000B58, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x000B68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_MakeArray_Array_4) == 0x000B70, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000B80, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Add_VectorVector_ReturnValue) == 0x000B8C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_SphereTraceMulti_OutHits) == 0x000B98, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_SphereTraceMulti_ReturnValue) == 0x000BA8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Length_ReturnValue_1) == 0x000BAC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Array_Get_Item_3) == 0x000BB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Less_IntInt_ReturnValue) == 0x000C38, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_bBlockingHit) == 0x000C39, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_bInitialOverlap) == 0x000C3A, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Time) == 0x000C3C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Distance) == 0x000C40, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Location) == 0x000C44, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_ImpactPoint) == 0x000C50, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_Normal) == 0x000C5C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_ImpactNormal) == 0x000C68, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_PhysMat) == 0x000C78, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitActor) == 0x000C80, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitComponent) == 0x000C88, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitBoneName) == 0x000C90, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_HitItem) == 0x000C98, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_ElementIndex) == 0x000C9C, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_FaceIndex) == 0x000CA0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_TraceStart) == 0x000CA4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_BreakHitResult_TraceEnd) == 0x000CB0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_AsOFEnemy_Character) == 0x000CC0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_AsOFEnemy_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, K2Node_DynamicCast_bSuccess_8) == 0x000CC8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x000CCC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000CD8, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_GetForwardVector_ReturnValue) == 0x000CE4, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000CF0, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000CFC, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter, CallFunc_K2_AddActorWorldOffset_SweepHitResult) == 0x000D08, "Member 'BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter::CallFunc_K2_AddActorWorldOffset_SweepHitResult' has a wrong offset!");

}

