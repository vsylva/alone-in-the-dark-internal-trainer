#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_EnemyCommon

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "CharacterSize_structs.hpp"
#include "AnimationMontageIdentifier_structs.hpp"
#include "CemeteryCreatureType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setStartBurrowed
// 0x0002 (0x0002 - 0x0000)
struct AIC_EnemyCommon_C_SetStartBurrowed final
{
public:
	bool                                          beginBurrowed;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_SetStartBurrowed) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_SetStartBurrowed");
static_assert(sizeof(AIC_EnemyCommon_C_SetStartBurrowed) == 0x000002, "Wrong size on AIC_EnemyCommon_C_SetStartBurrowed");
static_assert(offsetof(AIC_EnemyCommon_C_SetStartBurrowed, beginBurrowed) == 0x000000, "Member 'AIC_EnemyCommon_C_SetStartBurrowed::beginBurrowed' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_SetStartBurrowed, Success) == 0x000001, "Member 'AIC_EnemyCommon_C_SetStartBurrowed::Success' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setOrderTarget
// 0x0010 (0x0010 - 0x0000)
struct AIC_EnemyCommon_C_SetOrderTarget final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_SetOrderTarget) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_SetOrderTarget");
static_assert(sizeof(AIC_EnemyCommon_C_SetOrderTarget) == 0x000010, "Wrong size on AIC_EnemyCommon_C_SetOrderTarget");
static_assert(offsetof(AIC_EnemyCommon_C_SetOrderTarget, Location) == 0x000000, "Member 'AIC_EnemyCommon_C_SetOrderTarget::Location' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_SetOrderTarget, Success) == 0x00000C, "Member 'AIC_EnemyCommon_C_SetOrderTarget::Success' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.hitscanWeaponFired
// 0x0001 (0x0001 - 0x0000)
struct AIC_EnemyCommon_C_HitscanWeaponFired final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_HitscanWeaponFired) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_HitscanWeaponFired");
static_assert(sizeof(AIC_EnemyCommon_C_HitscanWeaponFired) == 0x000001, "Wrong size on AIC_EnemyCommon_C_HitscanWeaponFired");
static_assert(offsetof(AIC_EnemyCommon_C_HitscanWeaponFired, Success) == 0x000000, "Member 'AIC_EnemyCommon_C_HitscanWeaponFired::Success' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct AIC_EnemyCommon_C_GetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_GetMostSuitableMeleeSection");
static_assert(sizeof(AIC_EnemyCommon_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong size on AIC_EnemyCommon_C_GetMostSuitableMeleeSection");
static_assert(offsetof(AIC_EnemyCommon_C_GetMostSuitableMeleeSection, Value) == 0x000000, "Member 'AIC_EnemyCommon_C_GetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.getAggroState
// 0x0028 (0x0028 - 0x0000)
struct AIC_EnemyCommon_C_GetAggroState final
{
public:
	bool                                          Aggro;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CombatInterface_C> K2Node_DynamicCast_AsBPI_Combat_Interface;         // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_getAggroState_aggro;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_GetAggroState) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_GetAggroState");
static_assert(sizeof(AIC_EnemyCommon_C_GetAggroState) == 0x000028, "Wrong size on AIC_EnemyCommon_C_GetAggroState");
static_assert(offsetof(AIC_EnemyCommon_C_GetAggroState, Aggro) == 0x000000, "Member 'AIC_EnemyCommon_C_GetAggroState::Aggro' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetAggroState, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_EnemyCommon_C_GetAggroState::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetAggroState, K2Node_DynamicCast_AsBPI_Combat_Interface) == 0x000010, "Member 'AIC_EnemyCommon_C_GetAggroState::K2Node_DynamicCast_AsBPI_Combat_Interface' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetAggroState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'AIC_EnemyCommon_C_GetAggroState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetAggroState, CallFunc_getAggroState_aggro) == 0x000021, "Member 'AIC_EnemyCommon_C_GetAggroState::CallFunc_getAggroState_aggro' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.FlashlightHit
// 0x0008 (0x0008 - 0x0000)
struct AIC_EnemyCommon_C_FlashlightHit final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_FlashlightHit) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_FlashlightHit");
static_assert(sizeof(AIC_EnemyCommon_C_FlashlightHit) == 0x000008, "Wrong size on AIC_EnemyCommon_C_FlashlightHit");
static_assert(offsetof(AIC_EnemyCommon_C_FlashlightHit, Distance) == 0x000000, "Member 'AIC_EnemyCommon_C_FlashlightHit::Distance' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_FlashlightHit, Success) == 0x000004, "Member 'AIC_EnemyCommon_C_FlashlightHit::Success' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetUpgradeComponent
// 0x0008 (0x0008 - 0x0000)
struct AIC_EnemyCommon_C_GetUpgradeComponent final
{
public:
	class UWeaponUpgradeComponent_C*              UpgradeComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_GetUpgradeComponent) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_GetUpgradeComponent");
static_assert(sizeof(AIC_EnemyCommon_C_GetUpgradeComponent) == 0x000008, "Wrong size on AIC_EnemyCommon_C_GetUpgradeComponent");
static_assert(offsetof(AIC_EnemyCommon_C_GetUpgradeComponent, UpgradeComponent) == 0x000000, "Member 'AIC_EnemyCommon_C_GetUpgradeComponent::UpgradeComponent' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.AimedAt
// 0x0001 (0x0001 - 0x0000)
struct AIC_EnemyCommon_C_AimedAt final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_AimedAt) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_AimedAt");
static_assert(sizeof(AIC_EnemyCommon_C_AimedAt) == 0x000001, "Wrong size on AIC_EnemyCommon_C_AimedAt");
static_assert(offsetof(AIC_EnemyCommon_C_AimedAt, Return) == 0x000000, "Member 'AIC_EnemyCommon_C_AimedAt::Return' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setStartOnWall
// 0x0002 (0x0002 - 0x0000)
struct AIC_EnemyCommon_C_SetStartOnWall final
{
public:
	bool                                          StartOnWall;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_SetStartOnWall) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_SetStartOnWall");
static_assert(sizeof(AIC_EnemyCommon_C_SetStartOnWall) == 0x000002, "Wrong size on AIC_EnemyCommon_C_SetStartOnWall");
static_assert(offsetof(AIC_EnemyCommon_C_SetStartOnWall, StartOnWall) == 0x000000, "Member 'AIC_EnemyCommon_C_SetStartOnWall::StartOnWall' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_SetStartOnWall, Success) == 0x000001, "Member 'AIC_EnemyCommon_C_SetStartOnWall::Success' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setCanCirculate
// 0x0002 (0x0002 - 0x0000)
struct AIC_EnemyCommon_C_SetCanCirculate final
{
public:
	bool                                          CanCirculate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_SetCanCirculate) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_SetCanCirculate");
static_assert(sizeof(AIC_EnemyCommon_C_SetCanCirculate) == 0x000002, "Wrong size on AIC_EnemyCommon_C_SetCanCirculate");
static_assert(offsetof(AIC_EnemyCommon_C_SetCanCirculate, CanCirculate) == 0x000000, "Member 'AIC_EnemyCommon_C_SetCanCirculate::CanCirculate' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_SetCanCirculate, Success) == 0x000001, "Member 'AIC_EnemyCommon_C_SetCanCirculate::Success' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.getCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct AIC_EnemyCommon_C_GetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CemeteryCreatureType;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_GetCemeteryCreatureType) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_GetCemeteryCreatureType");
static_assert(sizeof(AIC_EnemyCommon_C_GetCemeteryCreatureType) == 0x000001, "Wrong size on AIC_EnemyCommon_C_GetCemeteryCreatureType");
static_assert(offsetof(AIC_EnemyCommon_C_GetCemeteryCreatureType, CemeteryCreatureType) == 0x000000, "Member 'AIC_EnemyCommon_C_GetCemeteryCreatureType::CemeteryCreatureType' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetCharacterSize
// 0x0001 (0x0001 - 0x0000)
struct AIC_EnemyCommon_C_GetCharacterSize final
{
public:
	ECharacterSize                                Size;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_GetCharacterSize) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_GetCharacterSize");
static_assert(sizeof(AIC_EnemyCommon_C_GetCharacterSize) == 0x000001, "Wrong size on AIC_EnemyCommon_C_GetCharacterSize");
static_assert(offsetof(AIC_EnemyCommon_C_GetCharacterSize, Size) == 0x000000, "Member 'AIC_EnemyCommon_C_GetCharacterSize::Size' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.IncrementJac3ProneCounter
// 0x0004 (0x0004 - 0x0000)
struct AIC_EnemyCommon_C_IncrementJac3ProneCounter final
{
public:
	int32                                         ProneCounter;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_IncrementJac3ProneCounter) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_IncrementJac3ProneCounter");
static_assert(sizeof(AIC_EnemyCommon_C_IncrementJac3ProneCounter) == 0x000004, "Wrong size on AIC_EnemyCommon_C_IncrementJac3ProneCounter");
static_assert(offsetof(AIC_EnemyCommon_C_IncrementJac3ProneCounter, ProneCounter) == 0x000000, "Member 'AIC_EnemyCommon_C_IncrementJac3ProneCounter::ProneCounter' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.setNewAggro
// 0x0002 (0x0002 - 0x0000)
struct AIC_EnemyCommon_C_SetNewAggro final
{
public:
	bool                                          NewAggro;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_SetNewAggro) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_SetNewAggro");
static_assert(sizeof(AIC_EnemyCommon_C_SetNewAggro) == 0x000002, "Wrong size on AIC_EnemyCommon_C_SetNewAggro");
static_assert(offsetof(AIC_EnemyCommon_C_SetNewAggro, NewAggro) == 0x000000, "Member 'AIC_EnemyCommon_C_SetNewAggro::NewAggro' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_SetNewAggro, Success) == 0x000001, "Member 'AIC_EnemyCommon_C_SetNewAggro::Success' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Handle Damage Sense Stimuli
// 0x0028 (0x0028 - 0x0000)
struct AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli final
{
public:
	class UObject*                                Actor_Sensed;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli");
static_assert(sizeof(AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli) == 0x000028, "Wrong size on AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli, Actor_Sensed) == 0x000000, "Member 'AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli::Actor_Sensed' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000010, "Member 'AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli, CallFunc_GetBlackboard_ReturnValue) == 0x000018, "Member 'AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli, CallFunc_GetValueAsFloat_ReturnValue) == 0x000020, "Member 'AIC_EnemyCommon_C_Handle_Damage_Sense_Stimuli::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.OnTargetPerceptionUpdated
// 0x00B0 (0x00B0 - 0x0000)
struct AIC_EnemyCommon_C_OnTargetPerceptionUpdated final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            Stimulus;                                          // 0x0008(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UAISense>                   Stimulis_Class;                                    // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UAISense>                   CallFunc_GetSenseClassForStimulus_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_1;      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_2;      // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B[0x5];                                       // 0x005B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBehaviourTreeRunning_ReturnValue;       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_93[0x5];                                       // 0x0093(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue_3;      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_OnTargetPerceptionUpdated");
static_assert(sizeof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated) == 0x0000B0, "Wrong size on AIC_EnemyCommon_C_OnTargetPerceptionUpdated");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, Actor) == 0x000000, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::Actor' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, Stimulus) == 0x000008, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::Stimulus' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, Stimulis_Class) == 0x000048, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::Stimulis_Class' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_GetSenseClassForStimulus_ReturnValue) == 0x000050, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_GetSenseClassForStimulus_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000058, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_EqualEqual_ClassClass_ReturnValue_1) == 0x000059, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_EqualEqual_ClassClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_EqualEqual_ClassClass_ReturnValue_2) == 0x00005A, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_EqualEqual_ClassClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_K2_GetPawn_ReturnValue) == 0x000060, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_NotEqual_NameName_ReturnValue) == 0x000068, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000070, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_IsBehaviourTreeRunning_ReturnValue) == 0x000078, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_IsBehaviourTreeRunning_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000080, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000090, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_Not_PreBool_ReturnValue) == 0x000092, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_GetPlayerPawn_ReturnValue) == 0x000098, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000A0, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_EqualEqual_ClassClass_ReturnValue_3) == 0x0000A1, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_EqualEqual_ClassClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A2, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_BooleanAND_ReturnValue_2) == 0x0000A3, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_OnTargetPerceptionUpdated, CallFunc_GetBlackboard_ReturnValue) == 0x0000A8, "Member 'AIC_EnemyCommon_C_OnTargetPerceptionUpdated::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Handle Player Proximity Stimuli
// 0x0008 (0x0008 - 0x0000)
struct AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli");
static_assert(sizeof(AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli) == 0x000008, "Wrong size on AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'AIC_EnemyCommon_C_Handle_Player_Proximity_Stimuli::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Add Threat
// 0x0038 (0x0038 - 0x0000)
struct AIC_EnemyCommon_C_Add_Threat final
{
public:
	float                                         Threat_to_Add;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThreatBlocked_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValueAsFloat_ReturnValue_1;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_Add_Threat) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_Add_Threat");
static_assert(sizeof(AIC_EnemyCommon_C_Add_Threat) == 0x000038, "Wrong size on AIC_EnemyCommon_C_Add_Threat");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, Threat_to_Add) == 0x000000, "Member 'AIC_EnemyCommon_C_Add_Threat::Threat_to_Add' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_IsThreatBlocked_ReturnValue) == 0x000004, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_IsThreatBlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_GetValueAsFloat_ReturnValue) == 0x000010, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_GetBlackboard_ReturnValue_1) == 0x000018, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_GetValueAsFloat_ReturnValue_1) == 0x000020, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_GetValueAsFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_GetBlackboard_ReturnValue_2) == 0x000028, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_GetBlackboard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Add_Threat, CallFunc_FClamp_ReturnValue) == 0x000030, "Member 'AIC_EnemyCommon_C_Add_Threat::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.SetCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct AIC_EnemyCommon_C_SetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CreatureType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_SetCemeteryCreatureType) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_SetCemeteryCreatureType");
static_assert(sizeof(AIC_EnemyCommon_C_SetCemeteryCreatureType) == 0x000001, "Wrong size on AIC_EnemyCommon_C_SetCemeteryCreatureType");
static_assert(offsetof(AIC_EnemyCommon_C_SetCemeteryCreatureType, CreatureType) == 0x000000, "Member 'AIC_EnemyCommon_C_SetCemeteryCreatureType::CreatureType' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.QuicktimeInput
// 0x0008 (0x0008 - 0x0000)
struct AIC_EnemyCommon_C_QuicktimeInput final
{
public:
	float                                         CurrentProgress;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxProgress;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_QuicktimeInput) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_QuicktimeInput");
static_assert(sizeof(AIC_EnemyCommon_C_QuicktimeInput) == 0x000008, "Wrong size on AIC_EnemyCommon_C_QuicktimeInput");
static_assert(offsetof(AIC_EnemyCommon_C_QuicktimeInput, CurrentProgress) == 0x000000, "Member 'AIC_EnemyCommon_C_QuicktimeInput::CurrentProgress' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_QuicktimeInput, MaxProgress) == 0x000004, "Member 'AIC_EnemyCommon_C_QuicktimeInput::MaxProgress' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.MeleeAttackTranslate
// 0x0018 (0x0018 - 0x0000)
struct AIC_EnemyCommon_C_MeleeAttackTranslate final
{
public:
	struct FVector                                StartVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndVector;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_MeleeAttackTranslate) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_MeleeAttackTranslate");
static_assert(sizeof(AIC_EnemyCommon_C_MeleeAttackTranslate) == 0x000018, "Wrong size on AIC_EnemyCommon_C_MeleeAttackTranslate");
static_assert(offsetof(AIC_EnemyCommon_C_MeleeAttackTranslate, StartVector) == 0x000000, "Member 'AIC_EnemyCommon_C_MeleeAttackTranslate::StartVector' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_MeleeAttackTranslate, EndVector) == 0x00000C, "Member 'AIC_EnemyCommon_C_MeleeAttackTranslate::EndVector' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ControlRotationFocus
// 0x0008 (0x0008 - 0x0000)
struct AIC_EnemyCommon_C_ControlRotationFocus final
{
public:
	class AActor*                                 FocusTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_ControlRotationFocus) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_ControlRotationFocus");
static_assert(sizeof(AIC_EnemyCommon_C_ControlRotationFocus) == 0x000008, "Wrong size on AIC_EnemyCommon_C_ControlRotationFocus");
static_assert(offsetof(AIC_EnemyCommon_C_ControlRotationFocus, FocusTarget) == 0x000000, "Member 'AIC_EnemyCommon_C_ControlRotationFocus::FocusTarget' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.MoveToGrappleLocatio
// 0x000C (0x000C - 0x0000)
struct AIC_EnemyCommon_C_MoveToGrappleLocatio final
{
public:
	struct FVector                                Grapple_Location;                                  // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_MoveToGrappleLocatio) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_MoveToGrappleLocatio");
static_assert(sizeof(AIC_EnemyCommon_C_MoveToGrappleLocatio) == 0x00000C, "Wrong size on AIC_EnemyCommon_C_MoveToGrappleLocatio");
static_assert(offsetof(AIC_EnemyCommon_C_MoveToGrappleLocatio, Grapple_Location) == 0x000000, "Member 'AIC_EnemyCommon_C_MoveToGrappleLocatio::Grapple_Location' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.SetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct AIC_EnemyCommon_C_SetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on AIC_EnemyCommon_C_SetMostSuitableMeleeSection");
static_assert(sizeof(AIC_EnemyCommon_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong size on AIC_EnemyCommon_C_SetMostSuitableMeleeSection");
static_assert(offsetof(AIC_EnemyCommon_C_SetMostSuitableMeleeSection, Value) == 0x000000, "Member 'AIC_EnemyCommon_C_SetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.updateBossHealthData
// 0x0004 (0x0004 - 0x0000)
struct AIC_EnemyCommon_C_UpdateBossHealthData final
{
public:
	float                                         CurrentHealthPercentage;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_UpdateBossHealthData) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_UpdateBossHealthData");
static_assert(sizeof(AIC_EnemyCommon_C_UpdateBossHealthData) == 0x000004, "Wrong size on AIC_EnemyCommon_C_UpdateBossHealthData");
static_assert(offsetof(AIC_EnemyCommon_C_UpdateBossHealthData, CurrentHealthPercentage) == 0x000000, "Member 'AIC_EnemyCommon_C_UpdateBossHealthData::CurrentHealthPercentage' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct AIC_EnemyCommon_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_ReceiveTick) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_ReceiveTick");
static_assert(sizeof(AIC_EnemyCommon_C_ReceiveTick) == 0x000004, "Wrong size on AIC_EnemyCommon_C_ReceiveTick");
static_assert(offsetof(AIC_EnemyCommon_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'AIC_EnemyCommon_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct AIC_EnemyCommon_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_ReceivePossess) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_ReceivePossess");
static_assert(sizeof(AIC_EnemyCommon_C_ReceivePossess) == 0x000008, "Wrong size on AIC_EnemyCommon_C_ReceivePossess");
static_assert(offsetof(AIC_EnemyCommon_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'AIC_EnemyCommon_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.Handle Hearing Stimuli Updated
// 0x0048 (0x0048 - 0x0000)
struct AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated final
{
public:
	struct FAIStimulus                            AIStimulus;                                        // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Actor;                                             // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated");
static_assert(sizeof(AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated) == 0x000048, "Wrong size on AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated, AIStimulus) == 0x000000, "Member 'AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated::AIStimulus' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated, Actor) == 0x000040, "Member 'AIC_EnemyCommon_C_Handle_Hearing_Stimuli_Updated::Actor' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ExecuteUbergraph_AIC_EnemyCommon
// 0x0208 (0x0208 - 0x0000)
struct AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsThreatBlocked_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentProgress;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxProgress;                          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_StartVector;                          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndVector;                            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_FocusTarget;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Grapple_Location;                     // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationMontageIdentifier                   K2Node_Event_Value;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_currentHealthPercentage;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueAsFloat_ReturnValue;              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         K2Node_Event_CreatureType;                         // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            K2Node_MakeStruct_AIStimulus;                      // 0x00A8(0x003C)(NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStimulisDistance_PathDistance;         // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENavigationQueryResult                        CallFunc_GetStimulisDistance_NavigationQueryResult; // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Float_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Float_ReturnValue_1;          // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_2;              // 0x0130(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            K2Node_CustomEvent_AIStimulus;                     // 0x0138(0x003C)(ConstParm, NoDestructor)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Actor;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetValueAsVector_ReturnValue;             // 0x0180(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0190(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x3];                                      // 0x01A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue_1;                // 0x01AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x01BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStimulisDistance_PathDistance_1;       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENavigationQueryResult                        CallFunc_GetStimulisDistance_NavigationQueryResult_1; // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DD[0x3];                                      // 0x01DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConvertDistanceToThreatMultiplier_ThreatMultiplier; // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1EA[0x2];                                      // 0x01EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue_1;                // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x3];                                      // 0x01F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_3;        // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon");
static_assert(sizeof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon) == 0x000208, "Wrong size on AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, EntryPoint) == 0x000000, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_IsThreatBlocked_ReturnValue) == 0x000004, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_IsThreatBlocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_CurrentProgress) == 0x000008, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_CurrentProgress' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_MaxProgress) == 0x00000C, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_MaxProgress' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_StartVector) == 0x000010, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_StartVector' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_EndVector) == 0x00001C, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_EndVector' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_FocusTarget) == 0x000028, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_FocusTarget' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_Grapple_Location) == 0x000030, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_Grapple_Location' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_Value) == 0x00003C, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_currentHealthPercentage) == 0x000040, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_currentHealthPercentage' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetBlackboard_ReturnValue) == 0x000048, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_DeltaSeconds) == 0x000054, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetBlackboard_ReturnValue_1) == 0x000058, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_IsValid_ReturnValue_1) == 0x000060, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetValueAsFloat_ReturnValue) == 0x000064, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetValueAsFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000070, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000078, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_K2_GetPawn_ReturnValue) == 0x000088, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_CreatureType) == 0x000090, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_CreatureType' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000094, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_K2_GetPawn_ReturnValue_1) == 0x0000A0, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_MakeStruct_AIStimulus) == 0x0000A8, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_MakeStruct_AIStimulus' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetVelocity_ReturnValue) == 0x0000E4, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetStimulisDistance_PathDistance) == 0x0000F0, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetStimulisDistance_PathDistance' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetStimulisDistance_NavigationQueryResult) == 0x0000F4, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetStimulisDistance_NavigationQueryResult' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_BuildString_Float_ReturnValue) == 0x0000F8, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_BuildString_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_BuildString_Float_ReturnValue_1) == 0x000108, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_BuildString_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_Event_PossessedPawn) == 0x000118, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_MakeLiteralName_ReturnValue) == 0x000120, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_MakeLiteralName_ReturnValue_1) == 0x000128, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetBlackboard_ReturnValue_2) == 0x000130, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetBlackboard_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_CustomEvent_AIStimulus) == 0x000138, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_CustomEvent_AIStimulus' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, K2Node_CustomEvent_Actor) == 0x000178, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::K2Node_CustomEvent_Actor' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetValueAsVector_ReturnValue) == 0x000180, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000190, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000198, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001A8, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetVelocity_ReturnValue_1) == 0x0001AC, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetVelocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_SelectFloat_ReturnValue) == 0x0001B8, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0001BC, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetStimulisDistance_PathDistance_1) == 0x0001C8, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetStimulisDistance_PathDistance_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_GetStimulisDistance_NavigationQueryResult_1) == 0x0001CC, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_GetStimulisDistance_NavigationQueryResult_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001DC, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Dot_VectorVector_ReturnValue) == 0x0001E0, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_ConvertDistanceToThreatMultiplier_ThreatMultiplier) == 0x0001E4, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_ConvertDistanceToThreatMultiplier_ThreatMultiplier' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0001E8, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x0001E9, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_SelectFloat_ReturnValue_1) == 0x0001EC, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_BooleanAND_ReturnValue_1) == 0x0001F0, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0001F4, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0001F8, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0001FC, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x000200, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon, CallFunc_Multiply_FloatFloat_ReturnValue_3) == 0x000204, "Member 'AIC_EnemyCommon_C_ExecuteUbergraph_AIC_EnemyCommon::CallFunc_Multiply_FloatFloat_ReturnValue_3' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.IsThreatBlocked
// 0x0030 (0x0030 - 0x0000)
struct AIC_EnemyCommon_C_IsThreatBlocked final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_EnemyCommon_C_IsThreatBlocked) == 0x000008, "Wrong alignment on AIC_EnemyCommon_C_IsThreatBlocked");
static_assert(sizeof(AIC_EnemyCommon_C_IsThreatBlocked) == 0x000030, "Wrong size on AIC_EnemyCommon_C_IsThreatBlocked");
static_assert(offsetof(AIC_EnemyCommon_C_IsThreatBlocked, ReturnValue) == 0x000000, "Member 'AIC_EnemyCommon_C_IsThreatBlocked::ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_IsThreatBlocked, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'AIC_EnemyCommon_C_IsThreatBlocked::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_IsThreatBlocked, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'AIC_EnemyCommon_C_IsThreatBlocked::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_IsThreatBlocked, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'AIC_EnemyCommon_C_IsThreatBlocked::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_IsThreatBlocked, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'AIC_EnemyCommon_C_IsThreatBlocked::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.ConvertDistanceToThreatMultiplier
// 0x0010 (0x0010 - 0x0000)
struct AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ThreatMultiplier;                                  // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier");
static_assert(sizeof(AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier) == 0x000010, "Wrong size on AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier");
static_assert(offsetof(AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier, Distance) == 0x000000, "Member 'AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier::Distance' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier, ThreatMultiplier) == 0x000004, "Member 'AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier::ThreatMultiplier' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier, CallFunc_GetFloatValue_ReturnValue) == 0x00000C, "Member 'AIC_EnemyCommon_C_ConvertDistanceToThreatMultiplier::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");

// Function AIC_EnemyCommon.AIC_EnemyCommon_C.GetStimulisDistance
// 0x0068 (0x0068 - 0x0000)
struct AIC_EnemyCommon_C_GetStimulisDistance final
{
public:
	struct FAIStimulus                            AIStimulus;                                        // 0x0000(0x003C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	float                                         PathDistance;                                      // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENavigationQueryResult                        NavigationQueryResult;                             // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENavigationQueryResult                        Temp_byte_Variable;                                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation; // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue; // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPathCost_PathCost;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENavigationQueryResult                        CallFunc_GetPathCost_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENavigationQueryResult                        K2Node_Select_Default_1;                           // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AIC_EnemyCommon_C_GetStimulisDistance) == 0x000004, "Wrong alignment on AIC_EnemyCommon_C_GetStimulisDistance");
static_assert(sizeof(AIC_EnemyCommon_C_GetStimulisDistance) == 0x000068, "Wrong size on AIC_EnemyCommon_C_GetStimulisDistance");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, AIStimulus) == 0x000000, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::AIStimulus' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, PathDistance) == 0x00003C, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::PathDistance' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, NavigationQueryResult) == 0x000040, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::NavigationQueryResult' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, Temp_bool_Variable) == 0x000041, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, Temp_byte_Variable) == 0x000042, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation) == 0x000044, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::CallFunc_K2_GetRandomPointInNavigableRadius_RandomLocation' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue) == 0x000050, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::CallFunc_K2_GetRandomPointInNavigableRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, CallFunc_Vector_Distance_ReturnValue) == 0x000054, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, CallFunc_GetPathCost_PathCost) == 0x000058, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::CallFunc_GetPathCost_PathCost' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, CallFunc_GetPathCost_ReturnValue) == 0x00005C, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::CallFunc_GetPathCost_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, Temp_bool_Variable_1) == 0x00005D, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, K2Node_Select_Default) == 0x000060, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(AIC_EnemyCommon_C_GetStimulisDistance, K2Node_Select_Default_1) == 0x000064, "Member 'AIC_EnemyCommon_C_GetStimulisDistance::K2Node_Select_Default_1' has a wrong offset!");

}

