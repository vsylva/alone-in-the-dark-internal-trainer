#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Boids

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Boids.BP_Boids_C
// 0x00A0 (0x03A8 - 0x0308)
class ABP_Boids_C : public AOFBoids
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0308(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAbilitySystemComponent*                AbilitySystem;                                     // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          TriggerBox;                                        // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    BirdActivateSound;                                 // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    BirdFlyingSound;                                   // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    BirdIdleSound;                                     // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAIPerceptionComponent*                 AIPerception;                                      // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               DynMat;                                            // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggeredBySound;                                  // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TriggeredByCollisionBox;                           // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     BoidMaterial;                                      // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SoundTriggerLevel;                                 // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxTriggerDistance;                                // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UArrowComponent*>                PlaneNormalArrows;                                 // 0x0360(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          FleeFromTriggerActor;                              // 0x0370(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_371[0x3];                                      // 0x0371(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         StartVelocityActivatorEffect;                      // 0x0374(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UNiagaraSystem>          ActivateParticleSystem;                            // 0x0378(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          SpawnParticleEffectWhenActivated;                  // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AreBoidsActive;                                    // 0x03A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void GetClosestMeshInstance(const struct FVector& Location, bool* Success, int32* InstanceIndex);
	void FixMeshIDsAfterBoidRemoval(int32 RemovedBoidIndex);
	void KillBoid(int32 BoidIndex, const struct FVector& Location);
	void DestroyPlaneNormalArrows();
	void CreatePlaneNormalArrows();
	void GetRandomScale(struct FVector* Scale);
	void CreateBoid(const struct FTransform& Transform, const struct FVector& StartVelocity);
	void UserConstructionScript();
	void LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9(const TArray<class UObject*>& LoadedAssets);
	void ReceiveBeginPlay();
	void BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void ReceiveTick(float DeltaSeconds);
	void BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void TriggerBoids(class AActor* ActorThatTriggered);
	void WeaponHit(class AActor* Weapon, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload);
	void SpawnParticleEffect(const struct FVector& Location, const struct FVector& Direction);
	void ExecuteUbergraph_BP_Boids(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Boids_C">();
	}
	static class ABP_Boids_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Boids_C>();
	}
};
static_assert(alignof(ABP_Boids_C) == 0x000008, "Wrong alignment on ABP_Boids_C");
static_assert(sizeof(ABP_Boids_C) == 0x0003A8, "Wrong size on ABP_Boids_C");
static_assert(offsetof(ABP_Boids_C, UberGraphFrame) == 0x000308, "Member 'ABP_Boids_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, AbilitySystem) == 0x000310, "Member 'ABP_Boids_C::AbilitySystem' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, TriggerBox) == 0x000318, "Member 'ABP_Boids_C::TriggerBox' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, BirdActivateSound) == 0x000320, "Member 'ABP_Boids_C::BirdActivateSound' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, BirdFlyingSound) == 0x000328, "Member 'ABP_Boids_C::BirdFlyingSound' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, BirdIdleSound) == 0x000330, "Member 'ABP_Boids_C::BirdIdleSound' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, AIPerception) == 0x000338, "Member 'ABP_Boids_C::AIPerception' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, DynMat) == 0x000340, "Member 'ABP_Boids_C::DynMat' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, TriggeredBySound) == 0x000348, "Member 'ABP_Boids_C::TriggeredBySound' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, TriggeredByCollisionBox) == 0x000349, "Member 'ABP_Boids_C::TriggeredByCollisionBox' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, BoidMaterial) == 0x000350, "Member 'ABP_Boids_C::BoidMaterial' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, SoundTriggerLevel) == 0x000358, "Member 'ABP_Boids_C::SoundTriggerLevel' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, MaxTriggerDistance) == 0x00035C, "Member 'ABP_Boids_C::MaxTriggerDistance' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, PlaneNormalArrows) == 0x000360, "Member 'ABP_Boids_C::PlaneNormalArrows' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, FleeFromTriggerActor) == 0x000370, "Member 'ABP_Boids_C::FleeFromTriggerActor' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, StartVelocityActivatorEffect) == 0x000374, "Member 'ABP_Boids_C::StartVelocityActivatorEffect' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, ActivateParticleSystem) == 0x000378, "Member 'ABP_Boids_C::ActivateParticleSystem' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, SpawnParticleEffectWhenActivated) == 0x0003A0, "Member 'ABP_Boids_C::SpawnParticleEffectWhenActivated' has a wrong offset!");
static_assert(offsetof(ABP_Boids_C, AreBoidsActive) == 0x0003A1, "Member 'ABP_Boids_C::AreBoidsActive' has a wrong offset!");

}

