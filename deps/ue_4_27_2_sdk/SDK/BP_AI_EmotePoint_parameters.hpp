#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AI_EmotePoint

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AI_EmotePoint.BP_AI_EmotePoint_C.Load Preview Mesh
// 0x00D0 (0x00D0 - 0x0000)
struct BP_AI_EmotePoint_C_Load_Preview_Mesh final
{
public:
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_1;                          // 0x0010(0x0010)(ReferenceParm)
	TArray<class UObject*>                        CallFunc_LoadAssets_ReturnValue;                   // 0x0020(0x0010)(ReferenceParm)
	TArray<class UObject*>                        CallFunc_LoadAssets_ReturnValue_1;                 // 0x0030(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_DynamicCast_AsAnim_Sequence_Base;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array_2;                          // 0x0080(0x0010)(ReferenceParm)
	TArray<class UObject*>                        CallFunc_LoadAssets_ReturnValue_2;                 // 0x0090(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_EmotePoint_C_Load_Preview_Mesh) == 0x000008, "Wrong alignment on BP_AI_EmotePoint_C_Load_Preview_Mesh");
static_assert(sizeof(BP_AI_EmotePoint_C_Load_Preview_Mesh) == 0x0000D0, "Wrong size on BP_AI_EmotePoint_C_Load_Preview_Mesh");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_MakeArray_Array) == 0x000000, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_MakeArray_Array_1) == 0x000010, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_LoadAssets_ReturnValue) == 0x000020, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_LoadAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_LoadAssets_ReturnValue_1) == 0x000030, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_LoadAssets_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000040, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000048, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_AsAnim_Montage) == 0x000050, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000060, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000068, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_AsAnim_Sequence_Base) == 0x000070, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_AsAnim_Sequence_Base' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_MakeArray_Array_2) == 0x000080, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_LoadAssets_ReturnValue_2) == 0x000090, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_LoadAssets_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, CallFunc_IsWithEditor_ReturnValue) == 0x0000A8, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x0000B0, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_bSuccess_2) == 0x0000B8, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x0000C0, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_Load_Preview_Mesh, K2Node_DynamicCast_bSuccess_3) == 0x0000C8, "Member 'BP_AI_EmotePoint_C_Load_Preview_Mesh::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BP_AI_EmotePoint.BP_AI_EmotePoint_C.SetPreviewMeshMaterial
// 0x0058 (0x0058 - 0x0000)
struct BP_AI_EmotePoint_C_SetPreviewMeshMaterial final
{
public:
	class UMaterialInterface*                     Loaded_Material;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UObject*>                        CallFunc_LoadAssets_ReturnValue;                   // 0x0028(0x0010)(ReferenceParm)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x1];                                       // 0x0043(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumMaterials_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial) == 0x000008, "Wrong alignment on BP_AI_EmotePoint_C_SetPreviewMeshMaterial");
static_assert(sizeof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial) == 0x000058, "Wrong size on BP_AI_EmotePoint_C_SetPreviewMeshMaterial");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, Loaded_Material) == 0x000000, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::Loaded_Material' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, Temp_int_Variable) == 0x000008, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000020, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_LoadAssets_ReturnValue) == 0x000028, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_LoadAssets_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, K2Node_DynamicCast_AsMaterial_Interface) == 0x000038, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_IsWithEditor_ReturnValue) == 0x000041, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000042, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_GetNumMaterials_ReturnValue) == 0x000044, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_GetNumMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_Subtract_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_SetPreviewMeshMaterial, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000050, "Member 'BP_AI_EmotePoint_C_SetPreviewMeshMaterial::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AI_EmotePoint.BP_AI_EmotePoint_C.GetEmoteData
// 0x0010 (0x0010 - 0x0000)
struct BP_AI_EmotePoint_C_GetEmoteData final
{
public:
	class UBP_DarkManEmoteDataAsset_C*            Emote_Data;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AI_EmotePoint_C_GetEmoteData) == 0x000008, "Wrong alignment on BP_AI_EmotePoint_C_GetEmoteData");
static_assert(sizeof(BP_AI_EmotePoint_C_GetEmoteData) == 0x000010, "Wrong size on BP_AI_EmotePoint_C_GetEmoteData");
static_assert(offsetof(BP_AI_EmotePoint_C_GetEmoteData, Emote_Data) == 0x000000, "Member 'BP_AI_EmotePoint_C_GetEmoteData::Emote_Data' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_GetEmoteData, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000008, "Member 'BP_AI_EmotePoint_C_GetEmoteData::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_GetEmoteData, CallFunc_Add_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_AI_EmotePoint_C_GetEmoteData::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_AI_EmotePoint.BP_AI_EmotePoint_C.IsActive
// 0x000C (0x000C - 0x0000)
struct BP_AI_EmotePoint_C_IsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AI_EmotePoint_C_IsActive) == 0x000004, "Wrong alignment on BP_AI_EmotePoint_C_IsActive");
static_assert(sizeof(BP_AI_EmotePoint_C_IsActive) == 0x00000C, "Wrong size on BP_AI_EmotePoint_C_IsActive");
static_assert(offsetof(BP_AI_EmotePoint_C_IsActive, ReturnValue) == 0x000000, "Member 'BP_AI_EmotePoint_C_IsActive::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_IsActive, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000004, "Member 'BP_AI_EmotePoint_C_IsActive::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AI_EmotePoint_C_IsActive, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_AI_EmotePoint_C_IsActive::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

}

