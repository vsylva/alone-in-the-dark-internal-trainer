#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PC_ContextualTraverse_Balance

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_PC_ContextualTraverse_Balance.ABP_PC_ContextualTraverse_Balance_C.ContextualMovement
// 0x0020 (0x0020 - 0x0000)
struct ABP_PC_ContextualTraverse_Balance_C_ContextualMovement final
{
public:
	struct FPoseLink                              ContextualMovementInputPose;                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              ContextualMovement_0;                              // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PC_ContextualTraverse_Balance_C_ContextualMovement) == 0x000008, "Wrong alignment on ABP_PC_ContextualTraverse_Balance_C_ContextualMovement");
static_assert(sizeof(ABP_PC_ContextualTraverse_Balance_C_ContextualMovement) == 0x000020, "Wrong size on ABP_PC_ContextualTraverse_Balance_C_ContextualMovement");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ContextualMovement, ContextualMovementInputPose) == 0x000000, "Member 'ABP_PC_ContextualTraverse_Balance_C_ContextualMovement::ContextualMovementInputPose' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ContextualMovement, ContextualMovement_0) == 0x000010, "Member 'ABP_PC_ContextualTraverse_Balance_C_ContextualMovement::ContextualMovement_0' has a wrong offset!");

// Function ABP_PC_ContextualTraverse_Balance.ABP_PC_ContextualTraverse_Balance_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct ABP_PC_ContextualTraverse_Balance_C_AnimGraph final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimGraph_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_PC_ContextualTraverse_Balance_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_PC_ContextualTraverse_Balance_C_AnimGraph");
static_assert(sizeof(ABP_PC_ContextualTraverse_Balance_C_AnimGraph) == 0x000020, "Wrong size on ABP_PC_ContextualTraverse_Balance_C_AnimGraph");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_AnimGraph, InPose) == 0x000000, "Member 'ABP_PC_ContextualTraverse_Balance_C_AnimGraph::InPose' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_AnimGraph, AnimGraph_0) == 0x000010, "Member 'ABP_PC_ContextualTraverse_Balance_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_PC_ContextualTraverse_Balance.ABP_PC_ContextualTraverse_Balance_C.SetAnimationsAndPoseMatchingProfile
// 0x0028 (0x0028 - 0x0000)
struct ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile final
{
public:
	TScriptInterface<class IBP_PlayerCharacterAnimationInterface_C> K2Node_DynamicCast_AsBP_Player_Character_Animation_Interface; // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_PlayerCharacterContextualMovementAnimations_C* CallFunc_GetContextualMovementCharacterData_Animations; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPoseMatchingProfileDataAsset*          CallFunc_GetContextualMovementCharacterData_PoseMatchingProfile; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile) == 0x000008, "Wrong alignment on ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile");
static_assert(sizeof(ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile) == 0x000028, "Wrong size on ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile, K2Node_DynamicCast_AsBP_Player_Character_Animation_Interface) == 0x000000, "Member 'ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile::K2Node_DynamicCast_AsBP_Player_Character_Animation_Interface' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile, CallFunc_GetContextualMovementCharacterData_Animations) == 0x000018, "Member 'ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile::CallFunc_GetContextualMovementCharacterData_Animations' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile, CallFunc_GetContextualMovementCharacterData_PoseMatchingProfile) == 0x000020, "Member 'ABP_PC_ContextualTraverse_Balance_C_SetAnimationsAndPoseMatchingProfile::CallFunc_GetContextualMovementCharacterData_PoseMatchingProfile' has a wrong offset!");

// Function ABP_PC_ContextualTraverse_Balance.ABP_PC_ContextualTraverse_Balance_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_PC_ContextualTraverse_Balance_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_ContextualTraverse_Balance_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_PC_ContextualTraverse_Balance_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_PC_ContextualTraverse_Balance_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_PC_ContextualTraverse_Balance_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_PC_ContextualTraverse_Balance_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_PC_ContextualTraverse_Balance.ABP_PC_ContextualTraverse_Balance_C.ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance
// 0x0050 (0x0050 - 0x0000)
struct ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue; // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue; // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_1;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInputTriggeredEarlyBlendOut_ReturnValue; // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue_2;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance) == 0x000008, "Wrong alignment on ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance");
static_assert(sizeof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance) == 0x000050, "Wrong size on ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, EntryPoint) == 0x000000, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue) == 0x000004, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue) == 0x000008, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_Less_FloatFloat_ReturnValue) == 0x00000C, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1) == 0x000010, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetRelevantAnimTimeRemainingFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1) == 0x000018, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_Less_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_Less_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_BooleanAND_ReturnValue) == 0x00001D, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x00001E, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetInputTriggeredEarlyBlendOut_ReturnValue) == 0x00001F, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetInputTriggeredEarlyBlendOut_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2) == 0x000020, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetInstanceTransitionCrossfadeDuration_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000024, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000028, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_Less_FloatFloat_ReturnValue_2) == 0x000029, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_Less_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_BooleanOR_ReturnValue) == 0x00002A, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, K2Node_Event_DeltaTimeX) == 0x00002C, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000030, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000038, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000048, "Member 'ABP_PC_ContextualTraverse_Balance_C_ExecuteUbergraph_ABP_PC_ContextualTraverse_Balance::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

}

