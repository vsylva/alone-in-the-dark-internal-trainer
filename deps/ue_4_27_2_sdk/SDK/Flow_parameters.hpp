#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Flow

#include "Basic.hpp"

#include "Flow_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function Flow.FlowNode.GetClassDescription
// 0x0018 (0x0018 - 0x0000)
struct FlowNode_GetClassDescription final
{
public:
	TSubclassOf<class UObject>                    Class_0;                                           // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetClassDescription) == 0x000008, "Wrong alignment on FlowNode_GetClassDescription");
static_assert(sizeof(FlowNode_GetClassDescription) == 0x000018, "Wrong size on FlowNode_GetClassDescription");
static_assert(offsetof(FlowNode_GetClassDescription, Class_0) == 0x000000, "Member 'FlowNode_GetClassDescription::Class_0' has a wrong offset!");
static_assert(offsetof(FlowNode_GetClassDescription, ReturnValue) == 0x000008, "Member 'FlowNode_GetClassDescription::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.GetIdentityTagDescription
// 0x0018 (0x0018 - 0x0000)
struct FlowNode_GetIdentityTagDescription final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetIdentityTagDescription) == 0x000008, "Wrong alignment on FlowNode_GetIdentityTagDescription");
static_assert(sizeof(FlowNode_GetIdentityTagDescription) == 0x000018, "Wrong size on FlowNode_GetIdentityTagDescription");
static_assert(offsetof(FlowNode_GetIdentityTagDescription, Tag) == 0x000000, "Member 'FlowNode_GetIdentityTagDescription::Tag' has a wrong offset!");
static_assert(offsetof(FlowNode_GetIdentityTagDescription, ReturnValue) == 0x000008, "Member 'FlowNode_GetIdentityTagDescription::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.GetIdentityTagsDescription
// 0x0030 (0x0030 - 0x0000)
struct FlowNode_GetIdentityTagsDescription final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetIdentityTagsDescription) == 0x000008, "Wrong alignment on FlowNode_GetIdentityTagsDescription");
static_assert(sizeof(FlowNode_GetIdentityTagsDescription) == 0x000030, "Wrong size on FlowNode_GetIdentityTagsDescription");
static_assert(offsetof(FlowNode_GetIdentityTagsDescription, Tags) == 0x000000, "Member 'FlowNode_GetIdentityTagsDescription::Tags' has a wrong offset!");
static_assert(offsetof(FlowNode_GetIdentityTagsDescription, ReturnValue) == 0x000020, "Member 'FlowNode_GetIdentityTagsDescription::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.GetNotifyTagsDescription
// 0x0030 (0x0030 - 0x0000)
struct FlowNode_GetNotifyTagsDescription final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetNotifyTagsDescription) == 0x000008, "Wrong alignment on FlowNode_GetNotifyTagsDescription");
static_assert(sizeof(FlowNode_GetNotifyTagsDescription) == 0x000030, "Wrong size on FlowNode_GetNotifyTagsDescription");
static_assert(offsetof(FlowNode_GetNotifyTagsDescription, Tags) == 0x000000, "Member 'FlowNode_GetNotifyTagsDescription::Tags' has a wrong offset!");
static_assert(offsetof(FlowNode_GetNotifyTagsDescription, ReturnValue) == 0x000020, "Member 'FlowNode_GetNotifyTagsDescription::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.GetProgressAsString
// 0x0018 (0x0018 - 0x0000)
struct FlowNode_GetProgressAsString final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetProgressAsString) == 0x000008, "Wrong alignment on FlowNode_GetProgressAsString");
static_assert(sizeof(FlowNode_GetProgressAsString) == 0x000018, "Wrong size on FlowNode_GetProgressAsString");
static_assert(offsetof(FlowNode_GetProgressAsString, Value) == 0x000000, "Member 'FlowNode_GetProgressAsString::Value' has a wrong offset!");
static_assert(offsetof(FlowNode_GetProgressAsString, ReturnValue) == 0x000008, "Member 'FlowNode_GetProgressAsString::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.K2_ExecuteInput
// 0x0008 (0x0008 - 0x0000)
struct FlowNode_K2_ExecuteInput final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_ExecuteInput) == 0x000004, "Wrong alignment on FlowNode_K2_ExecuteInput");
static_assert(sizeof(FlowNode_K2_ExecuteInput) == 0x000008, "Wrong size on FlowNode_K2_ExecuteInput");
static_assert(offsetof(FlowNode_K2_ExecuteInput, PinName) == 0x000000, "Member 'FlowNode_K2_ExecuteInput::PinName' has a wrong offset!");

// Function Flow.FlowNode.K2_GetActorToFocus
// 0x0008 (0x0008 - 0x0000)
struct FlowNode_K2_GetActorToFocus final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_GetActorToFocus) == 0x000008, "Wrong alignment on FlowNode_K2_GetActorToFocus");
static_assert(sizeof(FlowNode_K2_GetActorToFocus) == 0x000008, "Wrong size on FlowNode_K2_GetActorToFocus");
static_assert(offsetof(FlowNode_K2_GetActorToFocus, ReturnValue) == 0x000000, "Member 'FlowNode_K2_GetActorToFocus::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.K2_GetAssetPath
// 0x0010 (0x0010 - 0x0000)
struct FlowNode_K2_GetAssetPath final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_GetAssetPath) == 0x000008, "Wrong alignment on FlowNode_K2_GetAssetPath");
static_assert(sizeof(FlowNode_K2_GetAssetPath) == 0x000010, "Wrong size on FlowNode_K2_GetAssetPath");
static_assert(offsetof(FlowNode_K2_GetAssetPath, ReturnValue) == 0x000000, "Member 'FlowNode_K2_GetAssetPath::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.K2_GetAssetToEdit
// 0x0008 (0x0008 - 0x0000)
struct FlowNode_K2_GetAssetToEdit final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_GetAssetToEdit) == 0x000008, "Wrong alignment on FlowNode_K2_GetAssetToEdit");
static_assert(sizeof(FlowNode_K2_GetAssetToEdit) == 0x000008, "Wrong size on FlowNode_K2_GetAssetToEdit");
static_assert(offsetof(FlowNode_K2_GetAssetToEdit, ReturnValue) == 0x000000, "Member 'FlowNode_K2_GetAssetToEdit::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.LoadInstance
// 0x0020 (0x0020 - 0x0000)
struct FlowNode_LoadInstance final
{
public:
	struct FFlowNodeSaveData                      NodeRecord;                                        // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_LoadInstance) == 0x000008, "Wrong alignment on FlowNode_LoadInstance");
static_assert(sizeof(FlowNode_LoadInstance) == 0x000020, "Wrong size on FlowNode_LoadInstance");
static_assert(offsetof(FlowNode_LoadInstance, NodeRecord) == 0x000000, "Member 'FlowNode_LoadInstance::NodeRecord' has a wrong offset!");

// Function Flow.FlowNode.SaveInstance
// 0x0020 (0x0020 - 0x0000)
struct FlowNode_SaveInstance final
{
public:
	struct FFlowNodeSaveData                      NodeRecord;                                        // 0x0000(0x0020)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_SaveInstance) == 0x000008, "Wrong alignment on FlowNode_SaveInstance");
static_assert(sizeof(FlowNode_SaveInstance) == 0x000020, "Wrong size on FlowNode_SaveInstance");
static_assert(offsetof(FlowNode_SaveInstance, NodeRecord) == 0x000000, "Member 'FlowNode_SaveInstance::NodeRecord' has a wrong offset!");

// Function Flow.FlowNode.TriggerFirstOutput
// 0x0001 (0x0001 - 0x0000)
struct FlowNode_TriggerFirstOutput final
{
public:
	bool                                          bFinish;                                           // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_TriggerFirstOutput) == 0x000001, "Wrong alignment on FlowNode_TriggerFirstOutput");
static_assert(sizeof(FlowNode_TriggerFirstOutput) == 0x000001, "Wrong size on FlowNode_TriggerFirstOutput");
static_assert(offsetof(FlowNode_TriggerFirstOutput, bFinish) == 0x000000, "Member 'FlowNode_TriggerFirstOutput::bFinish' has a wrong offset!");

// Function Flow.FlowNode.TriggerOutput
// 0x000C (0x000C - 0x0000)
struct FlowNode_TriggerOutput final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFinish;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowNode_TriggerOutput) == 0x000004, "Wrong alignment on FlowNode_TriggerOutput");
static_assert(sizeof(FlowNode_TriggerOutput) == 0x00000C, "Wrong size on FlowNode_TriggerOutput");
static_assert(offsetof(FlowNode_TriggerOutput, PinName) == 0x000000, "Member 'FlowNode_TriggerOutput::PinName' has a wrong offset!");
static_assert(offsetof(FlowNode_TriggerOutput, bFinish) == 0x000008, "Member 'FlowNode_TriggerOutput::bFinish' has a wrong offset!");

// Function Flow.FlowNode.GetFlowAsset
// 0x0008 (0x0008 - 0x0000)
struct FlowNode_GetFlowAsset final
{
public:
	class UFlowAsset*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetFlowAsset) == 0x000008, "Wrong alignment on FlowNode_GetFlowAsset");
static_assert(sizeof(FlowNode_GetFlowAsset) == 0x000008, "Wrong size on FlowNode_GetFlowAsset");
static_assert(offsetof(FlowNode_GetFlowAsset, ReturnValue) == 0x000000, "Member 'FlowNode_GetFlowAsset::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.GetFlowSubsystem
// 0x0008 (0x0008 - 0x0000)
struct FlowNode_GetFlowSubsystem final
{
public:
	class UFlowSubsystem*                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetFlowSubsystem) == 0x000008, "Wrong alignment on FlowNode_GetFlowSubsystem");
static_assert(sizeof(FlowNode_GetFlowSubsystem) == 0x000008, "Wrong size on FlowNode_GetFlowSubsystem");
static_assert(offsetof(FlowNode_GetFlowSubsystem, ReturnValue) == 0x000000, "Member 'FlowNode_GetFlowSubsystem::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.GetInputNames
// 0x0010 (0x0010 - 0x0000)
struct FlowNode_GetInputNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetInputNames) == 0x000008, "Wrong alignment on FlowNode_GetInputNames");
static_assert(sizeof(FlowNode_GetInputNames) == 0x000010, "Wrong size on FlowNode_GetInputNames");
static_assert(offsetof(FlowNode_GetInputNames, ReturnValue) == 0x000000, "Member 'FlowNode_GetInputNames::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.GetOutputNames
// 0x0010 (0x0010 - 0x0000)
struct FlowNode_GetOutputNames final
{
public:
	TArray<class FName>                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_GetOutputNames) == 0x000008, "Wrong alignment on FlowNode_GetOutputNames");
static_assert(sizeof(FlowNode_GetOutputNames) == 0x000010, "Wrong size on FlowNode_GetOutputNames");
static_assert(offsetof(FlowNode_GetOutputNames, ReturnValue) == 0x000000, "Member 'FlowNode_GetOutputNames::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.IsInputConnected
// 0x000C (0x000C - 0x0000)
struct FlowNode_IsInputConnected final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowNode_IsInputConnected) == 0x000004, "Wrong alignment on FlowNode_IsInputConnected");
static_assert(sizeof(FlowNode_IsInputConnected) == 0x00000C, "Wrong size on FlowNode_IsInputConnected");
static_assert(offsetof(FlowNode_IsInputConnected, PinName) == 0x000000, "Member 'FlowNode_IsInputConnected::PinName' has a wrong offset!");
static_assert(offsetof(FlowNode_IsInputConnected, ReturnValue) == 0x000008, "Member 'FlowNode_IsInputConnected::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.IsOutputConnected
// 0x000C (0x000C - 0x0000)
struct FlowNode_IsOutputConnected final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowNode_IsOutputConnected) == 0x000004, "Wrong alignment on FlowNode_IsOutputConnected");
static_assert(sizeof(FlowNode_IsOutputConnected) == 0x00000C, "Wrong size on FlowNode_IsOutputConnected");
static_assert(offsetof(FlowNode_IsOutputConnected, PinName) == 0x000000, "Member 'FlowNode_IsOutputConnected::PinName' has a wrong offset!");
static_assert(offsetof(FlowNode_IsOutputConnected, ReturnValue) == 0x000008, "Member 'FlowNode_IsOutputConnected::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.K2_CanUserAddInput
// 0x0001 (0x0001 - 0x0000)
struct FlowNode_K2_CanUserAddInput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_CanUserAddInput) == 0x000001, "Wrong alignment on FlowNode_K2_CanUserAddInput");
static_assert(sizeof(FlowNode_K2_CanUserAddInput) == 0x000001, "Wrong size on FlowNode_K2_CanUserAddInput");
static_assert(offsetof(FlowNode_K2_CanUserAddInput, ReturnValue) == 0x000000, "Member 'FlowNode_K2_CanUserAddInput::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.K2_CanUserAddOutput
// 0x0001 (0x0001 - 0x0000)
struct FlowNode_K2_CanUserAddOutput final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_CanUserAddOutput) == 0x000001, "Wrong alignment on FlowNode_K2_CanUserAddOutput");
static_assert(sizeof(FlowNode_K2_CanUserAddOutput) == 0x000001, "Wrong size on FlowNode_K2_CanUserAddOutput");
static_assert(offsetof(FlowNode_K2_CanUserAddOutput, ReturnValue) == 0x000000, "Member 'FlowNode_K2_CanUserAddOutput::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.K2_GetNodeDescription
// 0x0010 (0x0010 - 0x0000)
struct FlowNode_K2_GetNodeDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_GetNodeDescription) == 0x000008, "Wrong alignment on FlowNode_K2_GetNodeDescription");
static_assert(sizeof(FlowNode_K2_GetNodeDescription) == 0x000010, "Wrong size on FlowNode_K2_GetNodeDescription");
static_assert(offsetof(FlowNode_K2_GetNodeDescription, ReturnValue) == 0x000000, "Member 'FlowNode_K2_GetNodeDescription::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.K2_GetStatusString
// 0x0010 (0x0010 - 0x0000)
struct FlowNode_K2_GetStatusString final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_K2_GetStatusString) == 0x000008, "Wrong alignment on FlowNode_K2_GetStatusString");
static_assert(sizeof(FlowNode_K2_GetStatusString) == 0x000010, "Wrong size on FlowNode_K2_GetStatusString");
static_assert(offsetof(FlowNode_K2_GetStatusString, ReturnValue) == 0x000000, "Member 'FlowNode_K2_GetStatusString::ReturnValue' has a wrong offset!");

// Function Flow.FlowNode.LogError
// 0x0018 (0x0018 - 0x0000)
struct FlowNode_LogError final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlowOnScreenMessageType                      OnScreenMessageType;                               // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowNode_LogError) == 0x000008, "Wrong alignment on FlowNode_LogError");
static_assert(sizeof(FlowNode_LogError) == 0x000018, "Wrong size on FlowNode_LogError");
static_assert(offsetof(FlowNode_LogError, Message) == 0x000000, "Member 'FlowNode_LogError::Message' has a wrong offset!");
static_assert(offsetof(FlowNode_LogError, OnScreenMessageType) == 0x000010, "Member 'FlowNode_LogError::OnScreenMessageType' has a wrong offset!");

// Function Flow.FlowNode_ComponentObserver.OnComponentRegistered
// 0x0008 (0x0008 - 0x0000)
struct FlowNode_ComponentObserver_OnComponentRegistered final
{
public:
	class UFlowComponent*                         Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_ComponentObserver_OnComponentRegistered) == 0x000008, "Wrong alignment on FlowNode_ComponentObserver_OnComponentRegistered");
static_assert(sizeof(FlowNode_ComponentObserver_OnComponentRegistered) == 0x000008, "Wrong size on FlowNode_ComponentObserver_OnComponentRegistered");
static_assert(offsetof(FlowNode_ComponentObserver_OnComponentRegistered, Component) == 0x000000, "Member 'FlowNode_ComponentObserver_OnComponentRegistered::Component' has a wrong offset!");

// Function Flow.FlowNode_ComponentObserver.OnComponentTagAdded
// 0x0028 (0x0028 - 0x0000)
struct FlowNode_ComponentObserver_OnComponentTagAdded final
{
public:
	class UFlowComponent*                         Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  AddedTags;                                         // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_ComponentObserver_OnComponentTagAdded) == 0x000008, "Wrong alignment on FlowNode_ComponentObserver_OnComponentTagAdded");
static_assert(sizeof(FlowNode_ComponentObserver_OnComponentTagAdded) == 0x000028, "Wrong size on FlowNode_ComponentObserver_OnComponentTagAdded");
static_assert(offsetof(FlowNode_ComponentObserver_OnComponentTagAdded, Component) == 0x000000, "Member 'FlowNode_ComponentObserver_OnComponentTagAdded::Component' has a wrong offset!");
static_assert(offsetof(FlowNode_ComponentObserver_OnComponentTagAdded, AddedTags) == 0x000008, "Member 'FlowNode_ComponentObserver_OnComponentTagAdded::AddedTags' has a wrong offset!");

// Function Flow.FlowNode_ComponentObserver.OnComponentTagRemoved
// 0x0028 (0x0028 - 0x0000)
struct FlowNode_ComponentObserver_OnComponentTagRemoved final
{
public:
	class UFlowComponent*                         Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                  RemovedTags;                                       // 0x0008(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_ComponentObserver_OnComponentTagRemoved) == 0x000008, "Wrong alignment on FlowNode_ComponentObserver_OnComponentTagRemoved");
static_assert(sizeof(FlowNode_ComponentObserver_OnComponentTagRemoved) == 0x000028, "Wrong size on FlowNode_ComponentObserver_OnComponentTagRemoved");
static_assert(offsetof(FlowNode_ComponentObserver_OnComponentTagRemoved, Component) == 0x000000, "Member 'FlowNode_ComponentObserver_OnComponentTagRemoved::Component' has a wrong offset!");
static_assert(offsetof(FlowNode_ComponentObserver_OnComponentTagRemoved, RemovedTags) == 0x000008, "Member 'FlowNode_ComponentObserver_OnComponentTagRemoved::RemovedTags' has a wrong offset!");

// Function Flow.FlowNode_ComponentObserver.OnComponentUnregistered
// 0x0008 (0x0008 - 0x0000)
struct FlowNode_ComponentObserver_OnComponentUnregistered final
{
public:
	class UFlowComponent*                         Component;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_ComponentObserver_OnComponentUnregistered) == 0x000008, "Wrong alignment on FlowNode_ComponentObserver_OnComponentUnregistered");
static_assert(sizeof(FlowNode_ComponentObserver_OnComponentUnregistered) == 0x000008, "Wrong size on FlowNode_ComponentObserver_OnComponentUnregistered");
static_assert(offsetof(FlowNode_ComponentObserver_OnComponentUnregistered, Component) == 0x000000, "Member 'FlowNode_ComponentObserver_OnComponentUnregistered::Component' has a wrong offset!");

// Function Flow.FlowAsset.IsBoundToWorld
// 0x0001 (0x0001 - 0x0000)
struct FlowAsset_IsBoundToWorld final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowAsset_IsBoundToWorld) == 0x000001, "Wrong alignment on FlowAsset_IsBoundToWorld");
static_assert(sizeof(FlowAsset_IsBoundToWorld) == 0x000001, "Wrong size on FlowAsset_IsBoundToWorld");
static_assert(offsetof(FlowAsset_IsBoundToWorld, ReturnValue) == 0x000000, "Member 'FlowAsset_IsBoundToWorld::ReturnValue' has a wrong offset!");

// Function Flow.FlowAsset.LoadInstance
// 0x0040 (0x0040 - 0x0000)
struct FlowAsset_LoadInstance final
{
public:
	struct FFlowAssetSaveData                     AssetRecord;                                       // 0x0000(0x0040)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowAsset_LoadInstance) == 0x000008, "Wrong alignment on FlowAsset_LoadInstance");
static_assert(sizeof(FlowAsset_LoadInstance) == 0x000040, "Wrong size on FlowAsset_LoadInstance");
static_assert(offsetof(FlowAsset_LoadInstance, AssetRecord) == 0x000000, "Member 'FlowAsset_LoadInstance::AssetRecord' has a wrong offset!");

// Function Flow.FlowAsset.SaveInstance
// 0x0050 (0x0050 - 0x0000)
struct FlowAsset_SaveInstance final
{
public:
	TArray<struct FFlowAssetSaveData>             SavedFlowInstances;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	struct FFlowAssetSaveData                     ReturnValue;                                       // 0x0010(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowAsset_SaveInstance) == 0x000008, "Wrong alignment on FlowAsset_SaveInstance");
static_assert(sizeof(FlowAsset_SaveInstance) == 0x000050, "Wrong size on FlowAsset_SaveInstance");
static_assert(offsetof(FlowAsset_SaveInstance, SavedFlowInstances) == 0x000000, "Member 'FlowAsset_SaveInstance::SavedFlowInstances' has a wrong offset!");
static_assert(offsetof(FlowAsset_SaveInstance, ReturnValue) == 0x000010, "Member 'FlowAsset_SaveInstance::ReturnValue' has a wrong offset!");

// Function Flow.FlowAsset.GetActiveNodes
// 0x0010 (0x0010 - 0x0000)
struct FlowAsset_GetActiveNodes final
{
public:
	TArray<class UFlowNode*>                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowAsset_GetActiveNodes) == 0x000008, "Wrong alignment on FlowAsset_GetActiveNodes");
static_assert(sizeof(FlowAsset_GetActiveNodes) == 0x000010, "Wrong size on FlowAsset_GetActiveNodes");
static_assert(offsetof(FlowAsset_GetActiveNodes, ReturnValue) == 0x000000, "Member 'FlowAsset_GetActiveNodes::ReturnValue' has a wrong offset!");

// Function Flow.FlowAsset.GetOwner
// 0x0008 (0x0008 - 0x0000)
struct FlowAsset_GetOwner final
{
public:
	class UObject*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowAsset_GetOwner) == 0x000008, "Wrong alignment on FlowAsset_GetOwner");
static_assert(sizeof(FlowAsset_GetOwner) == 0x000008, "Wrong size on FlowAsset_GetOwner");
static_assert(offsetof(FlowAsset_GetOwner, ReturnValue) == 0x000000, "Member 'FlowAsset_GetOwner::ReturnValue' has a wrong offset!");

// Function Flow.FlowAsset.GetRecordedNodes
// 0x0010 (0x0010 - 0x0000)
struct FlowAsset_GetRecordedNodes final
{
public:
	TArray<class UFlowNode*>                      ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowAsset_GetRecordedNodes) == 0x000008, "Wrong alignment on FlowAsset_GetRecordedNodes");
static_assert(sizeof(FlowAsset_GetRecordedNodes) == 0x000010, "Wrong size on FlowAsset_GetRecordedNodes");
static_assert(offsetof(FlowAsset_GetRecordedNodes, ReturnValue) == 0x000000, "Member 'FlowAsset_GetRecordedNodes::ReturnValue' has a wrong offset!");

// Function Flow.FlowAsset.IsActive
// 0x0001 (0x0001 - 0x0000)
struct FlowAsset_IsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowAsset_IsActive) == 0x000001, "Wrong alignment on FlowAsset_IsActive");
static_assert(sizeof(FlowAsset_IsActive) == 0x000001, "Wrong size on FlowAsset_IsActive");
static_assert(offsetof(FlowAsset_IsActive, ReturnValue) == 0x000000, "Member 'FlowAsset_IsActive::ReturnValue' has a wrong offset!");

// Function Flow.FlowComponent.AddIdentityTag
// 0x000C (0x000C - 0x0000)
struct FlowComponent_AddIdentityTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlowNetMode                                  NetMode;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowComponent_AddIdentityTag) == 0x000004, "Wrong alignment on FlowComponent_AddIdentityTag");
static_assert(sizeof(FlowComponent_AddIdentityTag) == 0x00000C, "Wrong size on FlowComponent_AddIdentityTag");
static_assert(offsetof(FlowComponent_AddIdentityTag, Tag) == 0x000000, "Member 'FlowComponent_AddIdentityTag::Tag' has a wrong offset!");
static_assert(offsetof(FlowComponent_AddIdentityTag, NetMode) == 0x000008, "Member 'FlowComponent_AddIdentityTag::NetMode' has a wrong offset!");

// Function Flow.FlowComponent.AddIdentityTags
// 0x0028 (0x0028 - 0x0000)
struct FlowComponent_AddIdentityTags final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	EFlowNetMode                                  NetMode;                                           // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowComponent_AddIdentityTags) == 0x000008, "Wrong alignment on FlowComponent_AddIdentityTags");
static_assert(sizeof(FlowComponent_AddIdentityTags) == 0x000028, "Wrong size on FlowComponent_AddIdentityTags");
static_assert(offsetof(FlowComponent_AddIdentityTags, Tags) == 0x000000, "Member 'FlowComponent_AddIdentityTags::Tags' has a wrong offset!");
static_assert(offsetof(FlowComponent_AddIdentityTags, NetMode) == 0x000020, "Member 'FlowComponent_AddIdentityTags::NetMode' has a wrong offset!");

// Function Flow.FlowComponent.BulkNotifyGraph
// 0x0028 (0x0028 - 0x0000)
struct FlowComponent_BulkNotifyGraph final
{
public:
	struct FGameplayTagContainer                  NotifyTags;                                        // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	EFlowNetMode                                  NetMode;                                           // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowComponent_BulkNotifyGraph) == 0x000008, "Wrong alignment on FlowComponent_BulkNotifyGraph");
static_assert(sizeof(FlowComponent_BulkNotifyGraph) == 0x000028, "Wrong size on FlowComponent_BulkNotifyGraph");
static_assert(offsetof(FlowComponent_BulkNotifyGraph, NotifyTags) == 0x000000, "Member 'FlowComponent_BulkNotifyGraph::NotifyTags' has a wrong offset!");
static_assert(offsetof(FlowComponent_BulkNotifyGraph, NetMode) == 0x000020, "Member 'FlowComponent_BulkNotifyGraph::NetMode' has a wrong offset!");

// Function Flow.FlowComponent.FinishRootFlow
// 0x0001 (0x0001 - 0x0000)
struct FlowComponent_FinishRootFlow final
{
public:
	EFlowFinishPolicy                             FinishPolicy;                                      // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowComponent_FinishRootFlow) == 0x000001, "Wrong alignment on FlowComponent_FinishRootFlow");
static_assert(sizeof(FlowComponent_FinishRootFlow) == 0x000001, "Wrong size on FlowComponent_FinishRootFlow");
static_assert(offsetof(FlowComponent_FinishRootFlow, FinishPolicy) == 0x000000, "Member 'FlowComponent_FinishRootFlow::FinishPolicy' has a wrong offset!");

// Function Flow.FlowComponent.GetRootFlowInstance
// 0x0008 (0x0008 - 0x0000)
struct FlowComponent_GetRootFlowInstance final
{
public:
	class UFlowAsset*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowComponent_GetRootFlowInstance) == 0x000008, "Wrong alignment on FlowComponent_GetRootFlowInstance");
static_assert(sizeof(FlowComponent_GetRootFlowInstance) == 0x000008, "Wrong size on FlowComponent_GetRootFlowInstance");
static_assert(offsetof(FlowComponent_GetRootFlowInstance, ReturnValue) == 0x000000, "Member 'FlowComponent_GetRootFlowInstance::ReturnValue' has a wrong offset!");

// Function Flow.FlowComponent.LoadInstance
// 0x0001 (0x0001 - 0x0000)
struct FlowComponent_LoadInstance final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowComponent_LoadInstance) == 0x000001, "Wrong alignment on FlowComponent_LoadInstance");
static_assert(sizeof(FlowComponent_LoadInstance) == 0x000001, "Wrong size on FlowComponent_LoadInstance");
static_assert(offsetof(FlowComponent_LoadInstance, ReturnValue) == 0x000000, "Member 'FlowComponent_LoadInstance::ReturnValue' has a wrong offset!");

// Function Flow.FlowComponent.NotifyActor
// 0x0014 (0x0014 - 0x0000)
struct FlowComponent_NotifyActor final
{
public:
	struct FGameplayTag                           ActorTag;                                          // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           NotifyTag;                                         // 0x0008(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlowNetMode                                  NetMode;                                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowComponent_NotifyActor) == 0x000004, "Wrong alignment on FlowComponent_NotifyActor");
static_assert(sizeof(FlowComponent_NotifyActor) == 0x000014, "Wrong size on FlowComponent_NotifyActor");
static_assert(offsetof(FlowComponent_NotifyActor, ActorTag) == 0x000000, "Member 'FlowComponent_NotifyActor::ActorTag' has a wrong offset!");
static_assert(offsetof(FlowComponent_NotifyActor, NotifyTag) == 0x000008, "Member 'FlowComponent_NotifyActor::NotifyTag' has a wrong offset!");
static_assert(offsetof(FlowComponent_NotifyActor, NetMode) == 0x000010, "Member 'FlowComponent_NotifyActor::NetMode' has a wrong offset!");

// Function Flow.FlowComponent.NotifyGraph
// 0x000C (0x000C - 0x0000)
struct FlowComponent_NotifyGraph final
{
public:
	struct FGameplayTag                           NotifyTag;                                         // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlowNetMode                                  NetMode;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowComponent_NotifyGraph) == 0x000004, "Wrong alignment on FlowComponent_NotifyGraph");
static_assert(sizeof(FlowComponent_NotifyGraph) == 0x00000C, "Wrong size on FlowComponent_NotifyGraph");
static_assert(offsetof(FlowComponent_NotifyGraph, NotifyTag) == 0x000000, "Member 'FlowComponent_NotifyGraph::NotifyTag' has a wrong offset!");
static_assert(offsetof(FlowComponent_NotifyGraph, NetMode) == 0x000008, "Member 'FlowComponent_NotifyGraph::NetMode' has a wrong offset!");

// Function Flow.FlowComponent.RemoveIdentityTag
// 0x000C (0x000C - 0x0000)
struct FlowComponent_RemoveIdentityTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlowNetMode                                  NetMode;                                           // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowComponent_RemoveIdentityTag) == 0x000004, "Wrong alignment on FlowComponent_RemoveIdentityTag");
static_assert(sizeof(FlowComponent_RemoveIdentityTag) == 0x00000C, "Wrong size on FlowComponent_RemoveIdentityTag");
static_assert(offsetof(FlowComponent_RemoveIdentityTag, Tag) == 0x000000, "Member 'FlowComponent_RemoveIdentityTag::Tag' has a wrong offset!");
static_assert(offsetof(FlowComponent_RemoveIdentityTag, NetMode) == 0x000008, "Member 'FlowComponent_RemoveIdentityTag::NetMode' has a wrong offset!");

// Function Flow.FlowComponent.RemoveIdentityTags
// 0x0028 (0x0028 - 0x0000)
struct FlowComponent_RemoveIdentityTags final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(Parm, NativeAccessSpecifierPublic)
	EFlowNetMode                                  NetMode;                                           // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowComponent_RemoveIdentityTags) == 0x000008, "Wrong alignment on FlowComponent_RemoveIdentityTags");
static_assert(sizeof(FlowComponent_RemoveIdentityTags) == 0x000028, "Wrong size on FlowComponent_RemoveIdentityTags");
static_assert(offsetof(FlowComponent_RemoveIdentityTags, Tags) == 0x000000, "Member 'FlowComponent_RemoveIdentityTags::Tags' has a wrong offset!");
static_assert(offsetof(FlowComponent_RemoveIdentityTags, NetMode) == 0x000020, "Member 'FlowComponent_RemoveIdentityTags::NetMode' has a wrong offset!");

// Function Flow.FlowComponent.SaveInstance
// 0x0030 (0x0030 - 0x0000)
struct FlowComponent_SaveInstance final
{
public:
	struct FFlowComponentSaveData                 ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowComponent_SaveInstance) == 0x000008, "Wrong alignment on FlowComponent_SaveInstance");
static_assert(sizeof(FlowComponent_SaveInstance) == 0x000030, "Wrong size on FlowComponent_SaveInstance");
static_assert(offsetof(FlowComponent_SaveInstance, ReturnValue) == 0x000000, "Member 'FlowComponent_SaveInstance::ReturnValue' has a wrong offset!");

// Function Flow.FlowComponent.SaveRootFlow
// 0x0010 (0x0010 - 0x0000)
struct FlowComponent_SaveRootFlow final
{
public:
	TArray<struct FFlowAssetSaveData>             SavedFlowInstances;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowComponent_SaveRootFlow) == 0x000008, "Wrong alignment on FlowComponent_SaveRootFlow");
static_assert(sizeof(FlowComponent_SaveRootFlow) == 0x000010, "Wrong size on FlowComponent_SaveRootFlow");
static_assert(offsetof(FlowComponent_SaveRootFlow, SavedFlowInstances) == 0x000000, "Member 'FlowComponent_SaveRootFlow::SavedFlowInstances' has a wrong offset!");

// Function Flow.FlowNode_ForceTriggerBase.K2_ForceTrigger
// 0x0010 (0x0010 - 0x0000)
struct FlowNode_ForceTriggerBase_K2_ForceTrigger final
{
public:
	TArray<struct FFlowNodeSaveData>              InNodeRecords;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_ForceTriggerBase_K2_ForceTrigger) == 0x000008, "Wrong alignment on FlowNode_ForceTriggerBase_K2_ForceTrigger");
static_assert(sizeof(FlowNode_ForceTriggerBase_K2_ForceTrigger) == 0x000010, "Wrong size on FlowNode_ForceTriggerBase_K2_ForceTrigger");
static_assert(offsetof(FlowNode_ForceTriggerBase_K2_ForceTrigger, InNodeRecords) == 0x000000, "Member 'FlowNode_ForceTriggerBase_K2_ForceTrigger::InNodeRecords' has a wrong offset!");

// Function Flow.FlowNode_ForceTriggerBase.K2_ShouldForceTrigger
// 0x0018 (0x0018 - 0x0000)
struct FlowNode_ForceTriggerBase_K2_ShouldForceTrigger final
{
public:
	TArray<struct FFlowNodeSaveData>              InNodeRecords;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowNode_ForceTriggerBase_K2_ShouldForceTrigger) == 0x000008, "Wrong alignment on FlowNode_ForceTriggerBase_K2_ShouldForceTrigger");
static_assert(sizeof(FlowNode_ForceTriggerBase_K2_ShouldForceTrigger) == 0x000018, "Wrong size on FlowNode_ForceTriggerBase_K2_ShouldForceTrigger");
static_assert(offsetof(FlowNode_ForceTriggerBase_K2_ShouldForceTrigger, InNodeRecords) == 0x000000, "Member 'FlowNode_ForceTriggerBase_K2_ShouldForceTrigger::InNodeRecords' has a wrong offset!");
static_assert(offsetof(FlowNode_ForceTriggerBase_K2_ShouldForceTrigger, ReturnValue) == 0x000010, "Member 'FlowNode_ForceTriggerBase_K2_ShouldForceTrigger::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.FinishRootFlow
// 0x0010 (0x0010 - 0x0000)
struct FlowSubsystem_FinishRootFlow final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EFlowFinishPolicy                             FinishPolicy;                                      // 0x0008(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowSubsystem_FinishRootFlow) == 0x000008, "Wrong alignment on FlowSubsystem_FinishRootFlow");
static_assert(sizeof(FlowSubsystem_FinishRootFlow) == 0x000010, "Wrong size on FlowSubsystem_FinishRootFlow");
static_assert(offsetof(FlowSubsystem_FinishRootFlow, Owner) == 0x000000, "Member 'FlowSubsystem_FinishRootFlow::Owner' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_FinishRootFlow, FinishPolicy) == 0x000008, "Member 'FlowSubsystem_FinishRootFlow::FinishPolicy' has a wrong offset!");

// Function Flow.FlowSubsystem.OnGameLoaded
// 0x0008 (0x0008 - 0x0000)
struct FlowSubsystem_OnGameLoaded final
{
public:
	class UFlowSaveGame*                          SaveGame;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_OnGameLoaded) == 0x000008, "Wrong alignment on FlowSubsystem_OnGameLoaded");
static_assert(sizeof(FlowSubsystem_OnGameLoaded) == 0x000008, "Wrong size on FlowSubsystem_OnGameLoaded");
static_assert(offsetof(FlowSubsystem_OnGameLoaded, SaveGame) == 0x000000, "Member 'FlowSubsystem_OnGameLoaded::SaveGame' has a wrong offset!");

// Function Flow.FlowSubsystem.OnGameSaved
// 0x0008 (0x0008 - 0x0000)
struct FlowSubsystem_OnGameSaved final
{
public:
	class UFlowSaveGame*                          SaveGame;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_OnGameSaved) == 0x000008, "Wrong alignment on FlowSubsystem_OnGameSaved");
static_assert(sizeof(FlowSubsystem_OnGameSaved) == 0x000008, "Wrong size on FlowSubsystem_OnGameSaved");
static_assert(offsetof(FlowSubsystem_OnGameSaved, SaveGame) == 0x000000, "Member 'FlowSubsystem_OnGameSaved::SaveGame' has a wrong offset!");

// Function Flow.FlowSubsystem.StartRootFlow
// 0x0018 (0x0018 - 0x0000)
struct FlowSubsystem_StartRootFlow final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFlowAsset*                             FlowAsset;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAllowMultipleInstances;                           // 0x0010(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowSubsystem_StartRootFlow) == 0x000008, "Wrong alignment on FlowSubsystem_StartRootFlow");
static_assert(sizeof(FlowSubsystem_StartRootFlow) == 0x000018, "Wrong size on FlowSubsystem_StartRootFlow");
static_assert(offsetof(FlowSubsystem_StartRootFlow, Owner) == 0x000000, "Member 'FlowSubsystem_StartRootFlow::Owner' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_StartRootFlow, FlowAsset) == 0x000008, "Member 'FlowSubsystem_StartRootFlow::FlowAsset' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_StartRootFlow, bAllowMultipleInstances) == 0x000010, "Member 'FlowSubsystem_StartRootFlow::bAllowMultipleInstances' has a wrong offset!");

// Function Flow.FlowSubsystem.GetFlowActorsAndComponentsByTag
// 0x0060 (0x0060 - 0x0000)
struct FlowSubsystem_GetFlowActorsAndComponentsByTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class AActor*, class UFlowComponent*>    ReturnValue;                                       // 0x0010(0x0050)(ExportObject, Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetFlowActorsAndComponentsByTag) == 0x000008, "Wrong alignment on FlowSubsystem_GetFlowActorsAndComponentsByTag");
static_assert(sizeof(FlowSubsystem_GetFlowActorsAndComponentsByTag) == 0x000060, "Wrong size on FlowSubsystem_GetFlowActorsAndComponentsByTag");
static_assert(offsetof(FlowSubsystem_GetFlowActorsAndComponentsByTag, Tag) == 0x000000, "Member 'FlowSubsystem_GetFlowActorsAndComponentsByTag::Tag' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsAndComponentsByTag, ActorClass) == 0x000008, "Member 'FlowSubsystem_GetFlowActorsAndComponentsByTag::ActorClass' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsAndComponentsByTag, ReturnValue) == 0x000010, "Member 'FlowSubsystem_GetFlowActorsAndComponentsByTag::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetFlowActorsAndComponentsByTags
// 0x0080 (0x0080 - 0x0000)
struct FlowSubsystem_GetFlowActorsAndComponentsByTags final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	EGameplayContainerMatchType                   MatchType;                                         // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class AActor*, class UFlowComponent*>    ReturnValue;                                       // 0x0030(0x0050)(ExportObject, Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetFlowActorsAndComponentsByTags) == 0x000008, "Wrong alignment on FlowSubsystem_GetFlowActorsAndComponentsByTags");
static_assert(sizeof(FlowSubsystem_GetFlowActorsAndComponentsByTags) == 0x000080, "Wrong size on FlowSubsystem_GetFlowActorsAndComponentsByTags");
static_assert(offsetof(FlowSubsystem_GetFlowActorsAndComponentsByTags, Tags) == 0x000000, "Member 'FlowSubsystem_GetFlowActorsAndComponentsByTags::Tags' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsAndComponentsByTags, MatchType) == 0x000020, "Member 'FlowSubsystem_GetFlowActorsAndComponentsByTags::MatchType' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsAndComponentsByTags, ActorClass) == 0x000028, "Member 'FlowSubsystem_GetFlowActorsAndComponentsByTags::ActorClass' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsAndComponentsByTags, ReturnValue) == 0x000030, "Member 'FlowSubsystem_GetFlowActorsAndComponentsByTags::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetFlowActorsByTag
// 0x0060 (0x0060 - 0x0000)
struct FlowSubsystem_GetFlowActorsByTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class AActor*>                           ReturnValue;                                       // 0x0010(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetFlowActorsByTag) == 0x000008, "Wrong alignment on FlowSubsystem_GetFlowActorsByTag");
static_assert(sizeof(FlowSubsystem_GetFlowActorsByTag) == 0x000060, "Wrong size on FlowSubsystem_GetFlowActorsByTag");
static_assert(offsetof(FlowSubsystem_GetFlowActorsByTag, Tag) == 0x000000, "Member 'FlowSubsystem_GetFlowActorsByTag::Tag' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsByTag, ActorClass) == 0x000008, "Member 'FlowSubsystem_GetFlowActorsByTag::ActorClass' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsByTag, ReturnValue) == 0x000010, "Member 'FlowSubsystem_GetFlowActorsByTag::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetFlowActorsByTags
// 0x0080 (0x0080 - 0x0000)
struct FlowSubsystem_GetFlowActorsByTags final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	EGameplayContainerMatchType                   MatchType;                                         // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class AActor>                     ActorClass;                                        // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class AActor*>                           ReturnValue;                                       // 0x0030(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetFlowActorsByTags) == 0x000008, "Wrong alignment on FlowSubsystem_GetFlowActorsByTags");
static_assert(sizeof(FlowSubsystem_GetFlowActorsByTags) == 0x000080, "Wrong size on FlowSubsystem_GetFlowActorsByTags");
static_assert(offsetof(FlowSubsystem_GetFlowActorsByTags, Tags) == 0x000000, "Member 'FlowSubsystem_GetFlowActorsByTags::Tags' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsByTags, MatchType) == 0x000020, "Member 'FlowSubsystem_GetFlowActorsByTags::MatchType' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsByTags, ActorClass) == 0x000028, "Member 'FlowSubsystem_GetFlowActorsByTags::ActorClass' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowActorsByTags, ReturnValue) == 0x000030, "Member 'FlowSubsystem_GetFlowActorsByTags::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetFlowComponentsByTag
// 0x0060 (0x0060 - 0x0000)
struct FlowSubsystem_GetFlowComponentsByTag final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSubclassOf<class UFlowComponent>             ComponentClass;                                    // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class UFlowComponent*>                   ReturnValue;                                       // 0x0010(0x0050)(ExportObject, Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetFlowComponentsByTag) == 0x000008, "Wrong alignment on FlowSubsystem_GetFlowComponentsByTag");
static_assert(sizeof(FlowSubsystem_GetFlowComponentsByTag) == 0x000060, "Wrong size on FlowSubsystem_GetFlowComponentsByTag");
static_assert(offsetof(FlowSubsystem_GetFlowComponentsByTag, Tag) == 0x000000, "Member 'FlowSubsystem_GetFlowComponentsByTag::Tag' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowComponentsByTag, ComponentClass) == 0x000008, "Member 'FlowSubsystem_GetFlowComponentsByTag::ComponentClass' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowComponentsByTag, ReturnValue) == 0x000010, "Member 'FlowSubsystem_GetFlowComponentsByTag::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetFlowComponentsByTags
// 0x0080 (0x0080 - 0x0000)
struct FlowSubsystem_GetFlowComponentsByTags final
{
public:
	struct FGameplayTagContainer                  Tags;                                              // 0x0000(0x0020)(ConstParm, Parm, NativeAccessSpecifierPublic)
	EGameplayContainerMatchType                   MatchType;                                         // 0x0020(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UFlowComponent>             ComponentClass;                                    // 0x0028(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSet<class UFlowComponent*>                   ReturnValue;                                       // 0x0030(0x0050)(ExportObject, Parm, OutParm, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetFlowComponentsByTags) == 0x000008, "Wrong alignment on FlowSubsystem_GetFlowComponentsByTags");
static_assert(sizeof(FlowSubsystem_GetFlowComponentsByTags) == 0x000080, "Wrong size on FlowSubsystem_GetFlowComponentsByTags");
static_assert(offsetof(FlowSubsystem_GetFlowComponentsByTags, Tags) == 0x000000, "Member 'FlowSubsystem_GetFlowComponentsByTags::Tags' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowComponentsByTags, MatchType) == 0x000020, "Member 'FlowSubsystem_GetFlowComponentsByTags::MatchType' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowComponentsByTags, ComponentClass) == 0x000028, "Member 'FlowSubsystem_GetFlowComponentsByTags::ComponentClass' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetFlowComponentsByTags, ReturnValue) == 0x000030, "Member 'FlowSubsystem_GetFlowComponentsByTags::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetInstancedSubFlows
// 0x0050 (0x0050 - 0x0000)
struct FlowSubsystem_GetInstancedSubFlows final
{
public:
	TMap<class UFlowNode_SubGraph*, class UFlowAsset*> ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetInstancedSubFlows) == 0x000008, "Wrong alignment on FlowSubsystem_GetInstancedSubFlows");
static_assert(sizeof(FlowSubsystem_GetInstancedSubFlows) == 0x000050, "Wrong size on FlowSubsystem_GetInstancedSubFlows");
static_assert(offsetof(FlowSubsystem_GetInstancedSubFlows, ReturnValue) == 0x000000, "Member 'FlowSubsystem_GetInstancedSubFlows::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetLoadedSaveGame
// 0x0008 (0x0008 - 0x0000)
struct FlowSubsystem_GetLoadedSaveGame final
{
public:
	class UFlowSaveGame*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetLoadedSaveGame) == 0x000008, "Wrong alignment on FlowSubsystem_GetLoadedSaveGame");
static_assert(sizeof(FlowSubsystem_GetLoadedSaveGame) == 0x000008, "Wrong size on FlowSubsystem_GetLoadedSaveGame");
static_assert(offsetof(FlowSubsystem_GetLoadedSaveGame, ReturnValue) == 0x000000, "Member 'FlowSubsystem_GetLoadedSaveGame::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetRootFlow
// 0x0010 (0x0010 - 0x0000)
struct FlowSubsystem_GetRootFlow final
{
public:
	class UObject*                                Owner;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFlowAsset*                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetRootFlow) == 0x000008, "Wrong alignment on FlowSubsystem_GetRootFlow");
static_assert(sizeof(FlowSubsystem_GetRootFlow) == 0x000010, "Wrong size on FlowSubsystem_GetRootFlow");
static_assert(offsetof(FlowSubsystem_GetRootFlow, Owner) == 0x000000, "Member 'FlowSubsystem_GetRootFlow::Owner' has a wrong offset!");
static_assert(offsetof(FlowSubsystem_GetRootFlow, ReturnValue) == 0x000008, "Member 'FlowSubsystem_GetRootFlow::ReturnValue' has a wrong offset!");

// Function Flow.FlowSubsystem.GetRootInstances
// 0x0050 (0x0050 - 0x0000)
struct FlowSubsystem_GetRootInstances final
{
public:
	TMap<class UObject*, class UFlowAsset*>       ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowSubsystem_GetRootInstances) == 0x000008, "Wrong alignment on FlowSubsystem_GetRootInstances");
static_assert(sizeof(FlowSubsystem_GetRootInstances) == 0x000050, "Wrong size on FlowSubsystem_GetRootInstances");
static_assert(offsetof(FlowSubsystem_GetRootInstances, ReturnValue) == 0x000000, "Member 'FlowSubsystem_GetRootInstances::ReturnValue' has a wrong offset!");

}

