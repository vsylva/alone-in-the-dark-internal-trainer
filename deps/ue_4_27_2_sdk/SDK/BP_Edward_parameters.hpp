#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Edward

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Edward.BP_Edward_C.RotateCharacterLight_0
// 0x0148 (0x0148 - 0x0000)
struct BP_Edward_C_RotateCharacterLight_0 final
{
public:
	class UCameraComponent*                       CameraComponent;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        PointLightParentTarget;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x00C0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Edward_C_RotateCharacterLight_0) == 0x000008, "Wrong alignment on BP_Edward_C_RotateCharacterLight_0");
static_assert(sizeof(BP_Edward_C_RotateCharacterLight_0) == 0x000148, "Wrong size on BP_Edward_C_RotateCharacterLight_0");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CameraComponent) == 0x000000, "Member 'BP_Edward_C_RotateCharacterLight_0::CameraComponent' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, PointLightParentTarget) == 0x000008, "Member 'BP_Edward_C_RotateCharacterLight_0::PointLightParentTarget' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000010, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000028, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000BC, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_RotateCharacterLight_0, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0000C0, "Member 'BP_Edward_C_RotateCharacterLight_0::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

// Function BP_Edward.BP_Edward_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_Edward_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Edward_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Edward_C_UserConstructionScript");
static_assert(sizeof(BP_Edward_C_UserConstructionScript) == 0x000008, "Wrong size on BP_Edward_C_UserConstructionScript");
static_assert(offsetof(BP_Edward_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Edward_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Edward.BP_Edward_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Edward_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Edward_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Edward_C_ReceiveTick");
static_assert(sizeof(BP_Edward_C_ReceiveTick) == 0x000004, "Wrong size on BP_Edward_C_ReceiveTick");
static_assert(offsetof(BP_Edward_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Edward_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Edward.BP_Edward_C.ExecuteUbergraph_BP_Edward
// 0x0008 (0x0008 - 0x0000)
struct BP_Edward_C_ExecuteUbergraph_BP_Edward final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Edward_C_ExecuteUbergraph_BP_Edward) == 0x000004, "Wrong alignment on BP_Edward_C_ExecuteUbergraph_BP_Edward");
static_assert(sizeof(BP_Edward_C_ExecuteUbergraph_BP_Edward) == 0x000008, "Wrong size on BP_Edward_C_ExecuteUbergraph_BP_Edward");
static_assert(offsetof(BP_Edward_C_ExecuteUbergraph_BP_Edward, EntryPoint) == 0x000000, "Member 'BP_Edward_C_ExecuteUbergraph_BP_Edward::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Edward_C_ExecuteUbergraph_BP_Edward, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_Edward_C_ExecuteUbergraph_BP_Edward::K2Node_Event_DeltaSeconds' has a wrong offset!");

}

