#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Dodge

#include "Basic.hpp"

#include "GA_Dodge_classes.hpp"
#include "GA_Dodge_parameters.hpp"


namespace SDK
{

// Function GA_Dodge.GA_Dodge_C.ExecuteUbergraph_GA_Dodge
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Dodge_C::ExecuteUbergraph_GA_Dodge(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "ExecuteUbergraph_GA_Dodge");

	Params::GA_Dodge_C_ExecuteUbergraph_GA_Dodge Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.K2_ActivateAbility
// (Event, Protected, BlueprintEvent)

void UGA_Dodge_C::K2_ActivateAbility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "K2_ActivateAbility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Dodge.GA_Dodge_C.K2_OnEndAbility
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bWasCancelled                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Dodge_C::K2_OnEndAbility(bool bWasCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "K2_OnEndAbility");

	Params::GA_Dodge_C_K2_OnEndAbility Parms{};

	Parms.bWasCancelled = bWasCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.Completed_BF7D8CAD4AACA39997B433BF666F81A2
// (BlueprintCallable, BlueprintEvent)

void UGA_Dodge_C::Completed_BF7D8CAD4AACA39997B433BF666F81A2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "Completed_BF7D8CAD4AACA39997B433BF666F81A2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Dodge.GA_Dodge_C.OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Dodge_C::OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8");

	Params::GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Dodge_C::OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8");

	Params::GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Dodge_C::OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8");

	Params::GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Dodge_C::OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8");

	Params::GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     EventTag                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayEventData               EventData                                              (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Dodge_C::EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8");

	Params::GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8 Parms{};

	Parms.EventTag = std::move(EventTag);
	Parms.EventData = std::move(EventData);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.Added_D604FFF44F69E014AAEB70969737932D
// (BlueprintCallable, BlueprintEvent)

void UGA_Dodge_C::Added_D604FFF44F69E014AAEB70969737932D()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "Added_D604FFF44F69E014AAEB70969737932D");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Dodge.GA_Dodge_C.EventReceived_219563D34EF2AB413E0C88BAF6FE27DC
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayEventData               Payload                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UGA_Dodge_C::EventReceived_219563D34EF2AB413E0C88BAF6FE27DC(const struct FGameplayEventData& Payload)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "EventReceived_219563D34EF2AB413E0C88BAF6FE27DC");

	Params::GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC Parms{};

	Parms.Payload = std::move(Payload);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.GetDodgeLaunchVector
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharacter*                       DodgingCharacter                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchVector                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          LaunchDirection                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Dodge_C::GetDodgeLaunchVector(class ACharacter* DodgingCharacter, struct FVector* LaunchVector, struct FVector* LaunchDirection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "GetDodgeLaunchVector");

	Params::GA_Dodge_C_GetDodgeLaunchVector Parms{};

	Parms.DodgingCharacter = DodgingCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (LaunchVector != nullptr)
		*LaunchVector = std::move(Parms.LaunchVector);

	if (LaunchDirection != nullptr)
		*LaunchDirection = std::move(Parms.LaunchDirection);
}


// Function GA_Dodge.GA_Dodge_C.SelectStartingMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          DodgeDirection                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Character                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Section_Name                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Dodge_C::SelectStartingMontage(const struct FVector& DodgeDirection, class AActor* Character, class FName* Section_Name)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "SelectStartingMontage");

	Params::GA_Dodge_C_SelectStartingMontage Parms{};

	Parms.DodgeDirection = std::move(DodgeDirection);
	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);

	if (Section_Name != nullptr)
		*Section_Name = Parms.Section_Name;
}


// Function GA_Dodge.GA_Dodge_C.GetDirectionDegrees
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Degrees                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Dodge_C::GetDirectionDegrees(float* Degrees)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "GetDirectionDegrees");

	Params::GA_Dodge_C_GetDirectionDegrees Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Degrees != nullptr)
		*Degrees = Parms.Degrees;
}


// Function GA_Dodge.GA_Dodge_C.SnapAngle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SnappedAngle                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Dodge_C::SnapAngle(float Angle, float* SnappedAngle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "SnapAngle");

	Params::GA_Dodge_C_SnapAngle Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);

	if (SnappedAngle != nullptr)
		*SnappedAngle = Parms.SnappedAngle;
}


// Function GA_Dodge.GA_Dodge_C.Rotate Character
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Angle                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Dodge_C::Rotate_Character(float Angle)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "Rotate Character");

	Params::GA_Dodge_C_Rotate_Character Parms{};

	Parms.Angle = Angle;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GA_Dodge.GA_Dodge_C.IsAvatarSlow
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGA_Dodge_C::IsAvatarSlow()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "IsAvatarSlow");

	Params::GA_Dodge_C_IsAvatarSlow Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Dodge.GA_Dodge_C.RotateVelocity
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Dodge_C::RotateVelocity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "RotateVelocity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Dodge.GA_Dodge_C.GetMontageTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTag                     ReturnValue                                            (Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FGameplayTag UGA_Dodge_C::GetMontageTag()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "GetMontageTag");

	Params::GA_Dodge_C_GetMontageTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Dodge.GA_Dodge_C.Stop Dodge Prematurely
// (Public, BlueprintCallable, BlueprintEvent)

void UGA_Dodge_C::Stop_Dodge_Prematurely()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "Stop Dodge Prematurely");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GA_Dodge.GA_Dodge_C.K2_CanActivateAbility
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// struct FGameplayAbilityActorInfo        ActorInfo                                              (BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
// struct FGameplayAbilitySpecHandle       Handle                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            RelevantTags                                           (Parm, OutParm)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGA_Dodge_C::K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "K2_CanActivateAbility");

	Params::GA_Dodge_C_K2_CanActivateAbility Parms{};

	Parms.ActorInfo = std::move(ActorInfo);
	Parms.Handle = std::move(Handle);

	UObject::ProcessEvent(Func, &Parms);

	if (RelevantTags != nullptr)
		*RelevantTags = std::move(Parms.RelevantTags);

	return Parms.ReturnValue;
}


// Function GA_Dodge.GA_Dodge_C.GetHitscanWeaponType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    HasHitscanWeapon                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// EWeapons                                WeaponType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UGA_Dodge_C::GetHitscanWeaponType(bool* HasHitscanWeapon, EWeapons* WeaponType) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "GetHitscanWeaponType");

	Params::GA_Dodge_C_GetHitscanWeaponType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (HasHitscanWeapon != nullptr)
		*HasHitscanWeapon = Parms.HasHitscanWeapon;

	if (WeaponType != nullptr)
		*WeaponType = Parms.WeaponType;
}


// Function GA_Dodge.GA_Dodge_C.HasSlowedStatus
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGA_Dodge_C::HasSlowedStatus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "HasSlowedStatus");

	Params::GA_Dodge_C_HasSlowedStatus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Dodge.GA_Dodge_C.Is2HandedMelee
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGA_Dodge_C::Is2HandedMelee(bool* Value) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "Is2HandedMelee");

	Params::GA_Dodge_C_Is2HandedMelee Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function GA_Dodge.GA_Dodge_C.GetMontageTagsToLoad
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       OwnerCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGameplayTag>             ReturnValue                                            (Parm, OutParm, ReturnParm)

TArray<struct FGameplayTag> UGA_Dodge_C::GetMontageTagsToLoad(class ACharacter* OwnerCharacter) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "GetMontageTagsToLoad");

	Params::GA_Dodge_C_GetMontageTagsToLoad Parms{};

	Parms.OwnerCharacter = OwnerCharacter;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GA_Dodge.GA_Dodge_C.GetMontagesToLoad
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class ACharacter*                       OwnerCharacter                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSoftObjectPath>          ReturnArray                                            (Parm, OutParm)

void UGA_Dodge_C::GetMontagesToLoad(class ACharacter* OwnerCharacter, TArray<struct FSoftObjectPath>* ReturnArray) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "GetMontagesToLoad");

	Params::GA_Dodge_C_GetMontagesToLoad Parms{};

	Parms.OwnerCharacter = OwnerCharacter;

	UObject::ProcessEvent(Func, &Parms);

	if (ReturnArray != nullptr)
		*ReturnArray = std::move(Parms.ReturnArray);
}


// Function GA_Dodge.GA_Dodge_C.OnGiveAbility_GetAssetsToBeAsyncLoaded
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class AActor*                           OwnerActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSoftObjectPath>          AssetsToLoad                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UGA_Dodge_C::OnGiveAbility_GetAssetsToBeAsyncLoaded(class AActor* OwnerActor, TArray<struct FSoftObjectPath>& AssetsToLoad) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GA_Dodge_C", "OnGiveAbility_GetAssetsToBeAsyncLoaded");

	Params::GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded Parms{};

	Parms.OwnerActor = OwnerActor;
	Parms.AssetsToLoad = std::move(AssetsToLoad);

	UObject::ProcessEvent(Func, &Parms);

	AssetsToLoad = std::move(Parms.AssetsToLoad);
}

}

