#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ScatterCandles

#include "Basic.hpp"

#include "BP_ScatterCandles_classes.hpp"
#include "BP_ScatterCandles_parameters.hpp"


namespace SDK
{

// Function BP_ScatterCandles.BP_ScatterCandles_C.ExecuteUbergraph_BP_ScatterCandles
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ScatterCandles_C::ExecuteUbergraph_BP_ScatterCandles(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "ExecuteUbergraph_BP_ScatterCandles");

	Params::BP_ScatterCandles_C_ExecuteUbergraph_BP_ScatterCandles Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.DebugInstanceCounts
// (BlueprintCallable, BlueprintEvent)

void ABP_ScatterCandles_C::DebugInstanceCounts()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "DebugInstanceCounts");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.Unlock For Editing
// (BlueprintCallable, BlueprintEvent)

void ABP_ScatterCandles_C::Unlock_For_Editing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "Unlock For Editing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.Lock Editing and Make Persistent
// (BlueprintCallable, BlueprintEvent)

void ABP_ScatterCandles_C::Lock_Editing_and_Make_Persistent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "Lock Editing and Make Persistent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_ScatterCandles_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "ReceiveTick");

	Params::BP_ScatterCandles_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_ScatterCandles_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ScatterCandles_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.CreateCandlePreviewInstanceComponents
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_ScatterCandles_C::CreateCandlePreviewInstanceComponents()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "CreateCandlePreviewInstanceComponents");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.SetRandomTransformInArea
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Area                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FTransform                       TransformOut                                           (Parm, OutParm, IsPlainOldData, NoDestructor)

void ABP_ScatterCandles_C::SetRandomTransformInArea(const struct FVector& Area, struct FTransform* TransformOut)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "SetRandomTransformInArea");

	Params::BP_ScatterCandles_C_SetRandomTransformInArea Parms{};

	Parms.Area = std::move(Area);

	UObject::ProcessEvent(Func, &Parms);

	if (TransformOut != nullptr)
		*TransformOut = std::move(Parms.TransformOut);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.SetRandomInstance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LitInstance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InstanceIsLit                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ScatterCandles_C::SetRandomInstance(bool LitInstance, bool* InstanceIsLit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "SetRandomInstance");

	Params::BP_ScatterCandles_C_SetRandomInstance Parms{};

	Parms.LitInstance = LitInstance;

	UObject::ProcessEvent(Func, &Parms);

	if (InstanceIsLit != nullptr)
		*InstanceIsLit = Parms.InstanceIsLit;
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.AddPointLightAtPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       RelativeTransform                                      (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)

void ABP_ScatterCandles_C::AddPointLightAtPosition(const struct FTransform& RelativeTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "AddPointLightAtPosition");

	Params::BP_ScatterCandles_C_AddPointLightAtPosition Parms{};

	Parms.RelativeTransform = std::move(RelativeTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.PreventOverlap
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       InTransform                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)

void ABP_ScatterCandles_C::PreventOverlap(const struct FTransform& InTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "PreventOverlap");

	Params::BP_ScatterCandles_C_PreventOverlap Parms{};

	Parms.InTransform = std::move(InTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.SetSpecificLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ScatterCandles_C::SetSpecificLocation(const struct FVector& Location, const struct FRotator& Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "SetSpecificLocation");

	Params::BP_ScatterCandles_C_SetSpecificLocation Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_ScatterCandles.BP_ScatterCandles_C.SetRandomPreviewInstance
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    LitInstance                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    InstanceIsLit                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_ScatterCandles_C::SetRandomPreviewInstance(bool LitInstance, bool* InstanceIsLit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ScatterCandles_C", "SetRandomPreviewInstance");

	Params::BP_ScatterCandles_C_SetRandomPreviewInstance Parms{};

	Parms.LitInstance = LitInstance;

	UObject::ProcessEvent(Func, &Parms);

	if (InstanceIsLit != nullptr)
		*InstanceIsLit = Parms.InstanceIsLit;
}

}

