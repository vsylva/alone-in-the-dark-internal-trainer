#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesObjectPool

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct PiecesObjectPool.ActorPoolData
// 0x0030 (0x0030 - 0x0000)
struct FActorPoolData final
{
public:
	int32                                         NumberToAllocate;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Class;                                             // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FActorPoolData) == 0x000008, "Wrong alignment on FActorPoolData");
static_assert(sizeof(FActorPoolData) == 0x000030, "Wrong size on FActorPoolData");
static_assert(offsetof(FActorPoolData, NumberToAllocate) == 0x000000, "Member 'FActorPoolData::NumberToAllocate' has a wrong offset!");
static_assert(offsetof(FActorPoolData, Class) == 0x000008, "Member 'FActorPoolData::Class' has a wrong offset!");

// ScriptStruct PiecesObjectPool.PawnPoolData
// 0x0030 (0x0030 - 0x0000)
struct FPawnPoolData final
{
public:
	int32                                         NumberToAllocate;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Class;                                             // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FPawnPoolData) == 0x000008, "Wrong alignment on FPawnPoolData");
static_assert(sizeof(FPawnPoolData) == 0x000030, "Wrong size on FPawnPoolData");
static_assert(offsetof(FPawnPoolData, NumberToAllocate) == 0x000000, "Member 'FPawnPoolData::NumberToAllocate' has a wrong offset!");
static_assert(offsetof(FPawnPoolData, Class) == 0x000008, "Member 'FPawnPoolData::Class' has a wrong offset!");

// ScriptStruct PiecesObjectPool.CharacterPoolData
// 0x0030 (0x0030 - 0x0000)
struct FCharacterPoolData final
{
public:
	int32                                         NumberToAllocate;                                  // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   Class;                                             // 0x0008(0x0028)(Edit, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCharacterPoolData) == 0x000008, "Wrong alignment on FCharacterPoolData");
static_assert(sizeof(FCharacterPoolData) == 0x000030, "Wrong size on FCharacterPoolData");
static_assert(offsetof(FCharacterPoolData, NumberToAllocate) == 0x000000, "Member 'FCharacterPoolData::NumberToAllocate' has a wrong offset!");
static_assert(offsetof(FCharacterPoolData, Class) == 0x000008, "Member 'FCharacterPoolData::Class' has a wrong offset!");

}

