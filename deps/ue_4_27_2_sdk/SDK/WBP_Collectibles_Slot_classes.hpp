#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Collectibles_Slot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Collectibles_Slot.WBP_Collectibles_Slot_C
// 0x01C8 (0x0438 - 0x0270)
class UWBP_Collectibles_Slot_C final : public UCollectiblesSlotButtonWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 HighlightItemIcon;                                 // 0x0278(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           ItemIconRetainer;                                  // 0x0280(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Label_Overlay;                                     // 0x0288(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 LabelImage;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBoxIcon;                                       // 0x0298(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnIconClicked;                                     // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   TextLabel;                                         // 0x02B0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UTexture2D*                             SlotTexture;                                       // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMaterialInstance*                      SlotMaterial;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SlotMaterialTextureParameterName;                  // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          New;                                               // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_Investigation_C*                   InvestigationWIndow;                               // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UInvestigationSelectionWidget*          InvestigationParent;                               // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	TSoftObjectPtr<class UFMODEvent>              In_Fmod_Sound;                                     // 0x02F8(0x0028)(Edit, BlueprintVisible, UObjectWrapper, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSlotHovered;                                     // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   TextDescription_0;                                 // 0x0330(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class UItemData*                              ItemData;                                          // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     OnHighlighSequence;                                // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SlotSizeX;                                         // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         SlotSizeY;                                         // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector2D                              LabelPosition;                                     // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           In_Color_and_Opacity;                              // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowNewItemNotification;                           // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnSlotUnhovered;                                   // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UTexture2D*                             IconTexture;                                       // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      ItemIconRetainerEffectMaterial;                    // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ItemIconRetainerEffectMDI;                         // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableItemSlotAnimation;                           // 0x03A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveLinearColor*                      AnimCurveActiveItemStyle;                          // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ElapsedTimer;                                      // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LengthOfCurve;                                     // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionLength;                                  // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          ActiveItemPlaybackOptions;                         // 0x03C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         OnHoveredMaterialBlend;                            // 0x03C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	float                                         OnUnhoveredMaterialBlend;                          // 0x03CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             NewEventDispatcher_0;                              // 0x03D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HaveItem;                                          // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UCollectiblesDataAsset>  Collectible_Data_Asset;                            // 0x03E8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemData>               Item_Data;                                         // 0x0410(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void HideItem();
	void Update_Slot(TSoftObjectPtr<class UItemData> ItemData_0, TSoftObjectPtr<class UCollectiblesDataAsset> CollectibleDataAsset);
	void UpdateCollectibleItemImageMaterial();
	void ExecuteUbergraph_WBP_Collectibles_Slot(int32 EntryPoint);
	void NewEventDispatcher_0__DelegateSignature();
	void OnSlotUnhovered__DelegateSignature(class UWBP_Investigation_Selection_Slot_C* NewParam);
	void OnSlotHovered__DelegateSignature(class UWBP_Investigation_Selection_Slot_C* InvestigationSlot);
	void OnIconClicked__DelegateSignature(class UItemData* ItemData_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Collectibles_Slot_C">();
	}
	static class UWBP_Collectibles_Slot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Collectibles_Slot_C>();
	}
};
static_assert(alignof(UWBP_Collectibles_Slot_C) == 0x000008, "Wrong alignment on UWBP_Collectibles_Slot_C");
static_assert(sizeof(UWBP_Collectibles_Slot_C) == 0x000438, "Wrong size on UWBP_Collectibles_Slot_C");
static_assert(offsetof(UWBP_Collectibles_Slot_C, UberGraphFrame) == 0x000270, "Member 'UWBP_Collectibles_Slot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, HighlightItemIcon) == 0x000278, "Member 'UWBP_Collectibles_Slot_C::HighlightItemIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, ItemIconRetainer) == 0x000280, "Member 'UWBP_Collectibles_Slot_C::ItemIconRetainer' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, Label_Overlay) == 0x000288, "Member 'UWBP_Collectibles_Slot_C::Label_Overlay' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, LabelImage) == 0x000290, "Member 'UWBP_Collectibles_Slot_C::LabelImage' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, SizeBoxIcon) == 0x000298, "Member 'UWBP_Collectibles_Slot_C::SizeBoxIcon' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, OnIconClicked) == 0x0002A0, "Member 'UWBP_Collectibles_Slot_C::OnIconClicked' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, TextLabel) == 0x0002B0, "Member 'UWBP_Collectibles_Slot_C::TextLabel' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, SlotTexture) == 0x0002C8, "Member 'UWBP_Collectibles_Slot_C::SlotTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, SlotMaterial) == 0x0002D0, "Member 'UWBP_Collectibles_Slot_C::SlotMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, SlotMaterialTextureParameterName) == 0x0002D8, "Member 'UWBP_Collectibles_Slot_C::SlotMaterialTextureParameterName' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, New) == 0x0002E0, "Member 'UWBP_Collectibles_Slot_C::New' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, InvestigationWIndow) == 0x0002E8, "Member 'UWBP_Collectibles_Slot_C::InvestigationWIndow' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, InvestigationParent) == 0x0002F0, "Member 'UWBP_Collectibles_Slot_C::InvestigationParent' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, In_Fmod_Sound) == 0x0002F8, "Member 'UWBP_Collectibles_Slot_C::In_Fmod_Sound' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, OnSlotHovered) == 0x000320, "Member 'UWBP_Collectibles_Slot_C::OnSlotHovered' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, TextDescription_0) == 0x000330, "Member 'UWBP_Collectibles_Slot_C::TextDescription_0' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, ItemData) == 0x000348, "Member 'UWBP_Collectibles_Slot_C::ItemData' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, OnHighlighSequence) == 0x000350, "Member 'UWBP_Collectibles_Slot_C::OnHighlighSequence' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, SlotSizeX) == 0x000358, "Member 'UWBP_Collectibles_Slot_C::SlotSizeX' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, SlotSizeY) == 0x00035C, "Member 'UWBP_Collectibles_Slot_C::SlotSizeY' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, LabelPosition) == 0x000360, "Member 'UWBP_Collectibles_Slot_C::LabelPosition' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, In_Color_and_Opacity) == 0x000368, "Member 'UWBP_Collectibles_Slot_C::In_Color_and_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, ShowNewItemNotification) == 0x000378, "Member 'UWBP_Collectibles_Slot_C::ShowNewItemNotification' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, OnSlotUnhovered) == 0x000380, "Member 'UWBP_Collectibles_Slot_C::OnSlotUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, IconTexture) == 0x000390, "Member 'UWBP_Collectibles_Slot_C::IconTexture' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, ItemIconRetainerEffectMaterial) == 0x000398, "Member 'UWBP_Collectibles_Slot_C::ItemIconRetainerEffectMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, ItemIconRetainerEffectMDI) == 0x0003A0, "Member 'UWBP_Collectibles_Slot_C::ItemIconRetainerEffectMDI' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, EnableItemSlotAnimation) == 0x0003A8, "Member 'UWBP_Collectibles_Slot_C::EnableItemSlotAnimation' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, AnimCurveActiveItemStyle) == 0x0003B0, "Member 'UWBP_Collectibles_Slot_C::AnimCurveActiveItemStyle' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, ElapsedTimer) == 0x0003B8, "Member 'UWBP_Collectibles_Slot_C::ElapsedTimer' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, LengthOfCurve) == 0x0003BC, "Member 'UWBP_Collectibles_Slot_C::LengthOfCurve' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, TransitionLength) == 0x0003C0, "Member 'UWBP_Collectibles_Slot_C::TransitionLength' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, ActiveItemPlaybackOptions) == 0x0003C4, "Member 'UWBP_Collectibles_Slot_C::ActiveItemPlaybackOptions' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, OnHoveredMaterialBlend) == 0x0003C8, "Member 'UWBP_Collectibles_Slot_C::OnHoveredMaterialBlend' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, OnUnhoveredMaterialBlend) == 0x0003CC, "Member 'UWBP_Collectibles_Slot_C::OnUnhoveredMaterialBlend' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, NewEventDispatcher_0) == 0x0003D0, "Member 'UWBP_Collectibles_Slot_C::NewEventDispatcher_0' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, HaveItem) == 0x0003E0, "Member 'UWBP_Collectibles_Slot_C::HaveItem' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, Collectible_Data_Asset) == 0x0003E8, "Member 'UWBP_Collectibles_Slot_C::Collectible_Data_Asset' has a wrong offset!");
static_assert(offsetof(UWBP_Collectibles_Slot_C, Item_Data) == 0x000410, "Member 'UWBP_Collectibles_Slot_C::Item_Data' has a wrong offset!");

}

