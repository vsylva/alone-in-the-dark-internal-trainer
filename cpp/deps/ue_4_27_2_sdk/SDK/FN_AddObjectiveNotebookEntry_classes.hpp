#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_AddObjectiveNotebookEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "Flow_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FN_AddObjectiveNotebookEntry.FN_AddObjectiveNotebookEntry_C
// 0x0048 (0x0218 - 0x01D0)
class UFN_AddObjectiveNotebookEntry_C final : public UFlowNode
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class FText                                   EdwardObjectiveNote;                               // 0x01D8(0x0018)(Edit, BlueprintVisible)
	class FText                                   EmilyObjectiveNote;                                // 0x01F0(0x0018)(Edit, BlueprintVisible)
	class UObjectivesData*                        EdwardObjectivesData;                              // 0x0208(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObjectivesData*                        EmilyObjectivesData;                               // 0x0210(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void K2_ExecuteInput(const class FName& PinName);
	void ExecuteUbergraph_FN_AddObjectiveNotebookEntry(int32 EntryPoint);

	class FString K2_GetNodeDescription() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FN_AddObjectiveNotebookEntry_C">();
	}
	static class UFN_AddObjectiveNotebookEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFN_AddObjectiveNotebookEntry_C>();
	}
};
static_assert(alignof(UFN_AddObjectiveNotebookEntry_C) == 0x000008, "Wrong alignment on UFN_AddObjectiveNotebookEntry_C");
static_assert(sizeof(UFN_AddObjectiveNotebookEntry_C) == 0x000218, "Wrong size on UFN_AddObjectiveNotebookEntry_C");
static_assert(offsetof(UFN_AddObjectiveNotebookEntry_C, UberGraphFrame) == 0x0001D0, "Member 'UFN_AddObjectiveNotebookEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFN_AddObjectiveNotebookEntry_C, EdwardObjectiveNote) == 0x0001D8, "Member 'UFN_AddObjectiveNotebookEntry_C::EdwardObjectiveNote' has a wrong offset!");
static_assert(offsetof(UFN_AddObjectiveNotebookEntry_C, EmilyObjectiveNote) == 0x0001F0, "Member 'UFN_AddObjectiveNotebookEntry_C::EmilyObjectiveNote' has a wrong offset!");
static_assert(offsetof(UFN_AddObjectiveNotebookEntry_C, EdwardObjectivesData) == 0x000208, "Member 'UFN_AddObjectiveNotebookEntry_C::EdwardObjectivesData' has a wrong offset!");
static_assert(offsetof(UFN_AddObjectiveNotebookEntry_C, EmilyObjectivesData) == 0x000210, "Member 'UFN_AddObjectiveNotebookEntry_C::EmilyObjectivesData' has a wrong offset!");

}

