#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BarkEventTrigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "PiecesAnimNodes_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BarkEventTrigger.BP_BarkEventTrigger_C
// 0x0080 (0x0398 - 0x0318)
class ABP_BarkEventTrigger_C final : public AEventTrigger
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UDebugTextRenderComponent*              DebugTextRender;                                   // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    Billboard;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFocusPointComponent*                   FocusPoint;                                        // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FBarkCollection                        Barks;                                             // 0x0338(0x0050)(Edit, BlueprintVisible)
	EBarkPriority                                 Bark_Priority;                                     // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x3];                                      // 0x0389(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FocusPointTime;                                    // 0x038C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugVis;                                         // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void OnBlendOutAllowedEnd_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void OnBlendOutAllowedBegin_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void OnNotifyEnd_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void OnNotifyBegin_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void OnInterrupted_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void OnBlendOut_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void OnFullyBlendedOut_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void OnCompleted_7A855893448953CBB746DC8D9D20BB10(class FName NotifyName);
	void K2_StartEvent();
	void ExecuteUbergraph_BP_BarkEventTrigger(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BarkEventTrigger_C">();
	}
	static class ABP_BarkEventTrigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BarkEventTrigger_C>();
	}
};
static_assert(alignof(ABP_BarkEventTrigger_C) == 0x000008, "Wrong alignment on ABP_BarkEventTrigger_C");
static_assert(sizeof(ABP_BarkEventTrigger_C) == 0x000398, "Wrong size on ABP_BarkEventTrigger_C");
static_assert(offsetof(ABP_BarkEventTrigger_C, UberGraphFrame) == 0x000318, "Member 'ABP_BarkEventTrigger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BarkEventTrigger_C, DebugTextRender) == 0x000320, "Member 'ABP_BarkEventTrigger_C::DebugTextRender' has a wrong offset!");
static_assert(offsetof(ABP_BarkEventTrigger_C, Billboard) == 0x000328, "Member 'ABP_BarkEventTrigger_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_BarkEventTrigger_C, FocusPoint) == 0x000330, "Member 'ABP_BarkEventTrigger_C::FocusPoint' has a wrong offset!");
static_assert(offsetof(ABP_BarkEventTrigger_C, Barks) == 0x000338, "Member 'ABP_BarkEventTrigger_C::Barks' has a wrong offset!");
static_assert(offsetof(ABP_BarkEventTrigger_C, Bark_Priority) == 0x000388, "Member 'ABP_BarkEventTrigger_C::Bark_Priority' has a wrong offset!");
static_assert(offsetof(ABP_BarkEventTrigger_C, FocusPointTime) == 0x00038C, "Member 'ABP_BarkEventTrigger_C::FocusPointTime' has a wrong offset!");
static_assert(offsetof(ABP_BarkEventTrigger_C, bDebugVis) == 0x000390, "Member 'ABP_BarkEventTrigger_C::bDebugVis' has a wrong offset!");

}

