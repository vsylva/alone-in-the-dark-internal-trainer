#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Emily

#include "Basic.hpp"

#include "BP_PlayerCharacter_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Emily.BP_Emily_C
// 0x0050 (0x0D20 - 0x0CD0)
class ABP_Emily_C final : public ABP_PlayerCharacter_C
{
public:
	class UHitReactionHitboxComponent*            HitReactionChestR;                                 // 0x0CD0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UHitReactionHitboxComponent*            HitReactionChestL;                                 // 0x0CD8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_EmilyPaintingTubeScaler_C*          BP_EmilyPaintingTubeScaler;                        // 0x0CE0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PlayerCharacter_EmoteComponent_C*   EmoteComponent;                                    // 0x0CE8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         MoveSpeed;                                         // 0x0CF0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentMoveSpeed;                                  // 0x0CF4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Shirt_Wrinkles;                                    // 0x0CF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PantsWrinkles;                                     // 0x0D00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NewVar_0_0;                                        // 0x0D08(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FlashLightActive;                                  // 0x0D0C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          BaseLightOn;                                       // 0x0D0D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          TorchFireActive;                                   // 0x0D0E(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D0F[0x1];                                      // 0x0D0F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    TorchBurningSound;                                 // 0x0D10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Emily_C">();
	}
	static class ABP_Emily_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Emily_C>();
	}
};
static_assert(alignof(ABP_Emily_C) == 0x000010, "Wrong alignment on ABP_Emily_C");
static_assert(sizeof(ABP_Emily_C) == 0x000D20, "Wrong size on ABP_Emily_C");
static_assert(offsetof(ABP_Emily_C, HitReactionChestR) == 0x000CD0, "Member 'ABP_Emily_C::HitReactionChestR' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, HitReactionChestL) == 0x000CD8, "Member 'ABP_Emily_C::HitReactionChestL' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, BP_EmilyPaintingTubeScaler) == 0x000CE0, "Member 'ABP_Emily_C::BP_EmilyPaintingTubeScaler' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, EmoteComponent) == 0x000CE8, "Member 'ABP_Emily_C::EmoteComponent' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, MoveSpeed) == 0x000CF0, "Member 'ABP_Emily_C::MoveSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, CurrentMoveSpeed) == 0x000CF4, "Member 'ABP_Emily_C::CurrentMoveSpeed' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, Shirt_Wrinkles) == 0x000CF8, "Member 'ABP_Emily_C::Shirt_Wrinkles' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, PantsWrinkles) == 0x000D00, "Member 'ABP_Emily_C::PantsWrinkles' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, NewVar_0_0) == 0x000D08, "Member 'ABP_Emily_C::NewVar_0_0' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, FlashLightActive) == 0x000D0C, "Member 'ABP_Emily_C::FlashLightActive' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, BaseLightOn) == 0x000D0D, "Member 'ABP_Emily_C::BaseLightOn' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, TorchFireActive) == 0x000D0E, "Member 'ABP_Emily_C::TorchFireActive' has a wrong offset!");
static_assert(offsetof(ABP_Emily_C, TorchBurningSound) == 0x000D10, "Member 'ABP_Emily_C::TorchBurningSound' has a wrong offset!");

}

