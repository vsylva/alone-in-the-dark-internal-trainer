#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC

#include "Basic.hpp"

#include "ObsidianFox_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "BanterInteractionSequence_structs.hpp"
#include "CharacterSize_structs.hpp"
#include "AnimationMontageIdentifier_structs.hpp"
#include "CemeteryCreatureType_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ENPCGrayAptLocation_structs.hpp"


namespace SDK::Params
{

// Function BP_NPC.BP_NPC_C.setStartBurrowed
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_SetStartBurrowed final
{
public:
	bool                                          beginBurrowed;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetStartBurrowed) == 0x000001, "Wrong alignment on BP_NPC_C_SetStartBurrowed");
static_assert(sizeof(BP_NPC_C_SetStartBurrowed) == 0x000002, "Wrong size on BP_NPC_C_SetStartBurrowed");
static_assert(offsetof(BP_NPC_C_SetStartBurrowed, beginBurrowed) == 0x000000, "Member 'BP_NPC_C_SetStartBurrowed::beginBurrowed' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetStartBurrowed, Success) == 0x000001, "Member 'BP_NPC_C_SetStartBurrowed::Success' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.setOrderTarget
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_SetOrderTarget final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetOrderTarget) == 0x000004, "Wrong alignment on BP_NPC_C_SetOrderTarget");
static_assert(sizeof(BP_NPC_C_SetOrderTarget) == 0x000010, "Wrong size on BP_NPC_C_SetOrderTarget");
static_assert(offsetof(BP_NPC_C_SetOrderTarget, Location) == 0x000000, "Member 'BP_NPC_C_SetOrderTarget::Location' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetOrderTarget, Success) == 0x00000C, "Member 'BP_NPC_C_SetOrderTarget::Success' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.hitscanWeaponFired
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_HitscanWeaponFired final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_HitscanWeaponFired) == 0x000001, "Wrong alignment on BP_NPC_C_HitscanWeaponFired");
static_assert(sizeof(BP_NPC_C_HitscanWeaponFired) == 0x000001, "Wrong size on BP_NPC_C_HitscanWeaponFired");
static_assert(offsetof(BP_NPC_C_HitscanWeaponFired, Success) == 0x000000, "Member 'BP_NPC_C_HitscanWeaponFired::Success' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_GetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on BP_NPC_C_GetMostSuitableMeleeSection");
static_assert(sizeof(BP_NPC_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong size on BP_NPC_C_GetMostSuitableMeleeSection");
static_assert(offsetof(BP_NPC_C_GetMostSuitableMeleeSection, Value) == 0x000000, "Member 'BP_NPC_C_GetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.getAggroState
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_GetAggroState final
{
public:
	bool                                          Aggro;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_GetAggroState) == 0x000001, "Wrong alignment on BP_NPC_C_GetAggroState");
static_assert(sizeof(BP_NPC_C_GetAggroState) == 0x000001, "Wrong size on BP_NPC_C_GetAggroState");
static_assert(offsetof(BP_NPC_C_GetAggroState, Aggro) == 0x000000, "Member 'BP_NPC_C_GetAggroState::Aggro' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.setNewAggro
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_SetNewAggro final
{
public:
	bool                                          NewAggro;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetNewAggro) == 0x000001, "Wrong alignment on BP_NPC_C_SetNewAggro");
static_assert(sizeof(BP_NPC_C_SetNewAggro) == 0x000002, "Wrong size on BP_NPC_C_SetNewAggro");
static_assert(offsetof(BP_NPC_C_SetNewAggro, NewAggro) == 0x000000, "Member 'BP_NPC_C_SetNewAggro::NewAggro' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetNewAggro, Success) == 0x000001, "Member 'BP_NPC_C_SetNewAggro::Success' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.IncrementJac3ProneCounter
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_C_IncrementJac3ProneCounter final
{
public:
	int32                                         ProneCounter;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_IncrementJac3ProneCounter) == 0x000004, "Wrong alignment on BP_NPC_C_IncrementJac3ProneCounter");
static_assert(sizeof(BP_NPC_C_IncrementJac3ProneCounter) == 0x000004, "Wrong size on BP_NPC_C_IncrementJac3ProneCounter");
static_assert(offsetof(BP_NPC_C_IncrementJac3ProneCounter, ProneCounter) == 0x000000, "Member 'BP_NPC_C_IncrementJac3ProneCounter::ProneCounter' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetCharacterSize
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_GetCharacterSize final
{
public:
	ECharacterSize                                Size;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetCharacterSize) == 0x000001, "Wrong alignment on BP_NPC_C_GetCharacterSize");
static_assert(sizeof(BP_NPC_C_GetCharacterSize) == 0x000001, "Wrong size on BP_NPC_C_GetCharacterSize");
static_assert(offsetof(BP_NPC_C_GetCharacterSize, Size) == 0x000000, "Member 'BP_NPC_C_GetCharacterSize::Size' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.getCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_GetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CemeteryCreatureType;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_NPC_C_GetCemeteryCreatureType");
static_assert(sizeof(BP_NPC_C_GetCemeteryCreatureType) == 0x000001, "Wrong size on BP_NPC_C_GetCemeteryCreatureType");
static_assert(offsetof(BP_NPC_C_GetCemeteryCreatureType, CemeteryCreatureType) == 0x000000, "Member 'BP_NPC_C_GetCemeteryCreatureType::CemeteryCreatureType' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.setCanCirculate
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_SetCanCirculate final
{
public:
	bool                                          CanCirculate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetCanCirculate) == 0x000001, "Wrong alignment on BP_NPC_C_SetCanCirculate");
static_assert(sizeof(BP_NPC_C_SetCanCirculate) == 0x000002, "Wrong size on BP_NPC_C_SetCanCirculate");
static_assert(offsetof(BP_NPC_C_SetCanCirculate, CanCirculate) == 0x000000, "Member 'BP_NPC_C_SetCanCirculate::CanCirculate' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetCanCirculate, Success) == 0x000001, "Member 'BP_NPC_C_SetCanCirculate::Success' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.setStartOnWall
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_SetStartOnWall final
{
public:
	bool                                          StartOnWall;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetStartOnWall) == 0x000001, "Wrong alignment on BP_NPC_C_SetStartOnWall");
static_assert(sizeof(BP_NPC_C_SetStartOnWall) == 0x000002, "Wrong size on BP_NPC_C_SetStartOnWall");
static_assert(offsetof(BP_NPC_C_SetStartOnWall, StartOnWall) == 0x000000, "Member 'BP_NPC_C_SetStartOnWall::StartOnWall' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetStartOnWall, Success) == 0x000001, "Member 'BP_NPC_C_SetStartOnWall::Success' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.FlashlightHit
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_FlashlightHit final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_FlashlightHit) == 0x000004, "Wrong alignment on BP_NPC_C_FlashlightHit");
static_assert(sizeof(BP_NPC_C_FlashlightHit) == 0x000008, "Wrong size on BP_NPC_C_FlashlightHit");
static_assert(offsetof(BP_NPC_C_FlashlightHit, Distance) == 0x000000, "Member 'BP_NPC_C_FlashlightHit::Distance' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_FlashlightHit, Success) == 0x000004, "Member 'BP_NPC_C_FlashlightHit::Success' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetUpgradeComponent
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_GetUpgradeComponent final
{
public:
	class UWeaponUpgradeComponent_C*              UpgradeComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetUpgradeComponent) == 0x000008, "Wrong alignment on BP_NPC_C_GetUpgradeComponent");
static_assert(sizeof(BP_NPC_C_GetUpgradeComponent) == 0x000008, "Wrong size on BP_NPC_C_GetUpgradeComponent");
static_assert(offsetof(BP_NPC_C_GetUpgradeComponent, UpgradeComponent) == 0x000000, "Member 'BP_NPC_C_GetUpgradeComponent::UpgradeComponent' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.AimedAt
// 0x0030 (0x0030 - 0x0000)
struct BP_NPC_C_AimedAt final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAchievementSubSystem*                  CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_AimedAt) == 0x000008, "Wrong alignment on BP_NPC_C_AimedAt");
static_assert(sizeof(BP_NPC_C_AimedAt) == 0x000030, "Wrong size on BP_NPC_C_AimedAt");
static_assert(offsetof(BP_NPC_C_AimedAt, Return) == 0x000000, "Member 'BP_NPC_C_AimedAt::Return' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AimedAt, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_NPC_C_AimedAt::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AimedAt, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000010, "Member 'BP_NPC_C_AimedAt::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AimedAt, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000018, "Member 'BP_NPC_C_AimedAt::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AimedAt, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000020, "Member 'BP_NPC_C_AimedAt::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AimedAt, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x000028, "Member 'BP_NPC_C_AimedAt::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.AllBantersCompleted
// 0x0070 (0x0070 - 0x0000)
struct BP_NPC_C_AllBantersCompleted final
{
public:
	class UOFAchievementTrackingSubsystem*        CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLocation_Location;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0018(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FCompletedBanter                       K2Node_MakeStruct_CompletedBanter;                 // 0x0040(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_AllBantersCompleted) == 0x000008, "Wrong alignment on BP_NPC_C_AllBantersCompleted");
static_assert(sizeof(BP_NPC_C_AllBantersCompleted) == 0x000070, "Wrong size on BP_NPC_C_AllBantersCompleted");
static_assert(offsetof(BP_NPC_C_AllBantersCompleted, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000000, "Member 'BP_NPC_C_AllBantersCompleted::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AllBantersCompleted, CallFunc_GetLocation_Location) == 0x000008, "Member 'BP_NPC_C_AllBantersCompleted::CallFunc_GetLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AllBantersCompleted, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x00000C, "Member 'BP_NPC_C_AllBantersCompleted::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AllBantersCompleted, CallFunc_GetObjectClass_ReturnValue) == 0x000010, "Member 'BP_NPC_C_AllBantersCompleted::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AllBantersCompleted, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000018, "Member 'BP_NPC_C_AllBantersCompleted::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AllBantersCompleted, K2Node_MakeStruct_CompletedBanter) == 0x000040, "Member 'BP_NPC_C_AllBantersCompleted::K2Node_MakeStruct_CompletedBanter' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetLocation
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_C_GetLocation final
{
public:
	int32                                         Location;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetLocation) == 0x000004, "Wrong alignment on BP_NPC_C_GetLocation");
static_assert(sizeof(BP_NPC_C_GetLocation) == 0x000004, "Wrong size on BP_NPC_C_GetLocation");
static_assert(offsetof(BP_NPC_C_GetLocation, Location) == 0x000000, "Member 'BP_NPC_C_GetLocation::Location' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.ToggleBanterIcon
// 0x000B (0x000B - 0x0000)
struct BP_NPC_C_ToggleBanterIcon final
{
public:
	bool                                          New_Visible;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameMainState                                CallFunc_GetMainState_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckBanterPlayable_BanterPlayable;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_ToggleBanterIcon) == 0x000001, "Wrong alignment on BP_NPC_C_ToggleBanterIcon");
static_assert(sizeof(BP_NPC_C_ToggleBanterIcon) == 0x00000B, "Wrong size on BP_NPC_C_ToggleBanterIcon");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, New_Visible) == 0x000000, "Member 'BP_NPC_C_ToggleBanterIcon::New_Visible' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_GetMainState_ReturnValue) == 0x000001, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_GetMainState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_CheckBanterPlayable_BanterPlayable) == 0x000005, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_CheckBanterPlayable_BanterPlayable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_BooleanAND_ReturnValue_1) == 0x000007, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_BooleanAND_ReturnValue_2) == 0x000008, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_BooleanAND_ReturnValue_3) == 0x000009, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ToggleBanterIcon, CallFunc_Not_PreBool_ReturnValue_2) == 0x00000A, "Member 'BP_NPC_C_ToggleBanterIcon::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.CheckBanterPlayable
// 0x0003 (0x0003 - 0x0000)
struct BP_NPC_C_CheckBanterPlayable final
{
public:
	bool                                          BanterPlayable;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists; // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_CheckBanterPlayable) == 0x000001, "Wrong alignment on BP_NPC_C_CheckBanterPlayable");
static_assert(sizeof(BP_NPC_C_CheckBanterPlayable) == 0x000003, "Wrong size on BP_NPC_C_CheckBanterPlayable");
static_assert(offsetof(BP_NPC_C_CheckBanterPlayable, BanterPlayable) == 0x000000, "Member 'BP_NPC_C_CheckBanterPlayable::BanterPlayable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckBanterPlayable, CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists) == 0x000001, "Member 'BP_NPC_C_CheckBanterPlayable::CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckBanterPlayable, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_NPC_C_CheckBanterPlayable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetInteractable
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_SetInteractable final
{
public:
	bool                                          Interactable;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetInteractable) == 0x000001, "Wrong alignment on BP_NPC_C_SetInteractable");
static_assert(sizeof(BP_NPC_C_SetInteractable) == 0x000002, "Wrong size on BP_NPC_C_SetInteractable");
static_assert(offsetof(BP_NPC_C_SetInteractable, Interactable) == 0x000000, "Member 'BP_NPC_C_SetInteractable::Interactable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetInteractable, CallFunc_BooleanAND_ReturnValue) == 0x000001, "Member 'BP_NPC_C_SetInteractable::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.IncreaseBanterIndexIfAvailableInSection
// 0x0014 (0x0014 - 0x0000)
struct BP_NPC_C_IncreaseBanterIndexIfAvailableInSection final
{
public:
	int32                                         CallFunc_GetCurrentSectionStartAndEndIndices_Start; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentSectionStartAndEndIndices_End;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_IncreaseBanterIndexIfAvailableInSection) == 0x000004, "Wrong alignment on BP_NPC_C_IncreaseBanterIndexIfAvailableInSection");
static_assert(sizeof(BP_NPC_C_IncreaseBanterIndexIfAvailableInSection) == 0x000014, "Wrong size on BP_NPC_C_IncreaseBanterIndexIfAvailableInSection");
static_assert(offsetof(BP_NPC_C_IncreaseBanterIndexIfAvailableInSection, CallFunc_GetCurrentSectionStartAndEndIndices_Start) == 0x000000, "Member 'BP_NPC_C_IncreaseBanterIndexIfAvailableInSection::CallFunc_GetCurrentSectionStartAndEndIndices_Start' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseBanterIndexIfAvailableInSection, CallFunc_GetCurrentSectionStartAndEndIndices_End) == 0x000004, "Member 'BP_NPC_C_IncreaseBanterIndexIfAvailableInSection::CallFunc_GetCurrentSectionStartAndEndIndices_End' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseBanterIndexIfAvailableInSection, Temp_int_Variable) == 0x000008, "Member 'BP_NPC_C_IncreaseBanterIndexIfAvailableInSection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseBanterIndexIfAvailableInSection, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NPC_C_IncreaseBanterIndexIfAvailableInSection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseBanterIndexIfAvailableInSection, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_NPC_C_IncreaseBanterIndexIfAvailableInSection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.NotifySpecialBanterGraph
// 0x000C (0x000C - 0x0000)
struct BP_NPC_C_NotifySpecialBanterGraph final
{
public:
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_NotifySpecialBanterGraph) == 0x000004, "Wrong alignment on BP_NPC_C_NotifySpecialBanterGraph");
static_assert(sizeof(BP_NPC_C_NotifySpecialBanterGraph) == 0x00000C, "Wrong size on BP_NPC_C_NotifySpecialBanterGraph");
static_assert(offsetof(BP_NPC_C_NotifySpecialBanterGraph, CallFunc_Map_Find_Value) == 0x000000, "Member 'BP_NPC_C_NotifySpecialBanterGraph::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_NotifySpecialBanterGraph, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'BP_NPC_C_NotifySpecialBanterGraph::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.DeactivateInteractionIfNoMoreSpecialBanters
// 0x000C (0x000C - 0x0000)
struct BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters final
{
public:
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters) == 0x000004, "Wrong alignment on BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters");
static_assert(sizeof(BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters) == 0x00000C, "Wrong size on BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters");
static_assert(offsetof(BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters, CallFunc_Map_Length_ReturnValue) == 0x000000, "Member 'BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000008, "Member 'BP_NPC_C_DeactivateInteractionIfNoMoreSpecialBanters::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetCurrentSectionStartAndEndIndices
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_GetCurrentSectionStartAndEndIndices final
{
public:
	int32                                         Start;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         End;                                               // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetCurrentSectionStartAndEndIndices) == 0x000004, "Wrong alignment on BP_NPC_C_GetCurrentSectionStartAndEndIndices");
static_assert(sizeof(BP_NPC_C_GetCurrentSectionStartAndEndIndices) == 0x000020, "Wrong size on BP_NPC_C_GetCurrentSectionStartAndEndIndices");
static_assert(offsetof(BP_NPC_C_GetCurrentSectionStartAndEndIndices, Start) == 0x000000, "Member 'BP_NPC_C_GetCurrentSectionStartAndEndIndices::Start' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetCurrentSectionStartAndEndIndices, End) == 0x000004, "Member 'BP_NPC_C_GetCurrentSectionStartAndEndIndices::End' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetCurrentSectionStartAndEndIndices, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_NPC_C_GetCurrentSectionStartAndEndIndices::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetCurrentSectionStartAndEndIndices, CallFunc_BreakVector2D_X) == 0x000010, "Member 'BP_NPC_C_GetCurrentSectionStartAndEndIndices::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetCurrentSectionStartAndEndIndices, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'BP_NPC_C_GetCurrentSectionStartAndEndIndices::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetCurrentSectionStartAndEndIndices, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'BP_NPC_C_GetCurrentSectionStartAndEndIndices::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetCurrentSectionStartAndEndIndices, CallFunc_FTrunc_ReturnValue_1) == 0x00001C, "Member 'BP_NPC_C_GetCurrentSectionStartAndEndIndices::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.IncreaseSpecialBanterSection
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_C_IncreaseSpecialBanterSection final
{
public:
	int32                                         CallFunc_GetCurrentSectionStartAndEndIndices_Start; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCurrentSectionStartAndEndIndices_End;  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_IncreaseSpecialBanterSection) == 0x000004, "Wrong alignment on BP_NPC_C_IncreaseSpecialBanterSection");
static_assert(sizeof(BP_NPC_C_IncreaseSpecialBanterSection) == 0x000018, "Wrong size on BP_NPC_C_IncreaseSpecialBanterSection");
static_assert(offsetof(BP_NPC_C_IncreaseSpecialBanterSection, CallFunc_GetCurrentSectionStartAndEndIndices_Start) == 0x000000, "Member 'BP_NPC_C_IncreaseSpecialBanterSection::CallFunc_GetCurrentSectionStartAndEndIndices_Start' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseSpecialBanterSection, CallFunc_GetCurrentSectionStartAndEndIndices_End) == 0x000004, "Member 'BP_NPC_C_IncreaseSpecialBanterSection::CallFunc_GetCurrentSectionStartAndEndIndices_End' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseSpecialBanterSection, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_NPC_C_IncreaseSpecialBanterSection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseSpecialBanterSection, Temp_int_Variable) == 0x00000C, "Member 'BP_NPC_C_IncreaseSpecialBanterSection::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseSpecialBanterSection, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'BP_NPC_C_IncreaseSpecialBanterSection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IncreaseSpecialBanterSection, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_NPC_C_IncreaseSpecialBanterSection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.Set Up Banter Montages To Play
// 0x0058 (0x0058 - 0x0000)
struct BP_NPC_C_Set_Up_Banter_Montages_To_Play final
{
public:
	bool                                          NPC_Speaks_First;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBanterInteractionSequence>     Temp_struct_Variable;                              // 0x0008(0x0010)(ReferenceParm)
	TArray<struct FBanterInteractionSequence>     Temp_struct_Variable_1;                            // 0x0018(0x0010)(ReferenceParm)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FBanterInteractionSequence>     K2Node_Select_Default;                             // 0x0030(0x0010)(ReferenceParm)
	struct FBanterInteractionSequence             CallFunc_Array_Get_Item;                           // 0x0040(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_Set_Up_Banter_Montages_To_Play) == 0x000008, "Wrong alignment on BP_NPC_C_Set_Up_Banter_Montages_To_Play");
static_assert(sizeof(BP_NPC_C_Set_Up_Banter_Montages_To_Play) == 0x000058, "Wrong size on BP_NPC_C_Set_Up_Banter_Montages_To_Play");
static_assert(offsetof(BP_NPC_C_Set_Up_Banter_Montages_To_Play, NPC_Speaks_First) == 0x000000, "Member 'BP_NPC_C_Set_Up_Banter_Montages_To_Play::NPC_Speaks_First' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Set_Up_Banter_Montages_To_Play, Temp_struct_Variable) == 0x000008, "Member 'BP_NPC_C_Set_Up_Banter_Montages_To_Play::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Set_Up_Banter_Montages_To_Play, Temp_struct_Variable_1) == 0x000018, "Member 'BP_NPC_C_Set_Up_Banter_Montages_To_Play::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Set_Up_Banter_Montages_To_Play, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x000028, "Member 'BP_NPC_C_Set_Up_Banter_Montages_To_Play::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Set_Up_Banter_Montages_To_Play, Temp_byte_Variable) == 0x000029, "Member 'BP_NPC_C_Set_Up_Banter_Montages_To_Play::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Set_Up_Banter_Montages_To_Play, K2Node_Select_Default) == 0x000030, "Member 'BP_NPC_C_Set_Up_Banter_Montages_To_Play::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Set_Up_Banter_Montages_To_Play, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_NPC_C_Set_Up_Banter_Montages_To_Play::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetNextInteractionDialogueLines
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_GetNextInteractionDialogueLines final
{
public:
	class UAnimMontage*                           MontageToPlay;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetNextInteractionDialogueLines) == 0x000008, "Wrong alignment on BP_NPC_C_GetNextInteractionDialogueLines");
static_assert(sizeof(BP_NPC_C_GetNextInteractionDialogueLines) == 0x000010, "Wrong size on BP_NPC_C_GetNextInteractionDialogueLines");
static_assert(offsetof(BP_NPC_C_GetNextInteractionDialogueLines, MontageToPlay) == 0x000000, "Member 'BP_NPC_C_GetNextInteractionDialogueLines::MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetNextInteractionDialogueLines, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_NPC_C_GetNextInteractionDialogueLines::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.Update NPCActivation
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_C_Update_NPCActivation final
{
public:
	bool                                          NPC_Visible;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue_1;         // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_Update_NPCActivation) == 0x000008, "Wrong alignment on BP_NPC_C_Update_NPCActivation");
static_assert(sizeof(BP_NPC_C_Update_NPCActivation) == 0x000018, "Wrong size on BP_NPC_C_Update_NPCActivation");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, NPC_Visible) == 0x000000, "Member 'BP_NPC_C_Update_NPCActivation::NPC_Visible' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, Temp_bool_Variable) == 0x000001, "Member 'BP_NPC_C_Update_NPCActivation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, Temp_bool_Variable_1) == 0x000003, "Member 'BP_NPC_C_Update_NPCActivation::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x000004, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists) == 0x000005, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_IsOverlappingActor_ReturnValue) == 0x000010, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, Temp_byte_Variable) == 0x000011, "Member 'BP_NPC_C_Update_NPCActivation::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, K2Node_Select_Default) == 0x000013, "Member 'BP_NPC_C_Update_NPCActivation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_IsOverlappingActor_ReturnValue_1) == 0x000014, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_IsOverlappingActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_BooleanOR_ReturnValue) == 0x000015, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_Not_PreBool_ReturnValue_1) == 0x000016, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Update_NPCActivation, CallFunc_BooleanAND_ReturnValue_2) == 0x000017, "Member 'BP_NPC_C_Update_NPCActivation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.CheckIfMoreDialoguesExists
// 0x0048 (0x0048 - 0x0000)
struct BP_NPC_C_CheckIfMoreDialoguesExists final
{
public:
	bool                                          MoreDialogueExists;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> Temp_softobject_Variable;                          // 0x0008(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> Temp_softobject_Variable_1;                        // 0x0018(0x0010)(ReferenceParm)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> K2Node_Select_Default;                             // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_CheckIfMoreDialoguesExists) == 0x000008, "Wrong alignment on BP_NPC_C_CheckIfMoreDialoguesExists");
static_assert(sizeof(BP_NPC_C_CheckIfMoreDialoguesExists) == 0x000048, "Wrong size on BP_NPC_C_CheckIfMoreDialoguesExists");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, MoreDialogueExists) == 0x000000, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::MoreDialogueExists' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, Temp_byte_Variable) == 0x000001, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, Temp_softobject_Variable) == 0x000008, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, Temp_softobject_Variable_1) == 0x000018, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x000028, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, K2Node_Select_Default) == 0x000030, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CheckIfMoreDialoguesExists, CallFunc_Greater_IntInt_ReturnValue) == 0x000044, "Member 'BP_NPC_C_CheckIfMoreDialoguesExists::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnInterrupted_3E1659B949D1C444DD0A28B22C243E71
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnInterrupted_3E1659B949D1C444DD0A28B22C243E71 final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnInterrupted_3E1659B949D1C444DD0A28B22C243E71) == 0x000008, "Wrong alignment on BP_NPC_C_OnInterrupted_3E1659B949D1C444DD0A28B22C243E71");
static_assert(sizeof(BP_NPC_C_OnInterrupted_3E1659B949D1C444DD0A28B22C243E71) == 0x000008, "Wrong size on BP_NPC_C_OnInterrupted_3E1659B949D1C444DD0A28B22C243E71");
static_assert(offsetof(BP_NPC_C_OnInterrupted_3E1659B949D1C444DD0A28B22C243E71, TransformedCharacter) == 0x000000, "Member 'BP_NPC_C_OnInterrupted_3E1659B949D1C444DD0A28B22C243E71::TransformedCharacter' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71 final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71) == 0x000008, "Wrong alignment on BP_NPC_C_OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71");
static_assert(sizeof(BP_NPC_C_OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71) == 0x000008, "Wrong size on BP_NPC_C_OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71");
static_assert(offsetof(BP_NPC_C_OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71, TransformedCharacter) == 0x000000, "Member 'BP_NPC_C_OnCloseEnough_3E1659B949D1C444DD0A28B22C243E71::TransformedCharacter' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnCompleted_3E1659B949D1C444DD0A28B22C243E71
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnCompleted_3E1659B949D1C444DD0A28B22C243E71 final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnCompleted_3E1659B949D1C444DD0A28B22C243E71) == 0x000008, "Wrong alignment on BP_NPC_C_OnCompleted_3E1659B949D1C444DD0A28B22C243E71");
static_assert(sizeof(BP_NPC_C_OnCompleted_3E1659B949D1C444DD0A28B22C243E71) == 0x000008, "Wrong size on BP_NPC_C_OnCompleted_3E1659B949D1C444DD0A28B22C243E71");
static_assert(offsetof(BP_NPC_C_OnCompleted_3E1659B949D1C444DD0A28B22C243E71, TransformedCharacter) == 0x000000, "Member 'BP_NPC_C_OnCompleted_3E1659B949D1C444DD0A28B22C243E71::TransformedCharacter' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnLoaded_5B8972144EBB1776A58E69A79BA25817
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnLoaded_5B8972144EBB1776A58E69A79BA25817 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnLoaded_5B8972144EBB1776A58E69A79BA25817) == 0x000008, "Wrong alignment on BP_NPC_C_OnLoaded_5B8972144EBB1776A58E69A79BA25817");
static_assert(sizeof(BP_NPC_C_OnLoaded_5B8972144EBB1776A58E69A79BA25817) == 0x000008, "Wrong size on BP_NPC_C_OnLoaded_5B8972144EBB1776A58E69A79BA25817");
static_assert(offsetof(BP_NPC_C_OnLoaded_5B8972144EBB1776A58E69A79BA25817, Loaded) == 0x000000, "Member 'BP_NPC_C_OnLoaded_5B8972144EBB1776A58E69A79BA25817::Loaded' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnBlendOutAllowedEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnBlendOutAllowedBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnNotifyEnd_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnNotifyBegin_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnInterrupted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnBlendOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnFullyBlendedOut_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000004, "Wrong alignment on BP_NPC_C_OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(sizeof(BP_NPC_C_OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB) == 0x000008, "Wrong size on BP_NPC_C_OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB");
static_assert(offsetof(BP_NPC_C_OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB, NotifyName) == 0x000000, "Member 'BP_NPC_C_OnCompleted_5ECDE6ED43FBBDAC4BF51DB71C4D96EB::NotifyName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnLoaded_003ADBE5488BF107B9C907B02267121B
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnLoaded_003ADBE5488BF107B9C907B02267121B final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnLoaded_003ADBE5488BF107B9C907B02267121B) == 0x000008, "Wrong alignment on BP_NPC_C_OnLoaded_003ADBE5488BF107B9C907B02267121B");
static_assert(sizeof(BP_NPC_C_OnLoaded_003ADBE5488BF107B9C907B02267121B) == 0x000008, "Wrong size on BP_NPC_C_OnLoaded_003ADBE5488BF107B9C907B02267121B");
static_assert(offsetof(BP_NPC_C_OnLoaded_003ADBE5488BF107B9C907B02267121B, Loaded) == 0x000000, "Member 'BP_NPC_C_OnLoaded_003ADBE5488BF107B9C907B02267121B::Loaded' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE) == 0x000008, "Wrong alignment on BP_NPC_C_OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE");
static_assert(sizeof(BP_NPC_C_OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE) == 0x000008, "Wrong size on BP_NPC_C_OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE");
static_assert(offsetof(BP_NPC_C_OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE, Loaded) == 0x000000, "Member 'BP_NPC_C_OnLoaded_18D0BBC9496AE36CA44B35962EF1E3BE::Loaded' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143 final
{
public:
	TArray<class UClass*>                         LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_NPC_C_LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143) == 0x000008, "Wrong alignment on BP_NPC_C_LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143");
static_assert(sizeof(BP_NPC_C_LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143) == 0x000010, "Wrong size on BP_NPC_C_LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143");
static_assert(offsetof(BP_NPC_C_LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143, LoadedAssets) == 0x000000, "Member 'BP_NPC_C_LoadCompleteDelegate_59EBA52D40331536E763DEAE93DE1143::LoadedAssets' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4 final
{
public:
	TArray<class UClass*>                         LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_NPC_C_LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4) == 0x000008, "Wrong alignment on BP_NPC_C_LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4");
static_assert(sizeof(BP_NPC_C_LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4) == 0x000010, "Wrong size on BP_NPC_C_LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4");
static_assert(offsetof(BP_NPC_C_LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4, LoadedAssets) == 0x000000, "Member 'BP_NPC_C_LoadCompleteDelegate_6DD6ACF64D46EB6E1EA625BB0D4B01D4::LoadedAssets' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_SetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CreatureType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_SetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_NPC_C_SetCemeteryCreatureType");
static_assert(sizeof(BP_NPC_C_SetCemeteryCreatureType) == 0x000001, "Wrong size on BP_NPC_C_SetCemeteryCreatureType");
static_assert(offsetof(BP_NPC_C_SetCemeteryCreatureType, CreatureType) == 0x000000, "Member 'BP_NPC_C_SetCemeteryCreatureType::CreatureType' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.QuicktimeInput
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_QuicktimeInput final
{
public:
	float                                         CurrentProgress;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxProgress;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_QuicktimeInput) == 0x000004, "Wrong alignment on BP_NPC_C_QuicktimeInput");
static_assert(sizeof(BP_NPC_C_QuicktimeInput) == 0x000008, "Wrong size on BP_NPC_C_QuicktimeInput");
static_assert(offsetof(BP_NPC_C_QuicktimeInput, CurrentProgress) == 0x000000, "Member 'BP_NPC_C_QuicktimeInput::CurrentProgress' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_QuicktimeInput, MaxProgress) == 0x000004, "Member 'BP_NPC_C_QuicktimeInput::MaxProgress' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.MeleeAttackTranslate
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_C_MeleeAttackTranslate final
{
public:
	struct FVector                                StartVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndVector;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_MeleeAttackTranslate) == 0x000004, "Wrong alignment on BP_NPC_C_MeleeAttackTranslate");
static_assert(sizeof(BP_NPC_C_MeleeAttackTranslate) == 0x000018, "Wrong size on BP_NPC_C_MeleeAttackTranslate");
static_assert(offsetof(BP_NPC_C_MeleeAttackTranslate, StartVector) == 0x000000, "Member 'BP_NPC_C_MeleeAttackTranslate::StartVector' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_MeleeAttackTranslate, EndVector) == 0x00000C, "Member 'BP_NPC_C_MeleeAttackTranslate::EndVector' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.ControlRotationFocus
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_ControlRotationFocus final
{
public:
	class AActor*                                 FocusTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_ControlRotationFocus) == 0x000008, "Wrong alignment on BP_NPC_C_ControlRotationFocus");
static_assert(sizeof(BP_NPC_C_ControlRotationFocus) == 0x000008, "Wrong size on BP_NPC_C_ControlRotationFocus");
static_assert(offsetof(BP_NPC_C_ControlRotationFocus, FocusTarget) == 0x000000, "Member 'BP_NPC_C_ControlRotationFocus::FocusTarget' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.MoveToGrappleLocatio
// 0x000C (0x000C - 0x0000)
struct BP_NPC_C_MoveToGrappleLocatio final
{
public:
	struct FVector                                Grapple_Location;                                  // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_MoveToGrappleLocatio) == 0x000004, "Wrong alignment on BP_NPC_C_MoveToGrappleLocatio");
static_assert(sizeof(BP_NPC_C_MoveToGrappleLocatio) == 0x00000C, "Wrong size on BP_NPC_C_MoveToGrappleLocatio");
static_assert(offsetof(BP_NPC_C_MoveToGrappleLocatio, Grapple_Location) == 0x000000, "Member 'BP_NPC_C_MoveToGrappleLocatio::Grapple_Location' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_SetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on BP_NPC_C_SetMostSuitableMeleeSection");
static_assert(sizeof(BP_NPC_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong size on BP_NPC_C_SetMostSuitableMeleeSection");
static_assert(offsetof(BP_NPC_C_SetMostSuitableMeleeSection, Value) == 0x000000, "Member 'BP_NPC_C_SetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.updateBossHealthData
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_C_UpdateBossHealthData final
{
public:
	float                                         CurrentHealthPercentage;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_UpdateBossHealthData) == 0x000004, "Wrong alignment on BP_NPC_C_UpdateBossHealthData");
static_assert(sizeof(BP_NPC_C_UpdateBossHealthData) == 0x000004, "Wrong size on BP_NPC_C_UpdateBossHealthData");
static_assert(offsetof(BP_NPC_C_UpdateBossHealthData, CurrentHealthPercentage) == 0x000000, "Member 'BP_NPC_C_UpdateBossHealthData::CurrentHealthPercentage' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnCharacterPosessed
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_OnCharacterPosessed final
{
public:
	const class AOFPlayerCharacter*               Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnCharacterPosessed) == 0x000008, "Wrong alignment on BP_NPC_C_OnCharacterPosessed");
static_assert(sizeof(BP_NPC_C_OnCharacterPosessed) == 0x000008, "Wrong size on BP_NPC_C_OnCharacterPosessed");
static_assert(offsetof(BP_NPC_C_OnCharacterPosessed, Character) == 0x000000, "Member 'BP_NPC_C_OnCharacterPosessed::Character' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature) == 0x000008, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature, InteractionCharacter) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature::InteractionCharacter' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnGameMainStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_OnGameMainStateChanged final
{
public:
	EGameMainState                                OldGameState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                NewGameState;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnGameMainStateChanged) == 0x000001, "Wrong alignment on BP_NPC_C_OnGameMainStateChanged");
static_assert(sizeof(BP_NPC_C_OnGameMainStateChanged) == 0x000002, "Wrong size on BP_NPC_C_OnGameMainStateChanged");
static_assert(offsetof(BP_NPC_C_OnGameMainStateChanged, OldGameState) == 0x000000, "Member 'BP_NPC_C_OnGameMainStateChanged::OldGameState' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OnGameMainStateChanged, NewGameState) == 0x000001, "Member 'BP_NPC_C_OnGameMainStateChanged::NewGameState' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.Play Next Banter Montage
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_Play_Next_Banter_Montage final
{
public:
	bool                                          Play_montage_on_player_character;                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_Play_Next_Banter_Montage) == 0x000001, "Wrong alignment on BP_NPC_C_Play_Next_Banter_Montage");
static_assert(sizeof(BP_NPC_C_Play_Next_Banter_Montage) == 0x000001, "Wrong size on BP_NPC_C_Play_Next_Banter_Montage");
static_assert(offsetof(BP_NPC_C_Play_Next_Banter_Montage, Play_montage_on_player_character) == 0x000000, "Member 'BP_NPC_C_Play_Next_Banter_Montage::Play_montage_on_player_character' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature final
{
public:
	class UFlowComponent*                         FlowComponent_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NotifyTag;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature) == 0x000010, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature, FlowComponent_0) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature::FlowComponent_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature, NotifyTag) == 0x000008, "Member 'BP_NPC_C_BndEvt__BP_NPC_FlowComponent_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature::NotifyTag' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_6_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__BP_NPC_PlayerAlignWithPosition_K2Node_ComponentBoundEvent_7_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__BP_NPC_ShowBanterIconZone_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetGrayAptLocation
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_SetGrayAptLocation final
{
public:
	ENPCGrayAptLocation                           Location;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_SetGrayAptLocation) == 0x000001, "Wrong alignment on BP_NPC_C_SetGrayAptLocation");
static_assert(sizeof(BP_NPC_C_SetGrayAptLocation) == 0x000001, "Wrong size on BP_NPC_C_SetGrayAptLocation");
static_assert(offsetof(BP_NPC_C_SetGrayAptLocation, Location) == 0x000000, "Member 'BP_NPC_C_SetGrayAptLocation::Location' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnGameMainStateChanged_Event
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_OnGameMainStateChanged_Event final
{
public:
	EGameMainState                                OldGameState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                NewGameState;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnGameMainStateChanged_Event) == 0x000001, "Wrong alignment on BP_NPC_C_OnGameMainStateChanged_Event");
static_assert(sizeof(BP_NPC_C_OnGameMainStateChanged_Event) == 0x000002, "Wrong size on BP_NPC_C_OnGameMainStateChanged_Event");
static_assert(offsetof(BP_NPC_C_OnGameMainStateChanged_Event, OldGameState) == 0x000000, "Member 'BP_NPC_C_OnGameMainStateChanged_Event::OldGameState' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OnGameMainStateChanged_Event, NewGameState) == 0x000001, "Member 'BP_NPC_C_OnGameMainStateChanged_Event::NewGameState' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature) == 0x000008, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature, InteractionCharacter) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_InteractionFlow_K2Node_ComponentBoundEvent_8_InteractionSignature__DelegateSignature::InteractionCharacter' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__BP_NPC_MeleeBlockSphere_K2Node_ComponentBoundEvent_2_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.PostCinematicCheck
// 0x0002 (0x0002 - 0x0000)
struct BP_NPC_C_PostCinematicCheck final
{
public:
	EGameMainState                                OldGameState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                NewGameState;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_PostCinematicCheck) == 0x000001, "Wrong alignment on BP_NPC_C_PostCinematicCheck");
static_assert(sizeof(BP_NPC_C_PostCinematicCheck) == 0x000002, "Wrong size on BP_NPC_C_PostCinematicCheck");
static_assert(offsetof(BP_NPC_C_PostCinematicCheck, OldGameState) == 0x000000, "Member 'BP_NPC_C_PostCinematicCheck::OldGameState' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_PostCinematicCheck, NewGameState) == 0x000001, "Member 'BP_NPC_C_PostCinematicCheck::NewGameState' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.ExecuteUbergraph_BP_NPC
// 0x08A8 (0x08A8 - 0x0000)
struct BP_NPC_C_ExecuteUbergraph_BP_NPC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x005C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x008C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00A4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> Temp_softobject_Variable;                          // 0x00D0(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> Temp_softobject_Variable_1;                        // 0x00E0(0x0010)(ReferenceParm)
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          Temp_byte_Variable_1;                              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> Temp_softobject_Variable_2;                        // 0x0108(0x0010)(ReferenceParm)
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> Temp_softobject_Variable_3;                        // 0x0118(0x0010)(ReferenceParm)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EGameMainState OldGameState, EGameMainState NewGameState)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0158(0x0010)(ZeroConstructor, NoDestructor)
	TArray<class UClass*>                         K2Node_CustomEvent_LoadedAssets_1;                 // 0x0168(0x0010)(ConstParm, ReferenceParm)
	TArray<class UClass*>                         K2Node_CustomEvent_LoadedAssets;                   // 0x0178(0x0010)(ConstParm, ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsCamera_Modifier;         // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Effect;         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess_1;                // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                Temp_byte_Variable_2;                              // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x01C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x01C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_4;                              // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_5;                              // 0x01C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_6;                              // 0x01C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_7;                              // 0x01C7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_8;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_9;                              // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x2];                                      // 0x01CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AOFPlayerCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_10;           // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable_2;                            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlayerCharactersEngineSubsystem*       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECemeteryCreatureType                         K2Node_Event_CreatureType;                         // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentProgress;                      // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxProgress;                          // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_StartVector;                          // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndVector;                            // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_FocusTarget;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Grapple_Location;                     // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationMontageIdentifier                   K2Node_Event_Value;                                // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_currentHealthPercentage;              // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_2;                       // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class AOFPlayerCharacter*               K2Node_CustomEvent_Character;                      // 0x0240(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_ComponentBoundEvent_InteractionCharacter_1; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Temp_object_Variable_3;                            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                K2Node_CustomEvent_OldGameState_2;                 // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                K2Node_CustomEvent_NewGameState_2;                 // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x025A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25B[0x5];                                      // 0x025B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface;               // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface_1;             // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Play_montage_on_player_character; // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_292[0x6];                                      // 0x0292(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_Array_Get_Item_2;                         // 0x0298(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x02EC(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 K2Node_Select_Default;                             // 0x0308(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UClass*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	class UBPAsyncAction_PiecesPlayMontage*       CallFunc_MontagePlay_ReturnValue;                  // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32D[0x3];                                      // 0x032D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter_1;         // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0344(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlowComponent*                         K2Node_ComponentBoundEvent_FlowComponent;          // 0x0358(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_NotifyTag;              // 0x0360(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0388(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0394(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface_2;             // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x03CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x03DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3DD[0x3];                                      // 0x03DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue_1;     // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E5[0x3];                                      // 0x03E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_RepositionAndReorient*   CallFunc_RepositionAndReorient_OutActionProxy;     // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_RepositionAndReorient*   CallFunc_RepositionAndReorient_ReturnValue;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> K2Node_Select_Default_1;                           // 0x03F8(0x0010)(ReferenceParm)
	TSoftObjectPtr<class APiecesLevelSequenceActor> CallFunc_Array_Get_Item_3;                         // 0x0408(0x0028)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APiecesLevelSequenceActor*              K2Node_DynamicCast_AsPieces_Level_Sequence_Actor;  // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter_2;         // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_5;  // 0x0460(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_5;           // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_5;            // 0x0470(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_5;       // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0480(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0508(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0518(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0524(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0525(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_526[0x2];                                      // 0x0526(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x052C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52D[0x3];                                      // 0x052D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x0538(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x0548(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x0550(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0558(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x05E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x05F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5FC[0x4];                                      // 0x05FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_4;         // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class APiecesLevelSequenceActor>> K2Node_Select_Default_2;                           // 0x0610(0x0010)(ReferenceParm)
	int32                                         Temp_int_Variable;                                 // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_624[0x4];                                      // 0x0624(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class APiecesLevelSequenceActor> CallFunc_Array_Get_Item_4;                         // 0x0628(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_655[0x3];                                      // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<class UClass*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x0658(0x0010)(ZeroConstructor, NoDestructor)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_5;         // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x0670(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists; // 0x0681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_682[0x6];                                      // 0x0682(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCGrayAptLocation                           K2Node_Event_Location;                             // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x7];                                      // 0x0691(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_NPC_ABP_Common_C> K2Node_DynamicCast_AsBPI_NPC_ABP_Common;           // 0x0698(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_3;            // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_16;           // 0x06B8(0x0010)(ZeroConstructor, NoDestructor)
	TScriptInterface<class IBPI_NPC_ABP_Common_C> K2Node_DynamicCast_AsBPI_NPC_ABP_Common_1;         // 0x06C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGameMainState                                K2Node_CustomEvent_OldGameState_1;                 // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                K2Node_CustomEvent_NewGameState_1;                 // 0x06DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x06DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6DC[0x4];                                      // 0x06DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_6;         // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_EnableCameraModifier_ReturnValue;         // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x06F8(0x0010)(ReferenceParm)
	class ACharacter*                             K2Node_ComponentBoundEvent_InteractionCharacter;   // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_711[0x3];                                      // 0x0711(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_17;           // 0x0714(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_724[0x4];                                      // 0x0724(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0728(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0738(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0740(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0744(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_745[0x3];                                      // 0x0745(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0748(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AObsidianFoxCharacter*                  K2Node_DynamicCast_AsObsidian_Fox_Character;       // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x07E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7E1[0x7];                                      // 0x07E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x07E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7F1[0x3];                                      // 0x07F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue; // 0x07F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FC[0x4];                                      // 0x07FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0800(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0810(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array_1;                          // 0x0820(0x0010)(ReferenceParm)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_5;    // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_839[0x3];                                      // 0x0839(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_18;           // 0x083C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EGameMainState OldGameState, EGameMainState NewGameState)> K2Node_CreateDelegate_OutputDelegate_19;           // 0x084C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EGameMainState OldGameState, EGameMainState NewGameState)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x085C(0x0010)(ZeroConstructor, NoDestructor)
	EGameMainState                                K2Node_CustomEvent_OldGameState;                   // 0x086C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                K2Node_CustomEvent_NewGameState;                   // 0x086D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86E[0x2];                                      // 0x086E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue_2;   // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x0878(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_879[0x7];                                      // 0x0879(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue_1;         // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_3;              // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue_1;  // 0x0898(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x08A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_ExecuteUbergraph_BP_NPC) == 0x000008, "Wrong alignment on BP_NPC_C_ExecuteUbergraph_BP_NPC");
static_assert(sizeof(BP_NPC_C_ExecuteUbergraph_BP_NPC) == 0x0008A8, "Wrong size on BP_NPC_C_ExecuteUbergraph_BP_NPC");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, EntryPoint) == 0x000000, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName_7) == 0x000004, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName_6) == 0x00000C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName_5) == 0x000024, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName_4) == 0x00003C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName_3) == 0x000054, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_3) == 0x00005C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName_2) == 0x00006C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_4) == 0x000074, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName_1) == 0x000084, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_5) == 0x00008C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NotifyName) == 0x00009C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000A4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_name_Variable) == 0x0000B4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable) == 0x0000BC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_byte_Variable) == 0x0000BD, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000C0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_softobject_Variable) == 0x0000D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_softobject_Variable_1) == 0x0000E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_Loaded_1) == 0x0000F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_object_Variable) == 0x0000F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_byte_Variable_1) == 0x000100, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_softobject_Variable_2) == 0x000108, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_softobject_Variable_3) == 0x000118, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_Loaded) == 0x000128, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_object_Variable_1) == 0x000130, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue) == 0x000138, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000140, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_8) == 0x000148, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_9) == 0x000158, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_LoadedAssets_1) == 0x000168, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_LoadedAssets_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_LoadedAssets) == 0x000178, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_LoadedAssets' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Get_Item) == 0x000188, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ClassDynamicCast_AsCamera_Modifier) == 0x000198, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ClassDynamicCast_AsCamera_Modifier' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ClassDynamicCast_bSuccess) == 0x0001A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ClassDynamicCast_AsGameplay_Effect) == 0x0001A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ClassDynamicCast_AsGameplay_Effect' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ClassDynamicCast_bSuccess_1) == 0x0001B0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ClassDynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x0001B8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_byte_Variable_2) == 0x0001C0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_1) == 0x0001C1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_2) == 0x0001C2, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_3) == 0x0001C3, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_4) == 0x0001C4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_5) == 0x0001C5, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_6) == 0x0001C6, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_7) == 0x0001C7, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_8) == 0x0001C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_bool_Variable_9) == 0x0001C9, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_10) == 0x0001CC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_object_Variable_2) == 0x0001E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetEngineSubsystem_ReturnValue) == 0x0001E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_1) == 0x0001F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_CreatureType) == 0x0001F1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_CreatureType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_CurrentProgress) == 0x0001F4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_CurrentProgress' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_MaxProgress) == 0x0001F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_MaxProgress' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_StartVector) == 0x0001FC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_StartVector' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_EndVector) == 0x000208, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_EndVector' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_FocusTarget) == 0x000218, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_FocusTarget' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Grapple_Location) == 0x000220, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Grapple_Location' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Value) == 0x00022C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_currentHealthPercentage) == 0x000230, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_currentHealthPercentage' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_Loaded_2) == 0x000238, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_Loaded_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_Character) == 0x000240, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_InteractionCharacter_1) == 0x000248, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_InteractionCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_object_Variable_3) == 0x000250, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_OldGameState_2) == 0x000258, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_OldGameState_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NewGameState_2) == 0x000259, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NewGameState_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess) == 0x00025A, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAnimInstance_ReturnValue) == 0x000260, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsAnim_Interface) == 0x000268, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsAnim_Interface' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess) == 0x000278, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsAnim_Interface_1) == 0x000280, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsAnim_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_1) == 0x000290, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_Play_montage_on_player_character) == 0x000291, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_Play_montage_on_player_character' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Get_Item_2) == 0x000298, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Not_PreBool_ReturnValue) == 0x0002C0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0002C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsAnim_Montage) == 0x0002D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_2) == 0x0002D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_TransformedCharacter) == 0x0002E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_TransformedCharacter' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Length_ReturnValue) == 0x0002E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_11) == 0x0002EC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Greater_IntInt_ReturnValue) == 0x0002FC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000300, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Select_Default) == 0x000308, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_12) == 0x000310, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MontagePlay_ReturnValue) == 0x000320, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MontagePlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Add_IntInt_ReturnValue) == 0x000328, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_2) == 0x00032C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_int_Array_Index_Variable) == 0x000330, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_TransformedCharacter_1) == 0x000338, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_TransformedCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x000340, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_13) == 0x000344, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Not_PreBool_ReturnValue_1) == 0x000354, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_FlowComponent) == 0x000358, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_FlowComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_NotifyTag) == 0x000360, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_NotifyTag' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000368, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000370, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000378, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000380, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000388, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000394, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Vector_Distance_ReturnValue) == 0x0003A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0003A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0003B0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsAnim_Interface_2) == 0x0003B8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsAnim_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_3) == 0x0003C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetVelocity_ReturnValue) == 0x0003CC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_VSize_ReturnValue) == 0x0003D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Less_FloatFloat_ReturnValue) == 0x0003DC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_SelectFloat_ReturnValue) == 0x0003E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacterType_ReturnValue_1) == 0x0003E4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacterType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_RepositionAndReorient_OutActionProxy) == 0x0003E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_RepositionAndReorient_OutActionProxy' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_RepositionAndReorient_ReturnValue) == 0x0003F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_RepositionAndReorient_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Select_Default_1) == 0x0003F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Get_Item_3) == 0x000408, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000430, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_3) == 0x000438, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsPieces_Level_Sequence_Actor) == 0x000440, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsPieces_Level_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_4) == 0x000448, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetSequencePlayer_ReturnValue) == 0x000450, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_TransformedCharacter_2) == 0x000458, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_TransformedCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_5) == 0x000460, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_5) == 0x000468, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_5) == 0x000470, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_5) == 0x000478, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x00047C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000480, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000508, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000510, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000518, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000520, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000524, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000525, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_int_Loop_Counter_Variable) == 0x000528, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BooleanOR_ReturnValue) == 0x00052C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Add_IntInt_ReturnValue_1) == 0x000530, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x000538, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_3) == 0x000540, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_3) == 0x000548, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x000550, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x000554, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000558, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x0005E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_2) == 0x0005E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_2) == 0x0005F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x0005F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_4) == 0x000600, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000608, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Select_Default_2) == 0x000610, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_int_Variable) == 0x000620, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Get_Item_4) == 0x000628, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Length_ReturnValue_1) == 0x000650, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Less_IntInt_ReturnValue) == 0x000654, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_14) == 0x000658, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_5) == 0x000668, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_15) == 0x000670, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000680, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists) == 0x000681, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckIfMoreDialoguesExists_MoreDialogueExists' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000688, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Location) == 0x000690, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsBPI_NPC_ABP_Common) == 0x000698, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsBPI_NPC_ABP_Common' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_5) == 0x0006A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAnimInstance_ReturnValue_3) == 0x0006B0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAnimInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_16) == 0x0006B8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsBPI_NPC_ABP_Common_1) == 0x0006C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsBPI_NPC_ABP_Common_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_6) == 0x0006D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_OldGameState_1) == 0x0006D9, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_OldGameState_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NewGameState_1) == 0x0006DA, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NewGameState_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess_1) == 0x0006DB, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_6) == 0x0006E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOverlappingActor_ReturnValue) == 0x0006E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EnableCameraModifier_ReturnValue) == 0x0006F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EnableCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_MakeArray_Array) == 0x0006F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_InteractionCharacter) == 0x000708, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_InteractionCharacter' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_4) == 0x000710, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_17) == 0x000714, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000728, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000730, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000738, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000740, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_bFromSweep) == 0x000744, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_SweepResult) == 0x000748, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerPawn_ReturnValue) == 0x0007D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsObsidian_Fox_Character) == 0x0007D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsObsidian_Fox_Character' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_7) == 0x0007E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0007E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x0007F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue) == 0x0007F4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BP_ApplyGameplayEffectToTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000800, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor) == 0x000808, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp) == 0x000810, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000818, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_MakeArray_Array_1) == 0x000820, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000830, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ObjectObject_ReturnValue_5) == 0x000838, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ObjectObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_18) == 0x00083C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_19) == 0x00084C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate_20) == 0x00085C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_OldGameState) == 0x00086C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_OldGameState' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_NewGameState) == 0x00086D, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_NewGameState' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetGameInstanceSubsystem_ReturnValue_2) == 0x000870, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetGameInstanceSubsystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Select_Default_3) == 0x000878, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000880, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOverlappingActor_ReturnValue_1) == 0x000888, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOverlappingActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerPawn_ReturnValue_3) == 0x000890, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAbilitySystemComponent_ReturnValue_1) == 0x000898, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAbilitySystemComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x0008A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.HasPlayedAllDialogs
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_HasPlayedAllDialogs final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_HasPlayedAllDialogs) == 0x000001, "Wrong alignment on BP_NPC_C_HasPlayedAllDialogs");
static_assert(sizeof(BP_NPC_C_HasPlayedAllDialogs) == 0x000001, "Wrong size on BP_NPC_C_HasPlayedAllDialogs");
static_assert(offsetof(BP_NPC_C_HasPlayedAllDialogs, Value) == 0x000000, "Member 'BP_NPC_C_HasPlayedAllDialogs::Value' has a wrong offset!");

}

