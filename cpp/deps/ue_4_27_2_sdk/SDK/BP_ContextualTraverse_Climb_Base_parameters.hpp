#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ContextualTraverse_Climb_Base

#include "Basic.hpp"

#include "ObsidianFox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.GetTracedMotionWarpingEndLocation
// 0x0178 (0x0178 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TraceEnd;                                          // 0x000C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleHeight;                                     // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CapsuleRadius;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0138(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0160(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x016C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation) == 0x000178, "Wrong size on BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, TargetLocation) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, TraceEnd) == 0x00000C, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CapsuleHeight) == 0x000018, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CapsuleHeight' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CapsuleRadius) == 0x00001C, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CapsuleRadius' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, Temp_object_Variable) == 0x000020, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x00003C, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000048, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x000054, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x0000DC, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0000E0, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_bBlockingHit) == 0x0000EC, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000ED, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_Time) == 0x0000F0, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_Distance) == 0x0000F4, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_Location) == 0x0000F8, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_ImpactPoint) == 0x000104, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_Normal) == 0x000110, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_ImpactNormal) == 0x00011C, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_PhysMat) == 0x000128, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_HitActor) == 0x000130, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_HitComponent) == 0x000138, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_HitBoneName) == 0x000140, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_HitItem) == 0x000148, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_ElementIndex) == 0x00014C, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_FaceIndex) == 0x000150, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_TraceStart) == 0x000154, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_BreakHitResult_TraceEnd) == 0x000160, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00016C, "Member 'BP_ContextualTraverse_Climb_Base_C_GetTracedMotionWarpingEndLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.MakeMotionWarpPoint
// 0x0050 (0x0050 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint final
{
public:
	class ACharacter*                             PlayerCharacter;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                WorldLocation;                                     // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TraceForMotionWarpingLocation_MotionWarpingLocation; // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint) == 0x000050, "Wrong size on BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, PlayerCharacter) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::PlayerCharacter' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, WorldLocation) == 0x000008, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000020, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_Add_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_TraceForMotionWarpingLocation_MotionWarpingLocation) == 0x000034, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_TraceForMotionWarpingLocation_MotionWarpingLocation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'BP_ContextualTraverse_Climb_Base_C_MakeMotionWarpPoint::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Setup Climb Motion Warp
// 0x0140 (0x0140 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp final
{
public:
	EPlayerCharacterType                          Character_type;                                    // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetTracedMotionWarpingEndLocation_TargetLocation; // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0050(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue_1;   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMotionWarpingComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_108[0x8];                                      // 0x0108(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp) == 0x000010, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp) == 0x000140, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, Character_type) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::Character_type' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, Temp_byte_Variable) == 0x000001, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, Temp_object_Variable) == 0x000008, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, Temp_object_Variable_1) == 0x000010, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_GetTracedMotionWarpingEndLocation_TargetLocation) == 0x000018, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_GetTracedMotionWarpingEndLocation_TargetLocation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_X) == 0x000024, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Z) == 0x00002C, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, K2Node_Select_Default) == 0x000030, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000038, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000044, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000050, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_InverseTransformLocation_ReturnValue) == 0x000080, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_X_1) == 0x00008C, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Y_1) == 0x000090, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Z_1) == 0x000094, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000098, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000A4, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_InverseTransformLocation_ReturnValue_1) == 0x0000B0, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_InverseTransformLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_GetComponentByClass_ReturnValue) == 0x0000C0, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_X_2) == 0x0000C8, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Y_2) == 0x0000CC, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Z_2) == 0x0000D0, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_IsValid_ReturnValue) == 0x0000D4, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_MakeVector_ReturnValue) == 0x0000D8, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_TransformLocation_ReturnValue) == 0x0000E4, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_X_3) == 0x0000F0, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Y_3) == 0x0000F4, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_BreakVector_Z_3) == 0x0000F8, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_MakeVector_ReturnValue_1) == 0x0000FC, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'BP_ContextualTraverse_Climb_Base_C_Setup_Climb_Motion_Warp::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.BindToAnimationStates
// 0x0030 (0x0030 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates) == 0x000030, "Wrong size on BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates, K2Node_CreateDelegate_OutputDelegate_1) == 0x000010, "Member 'BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates, K2Node_CreateDelegate_OutputDelegate_2) == 0x000020, "Member 'BP_ContextualTraverse_Climb_Base_C_BindToAnimationStates::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.PlayAnimation
// 0x0038 (0x0038 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_PlayAnimation final
{
public:
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface;               // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_PC_ContextualTraverse_JumpDown_C*  K2Node_DynamicCast_AsABP_PC_Contextual_Traverse_Jump_Down; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_PlayAnimation");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation) == 0x000038, "Wrong size on BP_ContextualTraverse_Climb_Base_C_PlayAnimation");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation, CallFunc_GetAnimInstance_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_PlayAnimation::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation, CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Climb_Base_C_PlayAnimation::CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation, K2Node_DynamicCast_AsAnim_Interface) == 0x000010, "Member 'BP_ContextualTraverse_Climb_Base_C_PlayAnimation::K2Node_DynamicCast_AsAnim_Interface' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_ContextualTraverse_Climb_Base_C_PlayAnimation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation, K2Node_DynamicCast_AsABP_PC_Contextual_Traverse_Jump_Down) == 0x000028, "Member 'BP_ContextualTraverse_Climb_Base_C_PlayAnimation::K2Node_DynamicCast_AsABP_PC_Contextual_Traverse_Jump_Down' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_PlayAnimation, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'BP_ContextualTraverse_Climb_Base_C_PlayAnimation::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.CacheAndChangeCollision
// 0x0001 (0x0001 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_CacheAndChangeCollision final
{
public:
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_CacheAndChangeCollision) == 0x000001, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_CacheAndChangeCollision");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_CacheAndChangeCollision) == 0x000001, "Wrong size on BP_ContextualTraverse_Climb_Base_C_CacheAndChangeCollision");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_CacheAndChangeCollision, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_CacheAndChangeCollision::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.UserConstructionScript
// 0x0002 (0x0002 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_UserConstructionScript final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_UserConstructionScript) == 0x000001, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_UserConstructionScript");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_UserConstructionScript) == 0x000002, "Wrong size on BP_ContextualTraverse_Climb_Base_C_UserConstructionScript");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'BP_ContextualTraverse_Climb_Base_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Failed_D11DCA564D5D6CBEB55DD2A0F83C585D
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A0F83C585D final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A0F83C585D) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A0F83C585D");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A0F83C585D) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A0F83C585D");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A0F83C585D, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A0F83C585D::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Completed_D11DCA564D5D6CBEB55DD2A0F83C585D
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A0F83C585D final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A0F83C585D) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A0F83C585D");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A0F83C585D) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A0F83C585D");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A0F83C585D, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A0F83C585D::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnNotifyEnd_1821AC924A18A07761553782D7116892
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_1821AC924A18A07761553782D7116892 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_1821AC924A18A07761553782D7116892) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_1821AC924A18A07761553782D7116892");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_1821AC924A18A07761553782D7116892) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_1821AC924A18A07761553782D7116892");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_1821AC924A18A07761553782D7116892, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_1821AC924A18A07761553782D7116892::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnNotifyBegin_1821AC924A18A07761553782D7116892
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_1821AC924A18A07761553782D7116892 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_1821AC924A18A07761553782D7116892) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_1821AC924A18A07761553782D7116892");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_1821AC924A18A07761553782D7116892) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_1821AC924A18A07761553782D7116892");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_1821AC924A18A07761553782D7116892, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_1821AC924A18A07761553782D7116892::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnInterrupted_1821AC924A18A07761553782D7116892
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnInterrupted_1821AC924A18A07761553782D7116892 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnInterrupted_1821AC924A18A07761553782D7116892) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnInterrupted_1821AC924A18A07761553782D7116892");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnInterrupted_1821AC924A18A07761553782D7116892) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnInterrupted_1821AC924A18A07761553782D7116892");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnInterrupted_1821AC924A18A07761553782D7116892, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnInterrupted_1821AC924A18A07761553782D7116892::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnBlendOut_1821AC924A18A07761553782D7116892
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnBlendOut_1821AC924A18A07761553782D7116892 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnBlendOut_1821AC924A18A07761553782D7116892) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnBlendOut_1821AC924A18A07761553782D7116892");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnBlendOut_1821AC924A18A07761553782D7116892) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnBlendOut_1821AC924A18A07761553782D7116892");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnBlendOut_1821AC924A18A07761553782D7116892, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnBlendOut_1821AC924A18A07761553782D7116892::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnCompleted_1821AC924A18A07761553782D7116892
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnCompleted_1821AC924A18A07761553782D7116892 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnCompleted_1821AC924A18A07761553782D7116892) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnCompleted_1821AC924A18A07761553782D7116892");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnCompleted_1821AC924A18A07761553782D7116892) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnCompleted_1821AC924A18A07761553782D7116892");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnCompleted_1821AC924A18A07761553782D7116892, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnCompleted_1821AC924A18A07761553782D7116892::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Failed_D11DCA564D5D6CBEB55DD2A02A34C1D7::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Completed_D11DCA564D5D6CBEB55DD2A02A34C1D7::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Failed_504C1BF04BB165FEF37BA5ACD37C4FD3
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5ACD37C4FD3 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5ACD37C4FD3) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5ACD37C4FD3");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5ACD37C4FD3) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5ACD37C4FD3");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5ACD37C4FD3, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5ACD37C4FD3::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Completed_504C1BF04BB165FEF37BA5ACD37C4FD3
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5ACD37C4FD3 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5ACD37C4FD3) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5ACD37C4FD3");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5ACD37C4FD3) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5ACD37C4FD3");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5ACD37C4FD3, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5ACD37C4FD3::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnNotifyEnd_A127E6484024CC76B5C0869CFA1F05D5::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnNotifyBegin_A127E6484024CC76B5C0869CFA1F05D5::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnInterrupted_A127E6484024CC76B5C0869CFA1F05D5::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnBlendOut_A127E6484024CC76B5C0869CFA1F05D5::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnCompleted_A127E6484024CC76B5C0869CFA1F05D5
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnCompleted_A127E6484024CC76B5C0869CFA1F05D5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnCompleted_A127E6484024CC76B5C0869CFA1F05D5) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnCompleted_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnCompleted_A127E6484024CC76B5C0869CFA1F05D5) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnCompleted_A127E6484024CC76B5C0869CFA1F05D5");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnCompleted_A127E6484024CC76B5C0869CFA1F05D5, NotifyName) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnCompleted_A127E6484024CC76B5C0869CFA1F05D5::NotifyName' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Failed_504C1BF04BB165FEF37BA5AC4915A860
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5AC4915A860 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5AC4915A860) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5AC4915A860");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5AC4915A860) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5AC4915A860");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5AC4915A860, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Failed_504C1BF04BB165FEF37BA5AC4915A860::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.Completed_504C1BF04BB165FEF37BA5AC4915A860
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5AC4915A860 final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5AC4915A860) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5AC4915A860");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5AC4915A860) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5AC4915A860");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5AC4915A860, Montage) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_Completed_504C1BF04BB165FEF37BA5AC4915A860::Montage' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.OnCharacterSwitched
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_OnCharacterSwitched final
{
public:
	const class AOFPlayerCharacter*               Character;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_OnCharacterSwitched) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_OnCharacterSwitched");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_OnCharacterSwitched) == 0x000008, "Wrong size on BP_ContextualTraverse_Climb_Base_C_OnCharacterSwitched");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_OnCharacterSwitched, Character) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_OnCharacterSwitched::Character' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateColl_K2Node_ComponentBoundEvent_4_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ContextualTraverse_Climb_Base_C_BndEvt__BP_ContextualTraverse_Climb_Base_InteractActivateCollEnd_K2Node_ComponentBoundEvent_5_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ContextualTraverse_Climb_Base.BP_ContextualTraverse_Climb_Base_C.ExecuteUbergraph_BP_ContextualTraverse_Climb_Base
// 0x0460 (0x0460 - 0x0000)
struct BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x0044(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerCharactersEngineSubsystem*       CallFunc_GetEngineSubsystem_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_3;            // 0x006C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_5;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_4;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_4;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_5;            // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_3;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_2;                      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_6;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPiecesSavingEnabledSubsystem*          CallFunc_GetGameplaySessionSubsystem_ReturnValue;  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_8;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_9;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_11;           // 0x0150(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_12;           // 0x0168(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_1;                      // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_13;           // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x01B8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CA[0x6];                                      // 0x01CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_EnableCameraModifier_ReturnValue;         // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_6;                      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AOFPlayerCharacter* Character)> K2Node_CreateDelegate_OutputDelegate_15;           // 0x01FC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class AOFPlayerCharacter*               K2Node_CustomEvent_Character;                      // 0x0210(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_1;            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22A[0x2];                                      // 0x022A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_16;           // 0x022C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x023C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_2;            // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_7;                      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_17;           // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0270(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0280(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0290(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0328(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0338(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0348(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character_1;        // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_3;            // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x3];                                      // 0x03E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_18;           // 0x03EC(0x0010)(ZeroConstructor, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x03FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeMotionWarpPoint_WorldLocation;        // 0x0408(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0xC];                                      // 0x0414(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0420(0x0030)(IsPlainOldData, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1; // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0459(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base) == 0x000010, "Wrong alignment on BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base");
static_assert(sizeof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base) == 0x000460, "Wrong size on BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, EntryPoint) == 0x000000, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_8) == 0x000004, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_7) == 0x00000C, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_6) == 0x000024, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x00002C, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_5) == 0x00003C, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x000044, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, Temp_name_Variable) == 0x000054, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_GetEngineSubsystem_ReturnValue) == 0x000060, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_GetEngineSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000068, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000069, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_3) == 0x00006C, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage_5) == 0x000080, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage_5' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage_4) == 0x000088, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage_4' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_4) == 0x000090, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, Temp_object_Variable) == 0x0000A0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000A8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage_3) == 0x0000B8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage_2) == 0x0000C0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000C8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, Temp_object_Variable_1) == 0x0000D8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_GetGameplaySessionSubsystem_ReturnValue) == 0x0000E0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_GetGameplaySessionSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_4) == 0x0000E8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000F0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_3) == 0x000100, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_8) == 0x000108, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_2) == 0x000118, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_9) == 0x000120, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_1) == 0x000130, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_10) == 0x000138, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName) == 0x000148, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_11) == 0x000150, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, Temp_name_Variable_1) == 0x000160, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_12) == 0x000168, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_SwitchName_CmpSuccess) == 0x000178, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage_1) == 0x000180, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage) == 0x000188, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_13) == 0x000190, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, Temp_object_Variable_2) == 0x0001A0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, Temp_object_Variable_3) == 0x0001A8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0001B0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_14) == 0x0001B8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue) == 0x0001C8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_1) == 0x0001C9, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x0001D0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_2) == 0x0001D8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_EnableCameraModifier_ReturnValue) == 0x0001E0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_EnableCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage_6) == 0x0001E8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage_6' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_GetMontageByTag_ReturnValue) == 0x0001F0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_GetMontageByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_3) == 0x0001F8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001FC, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Character) == 0x000210, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_4) == 0x000218, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_GetMontageByTag_ReturnValue_1) == 0x000220, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_GetMontageByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_5) == 0x000228, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_6) == 0x000229, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_16) == 0x00022C, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_NotifyName_9) == 0x00023C, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_GetMontageByTag_ReturnValue_2) == 0x000248, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_GetMontageByTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_7) == 0x000250, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CustomEvent_Montage_7) == 0x000258, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CustomEvent_Montage_7' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_17) == 0x000260, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000270, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000278, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000280, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000288, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00028C, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000290, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_DynamicCast_AsBP_Player_Character) == 0x000318, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_DynamicCast_bSuccess) == 0x000320, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000328, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000330, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x000338, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000340, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_bFromSweep) == 0x000344, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_ComponentBoundEvent_SweepResult) == 0x000348, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_DynamicCast_AsBP_Player_Character_1) == 0x0003D0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_DynamicCast_AsBP_Player_Character_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_DynamicCast_bSuccess_1) == 0x0003D8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_GetMontageByTag_ReturnValue_3) == 0x0003E0, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_GetMontageByTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_8) == 0x0003E8, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, K2Node_CreateDelegate_OutputDelegate_18) == 0x0003EC, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0003FC, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_MakeMotionWarpPoint_WorldLocation) == 0x000408, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_MakeMotionWarpPoint_WorldLocation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_MakeTransform_ReturnValue) == 0x000420, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1) == 0x000450, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_IsValid_ReturnValue_9) == 0x000458, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base, CallFunc_BooleanAND_ReturnValue) == 0x000459, "Member 'BP_ContextualTraverse_Climb_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Climb_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

