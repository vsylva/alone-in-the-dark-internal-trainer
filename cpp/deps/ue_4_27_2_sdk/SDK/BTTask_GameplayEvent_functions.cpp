#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_GameplayEvent

#include "Basic.hpp"

#include "BTTask_GameplayEvent_classes.hpp"
#include "BTTask_GameplayEvent_parameters.hpp"


namespace SDK
{

// Function BTTask_GameplayEvent.BTTask_GameplayEvent_C.ExecuteUbergraph_BTTask_GameplayEvent
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_GameplayEvent_C::ExecuteUbergraph_BTTask_GameplayEvent(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_GameplayEvent_C", "ExecuteUbergraph_BTTask_GameplayEvent");

	Params::BTTask_GameplayEvent_C_ExecuteUbergraph_BTTask_GameplayEvent Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_GameplayEvent.BTTask_GameplayEvent_C.ReceiveExecuteAI
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AAIController*                    OwnerController                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APawn*                            ControlledPawn                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBTTask_GameplayEvent_C::ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_GameplayEvent_C", "ReceiveExecuteAI");

	Params::BTTask_GameplayEvent_C_ReceiveExecuteAI Parms{};

	Parms.OwnerController = OwnerController;
	Parms.ControlledPawn = ControlledPawn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BTTask_GameplayEvent.BTTask_GameplayEvent_C.GetInstigatorTags
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            TagContainer                                           (Parm, OutParm)

void UBTTask_GameplayEvent_C::GetInstigatorTags(class AActor* Actor, struct FGameplayTagContainer* TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_GameplayEvent_C", "GetInstigatorTags");

	Params::BTTask_GameplayEvent_C_GetInstigatorTags Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);
}


// Function BTTask_GameplayEvent.BTTask_GameplayEvent_C.GetTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

class AActor* UBTTask_GameplayEvent_C::GetTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_GameplayEvent_C", "GetTarget");

	Params::BTTask_GameplayEvent_C_GetTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BTTask_GameplayEvent.BTTask_GameplayEvent_C.GetTargetTags
// (Protected, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGameplayTagContainer            TagContainer                                           (Parm, OutParm)

void UBTTask_GameplayEvent_C::GetTargetTags(struct FGameplayTagContainer* TagContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BTTask_GameplayEvent_C", "GetTargetTags");

	Params::BTTask_GameplayEvent_C_GetTargetTags Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TagContainer != nullptr)
		*TagContainer = std::move(Parms.TagContainer);
}

}

