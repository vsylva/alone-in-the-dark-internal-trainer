#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CutsceneSkipIndicator

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.ExecuteUbergraph_WBP_CutsceneSkipIndicator
// 0x0158 (0x0158 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_CustomEvent_Texture;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_KeyString;                      // 0x0010(0x0018)()
	TDelegate<void(class UTexture2D* Texture, class FText KeyString)> K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0038(0x0018)()
	class UTexture2D*                             Temp_object_Variable;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0058(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A6[0x2];                                       // 0x00A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AOFPlayerController*                    CallFunc_GetObsidianFoxPlayerController_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_InputType;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetTextureAssociatedWithInputAction* CallFunc_GetTextureAssociatedWithInputAction_ReturnValue; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool IsGamepadType)>           K2Node_CreateDelegate_OutputDelegate_2;            // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bPressed;                             // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator) == 0x000008, "Wrong alignment on WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator) == 0x000158, "Wrong size on WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, EntryPoint) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_CustomEvent_Texture) == 0x000008, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_CustomEvent_Texture' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_CustomEvent_KeyString) == 0x000010, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_CustomEvent_KeyString' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, Temp_text_Variable) == 0x000038, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, Temp_object_Variable) == 0x000050, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_Event_MyGeometry) == 0x000058, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_Event_InDeltaTime) == 0x000090, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000098, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000A0, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_IsValid_ReturnValue) == 0x0000A4, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000A5, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000A8, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x0000B0, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000B8, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_FClamp_ReturnValue) == 0x0000BC, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000C0, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_PlayAnimation_ReturnValue) == 0x0000C8, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_PlayAnimation_ReturnValue_1) == 0x0000D0, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x0000D8, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_PlayAnimation_ReturnValue_2) == 0x0000E0, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_GetPlatformName_ReturnValue) == 0x0000E8, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_GetObsidianFoxPlayerController_ReturnValue) == 0x0000F8, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_GetObsidianFoxPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000100, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_CustomEvent_InputType) == 0x000101, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_CustomEvent_InputType' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_GetTextureAssociatedWithInputAction_ReturnValue) == 0x000108, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_GetTextureAssociatedWithInputAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_CreateDelegate_OutputDelegate_1) == 0x000110, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_IsValid_ReturnValue_1) == 0x000120, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_CreateDelegate_OutputDelegate_2) == 0x000124, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_Event_bPressed) == 0x000134, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_Event_bPressed' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x000138, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00013C, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, K2Node_CreateDelegate_OutputDelegate_3) == 0x000140, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_BooleanAND_ReturnValue) == 0x000150, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x000151, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator, CallFunc_BooleanAND_ReturnValue_1) == 0x000152, "Member 'WBP_CutsceneSkipIndicator_C_ExecuteUbergraph_WBP_CutsceneSkipIndicator::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.OnSkipCutscene
// 0x0001 (0x0001 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_OnSkipCutscene final
{
public:
	bool                                          bPressed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_OnSkipCutscene) == 0x000001, "Wrong alignment on WBP_CutsceneSkipIndicator_C_OnSkipCutscene");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_OnSkipCutscene) == 0x000001, "Wrong size on WBP_CutsceneSkipIndicator_C_OnSkipCutscene");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_OnSkipCutscene, bPressed) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_OnSkipCutscene::bPressed' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.SetKeyImage
// 0x0001 (0x0001 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_SetKeyImage final
{
public:
	bool                                          InputType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_SetKeyImage) == 0x000001, "Wrong alignment on WBP_CutsceneSkipIndicator_C_SetKeyImage");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_SetKeyImage) == 0x000001, "Wrong size on WBP_CutsceneSkipIndicator_C_SetKeyImage");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_SetKeyImage, InputType) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_SetKeyImage::InputType' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_CutsceneSkipIndicator_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_Tick) == 0x000004, "Wrong alignment on WBP_CutsceneSkipIndicator_C_Tick");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_Tick) == 0x00003C, "Wrong size on WBP_CutsceneSkipIndicator_C_Tick");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_CutsceneSkipIndicator_C_Tick::InDeltaTime' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B
// 0x0020 (0x0020 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   KeyString;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B) == 0x000008, "Wrong alignment on WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B) == 0x000020, "Wrong size on WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B, Texture) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B::Texture' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B, KeyString) == 0x000008, "Member 'WBP_CutsceneSkipIndicator_C_OnCompleted_06F9B0074858EC5BF2D4C88B1B97B93B::KeyString' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.SetAlphaValueOnProgressBar
// 0x0020 (0x0020 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar final
{
public:
	float                                         TimerLength;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar) == 0x000008, "Wrong alignment on WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar) == 0x000020, "Wrong size on WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar, TimerLength) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar::TimerLength' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar, DeltaTime) == 0x000004, "Member 'WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar::DeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar, CallFunc_FClamp_ReturnValue) == 0x000010, "Member 'WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'WBP_CutsceneSkipIndicator_C_SetAlphaValueOnProgressBar::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.UpdateFadeToBlack
// 0x0028 (0x0028 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EndTime;                                           // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SmoothStep_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack) == 0x000008, "Wrong alignment on WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack) == 0x000028, "Wrong size on WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, Alpha) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::Alpha' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, EndTime) == 0x000004, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::EndTime' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000008, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, CallFunc_GetEndTime_ReturnValue) == 0x000014, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, CallFunc_SmoothStep_ReturnValue) == 0x000018, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::CallFunc_SmoothStep_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000020, "Member 'WBP_CutsceneSkipIndicator_C_UpdateFadeToBlack::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.FadeOutSkipBlackScreen
// 0x0018 (0x0018 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen final
{
public:
	bool                                          UseCurrentPositionAsStart;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAnimationCurrentTime_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen) == 0x000008, "Wrong alignment on WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen) == 0x000018, "Wrong size on WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen, UseCurrentPositionAsStart) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen::UseCurrentPositionAsStart' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen, CallFunc_GetAnimationCurrentTime_ReturnValue) == 0x000004, "Member 'WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen::CallFunc_GetAnimationCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen, CallFunc_PlayAnimation_ReturnValue) == 0x000010, "Member 'WBP_CutsceneSkipIndicator_C_FadeOutSkipBlackScreen::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function WBP_CutsceneSkipIndicator.WBP_CutsceneSkipIndicator_C.GetSkipButtonVisibility
// 0x0008 (0x0008 - 0x0000)
struct WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAutoDestroyActive_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility) == 0x000001, "Wrong alignment on WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility");
static_assert(sizeof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility) == 0x000008, "Wrong size on WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, ReturnValue) == 0x000000, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, Temp_bool_Variable) == 0x000001, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, Temp_byte_Variable) == 0x000002, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, Temp_byte_Variable_1) == 0x000003, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, CallFunc_IsAutoDestroyActive_ReturnValue) == 0x000004, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::CallFunc_IsAutoDestroyActive_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility, K2Node_Select_Default) == 0x000007, "Member 'WBP_CutsceneSkipIndicator_C_GetSkipButtonVisibility::K2Node_Select_Default' has a wrong offset!");

}

