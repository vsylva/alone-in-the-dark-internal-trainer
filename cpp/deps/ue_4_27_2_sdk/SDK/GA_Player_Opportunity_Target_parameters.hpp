#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Player_Opportunity_Target

#include "Basic.hpp"

#include "PiecesGameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.ExecuteUbergraph_GA_Player_Opportunity_Target
// 0x0720 (0x0720 - 0x0000)
struct GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0018(0x00B0)()
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C8(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Data_1;                         // 0x0188(0x0028)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Data)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01B0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_Data;                           // 0x01C0(0x0028)(ConstParm)
	TDelegate<void(struct FGameplayAbilityTargetDataHandle& Data)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01E8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayAbilityTargetDataHandle       Temp_struct_Variable_1;                            // 0x01F8(0x0028)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0220(0x0010)(ZeroConstructor, NoDestructor)
	struct FHitResult                             CallFunc_Project_Projectile_Path_OutHit;           // 0x0230(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<struct FVector>                        CallFunc_Project_Projectile_Path_OutPathPositions; // 0x02B8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Project_Projectile_Path_LastTraceDestination; // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0x4];                                      // 0x02D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x02E0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool Value, float ElapsedTime, float TriggeredSeconds)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0300(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_value;                          // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ElapsedTime;                    // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_TriggeredSeconds;               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0328(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x0348(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_9;            // 0x0358(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0368(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x0378(0x0010)(ZeroConstructor, NoDestructor)
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         K2Node_CustomEvent_LoadedAssets;                   // 0x0390(0x0010)(ConstParm, ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Effect;         // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload_1;                      // 0x03B8(0x00B0)()
	struct FGameplayEventData                     K2Node_CustomEvent_GameplayEventData;              // 0x0468(0x00B0)(ConstParm)
	struct FGameplayAbilityTargetDataHandle       K2Node_CustomEvent_TargetData;                     // 0x0518(0x0028)(ConstParm)
	class ABP_OpportunityPickup_C*                K2Node_DynamicCast_AsBP_Opportunity_Pickup;        // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_EnableCameraModifier_ReturnValue;         // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_558[0x8];                                      // 0x0558(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayAbilityTargetingLocationInfo  CallFunc_MakeTargetLocationInfoFromOwnerActor_ReturnValue; // 0x0560(0x0070)(ContainsInstancedReference)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x05D0(0x0010)(ZeroConstructor, NoDestructor)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x05E0(0x0010)(ReferenceParm)
	struct FGameplayTargetDataFilterHandle        CallFunc_GetTargetFilter_ReturnValue;              // 0x05F0(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602[0x6];                                      // 0x0602(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitTargetData*            CallFunc_WaitTargetData_ReturnValue;               // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0610(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_611[0x7];                                      // 0x0611(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameplayAbilityTargetActor*            CallFunc_BeginSpawningActor_SpawnedActor;          // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BeginSpawningActor_ReturnValue;           // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0622(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_623[0x5];                                      // 0x0623(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitInputActionAll*        CallFunc_WaitInputActionTriggered_ReturnValue;     // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(TArray<class UClass*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x0630(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0641(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_642[0x6];                                      // 0x0642(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue_1;          // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_WaitInputActionTriggered_Bool* CallFunc_WaitInputActionTriggered_ReturnValue_1;   // 0x0650(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_65A[0x6];                                      // 0x065A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     Temp_struct_Variable_2;                            // 0x0660(0x00B0)()
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target) == 0x000010, "Wrong alignment on GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target");
static_assert(sizeof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target) == 0x000720, "Wrong size on GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, EntryPoint) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_Payload) == 0x000018, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, Temp_struct_Variable) == 0x0000C8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000178, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_Data_1) == 0x000188, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_Data_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001B0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_Data) == 0x0001C0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_Data' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001E8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, Temp_struct_Variable_1) == 0x0001F8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_3) == 0x000220, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_Project_Projectile_Path_OutHit) == 0x000230, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_Project_Projectile_Path_OutHit' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_Project_Projectile_Path_OutPathPositions) == 0x0002B8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_Project_Projectile_Path_OutPathPositions' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_Project_Projectile_Path_LastTraceDestination) == 0x0002C8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_Project_Projectile_Path_LastTraceDestination' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_WaitDelay_ReturnValue) == 0x0002D8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_4) == 0x0002E0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_1) == 0x0002F0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x0002F8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_5) == 0x000300, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_2) == 0x000310, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_value) == 0x000311, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_value' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_ElapsedTime) == 0x000314, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_TriggeredSeconds) == 0x000318, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_TriggeredSeconds' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, Temp_float_Variable) == 0x00031C, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, Temp_float_Variable_1) == 0x000320, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, Temp_bool_Variable) == 0x000324, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_6) == 0x000328, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_7) == 0x000338, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_8) == 0x000348, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_9) == 0x000358, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_10) == 0x000368, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_11) == 0x000378, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000388, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_LoadedAssets) == 0x000390, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_LoadedAssets' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_Array_Get_Item) == 0x0003A0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_ClassDynamicCast_AsGameplay_Effect) == 0x0003A8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_ClassDynamicCast_AsGameplay_Effect' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_ClassDynamicCast_bSuccess) == 0x0003B0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_Payload_1) == 0x0003B8, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_Payload_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_GameplayEventData) == 0x000468, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CustomEvent_TargetData) == 0x000518, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CustomEvent_TargetData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_DynamicCast_AsBP_Opportunity_Pickup) == 0x000540, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_DynamicCast_AsBP_Opportunity_Pickup' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_DynamicCast_bSuccess) == 0x000548, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_EnableCameraModifier_ReturnValue) == 0x000550, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_EnableCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_MakeTargetLocationInfoFromOwnerActor_ReturnValue) == 0x000560, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_MakeTargetLocationInfoFromOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_12) == 0x0005D0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_MakeArray_Array) == 0x0005E0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_GetTargetFilter_ReturnValue) == 0x0005F0, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_GetTargetFilter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_3) == 0x000600, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_K2_CommitAbility_ReturnValue) == 0x000601, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_WaitTargetData_ReturnValue) == 0x000608, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_WaitTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_4) == 0x000610, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_BeginSpawningActor_SpawnedActor) == 0x000618, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_BeginSpawningActor_SpawnedActor' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_BeginSpawningActor_ReturnValue) == 0x000620, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_BeginSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_5) == 0x000621, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_Event_bWasCancelled) == 0x000622, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_WaitInputActionTriggered_ReturnValue) == 0x000628, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_WaitInputActionTriggered_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, K2Node_CreateDelegate_OutputDelegate_13) == 0x000630, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_6) == 0x000640, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_7) == 0x000641, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_WaitGameplayEvent_ReturnValue_1) == 0x000648, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_WaitGameplayEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_WaitInputActionTriggered_ReturnValue_1) == 0x000650, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_WaitInputActionTriggered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_8) == 0x000658, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_IsValid_ReturnValue_9) == 0x000659, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, Temp_struct_Variable_2) == 0x000660, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000710, "Member 'GA_Player_Opportunity_Target_C_ExecuteUbergraph_GA_Player_Opportunity_Target::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Player_Opportunity_Target_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Player_Opportunity_Target_C_K2_OnEndAbility");
static_assert(sizeof(GA_Player_Opportunity_Target_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Player_Opportunity_Target_C_K2_OnEndAbility");
static_assert(offsetof(GA_Player_Opportunity_Target_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Throw
// 0x0028 (0x0028 - 0x0000)
struct GA_Player_Opportunity_Target_C_Throw final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Throw) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Throw");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Throw) == 0x000028, "Wrong size on GA_Player_Opportunity_Target_C_Throw");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Throw, TargetData) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Throw::TargetData' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Opporunity Grabbed
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Player_Opportunity_Target_C_Opporunity_Grabbed final
{
public:
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Opporunity_Grabbed) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Opporunity_Grabbed");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Opporunity_Grabbed) == 0x0000B0, "Wrong size on GA_Player_Opportunity_Target_C_Opporunity_Grabbed");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Opporunity_Grabbed, GameplayEventData) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Opporunity_Grabbed::GameplayEventData' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A
// 0x0010 (0x0010 - 0x0000)
struct GA_Player_Opportunity_Target_C_LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A final
{
public:
	TArray<class UClass*>                         LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A");
static_assert(sizeof(GA_Player_Opportunity_Target_C_LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A) == 0x000010, "Wrong size on GA_Player_Opportunity_Target_C_LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A");
static_assert(offsetof(GA_Player_Opportunity_Target_C_LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A, LoadedAssets) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_LoadCompleteDelegate_3C97D07D41CF080C7294069359CD008A::LoadedAssets' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Triggered_3BA3748F4DF5EF752C243D839B43ABDC
// 0x000C (0x000C - 0x0000)
struct GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ElapsedTime;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredSeconds;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC) == 0x000004, "Wrong alignment on GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC) == 0x00000C, "Wrong size on GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC, Value) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC::Value' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC, ElapsedTime) == 0x000004, "Member 'GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC::ElapsedTime' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC, TriggeredSeconds) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_Triggered_3BA3748F4DF5EF752C243D839B43ABDC::TriggeredSeconds' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.ValidData_D29F2F3E47671C62A7094DBE01DA27C4
// 0x0028 (0x0028 - 0x0000)
struct GA_Player_Opportunity_Target_C_ValidData_D29F2F3E47671C62A7094DBE01DA27C4 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_ValidData_D29F2F3E47671C62A7094DBE01DA27C4) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_ValidData_D29F2F3E47671C62A7094DBE01DA27C4");
static_assert(sizeof(GA_Player_Opportunity_Target_C_ValidData_D29F2F3E47671C62A7094DBE01DA27C4) == 0x000028, "Wrong size on GA_Player_Opportunity_Target_C_ValidData_D29F2F3E47671C62A7094DBE01DA27C4");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ValidData_D29F2F3E47671C62A7094DBE01DA27C4, Data) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_ValidData_D29F2F3E47671C62A7094DBE01DA27C4::Data' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Cancelled_D29F2F3E47671C62A7094DBE01DA27C4
// 0x0028 (0x0028 - 0x0000)
struct GA_Player_Opportunity_Target_C_Cancelled_D29F2F3E47671C62A7094DBE01DA27C4 final
{
public:
	struct FGameplayAbilityTargetDataHandle       Data;                                              // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Cancelled_D29F2F3E47671C62A7094DBE01DA27C4) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Cancelled_D29F2F3E47671C62A7094DBE01DA27C4");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Cancelled_D29F2F3E47671C62A7094DBE01DA27C4) == 0x000028, "Wrong size on GA_Player_Opportunity_Target_C_Cancelled_D29F2F3E47671C62A7094DBE01DA27C4");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Cancelled_D29F2F3E47671C62A7094DBE01DA27C4, Data) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Cancelled_D29F2F3E47671C62A7094DBE01DA27C4::Data' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.EventReceived_9CE976F042CB624002D9E6B37C1EC3FD
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Player_Opportunity_Target_C_EventReceived_9CE976F042CB624002D9E6B37C1EC3FD final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_EventReceived_9CE976F042CB624002D9E6B37C1EC3FD) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_EventReceived_9CE976F042CB624002D9E6B37C1EC3FD");
static_assert(sizeof(GA_Player_Opportunity_Target_C_EventReceived_9CE976F042CB624002D9E6B37C1EC3FD) == 0x0000B0, "Wrong size on GA_Player_Opportunity_Target_C_EventReceived_9CE976F042CB624002D9E6B37C1EC3FD");
static_assert(offsetof(GA_Player_Opportunity_Target_C_EventReceived_9CE976F042CB624002D9E6B37C1EC3FD, Payload) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_EventReceived_9CE976F042CB624002D9E6B37C1EC3FD::Payload' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Player_Opportunity_Target_C_EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D");
static_assert(sizeof(GA_Player_Opportunity_Target_C_EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D) == 0x0000B0, "Wrong size on GA_Player_Opportunity_Target_C_EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D");
static_assert(offsetof(GA_Player_Opportunity_Target_C_EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D, Payload) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_EventReceived_B40B24FA4C5DD181A7380E85AF9DA26D::Payload' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.CalculateThrowSpread
// 0x0014 (0x0014 - 0x0000)
struct GA_Player_Opportunity_Target_C_CalculateThrowSpread final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_CalculateThrowSpread) == 0x000004, "Wrong alignment on GA_Player_Opportunity_Target_C_CalculateThrowSpread");
static_assert(sizeof(GA_Player_Opportunity_Target_C_CalculateThrowSpread) == 0x000014, "Wrong size on GA_Player_Opportunity_Target_C_CalculateThrowSpread");
static_assert(offsetof(GA_Player_Opportunity_Target_C_CalculateThrowSpread, ReturnValue) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_CalculateThrowSpread::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_CalculateThrowSpread, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'GA_Player_Opportunity_Target_C_CalculateThrowSpread::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_CalculateThrowSpread, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_CalculateThrowSpread::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_CalculateThrowSpread, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00000C, "Member 'GA_Player_Opportunity_Target_C_CalculateThrowSpread::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_CalculateThrowSpread, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'GA_Player_Opportunity_Target_C_CalculateThrowSpread::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Establish Camera Modifier
// 0x0040 (0x0040 - 0x0000)
struct GA_Player_Opportunity_Target_C_Establish_Camera_Modifier final
{
public:
	class UClass*                                 CameraModifierClass;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_AddNewCameraModifier_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Establish_Camera_Modifier");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier) == 0x000040, "Wrong size on GA_Player_Opportunity_Target_C_Establish_Camera_Modifier");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, CameraModifierClass) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::CameraModifierClass' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, ReturnValue) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, CallFunc_IsValidClass_ReturnValue) == 0x000010, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000018, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000020, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000028, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, CallFunc_AddNewCameraModifier_ReturnValue) == 0x000030, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::CallFunc_AddNewCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Establish_Camera_Modifier, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'GA_Player_Opportunity_Target_C_Establish_Camera_Modifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Remove Camera modifier
// 0x0010 (0x0010 - 0x0000)
struct GA_Player_Opportunity_Target_C_Remove_Camera_modifier final
{
public:
	class UCameraModifier*                        CameraModifierRef;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          bImmediate;                                        // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Remove_Camera_modifier) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Remove_Camera_modifier");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Remove_Camera_modifier) == 0x000010, "Wrong size on GA_Player_Opportunity_Target_C_Remove_Camera_modifier");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Remove_Camera_modifier, CameraModifierRef) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Remove_Camera_modifier::CameraModifierRef' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Remove_Camera_modifier, bImmediate) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_Remove_Camera_modifier::bImmediate' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Remove_Camera_modifier, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'GA_Player_Opportunity_Target_C_Remove_Camera_modifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.ApplyFocusWalkGE
// 0x000C (0x000C - 0x0000)
struct GA_Player_Opportunity_Target_C_ApplyFocusWalkGE final
{
public:
	int32                                         CallFunc_GetAbilityLevel_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_ApplyFocusWalkGE) == 0x000004, "Wrong alignment on GA_Player_Opportunity_Target_C_ApplyFocusWalkGE");
static_assert(sizeof(GA_Player_Opportunity_Target_C_ApplyFocusWalkGE) == 0x00000C, "Wrong size on GA_Player_Opportunity_Target_C_ApplyFocusWalkGE");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ApplyFocusWalkGE, CallFunc_GetAbilityLevel_ReturnValue) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_ApplyFocusWalkGE::CallFunc_GetAbilityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_ApplyFocusWalkGE, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000004, "Member 'GA_Player_Opportunity_Target_C_ApplyFocusWalkGE::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.InitializeOpportunityThrowingValues
// 0x0178 (0x0178 - 0x0000)
struct GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	float                                         CallFunc_CalculateThrowSpread_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x002C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x00B8(0x0010)(ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0118(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TargetDataHasActor_ReturnValue;           // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues");
static_assert(sizeof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues) == 0x000178, "Wrong size on GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, TargetData) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_CalculateThrowSpread_ReturnValue) == 0x000028, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_CalculateThrowSpread_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x00002C, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x0000B8, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C8, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C9, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_Time) == 0x0000CC, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_Distance) == 0x0000D0, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_Location) == 0x0000D4, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E0, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_Normal) == 0x0000EC, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F8, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_PhysMat) == 0x000108, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_HitActor) == 0x000110, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_HitComponent) == 0x000118, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_HitBoneName) == 0x000120, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_ElementIndex) == 0x00012C, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_FaceIndex) == 0x000130, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_TraceStart) == 0x000134, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_BreakHitResult_TraceEnd) == 0x000140, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_Array_Get_Item) == 0x000150, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_SelectVector_ReturnValue) == 0x000158, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, K2Node_DynamicCast_AsCharacter) == 0x000168, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, K2Node_DynamicCast_bSuccess) == 0x000170, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues, CallFunc_TargetDataHasActor_ReturnValue) == 0x000171, "Member 'GA_Player_Opportunity_Target_C_InitializeOpportunityThrowingValues::CallFunc_TargetDataHasActor_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Project Projectile Path
// 0x0340 (0x0340 - 0x0000)
struct GA_Player_Opportunity_Target_C_Project_Projectile_Path final
{
public:
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FHitResult                             OutHit;                                            // 0x0028(0x0088)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TArray<struct FVector>                        OutPathPositions;                                  // 0x00B0(0x0010)(Parm, OutParm)
	struct FVector                                LastTraceDestination;                              // 0x00C0(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TargetDataHasActor_ReturnValue;           // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_GetHitResultFromTargetData_ReturnValue;   // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x015A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15B[0x1];                                      // 0x015B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetActorsFromTargetData_ReturnValue;      // 0x01E0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetArcingAimStartLocation_ReturnValue;    // 0x01F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetArcingAimStartLocation_ReturnValue_1;  // 0x0208(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Default_Projectile_Arc_Velocity;      // 0x0240(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x024C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0268(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_SuggestProjectileVelocityByProfile_TossVelocity; // 0x0278(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SuggestProjectileVelocityByProfile_ReturnValue; // 0x0284(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_285[0x3];                                      // 0x0285(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0288(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutHit; // 0x0294(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutPathPositions; // 0x0320(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutLastTraceDestination; // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_ReturnValue; // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Project_Projectile_Path) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Project_Projectile_Path");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Project_Projectile_Path) == 0x000340, "Wrong size on GA_Player_Opportunity_Target_C_Project_Projectile_Path");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, TargetData) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, OutHit) == 0x000028, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::OutHit' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, OutPathPositions) == 0x0000B0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::OutPathPositions' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, LastTraceDestination) == 0x0000C0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::LastTraceDestination' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_TargetDataHasActor_ReturnValue) == 0x0000CC, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_TargetDataHasActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetHitResultFromTargetData_ReturnValue) == 0x0000D0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetHitResultFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BooleanAND_ReturnValue) == 0x000158, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_bBlockingHit) == 0x000159, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_bInitialOverlap) == 0x00015A, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_Time) == 0x00015C, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_Distance) == 0x000160, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_Location) == 0x000164, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_ImpactPoint) == 0x000170, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_Normal) == 0x00017C, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_ImpactNormal) == 0x000188, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_PhysMat) == 0x000198, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_HitActor) == 0x0001A0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_HitComponent) == 0x0001A8, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_HitBoneName) == 0x0001B0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_TraceStart) == 0x0001C4, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_BreakHitResult_TraceEnd) == 0x0001D0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetActorsFromTargetData_ReturnValue) == 0x0001E0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetArcingAimStartLocation_ReturnValue) == 0x0001F0, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetArcingAimStartLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_Array_Get_Item) == 0x000200, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetArcingAimStartLocation_ReturnValue_1) == 0x000208, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetArcingAimStartLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, K2Node_DynamicCast_AsCharacter) == 0x000218, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000228, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000230, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetSocketLocation_ReturnValue) == 0x000234, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_Get_Default_Projectile_Arc_Velocity) == 0x000240, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_Get_Default_Projectile_Arc_Velocity' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_VInterpTo_ReturnValue) == 0x00024C, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000258, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_VInterpTo_ReturnValue_1) == 0x00025C, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, K2Node_MakeArray_Array) == 0x000268, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_SuggestProjectileVelocityByProfile_TossVelocity) == 0x000278, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_SuggestProjectileVelocityByProfile_TossVelocity' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_SuggestProjectileVelocityByProfile_ReturnValue) == 0x000284, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_SuggestProjectileVelocityByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_SelectVector_ReturnValue) == 0x000288, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutHit) == 0x000294, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutHit' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutPathPositions) == 0x000320, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutPathPositions' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutLastTraceDestination) == 0x000330, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_OutLastTraceDestination' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Project_Projectile_Path, CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_ReturnValue) == 0x00033C, "Member 'GA_Player_Opportunity_Target_C_Project_Projectile_Path::CallFunc_Blueprint_PredictProjectilePath_ByTraceChannel_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Resolve Hit Gameplay Effect
// 0x0040 (0x0040 - 0x0000)
struct GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect final
{
public:
	class UClass*                                 Gameplay_Effect;                                   // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<TSoftClassPtr<class UClass>>           K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ReferenceParm)
	TArray<class UClass*>                         CallFunc_LoadClasses_ReturnValue;                  // 0x0018(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsGameplay_Effect;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect) == 0x000040, "Wrong size on GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect, Gameplay_Effect) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect::Gameplay_Effect' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect, K2Node_MakeArray_Array) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect, CallFunc_LoadClasses_ReturnValue) == 0x000018, "Member 'GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect::CallFunc_LoadClasses_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect, CallFunc_Array_Get_Item) == 0x000028, "Member 'GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect, K2Node_ClassDynamicCast_AsGameplay_Effect) == 0x000030, "Member 'GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect::K2Node_ClassDynamicCast_AsGameplay_Effect' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect, K2Node_ClassDynamicCast_bSuccess) == 0x000038, "Member 'GA_Player_Opportunity_Target_C_Resolve_Hit_Gameplay_Effect::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.GetArcingAimStartLocation
// 0x0078 (0x0078 - 0x0000)
struct GA_Player_Opportunity_Target_C_GetArcingAimStartLocation final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_GetArcingAimStartLocation");
static_assert(sizeof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation) == 0x000078, "Wrong size on GA_Player_Opportunity_Target_C_GetArcingAimStartLocation");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, ReturnValue) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x000010, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000018, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_GetActorRightVector_ReturnValue) == 0x000024, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00003C, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000048, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_Add_VectorVector_ReturnValue) == 0x000054, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000060, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetArcingAimStartLocation, CallFunc_Add_VectorVector_ReturnValue_2) == 0x00006C, "Member 'GA_Player_Opportunity_Target_C_GetArcingAimStartLocation::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.AddArchComponents
// 0x0090 (0x0090 - 0x0000)
struct GA_Player_Opportunity_Target_C_AddArchComponents final
{
public:
	class USplineMeshComponent*                   CallFunc_AddComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   CallFunc_AddComponentByClass_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       CallFunc_AddComponentByClass_ReturnValue_2;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_AddArchComponents) == 0x000010, "Wrong alignment on GA_Player_Opportunity_Target_C_AddArchComponents");
static_assert(sizeof(GA_Player_Opportunity_Target_C_AddArchComponents) == 0x000090, "Wrong size on GA_Player_Opportunity_Target_C_AddArchComponents");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_AddComponentByClass_ReturnValue) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_AddComponentByClass_ReturnValue_1) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_AddComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_SetStaticMesh_ReturnValue) == 0x000010, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_AddComponentByClass_ReturnValue_2) == 0x000018, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_AddComponentByClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, Temp_int_Variable) == 0x000020, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000024, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000030, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000038, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000080, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddArchComponents, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000088, "Member 'GA_Player_Opportunity_Target_C_AddArchComponents::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.UpdateArchComponents
// 0x01A8 (0x01A8 - 0x0000)
struct GA_Player_Opportunity_Target_C_UpdateArchComponents final
{
public:
	TArray<struct FVector>                        Points;                                            // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<struct FVector>                        Array;                                             // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_1; // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1; // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x007C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0110(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_UpdateArchComponents) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_UpdateArchComponents");
static_assert(sizeof(GA_Player_Opportunity_Target_C_UpdateArchComponents) == 0x0001A8, "Wrong size on GA_Player_Opportunity_Target_C_UpdateArchComponents");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, Points) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::Points' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, Array) == 0x000010, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::Array' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_Array_Get_Item) == 0x000024, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000040, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x00004C, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_GetLocationAndTangentAtSplinePoint_Location_1) == 0x000058, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_GetLocationAndTangentAtSplinePoint_Location_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1) == 0x000064, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000074, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_Subtract_IntInt_ReturnValue) == 0x000078, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x00007C, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000104, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000110, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, Temp_int_Loop_Counter_Variable) == 0x000198, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_Less_IntInt_ReturnValue) == 0x00019C, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_UpdateArchComponents, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A0, "Member 'GA_Player_Opportunity_Target_C_UpdateArchComponents::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.IncreaseThrowRange
// 0x0010 (0x0010 - 0x0000)
struct GA_Player_Opportunity_Target_C_IncreaseThrowRange final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_IncreaseThrowRange) == 0x000004, "Wrong alignment on GA_Player_Opportunity_Target_C_IncreaseThrowRange");
static_assert(sizeof(GA_Player_Opportunity_Target_C_IncreaseThrowRange) == 0x000010, "Wrong size on GA_Player_Opportunity_Target_C_IncreaseThrowRange");
static_assert(offsetof(GA_Player_Opportunity_Target_C_IncreaseThrowRange, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_IncreaseThrowRange::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_IncreaseThrowRange, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000004, "Member 'GA_Player_Opportunity_Target_C_IncreaseThrowRange::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_IncreaseThrowRange, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_IncreaseThrowRange::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_IncreaseThrowRange, CallFunc_FClamp_ReturnValue) == 0x00000C, "Member 'GA_Player_Opportunity_Target_C_IncreaseThrowRange::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Create Effect Spec
// 0x00D8 (0x00D8 - 0x0000)
struct GA_Player_Opportunity_Target_C_Create_Effect_Spec final
{
public:
	TSubclassOf<class UGameplayEffect>            GameplayEffectClass;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FGameplayAbilityTargetDataHandle       TargetData;                                        // 0x0008(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayEffectSpecHandle              Gameplay_Effect_Spec;                              // 0x0030(0x0010)(Parm, OutParm)
	struct FGameplayEffectContextHandle           Gameplay_Effect_Context;                           // 0x0040(0x0018)(Parm, OutParm)
	struct FGameplayEffectContextHandle           GE_Context_Handle;                                 // 0x0058(0x0018)(Edit, BlueprintVisible)
	struct FGameplayEffectSpecHandle              GE_Spec_Handle;                                    // 0x0070(0x0010)(Edit, BlueprintVisible)
	TArray<struct FHitResult>                     CallFunc_GetAllHitResultsFromTargetData_ReturnValue; // 0x0080(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue; // 0x0090(0x0010)()
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectContextHandle           CallFunc_SetOpportunityEffectContext_ReturnValue;  // 0x00A8(0x0018)()
	struct FGameplayEffectContextHandle           CallFunc_GetEffectContext_ReturnValue;             // 0x00C0(0x0018)()
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Create_Effect_Spec) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Create_Effect_Spec");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Create_Effect_Spec) == 0x0000D8, "Wrong size on GA_Player_Opportunity_Target_C_Create_Effect_Spec");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, GameplayEffectClass) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::GameplayEffectClass' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, TargetData) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::TargetData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, Gameplay_Effect_Spec) == 0x000030, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::Gameplay_Effect_Spec' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, Gameplay_Effect_Context) == 0x000040, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::Gameplay_Effect_Context' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, GE_Context_Handle) == 0x000058, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::GE_Context_Handle' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, GE_Spec_Handle) == 0x000070, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::GE_Spec_Handle' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, CallFunc_GetAllHitResultsFromTargetData_ReturnValue) == 0x000080, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::CallFunc_GetAllHitResultsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue) == 0x000090, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::CallFunc_MakeOutgoingGameplayEffectSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0000A0, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, CallFunc_SetOpportunityEffectContext_ReturnValue) == 0x0000A8, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::CallFunc_SetOpportunityEffectContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Create_Effect_Spec, CallFunc_GetEffectContext_ReturnValue) == 0x0000C0, "Member 'GA_Player_Opportunity_Target_C_Create_Effect_Spec::CallFunc_GetEffectContext_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.AddHitReactionToTarget
// 0x0108 (0x0108 - 0x0000)
struct GA_Player_Opportunity_Target_C_AddHitReactionToTarget final
{
public:
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FGameplayEffectContextHandle           ContextHandle;                                     // 0x00B0(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UHitReactionDataObject_C*               CallFunc_MakeHitReactionDataObject_ReturnValue;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsFromTargetData_ReturnValue;   // 0x00E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_AddHitReactionToTarget");
static_assert(sizeof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget) == 0x000108, "Wrong size on GA_Player_Opportunity_Target_C_AddHitReactionToTarget");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, GameplayEventData) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, ContextHandle) == 0x0000B0, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::ContextHandle' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, Temp_int_Array_Index_Variable) == 0x0000C8, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, Temp_int_Loop_Counter_Variable) == 0x0000CC, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, CallFunc_Add_IntInt_ReturnValue) == 0x0000D0, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, CallFunc_MakeHitReactionDataObject_ReturnValue) == 0x0000D8, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::CallFunc_MakeHitReactionDataObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, CallFunc_GetAllActorsFromTargetData_ReturnValue) == 0x0000E0, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::CallFunc_GetAllActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, CallFunc_Array_Get_Item) == 0x0000F8, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_AddHitReactionToTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'GA_Player_Opportunity_Target_C_AddHitReactionToTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Add Force Feedback
// 0x0160 (0x0160 - 0x0000)
struct GA_Player_Opportunity_Target_C_Add_Force_Feedback final
{
public:
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsFromTargetData_ReturnValue;   // 0x00B8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_AsPawn;                         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue;   // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayAbilityActorInfo              CallFunc_GetActorInfo_ReturnValue;                 // 0x0100(0x0048)(ContainsInstancedReference)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponentFromActorInfo_ReturnValue; // 0x0148(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadLastInputTypeUsed_ReturnValue;   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UForceFeedbackComponent*                CallFunc_SpawnForceFeedbackAttached_ReturnValue_1; // 0x0158(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Add_Force_Feedback) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Add_Force_Feedback");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Add_Force_Feedback) == 0x000160, "Wrong size on GA_Player_Opportunity_Target_C_Add_Force_Feedback");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, GameplayEventData) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, Temp_int_Array_Index_Variable) == 0x0000B0, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_GetAllActorsFromTargetData_ReturnValue) == 0x0000B8, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_GetAllActorsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_Array_Length_ReturnValue) == 0x0000D0, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, K2Node_DynamicCast_AsPawn) == 0x0000D8, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::K2Node_DynamicCast_AsPawn' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, K2Node_DynamicCast_bSuccess) == 0x0000E0, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, Temp_int_Loop_Counter_Variable) == 0x0000E4, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000E8, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_SpawnForceFeedbackAttached_ReturnValue) == 0x0000F0, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_SpawnForceFeedbackAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_Add_IntInt_ReturnValue) == 0x0000FC, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_GetActorInfo_ReturnValue) == 0x000100, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_GetActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_GetOwningComponentFromActorInfo_ReturnValue) == 0x000148, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_GetOwningComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_IsGamepadLastInputTypeUsed_ReturnValue) == 0x000150, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_IsGamepadLastInputTypeUsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Add_Force_Feedback, CallFunc_SpawnForceFeedbackAttached_ReturnValue_1) == 0x000158, "Member 'GA_Player_Opportunity_Target_C_Add_Force_Feedback::CallFunc_SpawnForceFeedbackAttached_ReturnValue_1' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.Apply Hit Effects On Target
// 0x00F0 (0x00F0 - 0x0000)
struct GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target final
{
public:
	struct FGameplayEventData                     GameplayEventData;                                 // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UClass*                                 CallFunc_Resolve_Hit_Gameplay_Effect_Gameplay_Effect; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_Create_Effect_Spec_Gameplay_Effect_Spec;  // 0x00B8(0x0010)()
	struct FGameplayEffectContextHandle           CallFunc_Create_Effect_Spec_Gameplay_Effect_Context; // 0x00C8(0x0018)()
	TArray<struct FActiveGameplayEffectHandle>    CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue; // 0x00E0(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target");
static_assert(sizeof(GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target) == 0x0000F0, "Wrong size on GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target, GameplayEventData) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target::GameplayEventData' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target, CallFunc_Resolve_Hit_Gameplay_Effect_Gameplay_Effect) == 0x0000B0, "Member 'GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target::CallFunc_Resolve_Hit_Gameplay_Effect_Gameplay_Effect' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target, CallFunc_Create_Effect_Spec_Gameplay_Effect_Spec) == 0x0000B8, "Member 'GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target::CallFunc_Create_Effect_Spec_Gameplay_Effect_Spec' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target, CallFunc_Create_Effect_Spec_Gameplay_Effect_Context) == 0x0000C8, "Member 'GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target::CallFunc_Create_Effect_Spec_Gameplay_Effect_Context' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target, CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue) == 0x0000E0, "Member 'GA_Player_Opportunity_Target_C_Apply_Hit_Effects_On_Target::CallFunc_K2_ApplyGameplayEffectSpecToTarget_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.GetTargetFilter
// 0x00A0 (0x00A0 - 0x0000)
struct GA_Player_Opportunity_Target_C_GetTargetFilter final
{
public:
	struct FGameplayTargetDataFilterHandle        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm)
	TArray<TSubclassOf<class AActor>>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	struct FPiecesGameplayTargetDataFilter        K2Node_MakeStruct_PiecesGameplayTargetDataFilter;  // 0x0020(0x0070)()
	struct FGameplayTargetDataFilterHandle        CallFunc_MakePiecesGameplayTargetDataFilterHandle_ReturnValue; // 0x0090(0x0010)()
};
static_assert(alignof(GA_Player_Opportunity_Target_C_GetTargetFilter) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_GetTargetFilter");
static_assert(sizeof(GA_Player_Opportunity_Target_C_GetTargetFilter) == 0x0000A0, "Wrong size on GA_Player_Opportunity_Target_C_GetTargetFilter");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetTargetFilter, ReturnValue) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_GetTargetFilter::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetTargetFilter, K2Node_MakeArray_Array) == 0x000010, "Member 'GA_Player_Opportunity_Target_C_GetTargetFilter::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetTargetFilter, K2Node_MakeStruct_PiecesGameplayTargetDataFilter) == 0x000020, "Member 'GA_Player_Opportunity_Target_C_GetTargetFilter::K2Node_MakeStruct_PiecesGameplayTargetDataFilter' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_GetTargetFilter, CallFunc_MakePiecesGameplayTargetDataFilterHandle_ReturnValue) == 0x000090, "Member 'GA_Player_Opportunity_Target_C_GetTargetFilter::CallFunc_MakePiecesGameplayTargetDataFilterHandle_ReturnValue' has a wrong offset!");

// Function GA_Player_Opportunity_Target.GA_Player_Opportunity_Target_C.MakeHitReactionDataObject
// 0x0010 (0x0010 - 0x0000)
struct GA_Player_Opportunity_Target_C_MakeHitReactionDataObject final
{
public:
	class UHitReactionDataObject_C*               ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHitReactionDataObject_C*               CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Player_Opportunity_Target_C_MakeHitReactionDataObject) == 0x000008, "Wrong alignment on GA_Player_Opportunity_Target_C_MakeHitReactionDataObject");
static_assert(sizeof(GA_Player_Opportunity_Target_C_MakeHitReactionDataObject) == 0x000010, "Wrong size on GA_Player_Opportunity_Target_C_MakeHitReactionDataObject");
static_assert(offsetof(GA_Player_Opportunity_Target_C_MakeHitReactionDataObject, ReturnValue) == 0x000000, "Member 'GA_Player_Opportunity_Target_C_MakeHitReactionDataObject::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Player_Opportunity_Target_C_MakeHitReactionDataObject, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'GA_Player_Opportunity_Target_C_MakeHitReactionDataObject::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

}

