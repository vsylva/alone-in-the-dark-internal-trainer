#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_DoorFirstTime

#include "Basic.hpp"

#include "PiecesThirdPersonCamera_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CM_DoorFirstTime.CM_DoorFirstTime_C
// 0x0020 (0x0568 - 0x0548)
class UCM_DoorFirstTime_C final : public UThirdPersonCameraModifier
{
public:
	float                                         InterpSpeed;                                       // 0x0548(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HitDistance;                                       // 0x054C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviousFocus;                                     // 0x0550(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHitDistance;                                    // 0x0554(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentFocus;                                      // 0x0558(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApertureMin;                                       // 0x055C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ApertureMax;                                       // 0x0560(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight, struct FPostProcessSettings* PostProcessSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_DoorFirstTime_C">();
	}
	static class UCM_DoorFirstTime_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_DoorFirstTime_C>();
	}
};
static_assert(alignof(UCM_DoorFirstTime_C) == 0x000008, "Wrong alignment on UCM_DoorFirstTime_C");
static_assert(sizeof(UCM_DoorFirstTime_C) == 0x000568, "Wrong size on UCM_DoorFirstTime_C");
static_assert(offsetof(UCM_DoorFirstTime_C, InterpSpeed) == 0x000548, "Member 'UCM_DoorFirstTime_C::InterpSpeed' has a wrong offset!");
static_assert(offsetof(UCM_DoorFirstTime_C, HitDistance) == 0x00054C, "Member 'UCM_DoorFirstTime_C::HitDistance' has a wrong offset!");
static_assert(offsetof(UCM_DoorFirstTime_C, PreviousFocus) == 0x000550, "Member 'UCM_DoorFirstTime_C::PreviousFocus' has a wrong offset!");
static_assert(offsetof(UCM_DoorFirstTime_C, MaxHitDistance) == 0x000554, "Member 'UCM_DoorFirstTime_C::MaxHitDistance' has a wrong offset!");
static_assert(offsetof(UCM_DoorFirstTime_C, CurrentFocus) == 0x000558, "Member 'UCM_DoorFirstTime_C::CurrentFocus' has a wrong offset!");
static_assert(offsetof(UCM_DoorFirstTime_C, ApertureMin) == 0x00055C, "Member 'UCM_DoorFirstTime_C::ApertureMin' has a wrong offset!");
static_assert(offsetof(UCM_DoorFirstTime_C, ApertureMax) == 0x000560, "Member 'UCM_DoorFirstTime_C::ApertureMax' has a wrong offset!");

}

