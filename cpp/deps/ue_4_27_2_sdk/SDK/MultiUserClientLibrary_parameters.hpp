#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MultiUserClientLibrary

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "MultiUserClientLibrary_structs.hpp"


namespace SDK::Params
{

// Function MultiUserClientLibrary.MultiUserClientStatics.ConfigureMultiUserClient
// 0x0040 (0x0040 - 0x0000)
struct MultiUserClientStatics_ConfigureMultiUserClient final
{
public:
	struct FMultiUserClientConfig                 ClientConfig;                                      // 0x0000(0x0038)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiUserClientStatics_ConfigureMultiUserClient) == 0x000008, "Wrong alignment on MultiUserClientStatics_ConfigureMultiUserClient");
static_assert(sizeof(MultiUserClientStatics_ConfigureMultiUserClient) == 0x000040, "Wrong size on MultiUserClientStatics_ConfigureMultiUserClient");
static_assert(offsetof(MultiUserClientStatics_ConfigureMultiUserClient, ClientConfig) == 0x000000, "Member 'MultiUserClientStatics_ConfigureMultiUserClient::ClientConfig' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_ConfigureMultiUserClient, ReturnValue) == 0x000038, "Member 'MultiUserClientStatics_ConfigureMultiUserClient::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.GetLastMultiUserConnectionError
// 0x0020 (0x0020 - 0x0000)
struct MultiUserClientStatics_GetLastMultiUserConnectionError final
{
public:
	struct FMultiUserConnectionError              ReturnValue;                                       // 0x0000(0x0020)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_GetLastMultiUserConnectionError) == 0x000008, "Wrong alignment on MultiUserClientStatics_GetLastMultiUserConnectionError");
static_assert(sizeof(MultiUserClientStatics_GetLastMultiUserConnectionError) == 0x000020, "Wrong size on MultiUserClientStatics_GetLastMultiUserConnectionError");
static_assert(offsetof(MultiUserClientStatics_GetLastMultiUserConnectionError, ReturnValue) == 0x000000, "Member 'MultiUserClientStatics_GetLastMultiUserConnectionError::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.GetLocalMultiUserClientInfo
// 0x0040 (0x0040 - 0x0000)
struct MultiUserClientStatics_GetLocalMultiUserClientInfo final
{
public:
	struct FMultiUserClientInfo                   ReturnValue;                                       // 0x0000(0x0040)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_GetLocalMultiUserClientInfo) == 0x000008, "Wrong alignment on MultiUserClientStatics_GetLocalMultiUserClientInfo");
static_assert(sizeof(MultiUserClientStatics_GetLocalMultiUserClientInfo) == 0x000040, "Wrong size on MultiUserClientStatics_GetLocalMultiUserClientInfo");
static_assert(offsetof(MultiUserClientStatics_GetLocalMultiUserClientInfo, ReturnValue) == 0x000000, "Member 'MultiUserClientStatics_GetLocalMultiUserClientInfo::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.GetMultiUserClientInfoByName
// 0x0058 (0x0058 - 0x0000)
struct MultiUserClientStatics_GetMultiUserClientInfoByName final
{
public:
	class FString                                 ClientName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMultiUserClientInfo                   ClientInfo;                                        // 0x0010(0x0040)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0050(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiUserClientStatics_GetMultiUserClientInfoByName) == 0x000008, "Wrong alignment on MultiUserClientStatics_GetMultiUserClientInfoByName");
static_assert(sizeof(MultiUserClientStatics_GetMultiUserClientInfoByName) == 0x000058, "Wrong size on MultiUserClientStatics_GetMultiUserClientInfoByName");
static_assert(offsetof(MultiUserClientStatics_GetMultiUserClientInfoByName, ClientName) == 0x000000, "Member 'MultiUserClientStatics_GetMultiUserClientInfoByName::ClientName' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_GetMultiUserClientInfoByName, ClientInfo) == 0x000010, "Member 'MultiUserClientStatics_GetMultiUserClientInfoByName::ClientInfo' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_GetMultiUserClientInfoByName, ReturnValue) == 0x000050, "Member 'MultiUserClientStatics_GetMultiUserClientInfoByName::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.GetMultiUserConnectionStatus
// 0x0001 (0x0001 - 0x0000)
struct MultiUserClientStatics_GetMultiUserConnectionStatus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_GetMultiUserConnectionStatus) == 0x000001, "Wrong alignment on MultiUserClientStatics_GetMultiUserConnectionStatus");
static_assert(sizeof(MultiUserClientStatics_GetMultiUserConnectionStatus) == 0x000001, "Wrong size on MultiUserClientStatics_GetMultiUserConnectionStatus");
static_assert(offsetof(MultiUserClientStatics_GetMultiUserConnectionStatus, ReturnValue) == 0x000000, "Member 'MultiUserClientStatics_GetMultiUserConnectionStatus::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.GetMultiUserConnectionStatusDetail
// 0x0001 (0x0001 - 0x0000)
struct MultiUserClientStatics_GetMultiUserConnectionStatusDetail final
{
public:
	EMultiUserConnectionStatus                    ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_GetMultiUserConnectionStatusDetail) == 0x000001, "Wrong alignment on MultiUserClientStatics_GetMultiUserConnectionStatusDetail");
static_assert(sizeof(MultiUserClientStatics_GetMultiUserConnectionStatusDetail) == 0x000001, "Wrong size on MultiUserClientStatics_GetMultiUserConnectionStatusDetail");
static_assert(offsetof(MultiUserClientStatics_GetMultiUserConnectionStatusDetail, ReturnValue) == 0x000000, "Member 'MultiUserClientStatics_GetMultiUserConnectionStatusDetail::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.GetMultiUserPresenceTransform
// 0x0040 (0x0040 - 0x0000)
struct MultiUserClientStatics_GetMultiUserPresenceTransform final
{
public:
	struct FGuid                                  ClientEndpointId;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_GetMultiUserPresenceTransform) == 0x000010, "Wrong alignment on MultiUserClientStatics_GetMultiUserPresenceTransform");
static_assert(sizeof(MultiUserClientStatics_GetMultiUserPresenceTransform) == 0x000040, "Wrong size on MultiUserClientStatics_GetMultiUserPresenceTransform");
static_assert(offsetof(MultiUserClientStatics_GetMultiUserPresenceTransform, ClientEndpointId) == 0x000000, "Member 'MultiUserClientStatics_GetMultiUserPresenceTransform::ClientEndpointId' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_GetMultiUserPresenceTransform, ReturnValue) == 0x000010, "Member 'MultiUserClientStatics_GetMultiUserPresenceTransform::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.GetRemoteMultiUserClientInfos
// 0x0018 (0x0018 - 0x0000)
struct MultiUserClientStatics_GetRemoteMultiUserClientInfos final
{
public:
	TArray<struct FMultiUserClientInfo>           ClientInfos;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiUserClientStatics_GetRemoteMultiUserClientInfos) == 0x000008, "Wrong alignment on MultiUserClientStatics_GetRemoteMultiUserClientInfos");
static_assert(sizeof(MultiUserClientStatics_GetRemoteMultiUserClientInfos) == 0x000018, "Wrong size on MultiUserClientStatics_GetRemoteMultiUserClientInfos");
static_assert(offsetof(MultiUserClientStatics_GetRemoteMultiUserClientInfos, ClientInfos) == 0x000000, "Member 'MultiUserClientStatics_GetRemoteMultiUserClientInfos::ClientInfos' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_GetRemoteMultiUserClientInfos, ReturnValue) == 0x000010, "Member 'MultiUserClientStatics_GetRemoteMultiUserClientInfos::ReturnValue' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.JumpToMultiUserPresence
// 0x0040 (0x0040 - 0x0000)
struct MultiUserClientStatics_JumpToMultiUserPresence final
{
public:
	class FString                                 OtherUserName;                                     // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             TransformOffset;                                   // 0x0010(0x0030)(Parm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_JumpToMultiUserPresence) == 0x000010, "Wrong alignment on MultiUserClientStatics_JumpToMultiUserPresence");
static_assert(sizeof(MultiUserClientStatics_JumpToMultiUserPresence) == 0x000040, "Wrong size on MultiUserClientStatics_JumpToMultiUserPresence");
static_assert(offsetof(MultiUserClientStatics_JumpToMultiUserPresence, OtherUserName) == 0x000000, "Member 'MultiUserClientStatics_JumpToMultiUserPresence::OtherUserName' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_JumpToMultiUserPresence, TransformOffset) == 0x000010, "Member 'MultiUserClientStatics_JumpToMultiUserPresence::TransformOffset' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.SetMultiUserPresenceEnabled
// 0x0001 (0x0001 - 0x0000)
struct MultiUserClientStatics_SetMultiUserPresenceEnabled final
{
public:
	bool                                          IsEnabled;                                         // 0x0000(0x0001)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_SetMultiUserPresenceEnabled) == 0x000001, "Wrong alignment on MultiUserClientStatics_SetMultiUserPresenceEnabled");
static_assert(sizeof(MultiUserClientStatics_SetMultiUserPresenceEnabled) == 0x000001, "Wrong size on MultiUserClientStatics_SetMultiUserPresenceEnabled");
static_assert(offsetof(MultiUserClientStatics_SetMultiUserPresenceEnabled, IsEnabled) == 0x000000, "Member 'MultiUserClientStatics_SetMultiUserPresenceEnabled::IsEnabled' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.SetMultiUserPresenceVisibility
// 0x0018 (0x0018 - 0x0000)
struct MultiUserClientStatics_SetMultiUserPresenceVisibility final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Visibility;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PropagateToAll;                                    // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiUserClientStatics_SetMultiUserPresenceVisibility) == 0x000008, "Wrong alignment on MultiUserClientStatics_SetMultiUserPresenceVisibility");
static_assert(sizeof(MultiUserClientStatics_SetMultiUserPresenceVisibility) == 0x000018, "Wrong size on MultiUserClientStatics_SetMultiUserPresenceVisibility");
static_assert(offsetof(MultiUserClientStatics_SetMultiUserPresenceVisibility, Name_0) == 0x000000, "Member 'MultiUserClientStatics_SetMultiUserPresenceVisibility::Name_0' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_SetMultiUserPresenceVisibility, Visibility) == 0x000010, "Member 'MultiUserClientStatics_SetMultiUserPresenceVisibility::Visibility' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_SetMultiUserPresenceVisibility, PropagateToAll) == 0x000011, "Member 'MultiUserClientStatics_SetMultiUserPresenceVisibility::PropagateToAll' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.SetMultiUserPresenceVisibilityById
// 0x0014 (0x0014 - 0x0000)
struct MultiUserClientStatics_SetMultiUserPresenceVisibilityById final
{
public:
	struct FGuid                                  ClientEndpointId;                                  // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Visibility;                                        // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          PropagateToAll;                                    // 0x0011(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(MultiUserClientStatics_SetMultiUserPresenceVisibilityById) == 0x000004, "Wrong alignment on MultiUserClientStatics_SetMultiUserPresenceVisibilityById");
static_assert(sizeof(MultiUserClientStatics_SetMultiUserPresenceVisibilityById) == 0x000014, "Wrong size on MultiUserClientStatics_SetMultiUserPresenceVisibilityById");
static_assert(offsetof(MultiUserClientStatics_SetMultiUserPresenceVisibilityById, ClientEndpointId) == 0x000000, "Member 'MultiUserClientStatics_SetMultiUserPresenceVisibilityById::ClientEndpointId' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_SetMultiUserPresenceVisibilityById, Visibility) == 0x000010, "Member 'MultiUserClientStatics_SetMultiUserPresenceVisibilityById::Visibility' has a wrong offset!");
static_assert(offsetof(MultiUserClientStatics_SetMultiUserPresenceVisibilityById, PropagateToAll) == 0x000011, "Member 'MultiUserClientStatics_SetMultiUserPresenceVisibilityById::PropagateToAll' has a wrong offset!");

// Function MultiUserClientLibrary.MultiUserClientStatics.StartMultiUserDefaultConnection
// 0x0001 (0x0001 - 0x0000)
struct MultiUserClientStatics_StartMultiUserDefaultConnection final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MultiUserClientStatics_StartMultiUserDefaultConnection) == 0x000001, "Wrong alignment on MultiUserClientStatics_StartMultiUserDefaultConnection");
static_assert(sizeof(MultiUserClientStatics_StartMultiUserDefaultConnection) == 0x000001, "Wrong size on MultiUserClientStatics_StartMultiUserDefaultConnection");
static_assert(offsetof(MultiUserClientStatics_StartMultiUserDefaultConnection, ReturnValue) == 0x000000, "Member 'MultiUserClientStatics_StartMultiUserDefaultConnection::ReturnValue' has a wrong offset!");

}

