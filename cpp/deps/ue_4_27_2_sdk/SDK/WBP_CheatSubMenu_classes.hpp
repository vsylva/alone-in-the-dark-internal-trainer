#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CheatSubMenu

#include "Basic.hpp"

#include "InputCore_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CheatSubMenu.WBP_CheatSubMenu_C
// 0x0068 (0x0308 - 0x02A0)
class UWBP_CheatSubMenu_C final : public UWidgetInputHandlingBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             TextBlock_2;                                       // 0x02A8(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FString                                 Text;                                              // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OptionSelected;                                    // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FGameplayTag>                   OptionTags;                                        // 0x02D0(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	int32                                         Cnt;                                               // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FKey>                           Keys;                                              // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FString                                 Title;                                             // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void OptionSelected__DelegateSignature(const struct FGameplayTag& Result, TArray<struct FGameplayTag>& ResultChildren, bool ChildrenExist);
	void ExecuteUbergraph_WBP_CheatSubMenu(int32 EntryPoint);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void SliceArray(TArray<struct FGameplayTag>& Array, int32 Start, int32 Count, TArray<struct FGameplayTag>* Results);
	void SetDisplayTexts();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CheatSubMenu_C">();
	}
	static class UWBP_CheatSubMenu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CheatSubMenu_C>();
	}
};
static_assert(alignof(UWBP_CheatSubMenu_C) == 0x000008, "Wrong alignment on UWBP_CheatSubMenu_C");
static_assert(sizeof(UWBP_CheatSubMenu_C) == 0x000308, "Wrong size on UWBP_CheatSubMenu_C");
static_assert(offsetof(UWBP_CheatSubMenu_C, UberGraphFrame) == 0x0002A0, "Member 'UWBP_CheatSubMenu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CheatSubMenu_C, TextBlock_2) == 0x0002A8, "Member 'UWBP_CheatSubMenu_C::TextBlock_2' has a wrong offset!");
static_assert(offsetof(UWBP_CheatSubMenu_C, Text) == 0x0002B0, "Member 'UWBP_CheatSubMenu_C::Text' has a wrong offset!");
static_assert(offsetof(UWBP_CheatSubMenu_C, OptionSelected) == 0x0002C0, "Member 'UWBP_CheatSubMenu_C::OptionSelected' has a wrong offset!");
static_assert(offsetof(UWBP_CheatSubMenu_C, OptionTags) == 0x0002D0, "Member 'UWBP_CheatSubMenu_C::OptionTags' has a wrong offset!");
static_assert(offsetof(UWBP_CheatSubMenu_C, Cnt) == 0x0002E0, "Member 'UWBP_CheatSubMenu_C::Cnt' has a wrong offset!");
static_assert(offsetof(UWBP_CheatSubMenu_C, Keys) == 0x0002E8, "Member 'UWBP_CheatSubMenu_C::Keys' has a wrong offset!");
static_assert(offsetof(UWBP_CheatSubMenu_C, Title) == 0x0002F8, "Member 'UWBP_CheatSubMenu_C::Title' has a wrong offset!");

}

