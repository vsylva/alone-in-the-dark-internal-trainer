#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FluidDripComponent

#include "Basic.hpp"

#include "ObsidianFox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FluidDripComponent.BP_FluidDripComponent_C.GetRandomLocationInSphereAroundPoint
// 0x0044 (0x0044 - 0x0000)
struct BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint final
{
public:
	struct FVector                                Point;                                             // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Radius;                                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RandomLocation;                                    // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint) == 0x000004, "Wrong alignment on BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint");
static_assert(sizeof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint) == 0x000044, "Wrong size on BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint");
static_assert(offsetof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint, Point) == 0x000000, "Member 'BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint::Point' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint, Radius) == 0x00000C, "Member 'BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint::Radius' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint, RandomLocation) == 0x000010, "Member 'BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint::RandomLocation' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint, CallFunc_RandomUnitVector_ReturnValue) == 0x00001C, "Member 'BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint::CallFunc_RandomUnitVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00002C, "Member 'BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint, CallFunc_Add_VectorVector_ReturnValue) == 0x000038, "Member 'BP_FluidDripComponent_C_GetRandomLocationInSphereAroundPoint::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_FluidDripComponent.BP_FluidDripComponent_C.OnComponentActivated_Event
// 0x0010 (0x0010 - 0x0000)
struct BP_FluidDripComponent_C_OnComponentActivated_Event final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReset;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FluidDripComponent_C_OnComponentActivated_Event) == 0x000008, "Wrong alignment on BP_FluidDripComponent_C_OnComponentActivated_Event");
static_assert(sizeof(BP_FluidDripComponent_C_OnComponentActivated_Event) == 0x000010, "Wrong size on BP_FluidDripComponent_C_OnComponentActivated_Event");
static_assert(offsetof(BP_FluidDripComponent_C_OnComponentActivated_Event, Component) == 0x000000, "Member 'BP_FluidDripComponent_C_OnComponentActivated_Event::Component' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_OnComponentActivated_Event, bReset) == 0x000008, "Member 'BP_FluidDripComponent_C_OnComponentActivated_Event::bReset' has a wrong offset!");

// Function BP_FluidDripComponent.BP_FluidDripComponent_C.OnGameStateChanged
// 0x0002 (0x0002 - 0x0000)
struct BP_FluidDripComponent_C_OnGameStateChanged final
{
public:
	EGameMainState                                OldGameState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                NewGameState;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidDripComponent_C_OnGameStateChanged) == 0x000001, "Wrong alignment on BP_FluidDripComponent_C_OnGameStateChanged");
static_assert(sizeof(BP_FluidDripComponent_C_OnGameStateChanged) == 0x000002, "Wrong size on BP_FluidDripComponent_C_OnGameStateChanged");
static_assert(offsetof(BP_FluidDripComponent_C_OnGameStateChanged, OldGameState) == 0x000000, "Member 'BP_FluidDripComponent_C_OnGameStateChanged::OldGameState' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_OnGameStateChanged, NewGameState) == 0x000001, "Member 'BP_FluidDripComponent_C_OnGameStateChanged::NewGameState' has a wrong offset!");

// Function BP_FluidDripComponent.BP_FluidDripComponent_C.ExecuteUbergraph_BP_FluidDripComponent
// 0x0110 (0x0110 - 0x0000)
struct BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_Component_1;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bReset;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRandomLocationInSphereAroundPoint_RandomLocation; // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_CustomEvent_Component;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloat_ReturnValue;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_FluidDrop_C*                        K2Node_DynamicCast_AsBP_Fluid_Drop;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UActorComponent* Component)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UActorComponent* Component, bool bReset)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00CC(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(EGameMainState OldGameState, EGameMainState NewGameState)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor)
	EGameMainState                                K2Node_CustomEvent_OldGameState;                   // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                K2Node_CustomEvent_NewGameState;                   // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0100(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent) == 0x000010, "Wrong alignment on BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent");
static_assert(sizeof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent) == 0x000110, "Wrong size on BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, EntryPoint) == 0x000000, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000004, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_GetOwner_ReturnValue) == 0x000010, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CustomEvent_Component_1) == 0x000018, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CustomEvent_Component_1' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CustomEvent_bReset) == 0x000020, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CustomEvent_bReset' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_GetRandomLocationInSphereAroundPoint_RandomLocation) == 0x000024, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_GetRandomLocationInSphereAroundPoint_RandomLocation' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CustomEvent_Component) == 0x000030, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000040, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000070, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_FinishSpawningActor_ReturnValue) == 0x000078, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_RandomFloat_ReturnValue) == 0x000080, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_DynamicCast_AsBP_Fluid_Drop) == 0x000088, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_DynamicCast_AsBP_Fluid_Drop' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_Less_FloatFloat_ReturnValue) == 0x000091, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000098, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CreateDelegate_OutputDelegate) == 0x0000A0, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B0, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B8, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000CC, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000DC, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CustomEvent_OldGameState) == 0x0000EC, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CustomEvent_OldGameState' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CustomEvent_NewGameState) == 0x0000ED, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CustomEvent_NewGameState' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000EE, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x0000F0, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000100, "Member 'BP_FluidDripComponent_C_ExecuteUbergraph_BP_FluidDripComponent::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function BP_FluidDripComponent.BP_FluidDripComponent_C.OnComponentDeactivated_Event
// 0x0008 (0x0008 - 0x0000)
struct BP_FluidDripComponent_C_OnComponentDeactivated_Event final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FluidDripComponent_C_OnComponentDeactivated_Event) == 0x000008, "Wrong alignment on BP_FluidDripComponent_C_OnComponentDeactivated_Event");
static_assert(sizeof(BP_FluidDripComponent_C_OnComponentDeactivated_Event) == 0x000008, "Wrong size on BP_FluidDripComponent_C_OnComponentDeactivated_Event");
static_assert(offsetof(BP_FluidDripComponent_C_OnComponentDeactivated_Event, Component) == 0x000000, "Member 'BP_FluidDripComponent_C_OnComponentDeactivated_Event::Component' has a wrong offset!");

}

