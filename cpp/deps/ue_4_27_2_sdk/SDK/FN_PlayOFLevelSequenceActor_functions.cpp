#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_PlayOFLevelSequenceActor

#include "Basic.hpp"

#include "FN_PlayOFLevelSequenceActor_classes.hpp"
#include "FN_PlayOFLevelSequenceActor_parameters.hpp"


namespace SDK
{

// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.CreateLoadingIndicator
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UUserWidget>          WidgetClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::CreateLoadingIndicator(TSubclassOf<class UUserWidget> WidgetClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "CreateLoadingIndicator");

	Params::FN_PlayOFLevelSequenceActor_C_CreateLoadingIndicator Parms{};

	Parms.WidgetClass = WidgetClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.Warn If Still Not Loaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           InputPin                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::Warn_If_Still_Not_Loaded(const TSoftObjectPtr<class UObject>& InputPin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "Warn If Still Not Loaded");

	Params::FN_PlayOFLevelSequenceActor_C_Warn_If_Still_Not_Loaded Parms{};

	Parms.InputPin = InputPin;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.Warn if Not Already Preloaded
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UObject>           SoftObjectReference                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::Warn_if_Not_Already_Preloaded(const TSoftObjectPtr<class UObject>& SoftObjectReference)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "Warn if Not Already Preloaded");

	Params::FN_PlayOFLevelSequenceActor_C_Warn_if_Not_Already_Preloaded Parms{};

	Parms.SoftObjectReference = SoftObjectReference;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.IsSequenceFinished
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFN_PlayOFLevelSequenceActor_C::IsSequenceFinished(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "IsSequenceFinished");

	Params::FN_PlayOFLevelSequenceActor_C_IsSequenceFinished Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.SetupLevelsToIgnore
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APiecesLevelSequenceActor*        SequenceActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::SetupLevelsToIgnore(class APiecesLevelSequenceActor* SequenceActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "SetupLevelsToIgnore");

	Params::FN_PlayOFLevelSequenceActor_C_SetupLevelsToIgnore Parms{};

	Parms.SequenceActor = SequenceActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.SetUpSequenceToPlay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UFN_PlayOFLevelSequenceActor_C::SetUpSequenceToPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "SetUpSequenceToPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.MoveEnemiesToSpawn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radius                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::MoveEnemiesToSpawn(const float Radius)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "MoveEnemiesToSpawn");

	Params::FN_PlayOFLevelSequenceActor_C_MoveEnemiesToSpawn Parms{};

	Parms.Radius = Radius;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.K2_ExecuteInput
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             PinName                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::K2_ExecuteInput(const class FName& PinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "K2_ExecuteInput");

	Params::FN_PlayOFLevelSequenceActor_C_K2_ExecuteInput Parms{};

	Parms.PinName = PinName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.CutsceneFinished
// (BlueprintCallable, BlueprintEvent)

void UFN_PlayOFLevelSequenceActor_C::CutsceneFinished()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "CutsceneFinished");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.CutsceneStopped
// (BlueprintCallable, BlueprintEvent)

void UFN_PlayOFLevelSequenceActor_C::CutsceneStopped()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "CutsceneStopped");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.CutsceneSkipped
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UPiecesLevelSequencePlayer*       SequencePlayer                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::CutsceneSkipped(class UPiecesLevelSequencePlayer* SequencePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "CutsceneSkipped");

	Params::FN_PlayOFLevelSequenceActor_C_CutsceneSkipped Parms{};

	Parms.SequencePlayer = SequencePlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PlayOFLevelSequenceActor.FN_PlayOFLevelSequenceActor_C.ExecuteUbergraph_FN_PlayOFLevelSequenceActor
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFN_PlayOFLevelSequenceActor_C::ExecuteUbergraph_FN_PlayOFLevelSequenceActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PlayOFLevelSequenceActor_C", "ExecuteUbergraph_FN_PlayOFLevelSequenceActor");

	Params::FN_PlayOFLevelSequenceActor_C_ExecuteUbergraph_FN_PlayOFLevelSequenceActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

