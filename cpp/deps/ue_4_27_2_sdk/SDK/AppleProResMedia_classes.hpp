#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AppleProResMedia

#include "Basic.hpp"

#include "AppleProResMedia_structs.hpp"
#include "CoreUObject_classes.hpp"
#include "MovieSceneCapture_classes.hpp"
#include "MovieRenderPipelineCore_classes.hpp"


namespace SDK
{

// Class AppleProResMedia.AppleProResEncoderProtocol
// 0x0088 (0x00F0 - 0x0068)
class UAppleProResEncoderProtocol final : public UFrameGrabberProtocol
{
public:
	EAppleProResEncoderFormats                    EncodingFormat;                                    // 0x0068(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppleProResEncoderColorDescription           ColorDescription;                                  // 0x0069(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAppleProResEncoderScanType                   ScanType;                                          // 0x006A(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NumberOfEncodingThreads;                           // 0x006C(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bEmbedTimecodeTrack;                               // 0x0070(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDropFrameTimecode;                                // 0x0071(0x0001)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_72[0x7E];                                      // 0x0072(0x007E)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleProResEncoderProtocol">();
	}
	static class UAppleProResEncoderProtocol* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleProResEncoderProtocol>();
	}
};
static_assert(alignof(UAppleProResEncoderProtocol) == 0x000008, "Wrong alignment on UAppleProResEncoderProtocol");
static_assert(sizeof(UAppleProResEncoderProtocol) == 0x0000F0, "Wrong size on UAppleProResEncoderProtocol");
static_assert(offsetof(UAppleProResEncoderProtocol, EncodingFormat) == 0x000068, "Member 'UAppleProResEncoderProtocol::EncodingFormat' has a wrong offset!");
static_assert(offsetof(UAppleProResEncoderProtocol, ColorDescription) == 0x000069, "Member 'UAppleProResEncoderProtocol::ColorDescription' has a wrong offset!");
static_assert(offsetof(UAppleProResEncoderProtocol, ScanType) == 0x00006A, "Member 'UAppleProResEncoderProtocol::ScanType' has a wrong offset!");
static_assert(offsetof(UAppleProResEncoderProtocol, NumberOfEncodingThreads) == 0x00006C, "Member 'UAppleProResEncoderProtocol::NumberOfEncodingThreads' has a wrong offset!");
static_assert(offsetof(UAppleProResEncoderProtocol, bEmbedTimecodeTrack) == 0x000070, "Member 'UAppleProResEncoderProtocol::bEmbedTimecodeTrack' has a wrong offset!");
static_assert(offsetof(UAppleProResEncoderProtocol, bDropFrameTimecode) == 0x000071, "Member 'UAppleProResEncoderProtocol::bDropFrameTimecode' has a wrong offset!");

// Class AppleProResMedia.AppleProResMediaSettings
// 0x0008 (0x0030 - 0x0028)
class UAppleProResMediaSettings final : public UObject
{
public:
	int32                                         NumberOfCPUDecodingThreads;                        // 0x0028(0x0004)(Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleProResMediaSettings">();
	}
	static class UAppleProResMediaSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleProResMediaSettings>();
	}
};
static_assert(alignof(UAppleProResMediaSettings) == 0x000008, "Wrong alignment on UAppleProResMediaSettings");
static_assert(sizeof(UAppleProResMediaSettings) == 0x000030, "Wrong size on UAppleProResMediaSettings");
static_assert(offsetof(UAppleProResMediaSettings, NumberOfCPUDecodingThreads) == 0x000028, "Member 'UAppleProResMediaSettings::NumberOfCPUDecodingThreads' has a wrong offset!");

// Class AppleProResMedia.MoviePipelineAppleProResOutput
// 0x0008 (0x0090 - 0x0088)
class UMoviePipelineAppleProResOutput final : public UMoviePipelineVideoOutputBase
{
public:
	EAppleProResEncoderCodec                      Codec;                                             // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bDropFrameTimecode;                                // 0x0089(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bOverrideMaximumEncodingThreads;                   // 0x008A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxNumberOfEncodingThreads;                        // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"MoviePipelineAppleProResOutput">();
	}
	static class UMoviePipelineAppleProResOutput* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMoviePipelineAppleProResOutput>();
	}
};
static_assert(alignof(UMoviePipelineAppleProResOutput) == 0x000008, "Wrong alignment on UMoviePipelineAppleProResOutput");
static_assert(sizeof(UMoviePipelineAppleProResOutput) == 0x000090, "Wrong size on UMoviePipelineAppleProResOutput");
static_assert(offsetof(UMoviePipelineAppleProResOutput, Codec) == 0x000088, "Member 'UMoviePipelineAppleProResOutput::Codec' has a wrong offset!");
static_assert(offsetof(UMoviePipelineAppleProResOutput, bDropFrameTimecode) == 0x000089, "Member 'UMoviePipelineAppleProResOutput::bDropFrameTimecode' has a wrong offset!");
static_assert(offsetof(UMoviePipelineAppleProResOutput, bOverrideMaximumEncodingThreads) == 0x00008A, "Member 'UMoviePipelineAppleProResOutput::bOverrideMaximumEncodingThreads' has a wrong offset!");
static_assert(offsetof(UMoviePipelineAppleProResOutput, MaxNumberOfEncodingThreads) == 0x00008C, "Member 'UMoviePipelineAppleProResOutput::MaxNumberOfEncodingThreads' has a wrong offset!");

}

