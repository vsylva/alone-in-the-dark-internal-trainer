#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacter_EmoteComponent

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "ObsidianFox_structs.hpp"


namespace SDK::Params
{

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.GetEmoteShouldOnlyPlayWhenIdle
// 0x0009 (0x0009 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeather_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTemperatureCold_NewParam;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTemperatureHot_NewParam;                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle) == 0x000001, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle) == 0x000009, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_IsWeather_ReturnValue) == 0x000001, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_IsWeather_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_IsTemperatureCold_NewParam) == 0x000002, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_IsTemperatureCold_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_IsTemperatureHot_NewParam) == 0x000003, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_IsTemperatureHot_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_HasGameplayTag_ReturnValue) == 0x000004, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_BooleanOR_ReturnValue_2) == 0x000007, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmoteShouldOnlyPlayWhenIdle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.HasGameplayTag
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag final
{
public:
	struct FGameplayTag                           TagToCheck;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag) == 0x000028, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag, TagToCheck) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag::TagToCheck' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag, ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasGameplayTag::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.HasWeaponThatBlocksHandEmotes
// 0x0002 (0x0002 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasActiveWeapon_Result;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes) == 0x000001, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes) == 0x000002, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes, ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes, CallFunc_HasActiveWeapon_Result) == 0x000001, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasWeaponThatBlocksHandEmotes::CallFunc_HasActiveWeapon_Result' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.ActiveWeaponIsOfClass
// 0x0028 (0x0028 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         CallFunc_GetActiveWeapon_Active_Weapon;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass) == 0x000028, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass, Class_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass::Class_0' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass, ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass, CallFunc_GetActiveWeapon_Active_Weapon) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass::CallFunc_GetActiveWeapon_Active_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass, CallFunc_GetObjectClass_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x000021, "Member 'BP_PlayerCharacter_EmoteComponent_C_ActiveWeaponIsOfClass::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.GetActiveWeapon
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon final
{
public:
	class AOFWeaponActor*                         Active_Weapon;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon) == 0x000018, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon, Active_Weapon) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon::Active_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetActiveWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.HasActiveWeapon
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         CallFunc_GetActiveWeapon_Active_Weapon;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon) == 0x000018, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon, Result) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon::Result' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon, CallFunc_GetActiveWeapon_Active_Weapon) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon::CallFunc_GetActiveWeapon_Active_Weapon' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_HasActiveWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.MakeContextualMontageParameter
// 0x0038 (0x0038 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter final
{
public:
	class FName                                   Section;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEmoteMontageDataParameter             ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue;   // 0x0018(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddSectionDecoratorToParameter_ReturnValue; // 0x0028(0x0010)()
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter) == 0x000038, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter, Section) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter::Section' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter, ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter, CallFunc_MakeSingleEmoteMontageData_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter::CallFunc_MakeSingleEmoteMontageData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter, CallFunc_AddSectionDecoratorToParameter_ReturnValue) == 0x000028, "Member 'BP_PlayerCharacter_EmoteComponent_C_MakeContextualMontageParameter::CallFunc_AddSectionDecoratorToParameter_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.IsTemperatureCold
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvironmentGameSubSystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDegreeCelsius_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold) == 0x000018, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold, NewParam) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold::NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold, CallFunc_GetDegreeCelsius_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold::CallFunc_GetDegreeCelsius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold, CallFunc_Less_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureCold::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.IsTemperatureHot
// 0x0018 (0x0018 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvironmentGameSubSystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDegreeCelsius_ReturnValue;             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot) == 0x000018, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot, NewParam) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot::NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot, CallFunc_GetDegreeCelsius_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot::CallFunc_GetDegreeCelsius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsTemperatureHot::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.IsWeather
// 0x0040 (0x0040 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_IsWeather final
{
public:
	struct FGameplayTag                           WeatherTag;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvironmentGameSubSystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_GetWeatherTag_ReturnValue;                // 0x0018(0x0020)()
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_IsWeather) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_IsWeather");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_IsWeather) == 0x000040, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_IsWeather");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsWeather, WeatherTag) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsWeather::WeatherTag' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsWeather, ReturnValue) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsWeather::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsWeather, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsWeather::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsWeather, CallFunc_GetWeatherTag_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsWeather::CallFunc_GetWeatherTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_IsWeather, CallFunc_HasTag_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_EmoteComponent_C_IsWeather::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.GetEmote
// 0x02D8 (0x02D8 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_GetEmote final
{
public:
	struct FEmotePlayData                         ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue;   // 0x0018(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_1; // 0x0028(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue; // 0x0038(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_1; // 0x0048(0x0010)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData;                   // 0x0058(0x0018)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_1;                 // 0x0070(0x0018)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_2; // 0x0088(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_3; // 0x0098(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_2; // 0x00A8(0x0010)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_2;                 // 0x00B8(0x0018)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_3;                 // 0x00D0(0x0018)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_4; // 0x00E8(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_5; // 0x00F8(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_3; // 0x0108(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_4; // 0x0118(0x0010)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_4;                 // 0x0128(0x0018)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_5;                 // 0x0140(0x0018)()
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x015D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasGameplayTag_ReturnValue;               // 0x015E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTemperatureCold_NewParam;               // 0x015F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_1;                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_RandomBool_ReturnValue_2;                 // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTemperatureHot_NewParam;                // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeather_ReturnValue;                    // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0166(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_167[0x1];                                      // 0x0167(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_6; // 0x0168(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_5; // 0x0178(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_7; // 0x0188(0x0010)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_6;                 // 0x0198(0x0018)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_6; // 0x01B0(0x0010)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_7;                 // 0x01C0(0x0018)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_8; // 0x01D8(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_7; // 0x01E8(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_9; // 0x01F8(0x0010)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_8;                 // 0x0208(0x0018)()
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_9;                 // 0x0220(0x0018)()
	bool                                          CallFunc_HasGameplayTag_ReturnValue_1;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_10; // 0x0240(0x0010)()
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_8; // 0x0250(0x0010)()
	bool                                          CallFunc_HasWeaponThatBlocksHandEmotes_ReturnValue; // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_10;                // 0x0268(0x0018)()
	bool                                          CallFunc_IsTemperatureCold_NewParam_1;             // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEmoteMontageDataParameter             CallFunc_MakeSingleEmoteMontageData_ReturnValue_11; // 0x0288(0x0010)()
	bool                                          CallFunc_RandomBool_ReturnValue_3;                 // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEmoteMontageDataParameter             CallFunc_AddRandomDecoratorToParameter_ReturnValue_9; // 0x02A0(0x0010)()
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEmotePlayData                         K2Node_MakeStruct_EmotePlayData_11;                // 0x02B8(0x0018)()
	bool                                          CallFunc_RandomBool_ReturnValue_4;                 // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTemperatureHot_NewParam_1;              // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWeather_ReturnValue_1;                  // 0x02D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_GetEmote) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_GetEmote");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_GetEmote) == 0x0002D8, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_GetEmote");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, ReturnValue) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue) == 0x000018, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_1) == 0x000028, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue) == 0x000038, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_1) == 0x000048, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData) == 0x000058, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_1) == 0x000070, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_2) == 0x000088, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_3) == 0x000098, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_2) == 0x0000A8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_2) == 0x0000B8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_3) == 0x0000D0, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_4) == 0x0000E8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_5) == 0x0000F8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_3) == 0x000108, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_4) == 0x000118, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_4) == 0x000128, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_5) == 0x000140, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_RandomFloatInRange_ReturnValue) == 0x000158, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_RandomBool_ReturnValue) == 0x00015C, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00015D, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_HasGameplayTag_ReturnValue) == 0x00015E, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_HasGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_IsTemperatureCold_NewParam) == 0x00015F, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_IsTemperatureCold_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_RandomBool_ReturnValue_1) == 0x000160, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_RandomBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_RandomBool_ReturnValue_2) == 0x000161, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_RandomBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_BooleanAND_ReturnValue) == 0x000162, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_IsTemperatureHot_NewParam) == 0x000163, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_IsTemperatureHot_NewParam' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_BooleanAND_ReturnValue_1) == 0x000164, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_IsWeather_ReturnValue) == 0x000165, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_IsWeather_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_SwitchEnum_CmpSuccess) == 0x000166, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_6) == 0x000168, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_5) == 0x000178, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_7) == 0x000188, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_6) == 0x000198, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_6) == 0x0001B0, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_7) == 0x0001C0, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_8) == 0x0001D8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_7) == 0x0001E8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_9) == 0x0001F8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_8) == 0x000208, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_9) == 0x000220, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_HasGameplayTag_ReturnValue_1) == 0x000238, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_HasGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_10) == 0x000240, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_8) == 0x000250, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_HasWeaponThatBlocksHandEmotes_ReturnValue) == 0x000260, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_HasWeaponThatBlocksHandEmotes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_10) == 0x000268, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_IsTemperatureCold_NewParam_1) == 0x000280, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_IsTemperatureCold_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_MakeSingleEmoteMontageData_ReturnValue_11) == 0x000288, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_MakeSingleEmoteMontageData_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_RandomBool_ReturnValue_3) == 0x000298, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_RandomBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_AddRandomDecoratorToParameter_ReturnValue_9) == 0x0002A0, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_AddRandomDecoratorToParameter_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_BooleanAND_ReturnValue_2) == 0x0002B0, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, K2Node_MakeStruct_EmotePlayData_11) == 0x0002B8, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::K2Node_MakeStruct_EmotePlayData_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_RandomBool_ReturnValue_4) == 0x0002D0, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_RandomBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_IsTemperatureHot_NewParam_1) == 0x0002D1, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_IsTemperatureHot_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_IsWeather_ReturnValue_1) == 0x0002D2, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_IsWeather_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_GetEmote, CallFunc_BooleanAND_ReturnValue_3) == 0x0002D3, "Member 'BP_PlayerCharacter_EmoteComponent_C_GetEmote::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_F4DC445745B60AD58934F494B0CC61D2
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_F4DC445745B60AD58934F494B0CC61D2 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_F4DC445745B60AD58934F494B0CC61D2) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_F4DC445745B60AD58934F494B0CC61D2");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_F4DC445745B60AD58934F494B0CC61D2) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_F4DC445745B60AD58934F494B0CC61D2");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_F4DC445745B60AD58934F494B0CC61D2, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_F4DC445745B60AD58934F494B0CC61D2::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_F4DC445745B60AD58934F494B0CC61D2
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_F4DC445745B60AD58934F494B0CC61D2 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_F4DC445745B60AD58934F494B0CC61D2) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_F4DC445745B60AD58934F494B0CC61D2");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_F4DC445745B60AD58934F494B0CC61D2) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_F4DC445745B60AD58934F494B0CC61D2");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_F4DC445745B60AD58934F494B0CC61D2, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_F4DC445745B60AD58934F494B0CC61D2::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_524037E3403C66A2EFEA54AC5FFD76A8
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_524037E3403C66A2EFEA54AC5FFD76A8 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_524037E3403C66A2EFEA54AC5FFD76A8) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_524037E3403C66A2EFEA54AC5FFD76A8");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_524037E3403C66A2EFEA54AC5FFD76A8) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_524037E3403C66A2EFEA54AC5FFD76A8");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_524037E3403C66A2EFEA54AC5FFD76A8, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_524037E3403C66A2EFEA54AC5FFD76A8::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_524037E3403C66A2EFEA54AC5FFD76A8
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_524037E3403C66A2EFEA54AC5FFD76A8 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_524037E3403C66A2EFEA54AC5FFD76A8) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_524037E3403C66A2EFEA54AC5FFD76A8");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_524037E3403C66A2EFEA54AC5FFD76A8) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_524037E3403C66A2EFEA54AC5FFD76A8");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_524037E3403C66A2EFEA54AC5FFD76A8, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_524037E3403C66A2EFEA54AC5FFD76A8::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_D73B31C043A028F5B398F5968A1BFBB1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_D73B31C043A028F5B398F5968A1BFBB1 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_D73B31C043A028F5B398F5968A1BFBB1) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_D73B31C043A028F5B398F5968A1BFBB1");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_D73B31C043A028F5B398F5968A1BFBB1) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_D73B31C043A028F5B398F5968A1BFBB1");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_D73B31C043A028F5B398F5968A1BFBB1, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_D73B31C043A028F5B398F5968A1BFBB1::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_D73B31C043A028F5B398F5968A1BFBB1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_D73B31C043A028F5B398F5968A1BFBB1 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_D73B31C043A028F5B398F5968A1BFBB1) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_D73B31C043A028F5B398F5968A1BFBB1");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_D73B31C043A028F5B398F5968A1BFBB1) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_D73B31C043A028F5B398F5968A1BFBB1");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_D73B31C043A028F5B398F5968A1BFBB1, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_D73B31C043A028F5B398F5968A1BFBB1::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_3EA72D3A4D5F611E2F012DB15E73AC1D
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_3EA72D3A4D5F611E2F012DB15E73AC1D final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_3EA72D3A4D5F611E2F012DB15E73AC1D) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_3EA72D3A4D5F611E2F012DB15E73AC1D");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_3EA72D3A4D5F611E2F012DB15E73AC1D) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_3EA72D3A4D5F611E2F012DB15E73AC1D");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_3EA72D3A4D5F611E2F012DB15E73AC1D, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_3EA72D3A4D5F611E2F012DB15E73AC1D::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_3EA72D3A4D5F611E2F012DB15E73AC1D
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_3EA72D3A4D5F611E2F012DB15E73AC1D final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_3EA72D3A4D5F611E2F012DB15E73AC1D) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_3EA72D3A4D5F611E2F012DB15E73AC1D");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_3EA72D3A4D5F611E2F012DB15E73AC1D) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_3EA72D3A4D5F611E2F012DB15E73AC1D");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_3EA72D3A4D5F611E2F012DB15E73AC1D, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_3EA72D3A4D5F611E2F012DB15E73AC1D::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_492572CF4D675CBE1ED8ECAC98DF9788
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_492572CF4D675CBE1ED8ECAC98DF9788 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_492572CF4D675CBE1ED8ECAC98DF9788) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_492572CF4D675CBE1ED8ECAC98DF9788");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_492572CF4D675CBE1ED8ECAC98DF9788) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_492572CF4D675CBE1ED8ECAC98DF9788");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_492572CF4D675CBE1ED8ECAC98DF9788, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_492572CF4D675CBE1ED8ECAC98DF9788::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_492572CF4D675CBE1ED8ECAC98DF9788
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_492572CF4D675CBE1ED8ECAC98DF9788 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_492572CF4D675CBE1ED8ECAC98DF9788) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_492572CF4D675CBE1ED8ECAC98DF9788");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_492572CF4D675CBE1ED8ECAC98DF9788) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_492572CF4D675CBE1ED8ECAC98DF9788");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_492572CF4D675CBE1ED8ECAC98DF9788, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_492572CF4D675CBE1ED8ECAC98DF9788::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_229DB7C04F250621518A339BDCE1DED1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_229DB7C04F250621518A339BDCE1DED1 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_229DB7C04F250621518A339BDCE1DED1) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_229DB7C04F250621518A339BDCE1DED1");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_229DB7C04F250621518A339BDCE1DED1) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_229DB7C04F250621518A339BDCE1DED1");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_229DB7C04F250621518A339BDCE1DED1, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_229DB7C04F250621518A339BDCE1DED1::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_229DB7C04F250621518A339BDCE1DED1
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_229DB7C04F250621518A339BDCE1DED1 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_229DB7C04F250621518A339BDCE1DED1) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_229DB7C04F250621518A339BDCE1DED1");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_229DB7C04F250621518A339BDCE1DED1) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_229DB7C04F250621518A339BDCE1DED1");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_229DB7C04F250621518A339BDCE1DED1, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_229DB7C04F250621518A339BDCE1DED1::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_DB19C88B45B9837FD21BA6AF4BFA1EB6::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_DB19C88B45B9837FD21BA6AF4BFA1EB6::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_28ECE7984BEDFE4D423D09A7BDCAFC7C::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_28ECE7984BEDFE4D423D09A7BDCAFC7C::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_120DF210480DFD288107719A180ACC43
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_120DF210480DFD288107719A180ACC43 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_120DF210480DFD288107719A180ACC43) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_120DF210480DFD288107719A180ACC43");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_120DF210480DFD288107719A180ACC43) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_120DF210480DFD288107719A180ACC43");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_120DF210480DFD288107719A180ACC43, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_120DF210480DFD288107719A180ACC43::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_120DF210480DFD288107719A180ACC43
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_120DF210480DFD288107719A180ACC43 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_120DF210480DFD288107719A180ACC43) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_120DF210480DFD288107719A180ACC43");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_120DF210480DFD288107719A180ACC43) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_120DF210480DFD288107719A180ACC43");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_120DF210480DFD288107719A180ACC43, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_120DF210480DFD288107719A180ACC43::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_F12C4DC748E310E29F923F9537B3A9B5
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_F12C4DC748E310E29F923F9537B3A9B5 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_F12C4DC748E310E29F923F9537B3A9B5) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_F12C4DC748E310E29F923F9537B3A9B5");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_F12C4DC748E310E29F923F9537B3A9B5) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_F12C4DC748E310E29F923F9537B3A9B5");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_F12C4DC748E310E29F923F9537B3A9B5, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_F12C4DC748E310E29F923F9537B3A9B5::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_F12C4DC748E310E29F923F9537B3A9B5
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_F12C4DC748E310E29F923F9537B3A9B5 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_F12C4DC748E310E29F923F9537B3A9B5) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_F12C4DC748E310E29F923F9537B3A9B5");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_F12C4DC748E310E29F923F9537B3A9B5) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_F12C4DC748E310E29F923F9537B3A9B5");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_F12C4DC748E310E29F923F9537B3A9B5, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_F12C4DC748E310E29F923F9537B3A9B5::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_D377D0924929627D58ADFEBDEEC88DA0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_D377D0924929627D58ADFEBDEEC88DA0 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_D377D0924929627D58ADFEBDEEC88DA0) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_D377D0924929627D58ADFEBDEEC88DA0");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_D377D0924929627D58ADFEBDEEC88DA0) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_D377D0924929627D58ADFEBDEEC88DA0");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_D377D0924929627D58ADFEBDEEC88DA0, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_D377D0924929627D58ADFEBDEEC88DA0::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_D377D0924929627D58ADFEBDEEC88DA0
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_D377D0924929627D58ADFEBDEEC88DA0 final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_D377D0924929627D58ADFEBDEEC88DA0) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_D377D0924929627D58ADFEBDEEC88DA0");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_D377D0924929627D58ADFEBDEEC88DA0) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_D377D0924929627D58ADFEBDEEC88DA0");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_D377D0924929627D58ADFEBDEEC88DA0, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_D377D0924929627D58ADFEBDEEC88DA0::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Failed_F9C767D346A1A6BCE8FC57B7E7BC5B6A::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A
// 0x0008 (0x0008 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A final
{
public:
	class UAnimMontage*                           Montage_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A) == 0x000008, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A, Montage_0) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_Completed_F9C767D346A1A6BCE8FC57B7E7BC5B6A::Montage_0' has a wrong offset!");

// Function BP_PlayerCharacter_EmoteComponent.BP_PlayerCharacter_EmoteComponent_C.ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent
// 0x0350 (0x0350 - 0x0000)
struct BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_21;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_20;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_2;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_19;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_18;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_3;            // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_4;            // 0x0080(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_17;                     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_16;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_5;            // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_6;            // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_15;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_14;                     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_7;            // 0x00D8(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_4;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_8;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_13;                     // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_12;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_9;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_5;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_10;           // 0x0128(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_11;                     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_10;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_11;           // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_6;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_12;           // 0x0160(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_9;                      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_8;                      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_13;           // 0x0180(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_7;                            // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_14;           // 0x0198(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_7;                      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_6;                      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_15;           // 0x01B8(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_8;                            // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_16;           // 0x01D0(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_5;                      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_4;                      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_17;           // 0x01F0(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_9;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_18;           // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_3;                      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_2;                      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_19;           // 0x0228(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_10;                           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_20;           // 0x0240(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           K2Node_CustomEvent_Montage_1;                      // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_CustomEvent_Montage;                        // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_21;           // 0x0260(0x0010)(ZeroConstructor, NoDestructor)
	class UAnimMontage*                           Temp_object_Variable_11;                           // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue;              // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_22;                     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_1;            // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_2;            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_3;            // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_4;            // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_22;           // 0x02C0(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_CustomEvent_Montage_23;                     // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_5;            // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_6;            // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_7;            // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302[0x6];                                      // 0x0302(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_8;            // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UAnimMontage* Montage)>  K2Node_CreateDelegate_OutputDelegate_23;           // 0x0310(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_9;            // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_10;           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33A[0x6];                                      // 0x033A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetMontageByTag*         CallFunc_GetMontageByTag_ReturnValue_11;           // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent) == 0x000008, "Wrong alignment on BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent");
static_assert(sizeof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent) == 0x000350, "Wrong size on BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, EntryPoint) == 0x000000, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable) == 0x000008, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_21) == 0x000020, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_20) == 0x000028, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_1) == 0x000040, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_2) == 0x000048, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_19) == 0x000058, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_18) == 0x000060, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000068, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_2) == 0x000078, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_4) == 0x000080, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_17) == 0x000090, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_16) == 0x000098, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000A0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_3) == 0x0000B0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000B8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_15) == 0x0000C8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_14) == 0x0000D0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000D8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_4) == 0x0000E8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000F0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_13) == 0x000100, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_12) == 0x000108, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_9) == 0x000110, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_5) == 0x000120, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_10) == 0x000128, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_11) == 0x000138, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_10) == 0x000140, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_11) == 0x000148, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_6) == 0x000158, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_12) == 0x000160, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_9) == 0x000170, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_8) == 0x000178, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_13) == 0x000180, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_7) == 0x000190, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_14) == 0x000198, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_7) == 0x0001A8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_6) == 0x0001B0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001B8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_8) == 0x0001C8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_16) == 0x0001D0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_5) == 0x0001E0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_4) == 0x0001E8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_17) == 0x0001F0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_9) == 0x000200, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_18) == 0x000208, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_3) == 0x000218, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_2) == 0x000220, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_19) == 0x000228, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_10) == 0x000238, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_20) == 0x000240, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_1) == 0x000250, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage) == 0x000258, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_21) == 0x000260, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, Temp_object_Variable_11) == 0x000270, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue) == 0x000278, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue) == 0x000280, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_22) == 0x000288, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_1) == 0x000290, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_1) == 0x000298, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_2) == 0x0002A0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_3) == 0x0002A8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_2) == 0x0002B0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_3) == 0x0002B1, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_4) == 0x0002B8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_22) == 0x0002C0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_22' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_4) == 0x0002D0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CustomEvent_Montage_23) == 0x0002D8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CustomEvent_Montage_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_5) == 0x0002E0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_5) == 0x0002E8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_6) == 0x0002F0, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_7) == 0x0002F8, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_6) == 0x000300, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_7) == 0x000301, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_8) == 0x000308, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, K2Node_CreateDelegate_OutputDelegate_23) == 0x000310, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::K2Node_CreateDelegate_OutputDelegate_23' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_8) == 0x000320, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_9) == 0x000328, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_10) == 0x000330, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_9) == 0x000338, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_10) == 0x000339, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_GetMontageByTag_ReturnValue_11) == 0x000340, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_GetMontageByTag_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent, CallFunc_IsValid_ReturnValue_11) == 0x000348, "Member 'BP_PlayerCharacter_EmoteComponent_C_ExecuteUbergraph_BP_PlayerCharacter_EmoteComponent::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");

}

