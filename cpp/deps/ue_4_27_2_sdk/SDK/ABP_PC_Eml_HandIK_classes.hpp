#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PC_Eml_HandIK

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "ControlRig_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_PC_Eml_HandIK.ABP_PC_Eml_HandIK_C
// 0x0B90 (0x1760 - 0x0BD0)
class UABP_PC_Eml_HandIK_C final : public UPlayerSubGraphAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0BD0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_3;                              // 0x0BD8(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_2;                   // 0x0C08(0x0118)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_1;                        // 0x0D20(0x0368)()
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x1088(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x10B8(0x0118)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x11D0(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x1200(0x0118)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x1318(0x0368)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1680(0x0030)()
	float                                         __CustomProperty_JogBlend_ADBB66AB4482CDAA6A17CEB1CA46022D; // 0x16B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_RightHandWeight_ADBB66AB4482CDAA6A17CEB1CA46022D; // 0x16B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_LeftHandWeight_ADBB66AB4482CDAA6A17CEB1CA46022D; // 0x16B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JogBlend;                                          // 0x16BC(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TwistInput;                                        // 0x16C0(0x0004)(BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_RightHandWeight_107994EA4AE14DCE5F9C0EA524F559FC; // 0x16C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_RightHandRotationAlpha_107994EA4AE14DCE5F9C0EA524F559FC; // 0x16C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_LeftHandWeight_107994EA4AE14DCE5F9C0EA524F559FC; // 0x16CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_LeftHandRotationAlpha_107994EA4AE14DCE5F9C0EA524F559FC; // 0x16D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FArmIKEffectorData                     LeftArmIKData;                                     // 0x16D4(0x0040)(BlueprintReadOnly, NoDestructor)
	struct FArmIKEffectorData                     RightArmIKData;                                    // 0x1714(0x0040)(BlueprintReadOnly, NoDestructor)

public:
	void WalkTwistHandTweaks(const struct FPoseLink& WalkTwistHandTweaksInputPose, float TwistInput_0, float JogBlend_0, struct FPoseLink* WalkTwistHandTweaks_0);
	void FootIKLayer(const struct FPoseLink& FootIKInputPose, class UAnimComponentFootIK* FootIKData, float FootIKHipsOffset, struct FPoseLink* FootIKLayer_0);
	void ArmIKLayer(const struct FPoseLink& ArmIKInputPose, const struct FArmIKEffectorData& RightArmIKData_0, const struct FArmIKEffectorData& LeftArmIKData_0, const struct FVector& RightArmPoleVector, const struct FVector& LeftArmPoleVector, bool IKActive, struct FPoseLink* ArmIKLayer_0);
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PC_Eml_HandIK_AnimGraphNode_ControlRig_107994EA4AE14DCE5F9C0EA524F559FC();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PC_Eml_HandIK_AnimGraphNode_ControlRig_ADBB66AB4482CDAA6A17CEB1CA46022D();
	void ExecuteUbergraph_ABP_PC_Eml_HandIK(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_PC_Eml_HandIK_C">();
	}
	static class UABP_PC_Eml_HandIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_PC_Eml_HandIK_C>();
	}
};
static_assert(alignof(UABP_PC_Eml_HandIK_C) == 0x000010, "Wrong alignment on UABP_PC_Eml_HandIK_C");
static_assert(sizeof(UABP_PC_Eml_HandIK_C) == 0x001760, "Wrong size on UABP_PC_Eml_HandIK_C");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, UberGraphFrame) == 0x000BD0, "Member 'UABP_PC_Eml_HandIK_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_Root_3) == 0x000BD8, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_Root_3' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_LinkedInputPose_2) == 0x000C08, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_LinkedInputPose_2' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_ControlRig_1) == 0x000D20, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_ControlRig_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_Root_2) == 0x001088, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_LinkedInputPose_1) == 0x0010B8, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_Root_1) == 0x0011D0, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_LinkedInputPose) == 0x001200, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_ControlRig) == 0x001318, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, AnimGraphNode_Root) == 0x001680, "Member 'UABP_PC_Eml_HandIK_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, __CustomProperty_JogBlend_ADBB66AB4482CDAA6A17CEB1CA46022D) == 0x0016B0, "Member 'UABP_PC_Eml_HandIK_C::__CustomProperty_JogBlend_ADBB66AB4482CDAA6A17CEB1CA46022D' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, __CustomProperty_RightHandWeight_ADBB66AB4482CDAA6A17CEB1CA46022D) == 0x0016B4, "Member 'UABP_PC_Eml_HandIK_C::__CustomProperty_RightHandWeight_ADBB66AB4482CDAA6A17CEB1CA46022D' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, __CustomProperty_LeftHandWeight_ADBB66AB4482CDAA6A17CEB1CA46022D) == 0x0016B8, "Member 'UABP_PC_Eml_HandIK_C::__CustomProperty_LeftHandWeight_ADBB66AB4482CDAA6A17CEB1CA46022D' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, JogBlend) == 0x0016BC, "Member 'UABP_PC_Eml_HandIK_C::JogBlend' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, TwistInput) == 0x0016C0, "Member 'UABP_PC_Eml_HandIK_C::TwistInput' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, __CustomProperty_RightHandWeight_107994EA4AE14DCE5F9C0EA524F559FC) == 0x0016C4, "Member 'UABP_PC_Eml_HandIK_C::__CustomProperty_RightHandWeight_107994EA4AE14DCE5F9C0EA524F559FC' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, __CustomProperty_RightHandRotationAlpha_107994EA4AE14DCE5F9C0EA524F559FC) == 0x0016C8, "Member 'UABP_PC_Eml_HandIK_C::__CustomProperty_RightHandRotationAlpha_107994EA4AE14DCE5F9C0EA524F559FC' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, __CustomProperty_LeftHandWeight_107994EA4AE14DCE5F9C0EA524F559FC) == 0x0016CC, "Member 'UABP_PC_Eml_HandIK_C::__CustomProperty_LeftHandWeight_107994EA4AE14DCE5F9C0EA524F559FC' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, __CustomProperty_LeftHandRotationAlpha_107994EA4AE14DCE5F9C0EA524F559FC) == 0x0016D0, "Member 'UABP_PC_Eml_HandIK_C::__CustomProperty_LeftHandRotationAlpha_107994EA4AE14DCE5F9C0EA524F559FC' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, LeftArmIKData) == 0x0016D4, "Member 'UABP_PC_Eml_HandIK_C::LeftArmIKData' has a wrong offset!");
static_assert(offsetof(UABP_PC_Eml_HandIK_C, RightArmIKData) == 0x001714, "Member 'UABP_PC_Eml_HandIK_C::RightArmIKData' has a wrong offset!");

}

