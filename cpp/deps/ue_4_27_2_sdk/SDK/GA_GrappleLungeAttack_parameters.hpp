#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GrappleLungeAttack

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.GrappleAreaClearTrace
// 0x02B8 (0x02B8 - 0x0000)
struct GA_GrappleLungeAttack_C_GrappleAreaClearTrace final
{
public:
	float                                         ForwardDistance;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         backDistance;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DrawDebug;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TraceOk;                                           // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0010(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit;       // 0x0090(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue;  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0194(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_1;     // 0x01A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_1; // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_SphereTraceSingleForObjects_OutHit_2;     // 0x022C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingleForObjects_ReturnValue_2; // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_GrappleAreaClearTrace");
static_assert(sizeof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace) == 0x0002B8, "Wrong size on GA_GrappleLungeAttack_C_GrappleAreaClearTrace");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, ForwardDistance) == 0x000000, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::ForwardDistance' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, backDistance) == 0x000004, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::backDistance' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, DrawDebug) == 0x000008, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::DrawDebug' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, TraceOk) == 0x000009, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::TraceOk' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, Temp_object_Variable) == 0x000010, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, Temp_object_Variable_1) == 0x000020, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, Temp_object_Variable_2) == 0x000030, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000040, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, Temp_byte_Variable) == 0x000048, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00004C, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, Temp_byte_Variable_1) == 0x000058, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, Temp_bool_Variable) == 0x000059, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000060, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, K2Node_Select_Default) == 0x000068, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00006C, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, K2Node_MakeArray_Array) == 0x000078, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000088, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_SphereTraceSingleForObjects_OutHit) == 0x000090, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_SphereTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_SphereTraceSingleForObjects_ReturnValue) == 0x000118, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_SphereTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x00011C, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_GetActorForwardVector_ReturnValue) == 0x000128, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_FindLookAtRotation_ReturnValue) == 0x000134, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000140, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_GetForwardVector_ReturnValue) == 0x00014C, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000158, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000164, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000170, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00017C, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000188, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000194, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_SphereTraceSingleForObjects_OutHit_1) == 0x0001A0, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_SphereTraceSingleForObjects_OutHit_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_SphereTraceSingleForObjects_ReturnValue_1) == 0x000228, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_SphereTraceSingleForObjects_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_SphereTraceSingleForObjects_OutHit_2) == 0x00022C, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_SphereTraceSingleForObjects_OutHit_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_SphereTraceSingleForObjects_ReturnValue_2) == 0x0002B4, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_SphereTraceSingleForObjects_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_BooleanOR_ReturnValue) == 0x0002B5, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_BooleanOR_ReturnValue_1) == 0x0002B6, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_GrappleAreaClearTrace, CallFunc_Not_PreBool_ReturnValue) == 0x0002B7, "Member 'GA_GrappleLungeAttack_C_GrappleAreaClearTrace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(sizeof(GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x0000B8, "Wrong size on GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(offsetof(GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A, EventTag) == 0x000000, "Member 'GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A, EventData) == 0x000008, "Member 'GA_GrappleLungeAttack_C_EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A::EventData' has a wrong offset!");

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(sizeof(GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x0000B8, "Wrong size on GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A, EventTag) == 0x000000, "Member 'GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A, EventData) == 0x000008, "Member 'GA_GrappleLungeAttack_C_OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A::EventData' has a wrong offset!");

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(sizeof(GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x0000B8, "Wrong size on GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A, EventTag) == 0x000000, "Member 'GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A, EventData) == 0x000008, "Member 'GA_GrappleLungeAttack_C_OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A::EventData' has a wrong offset!");

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(sizeof(GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x0000B8, "Wrong size on GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A, EventTag) == 0x000000, "Member 'GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A, EventData) == 0x000008, "Member 'GA_GrappleLungeAttack_C_OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A::EventData' has a wrong offset!");

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(sizeof(GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A) == 0x0000B8, "Wrong size on GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A, EventTag) == 0x000000, "Member 'GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A, EventData) == 0x000008, "Member 'GA_GrappleLungeAttack_C_OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A::EventData' has a wrong offset!");

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.ExecuteUbergraph_GA_GrappleLungeAttack
// 0x04E8 (0x04E8 - 0x0000)
struct GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GrappleAreaClearTrace_traceOk;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0020(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x00D8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x01A0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0260(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0268(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0318(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0328(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0330(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x03F0(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x04A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x04A8(0x0020)()
	class UAbilityTask_PlayMontageAndWaitForEvent* CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwningActorFromActorInfo_ReturnValue;  // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x04D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_TryActivateAbilitiesByTag_ReturnValue;    // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack");
static_assert(sizeof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack) == 0x0004E8, "Wrong size on GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, EntryPoint) == 0x000000, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, CallFunc_GrappleAreaClearTrace_traceOk) == 0x000004, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::CallFunc_GrappleAreaClearTrace_traceOk' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventTag_4) == 0x000018, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventData_4) == 0x000020, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventTag_3) == 0x0000D0, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventData_3) == 0x0000D8, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CreateDelegate_OutputDelegate_1) == 0x000188, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventTag_2) == 0x000198, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventData_2) == 0x0001A0, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CreateDelegate_OutputDelegate_2) == 0x000250, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventTag_1) == 0x000260, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventData_1) == 0x000268, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CreateDelegate_OutputDelegate_3) == 0x000318, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventTag) == 0x000328, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CustomEvent_EventData) == 0x000330, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003E0, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, Temp_struct_Variable) == 0x0003F0, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, Temp_struct_Variable_1) == 0x0004A0, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x0004A8, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x0004C8, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, CallFunc_GetOwningActorFromActorInfo_ReturnValue) == 0x0004D0, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::CallFunc_GetOwningActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x0004D8, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, CallFunc_IsValid_ReturnValue) == 0x0004E0, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack, CallFunc_TryActivateAbilitiesByTag_ReturnValue) == 0x0004E1, "Member 'GA_GrappleLungeAttack_C_ExecuteUbergraph_GA_GrappleLungeAttack::CallFunc_TryActivateAbilitiesByTag_ReturnValue' has a wrong offset!");

// Function GA_GrappleLungeAttack.GA_GrappleLungeAttack_C.K2_CanActivateAbility
// 0x00A0 (0x00A0 - 0x0000)
struct GA_GrappleLungeAttack_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetPlayerAbilitySystemComponent_ReturnValue; // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasAnyMatchingGameplayTags_self_CastInput; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAnyMatchingGameplayTags_ReturnValue;   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_GrappleLungeAttack_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_GrappleLungeAttack_C_K2_CanActivateAbility");
static_assert(sizeof(GA_GrappleLungeAttack_C_K2_CanActivateAbility) == 0x0000A0, "Wrong size on GA_GrappleLungeAttack_C_K2_CanActivateAbility");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, CallFunc_GetPlayerAbilitySystemComponent_ReturnValue) == 0x000078, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::CallFunc_GetPlayerAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, CallFunc_HasAnyMatchingGameplayTags_self_CastInput) == 0x000088, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::CallFunc_HasAnyMatchingGameplayTags_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, CallFunc_HasAnyMatchingGameplayTags_ReturnValue) == 0x000098, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::CallFunc_HasAnyMatchingGameplayTags_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleLungeAttack_C_K2_CanActivateAbility, CallFunc_Not_PreBool_ReturnValue) == 0x000099, "Member 'GA_GrappleLungeAttack_C_K2_CanActivateAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

}

