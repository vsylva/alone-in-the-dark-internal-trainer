#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_TargetHasAllOrAnyMatchingGameplayTags

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_TargetHasAllOrAnyMatchingGameplayTags.BTD_TargetHasAllOrAnyMatchingGameplayTags_C
// 0x0050 (0x00F0 - 0x00A0)
class UBTD_TargetHasAllOrAnyMatchingGameplayTags_C final : public UBTDecorator_BlueprintBase
{
public:
	struct FGameplayTagContainer                  GameplayTags;                                      // 0x00A0(0x0020)(Edit, BlueprintVisible)
	EGameplayContainerMatchType                   TagsToMatch;                                       // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 Target;                                            // 0x00C8(0x0028)(Edit, BlueprintVisible)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_TargetHasAllOrAnyMatchingGameplayTags_C">();
	}
	static class UBTD_TargetHasAllOrAnyMatchingGameplayTags_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_TargetHasAllOrAnyMatchingGameplayTags_C>();
	}
};
static_assert(alignof(UBTD_TargetHasAllOrAnyMatchingGameplayTags_C) == 0x000008, "Wrong alignment on UBTD_TargetHasAllOrAnyMatchingGameplayTags_C");
static_assert(sizeof(UBTD_TargetHasAllOrAnyMatchingGameplayTags_C) == 0x0000F0, "Wrong size on UBTD_TargetHasAllOrAnyMatchingGameplayTags_C");
static_assert(offsetof(UBTD_TargetHasAllOrAnyMatchingGameplayTags_C, GameplayTags) == 0x0000A0, "Member 'UBTD_TargetHasAllOrAnyMatchingGameplayTags_C::GameplayTags' has a wrong offset!");
static_assert(offsetof(UBTD_TargetHasAllOrAnyMatchingGameplayTags_C, TagsToMatch) == 0x0000C0, "Member 'UBTD_TargetHasAllOrAnyMatchingGameplayTags_C::TagsToMatch' has a wrong offset!");
static_assert(offsetof(UBTD_TargetHasAllOrAnyMatchingGameplayTags_C, Target) == 0x0000C8, "Member 'UBTD_TargetHasAllOrAnyMatchingGameplayTags_C::Target' has a wrong offset!");

}

