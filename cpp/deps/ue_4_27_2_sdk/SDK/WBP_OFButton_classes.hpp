#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OFButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OFButton.WBP_OFButton_C
// 0x0628 (0x09F0 - 0x03C8)
class UWBP_OFButton_C final : public UOFButtonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ButtonInkEffektLoop;                               // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ButtonFadeInAnimations;                            // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ButtonPressed;                                     // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   ButtonText;                                        // 0x03F0(0x0018)(Edit, BlueprintVisible)
	TSoftObjectPtr<class UFMODEvent>              HoverdSound;                                       // 0x0408(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FButtonStyle                           ButtonStyle;                                       // 0x0430(0x0278)(Edit, BlueprintVisible)
	struct FSlateColor                            In_Color_and_Opacity_Button_Text;                  // 0x06A8(0x0028)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             OnWidgetUnHover;                                   // 0x06D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         Widget_Size_Aspect_Ratio;                          // 0x06E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ButtonShaderNeedsUpdate;                           // 0x06E4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Ink_Position;                                      // 0x06E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Ink_Rotation;                                      // 0x06F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Ink_Scale_Uniform;                                 // 0x06F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnUpdateShader;                                    // 0x0700(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          Tweak_Ink_Position_Mode;                           // 0x0710(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WasPressed;                                        // 0x0711(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_712[0x6];                                      // 0x0712(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            ButtonColorPressed;                                // 0x0718(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FButtonStyle                           ButtonStylePressed;                                // 0x0740(0x0278)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftObjectPtr<class UFMODEvent>              PressedSound;                                      // 0x09B8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UFMODEvent*                             HardHoverSound;                                    // 0x09E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             HardPressedSound;                                  // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ButtonPressed__DelegateSignature();
	void OnWidgetUnHover__DelegateSignature();
	void OnUpdateShader__DelegateSignature();
	void ExecuteUbergraph_WBP_OFButton(int32 EntryPoint);
	void BndEvt__WBP_OFButton_OFButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_OFButton_OFButton_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_OFButton_OFButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void PreConstruct(bool IsDesignTime);
	void LoadCompleteDelegate_6C9668414091E74590AF5DA62581129E(const TArray<class UObject*>& LoadedAssets);
	void LoadCompleteDelegate_C67DCA6A46219A81954A58A137FB5D18(const TArray<class UObject*>& LoadedAssets);
	void Finished_0602E8BB47345BAD09386EA845C6A814();
	class FText Get_OFbuttonTextBlock_Text_0();
	void GetWidgetSizeAspectRatio();
	void UpdateButtonShader();
	void SetButtonState(bool InChecked);
	void Update_Button_State_Brush();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OFButton_C">();
	}
	static class UWBP_OFButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OFButton_C>();
	}
};
static_assert(alignof(UWBP_OFButton_C) == 0x000008, "Wrong alignment on UWBP_OFButton_C");
static_assert(sizeof(UWBP_OFButton_C) == 0x0009F0, "Wrong size on UWBP_OFButton_C");
static_assert(offsetof(UWBP_OFButton_C, UberGraphFrame) == 0x0003C8, "Member 'UWBP_OFButton_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonInkEffektLoop) == 0x0003D0, "Member 'UWBP_OFButton_C::ButtonInkEffektLoop' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonFadeInAnimations) == 0x0003D8, "Member 'UWBP_OFButton_C::ButtonFadeInAnimations' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonPressed) == 0x0003E0, "Member 'UWBP_OFButton_C::ButtonPressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonText) == 0x0003F0, "Member 'UWBP_OFButton_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, HoverdSound) == 0x000408, "Member 'UWBP_OFButton_C::HoverdSound' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonStyle) == 0x000430, "Member 'UWBP_OFButton_C::ButtonStyle' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, In_Color_and_Opacity_Button_Text) == 0x0006A8, "Member 'UWBP_OFButton_C::In_Color_and_Opacity_Button_Text' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, OnWidgetUnHover) == 0x0006D0, "Member 'UWBP_OFButton_C::OnWidgetUnHover' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, Widget_Size_Aspect_Ratio) == 0x0006E0, "Member 'UWBP_OFButton_C::Widget_Size_Aspect_Ratio' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonShaderNeedsUpdate) == 0x0006E4, "Member 'UWBP_OFButton_C::ButtonShaderNeedsUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, Ink_Position) == 0x0006E8, "Member 'UWBP_OFButton_C::Ink_Position' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, Ink_Rotation) == 0x0006F0, "Member 'UWBP_OFButton_C::Ink_Rotation' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, Ink_Scale_Uniform) == 0x0006F8, "Member 'UWBP_OFButton_C::Ink_Scale_Uniform' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, OnUpdateShader) == 0x000700, "Member 'UWBP_OFButton_C::OnUpdateShader' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, Tweak_Ink_Position_Mode) == 0x000710, "Member 'UWBP_OFButton_C::Tweak_Ink_Position_Mode' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, WasPressed) == 0x000711, "Member 'UWBP_OFButton_C::WasPressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonColorPressed) == 0x000718, "Member 'UWBP_OFButton_C::ButtonColorPressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, ButtonStylePressed) == 0x000740, "Member 'UWBP_OFButton_C::ButtonStylePressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, PressedSound) == 0x0009B8, "Member 'UWBP_OFButton_C::PressedSound' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, HardHoverSound) == 0x0009E0, "Member 'UWBP_OFButton_C::HardHoverSound' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_C, HardPressedSound) == 0x0009E8, "Member 'UWBP_OFButton_C::HardPressedSound' has a wrong offset!");

}

