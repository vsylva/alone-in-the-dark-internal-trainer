#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_LSVSetActiveState

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Flow_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass FN_LSVSetActiveState.FN_LSVSetActiveState_C
// 0x0020 (0x01F0 - 0x01D0)
class UFN_LSVSetActiveState_C final : public UFlowNode
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<TSoftObjectPtr<class ALevelStreamingVolume>> LSV;                                               // 0x01D8(0x0010)(Edit, BlueprintVisible)
	bool                                          Active;                                            // 0x01E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void K2_ExecuteInput(const class FName& PinName);
	void ExecuteUbergraph_FN_LSVSetActiveState(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FN_LSVSetActiveState_C">();
	}
	static class UFN_LSVSetActiveState_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFN_LSVSetActiveState_C>();
	}
};
static_assert(alignof(UFN_LSVSetActiveState_C) == 0x000008, "Wrong alignment on UFN_LSVSetActiveState_C");
static_assert(sizeof(UFN_LSVSetActiveState_C) == 0x0001F0, "Wrong size on UFN_LSVSetActiveState_C");
static_assert(offsetof(UFN_LSVSetActiveState_C, UberGraphFrame) == 0x0001D0, "Member 'UFN_LSVSetActiveState_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFN_LSVSetActiveState_C, LSV) == 0x0001D8, "Member 'UFN_LSVSetActiveState_C::LSV' has a wrong offset!");
static_assert(offsetof(UFN_LSVSetActiveState_C, Active) == 0x0001E8, "Member 'UFN_LSVSetActiveState_C::Active' has a wrong offset!");

}

