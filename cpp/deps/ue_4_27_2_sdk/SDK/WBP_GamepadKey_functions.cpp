#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GamepadKey

#include "Basic.hpp"

#include "WBP_GamepadKey_classes.hpp"
#include "WBP_GamepadKey_parameters.hpp"


namespace SDK
{

// Function WBP_GamepadKey.WBP_GamepadKey_C.ExecuteUbergraph_WBP_GamepadKey
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GamepadKey_C::ExecuteUbergraph_WBP_GamepadKey(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "ExecuteUbergraph_WBP_GamepadKey");

	Params::WBP_GamepadKey_C_ExecuteUbergraph_WBP_GamepadKey Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_GamepadKey_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "PreConstruct");

	Params::WBP_GamepadKey_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.Load And Set Texture
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UTexture2D>        Texture                                                (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void UWBP_GamepadKey_C::Load_And_Set_Texture(TSoftObjectPtr<class UTexture2D> Texture)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "Load And Set Texture");

	Params::WBP_GamepadKey_C_Load_And_Set_Texture Parms{};

	Parms.Texture = Texture;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.UpdateKeyDisplay
// (BlueprintCallable, BlueprintEvent)

void UWBP_GamepadKey_C::UpdateKeyDisplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "UpdateKeyDisplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.SetupWidget
// (Event, Public, BlueprintEvent)

void UWBP_GamepadKey_C::SetupWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "SetupWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.OnUpdateKeyBind
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             KeyBindName                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FKey                             NewKey                                                 (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    bIsPrimaryKey                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUnbindExisting                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UWBP_GamepadKey_C::OnUpdateKeyBind(class FName KeyBindName, const struct FKey& NewKey, bool bIsPrimaryKey, bool bUnbindExisting)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "OnUpdateKeyBind");

	Params::WBP_GamepadKey_C_OnUpdateKeyBind Parms{};

	Parms.KeyBindName = KeyBindName;
	Parms.NewKey = std::move(NewKey);
	Parms.bIsPrimaryKey = bIsPrimaryKey;
	Parms.bUnbindExisting = bUnbindExisting;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UWBP_GamepadKey_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.OnLoaded_C664A9BD48DA2A2E9B4AEC9AB0394272
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GamepadKey_C::OnLoaded_C664A9BD48DA2A2E9B4AEC9AB0394272(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "OnLoaded_C664A9BD48DA2A2E9B4AEC9AB0394272");

	Params::WBP_GamepadKey_C_OnLoaded_C664A9BD48DA2A2E9B4AEC9AB0394272 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.OnLoaded_44550C264E73A7D3C77EA6BFCD7BB533
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWBP_GamepadKey_C::OnLoaded_44550C264E73A7D3C77EA6BFCD7BB533(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "OnLoaded_44550C264E73A7D3C77EA6BFCD7BB533");

	Params::WBP_GamepadKey_C_OnLoaded_44550C264E73A7D3C77EA6BFCD7BB533 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.SortEntries
// (Public, BlueprintCallable, BlueprintEvent)

void UWBP_GamepadKey_C::SortEntries()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "SortEntries");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WBP_GamepadKey.WBP_GamepadKey_C.GetKeyToTextures
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TMap<struct FKey, TSoftObjectPtr<class UTexture2D>>Key_Textures                                           (Parm, OutParm)

void UWBP_GamepadKey_C::GetKeyToTextures(TMap<struct FKey, TSoftObjectPtr<class UTexture2D>>* Key_Textures)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WBP_GamepadKey_C", "GetKeyToTextures");

	Params::WBP_GamepadKey_C_GetKeyToTextures Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Key_Textures != nullptr)
		*Key_Textures = std::move(Parms.Key_Textures);
}

}

