#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuickTimeEvent

#include "Basic.hpp"

#include "ObsidianFox_structs.hpp"
#include "FaceButtonType_structs.hpp"


namespace SDK::Params
{

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.OnHudVisibiltyChanged
// 0x0018 (0x0018 - 0x0000)
struct WBP_QuickTimeEvent_C_OnHudVisibiltyChanged final
{
public:
	bool                                          IsVisible_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                CallFunc_GetMainState_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_QuickTimeEvent_C_OnHudVisibiltyChanged) == 0x000008, "Wrong alignment on WBP_QuickTimeEvent_C_OnHudVisibiltyChanged");
static_assert(sizeof(WBP_QuickTimeEvent_C_OnHudVisibiltyChanged) == 0x000018, "Wrong size on WBP_QuickTimeEvent_C_OnHudVisibiltyChanged");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnHudVisibiltyChanged, IsVisible_0) == 0x000000, "Member 'WBP_QuickTimeEvent_C_OnHudVisibiltyChanged::IsVisible_0' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnHudVisibiltyChanged, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'WBP_QuickTimeEvent_C_OnHudVisibiltyChanged::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnHudVisibiltyChanged, CallFunc_GetMainState_ReturnValue) == 0x000010, "Member 'WBP_QuickTimeEvent_C_OnHudVisibiltyChanged::CallFunc_GetMainState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnHudVisibiltyChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'WBP_QuickTimeEvent_C_OnHudVisibiltyChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.ShowHideUI
// 0x0003 (0x0003 - 0x0000)
struct WBP_QuickTimeEvent_C_ShowHideUI final
{
public:
	bool                                          Show;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_QuickTimeEvent_C_ShowHideUI) == 0x000001, "Wrong alignment on WBP_QuickTimeEvent_C_ShowHideUI");
static_assert(sizeof(WBP_QuickTimeEvent_C_ShowHideUI) == 0x000003, "Wrong size on WBP_QuickTimeEvent_C_ShowHideUI");
static_assert(offsetof(WBP_QuickTimeEvent_C_ShowHideUI, Show) == 0x000000, "Member 'WBP_QuickTimeEvent_C_ShowHideUI::Show' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ShowHideUI, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_QuickTimeEvent_C_ShowHideUI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ShowHideUI, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000002, "Member 'WBP_QuickTimeEvent_C_ShowHideUI::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.OnCompleted_4015BF5E431E87D2E3DD70A5E550507D
// 0x0020 (0x0020 - 0x0000)
struct WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   KeyString;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D) == 0x000008, "Wrong alignment on WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D");
static_assert(sizeof(WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D) == 0x000020, "Wrong size on WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D, Texture) == 0x000000, "Member 'WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D::Texture' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D, KeyString) == 0x000008, "Member 'WBP_QuickTimeEvent_C_OnCompleted_4015BF5E431E87D2E3DD70A5E550507D::KeyString' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C
// 0x0020 (0x0020 - 0x0000)
struct WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   KeyString;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C) == 0x000008, "Wrong alignment on WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C");
static_assert(sizeof(WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C) == 0x000020, "Wrong size on WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C, Texture) == 0x000000, "Member 'WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C::Texture' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C, KeyString) == 0x000008, "Member 'WBP_QuickTimeEvent_C_OnCompleted_33B63AA344AE8DA7AE5FD4818413E31C::KeyString' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.OnCompleted_7B2CB5A94AB6731481976587D5669A7D
// 0x0020 (0x0020 - 0x0000)
struct WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D final
{
public:
	class UTexture2D*                             Texture;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   KeyString;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D) == 0x000008, "Wrong alignment on WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D");
static_assert(sizeof(WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D) == 0x000020, "Wrong size on WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D, Texture) == 0x000000, "Member 'WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D::Texture' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D, KeyString) == 0x000008, "Member 'WBP_QuickTimeEvent_C_OnCompleted_7B2CB5A94AB6731481976587D5669A7D::KeyString' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.ButtonPress
// 0x0008 (0x0008 - 0x0000)
struct WBP_QuickTimeEvent_C_ButtonPress final
{
public:
	float                                         QTEClicks;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         QTEClicksRequired;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickTimeEvent_C_ButtonPress) == 0x000004, "Wrong alignment on WBP_QuickTimeEvent_C_ButtonPress");
static_assert(sizeof(WBP_QuickTimeEvent_C_ButtonPress) == 0x000008, "Wrong size on WBP_QuickTimeEvent_C_ButtonPress");
static_assert(offsetof(WBP_QuickTimeEvent_C_ButtonPress, QTEClicks) == 0x000000, "Member 'WBP_QuickTimeEvent_C_ButtonPress::QTEClicks' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ButtonPress, QTEClicksRequired) == 0x000004, "Member 'WBP_QuickTimeEvent_C_ButtonPress::QTEClicksRequired' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.ProgressUpdate
// 0x0008 (0x0008 - 0x0000)
struct WBP_QuickTimeEvent_C_ProgressUpdate final
{
public:
	float                                         QTEClicks;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         QTEClicksRequired;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickTimeEvent_C_ProgressUpdate) == 0x000004, "Wrong alignment on WBP_QuickTimeEvent_C_ProgressUpdate");
static_assert(sizeof(WBP_QuickTimeEvent_C_ProgressUpdate) == 0x000008, "Wrong size on WBP_QuickTimeEvent_C_ProgressUpdate");
static_assert(offsetof(WBP_QuickTimeEvent_C_ProgressUpdate, QTEClicks) == 0x000000, "Member 'WBP_QuickTimeEvent_C_ProgressUpdate::QTEClicks' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ProgressUpdate, QTEClicksRequired) == 0x000004, "Member 'WBP_QuickTimeEvent_C_ProgressUpdate::QTEClicksRequired' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.delayRemoval
// 0x0004 (0x0004 - 0x0000)
struct WBP_QuickTimeEvent_C_DelayRemoval final
{
public:
	float                                         DelayedRemoval_0;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuickTimeEvent_C_DelayRemoval) == 0x000004, "Wrong alignment on WBP_QuickTimeEvent_C_DelayRemoval");
static_assert(sizeof(WBP_QuickTimeEvent_C_DelayRemoval) == 0x000004, "Wrong size on WBP_QuickTimeEvent_C_DelayRemoval");
static_assert(offsetof(WBP_QuickTimeEvent_C_DelayRemoval, DelayedRemoval_0) == 0x000000, "Member 'WBP_QuickTimeEvent_C_DelayRemoval::DelayedRemoval_0' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.InputTypeChanged
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuickTimeEvent_C_InputTypeChanged final
{
public:
	bool                                          IsGamepadType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_QuickTimeEvent_C_InputTypeChanged) == 0x000001, "Wrong alignment on WBP_QuickTimeEvent_C_InputTypeChanged");
static_assert(sizeof(WBP_QuickTimeEvent_C_InputTypeChanged) == 0x000001, "Wrong size on WBP_QuickTimeEvent_C_InputTypeChanged");
static_assert(offsetof(WBP_QuickTimeEvent_C_InputTypeChanged, IsGamepadType) == 0x000000, "Member 'WBP_QuickTimeEvent_C_InputTypeChanged::IsGamepadType' has a wrong offset!");

// Function WBP_QuickTimeEvent.WBP_QuickTimeEvent_C.ExecuteUbergraph_WBP_QuickTimeEvent
// 0x01E8 (0x01E8 - 0x0000)
struct WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaceButtonType                               Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 Temp_object_Variable_1;                            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UTexture2D* Texture, class FText KeyString)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	class UTexture2D*                             K2Node_CustomEvent_Texture_2;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_KeyString_2;                    // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable;                                // 0x0050(0x0018)()
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_Texture_1;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_KeyString_1;                    // 0x0078(0x0018)()
	TDelegate<void(class UTexture2D* Texture, class FText KeyString)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable_1;                              // 0x00A0(0x0018)()
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_CustomEvent_Texture;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_KeyString;                      // 0x00C8(0x0018)()
	TDelegate<void(class UTexture2D* Texture, class FText KeyString)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	class FText                                   Temp_text_Variable_2;                              // 0x00F0(0x0018)()
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool IsGamepadType)>           K2Node_CreateDelegate_OutputDelegate_3;            // 0x0110(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_QTEClicks_1;                    // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_QTEClicksRequired_1;            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_QTEClicks;                      // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_QTEClicksRequired;              // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_delayedRemoval;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 K2Node_Select_Default;                             // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue_1;         // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaceButtonType                               Temp_byte_Variable_1;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlay*                               K2Node_Select_Default_1;                           // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetTextureAssociatedWithInputAction* CallFunc_GetTextureAssociatedWithInputAction_ReturnValue; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_GetTextureAssociatedWithInputAction* CallFunc_GetTextureAssociatedWithInputAction_ReturnValue_1; // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A1[0x7];                                      // 0x01A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x01A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBPAsyncAction_GetTextureAssociatedWithInputAction* CallFunc_GetTextureAssociatedWithInputAction_ReturnValue_2; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerController*                    CallFunc_GetObsidianFoxPlayerController_ReturnValue; // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsGamepadType;                  // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bNewHUDVisibility)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x01D4(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent) == 0x000008, "Wrong alignment on WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent");
static_assert(sizeof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent) == 0x0001E8, "Wrong size on WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, EntryPoint) == 0x000000, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_object_Variable) == 0x000008, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_byte_Variable) == 0x000010, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_object_Variable_1) == 0x000018, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_Texture_2) == 0x000030, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_Texture_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_KeyString_2) == 0x000038, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_KeyString_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_text_Variable) == 0x000050, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_object_Variable_2) == 0x000068, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_Texture_1) == 0x000070, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_Texture_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_KeyString_1) == 0x000078, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_KeyString_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CreateDelegate_OutputDelegate_1) == 0x000090, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_text_Variable_1) == 0x0000A0, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_object_Variable_3) == 0x0000B8, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_Texture) == 0x0000C0, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_Texture' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_KeyString) == 0x0000C8, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_KeyString' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000E0, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_text_Variable_2) == 0x0000F0, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_object_Variable_4) == 0x000108, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CreateDelegate_OutputDelegate_3) == 0x000110, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_QTEClicks_1) == 0x000120, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_QTEClicks_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_QTEClicksRequired_1) == 0x000124, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_QTEClicksRequired_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_PlayAnimation_ReturnValue) == 0x000128, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000130, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_PlayAnimation_ReturnValue_1) == 0x000138, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_QTEClicks) == 0x000140, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_QTEClicks' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_QTEClicksRequired) == 0x000144, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_QTEClicksRequired' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000148, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_PlayAnimation_ReturnValue_2) == 0x000150, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_delayedRemoval) == 0x000158, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_delayedRemoval' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_Select_Default) == 0x000160, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000168, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_GetDynamicMaterial_ReturnValue_1) == 0x000170, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_GetDynamicMaterial_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, Temp_byte_Variable_1) == 0x000178, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_Select_Default_1) == 0x000180, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_GetTextureAssociatedWithInputAction_ReturnValue) == 0x000188, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_GetTextureAssociatedWithInputAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_IsValid_ReturnValue) == 0x000190, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_GetTextureAssociatedWithInputAction_ReturnValue_1) == 0x000198, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_GetTextureAssociatedWithInputAction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_IsValid_ReturnValue_1) == 0x0001A0, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_GetPlatformName_ReturnValue) == 0x0001A8, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_GetTextureAssociatedWithInputAction_ReturnValue_2) == 0x0001B8, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_GetTextureAssociatedWithInputAction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001C0, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_IsValid_ReturnValue_2) == 0x0001C1, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, CallFunc_GetObsidianFoxPlayerController_ReturnValue) == 0x0001C8, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::CallFunc_GetObsidianFoxPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CustomEvent_IsGamepadType) == 0x0001D0, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CustomEvent_IsGamepadType' has a wrong offset!");
static_assert(offsetof(WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent, K2Node_CreateDelegate_OutputDelegate_4) == 0x0001D4, "Member 'WBP_QuickTimeEvent_C_ExecuteUbergraph_WBP_QuickTimeEvent::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");

}

