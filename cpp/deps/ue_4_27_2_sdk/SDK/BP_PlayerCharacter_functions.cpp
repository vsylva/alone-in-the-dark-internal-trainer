#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PlayerCharacter

#include "Basic.hpp"

#include "BP_PlayerCharacter_classes.hpp"
#include "BP_PlayerCharacter_parameters.hpp"


namespace SDK
{

// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setStartBurrowed
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    beginBurrowed                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::SetStartBurrowed(bool beginBurrowed, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "setStartBurrowed");

	Params::BP_PlayerCharacter_C_SetStartBurrowed Parms{};

	Parms.beginBurrowed = beginBurrowed;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setOrderTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::SetOrderTarget(const struct FVector& Location, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "setOrderTarget");

	Params::BP_PlayerCharacter_C_SetOrderTarget Parms{};

	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.hitscanWeaponFired
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::HitscanWeaponFired(bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "hitscanWeaponFired");

	Params::BP_PlayerCharacter_C_HitscanWeaponFired Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetMostSuitableMeleeSection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAnimationMontageIdentifier             Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::GetMostSuitableMeleeSection(EAnimationMontageIdentifier* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "GetMostSuitableMeleeSection");

	Params::BP_PlayerCharacter_C_GetMostSuitableMeleeSection Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.getAggroState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Aggro                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::GetAggroState(bool* Aggro)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "getAggroState");

	Params::BP_PlayerCharacter_C_GetAggroState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Aggro != nullptr)
		*Aggro = Parms.Aggro;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setNewAggro
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewAggro                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::SetNewAggro(bool NewAggro, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "setNewAggro");

	Params::BP_PlayerCharacter_C_SetNewAggro Parms{};

	Parms.NewAggro = NewAggro;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IncrementJac3ProneCounter
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ProneCounter                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::IncrementJac3ProneCounter(int32* ProneCounter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "IncrementJac3ProneCounter");

	Params::BP_PlayerCharacter_C_IncrementJac3ProneCounter Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ProneCounter != nullptr)
		*ProneCounter = Parms.ProneCounter;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetCharacterSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECharacterSize                          Size                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::GetCharacterSize(ECharacterSize* Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "GetCharacterSize");

	Params::BP_PlayerCharacter_C_GetCharacterSize Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Size != nullptr)
		*Size = Parms.Size;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.getCemeteryCreatureType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECemeteryCreatureType                   CemeteryCreatureType                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::GetCemeteryCreatureType(ECemeteryCreatureType* CemeteryCreatureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "getCemeteryCreatureType");

	Params::BP_PlayerCharacter_C_GetCemeteryCreatureType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CemeteryCreatureType != nullptr)
		*CemeteryCreatureType = Parms.CemeteryCreatureType;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setCanCirculate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanCirculate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::SetCanCirculate(bool CanCirculate, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "setCanCirculate");

	Params::BP_PlayerCharacter_C_SetCanCirculate Parms{};

	Parms.CanCirculate = CanCirculate;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.setStartOnWall
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    StartOnWall                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::SetStartOnWall(bool StartOnWall, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "setStartOnWall");

	Params::BP_PlayerCharacter_C_SetStartOnWall Parms{};

	Parms.StartOnWall = StartOnWall;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AimedAt
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::AimedAt(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "AimedAt");

	Params::BP_PlayerCharacter_C_AimedAt Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.GetUpgradeComponent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWeaponUpgradeComponent_C*        UpgradeComponent                                       (Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::GetUpgradeComponent(class UWeaponUpgradeComponent_C** UpgradeComponent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "GetUpgradeComponent");

	Params::BP_PlayerCharacter_C_GetUpgradeComponent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UpgradeComponent != nullptr)
		*UpgradeComponent = Parms.UpgradeComponent;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.FlashlightHit
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::FlashlightHit(float Distance, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "FlashlightHit");

	Params::BP_PlayerCharacter_C_FlashlightHit Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.addNGPlusWeapons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::AddNGPlusWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "addNGPlusWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Start Loading Animations
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::Start_Loading_Animations()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Start Loading Animations");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Set Combat Sprint
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::Set_Combat_Sprint(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Set Combat Sprint");

	Params::BP_PlayerCharacter_C_Set_Combat_Sprint Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TurnOffFlashlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::TurnOffFlashlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "TurnOffFlashlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TurnOnFlashlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::TurnOnFlashlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "TurnOnFlashlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateSlopGE
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::UpdateSlopGE()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UpdateSlopGE");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsOnSlope
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::IsOnSlope(bool* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "IsOnSlope");

	Params::BP_PlayerCharacter_C_IsOnSlope Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = Parms.Value;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateFlashlightVisibility
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::UpdateFlashlightVisibility()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UpdateFlashlightVisibility");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UnbindOnItemAddedEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::UnbindOnItemAddedEvent(class AActor* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UnbindOnItemAddedEvent");

	Params::BP_PlayerCharacter_C_UnbindOnItemAddedEvent Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.BindOnItemAddedEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::BindOnItemAddedEvent(class AActor* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "BindOnItemAddedEvent");

	Params::BP_PlayerCharacter_C_BindOnItemAddedEvent Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnItemAdded_SetFlashlightVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemData*                        AddedItem                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnItemAdded_SetFlashlightVisibility(class UItemData* AddedItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnItemAdded_SetFlashlightVisibility");

	Params::BP_PlayerCharacter_C_OnItemAdded_SetFlashlightVisibility Parms{};

	Parms.AddedItem = AddedItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnItemAddedToInventory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItemData*                        ItemData                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnItemAddedToInventory(const class UItemData* ItemData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnItemAddedToInventory");

	Params::BP_PlayerCharacter_C_OnItemAddedToInventory Parms{};

	Parms.ItemData = ItemData;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InitializeFlashlightDynMat
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::InitializeFlashlightDynMat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "InitializeFlashlightDynMat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetLockFlashlightRotation
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsLocked                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::SetLockFlashlightRotation(bool IsLocked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SetLockFlashlightRotation");

	Params::BP_PlayerCharacter_C_SetLockFlashlightRotation Parms{};

	Parms.IsLocked = IsLocked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ToggleFlashlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::ToggleFlashlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ToggleFlashlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RotateFlashlight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::RotateFlashlight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "RotateFlashlight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsHealthBelowThreshold
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   NewCurrentHealth                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerCharacter_C::IsHealthBelowThreshold(float NewCurrentHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "IsHealthBelowThreshold");

	Params::BP_PlayerCharacter_C_IsHealthBelowThreshold Parms{};

	Parms.NewCurrentHealth = NewCurrentHealth;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateFlashlightLightFunction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::UpdateFlashlightLightFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UpdateFlashlightLightFunction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Debug Movement Speed
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::Debug_Movement_Speed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Debug Movement Speed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateBreathingVFX
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::UpdateBreathingVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UpdateBreathingVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RotateCharacterLight
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UCameraComponent*                 CameraComponent                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  PointLightParentTarget                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::RotateCharacterLight(class UCameraComponent* CameraComponent, class USceneComponent* PointLightParentTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "RotateCharacterLight");

	Params::BP_PlayerCharacter_C_RotateCharacterLight Parms{};

	Parms.CameraComponent = CameraComponent;
	Parms.PointLightParentTarget = PointLightParentTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterFadeCloseToCamera
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::CharacterFadeCloseToCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "CharacterFadeCloseToCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateBleedingEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHealthState                      HealthState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::UpdateBleedingEffects(EPlayerHealthState HealthState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UpdateBleedingEffects");

	Params::BP_PlayerCharacter_C_UpdateBleedingEffects Parms{};

	Parms.HealthState = HealthState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ToggleBloodDrippingBasedOnHealthState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHealthState                      HealthState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ToggleBloodDrippingBasedOnHealthState(EPlayerHealthState HealthState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ToggleBloodDrippingBasedOnHealthState");

	Params::BP_PlayerCharacter_C_ToggleBloodDrippingBasedOnHealthState Parms{};

	Parms.HealthState = HealthState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IsAiming
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_PlayerCharacter_C::IsAiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "IsAiming");

	Params::BP_PlayerCharacter_C_IsAiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SpawnDamageEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         Rotation                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    Invert                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::SpawnDamageEffect(const struct FVector& Location, const struct FRotator& Rotation, bool Invert)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SpawnDamageEffect");

	Params::BP_PlayerCharacter_C_SpawnDamageEffect Parms{};

	Parms.Location = std::move(Location);
	Parms.Rotation = std::move(Rotation);
	Parms.Invert = Invert;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Update Play State Health
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewHealth                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Update_Play_State_Health(float NewHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Update Play State Health");

	Params::BP_PlayerCharacter_C_Update_Play_State_Health Parms{};

	Parms.NewHealth = NewHealth;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.IncrementFearEmotionInCombat
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::IncrementFearEmotionInCombat(float Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "IncrementFearEmotionInCombat");

	Params::BP_PlayerCharacter_C_IncrementFearEmotionInCombat Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CalculateLeanAmount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   LeanAmount                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   InterpSpeed                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   NewParam                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::CalculateLeanAmount(float* LeanAmount, float* InterpSpeed, float* NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "CalculateLeanAmount");

	Params::BP_PlayerCharacter_C_CalculateLeanAmount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (LeanAmount != nullptr)
		*LeanAmount = Parms.LeanAmount;

	if (InterpSpeed != nullptr)
		*InterpSpeed = Parms.InterpSpeed;

	if (NewParam != nullptr)
		*NewParam = Parms.NewParam;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnHealthStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHealthState                      NewHealthState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnHealthStateChanged(EPlayerHealthState NewHealthState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnHealthStateChanged");

	Params::BP_PlayerCharacter_C_OnHealthStateChanged Parms{};

	Parms.NewHealthState = NewHealthState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnHealthChange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   New_Current_Health                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   HealthDeltaValue                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PlayerCharacter_C::OnHealthChange(float New_Current_Health, float HealthDeltaValue, struct FGameplayTagContainer& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnHealthChange");

	Params::BP_PlayerCharacter_C_OnHealthChange Parms{};

	Parms.New_Current_Health = New_Current_Health;
	Parms.HealthDeltaValue = HealthDeltaValue;
	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);

	NewParam = std::move(Parms.NewParam);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnDeathEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::OnDeathEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnDeathEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ActivateAimAssistWeapon
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::ActivateAimAssistWeapon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ActivateAimAssistWeapon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SpawnWeapon
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Attach_Socket                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    StartEquipped                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AOFWeaponActor*                   Weapon                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::SpawnWeapon(class UClass* Class_0, class FName Attach_Socket, bool StartEquipped, class AOFWeaponActor** Weapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SpawnWeapon");

	Params::BP_PlayerCharacter_C_SpawnWeapon Parms{};

	Parms.Class_0 = Class_0;
	Parms.Attach_Socket = Attach_Socket;
	Parms.StartEquipped = StartEquipped;

	UObject::ProcessEvent(Func, &Parms);

	if (Weapon != nullptr)
		*Weapon = Parms.Weapon;
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnGameMainStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameMainState                          OldGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGameMainState                          NewGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnGameMainStateChanged(EGameMainState OldGameState, EGameMainState NewGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnGameMainStateChanged");

	Params::BP_PlayerCharacter_C_OnGameMainStateChanged Parms{};

	Parms.OldGameState = OldGameState;
	Parms.NewGameState = NewGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.0-1Lerp20Sec__FinishedFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::ZeroMinus1Lerp20Sec__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "0-1Lerp20Sec__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.0-1Lerp20Sec__UpdateFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::ZeroMinus1Lerp20Sec__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "0-1Lerp20Sec__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_5__FinishedFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_5__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_5__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_5__UpdateFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_5__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_5__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_6__FinishedFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_6__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_6__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_6__UpdateFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_6__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_6__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_7__FinishedFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_7__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_7__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Timeline_7__UpdateFunc
// (BlueprintEvent)

void ABP_PlayerCharacter_C::Timeline_7__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Timeline_7__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0");

	Params::BP_PlayerCharacter_C_InpActEvt_CheatDebugPlayerCollision_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UClass*>                   LoadedAssets                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PlayerCharacter_C::LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69(const TArray<class UClass*>& LoadedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69");

	Params::BP_PlayerCharacter_C_LoadCompleteDelegate_93EE35E9463AAA2DC2E644A5607D0D69 Parms{};

	Parms.LoadedAssets = std::move(LoadedAssets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF");

	Params::BP_PlayerCharacter_C_OnLoaded_EF25E9654C5D8EEC633B6D8193B34DFF Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  LoadedAssets                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PlayerCharacter_C::LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8(const TArray<class UObject*>& LoadedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8");

	Params::BP_PlayerCharacter_C_LoadCompleteDelegate_615251364088BC9D9B5513B7EF4514D8 Parms{};

	Parms.LoadedAssets = std::move(LoadedAssets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetCemeteryCreatureType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// ECemeteryCreatureType                   CreatureType                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::SetCemeteryCreatureType(ECemeteryCreatureType CreatureType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SetCemeteryCreatureType");

	Params::BP_PlayerCharacter_C_SetCemeteryCreatureType Parms{};

	Parms.CreatureType = CreatureType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.QuicktimeSuccess
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::QuicktimeSuccess()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "QuicktimeSuccess");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.QuicktimeInput
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentProgress                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   MaxProgress                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::QuicktimeInput(float CurrentProgress, float MaxProgress)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "QuicktimeInput");

	Params::BP_PlayerCharacter_C_QuicktimeInput Parms{};

	Parms.CurrentProgress = CurrentProgress;
	Parms.MaxProgress = MaxProgress;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LaserHit
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::LaserHit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "LaserHit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MoveToGrappleLocatio
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Grapple_Location                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::MoveToGrappleLocatio(const struct FVector& Grapple_Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "MoveToGrappleLocatio");

	Params::BP_PlayerCharacter_C_MoveToGrappleLocatio Parms{};

	Parms.Grapple_Location = std::move(Grapple_Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.updateBossHealthData
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   CurrentHealthPercentage                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::UpdateBossHealthData(float CurrentHealthPercentage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "updateBossHealthData");

	Params::BP_PlayerCharacter_C_UpdateBossHealthData Parms{};

	Parms.CurrentHealthPercentage = CurrentHealthPercentage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.TickDebugTesting
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Delta_Seconds                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::TickDebugTesting(float Delta_Seconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "TickDebugTesting");

	Params::BP_PlayerCharacter_C_TickDebugTesting Parms{};

	Parms.Delta_Seconds = Delta_Seconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MeleeAttack
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::MeleeAttack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "MeleeAttack");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Deactivate Lens
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           MirrorRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Deactivate_Lens(class AActor* MirrorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Deactivate Lens");

	Params::BP_PlayerCharacter_C_Deactivate_Lens Parms{};

	Parms.MirrorRef = MirrorRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Override Audio Listener Position
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::Override_Audio_Listener_Position()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Override Audio Listener Position");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnConsoleCommandsLoaded
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UConsoleCommandsManager*          ConsoleCommandsManager                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::OnConsoleCommandsLoaded(class UConsoleCommandsManager* ConsoleCommandsManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnConsoleCommandsLoaded");

	Params::BP_PlayerCharacter_C_OnConsoleCommandsLoaded Parms{};

	Parms.ConsoleCommandsManager = ConsoleCommandsManager;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveHit
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              MyComp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Other                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bSelfMoved                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_PlayerCharacter_C::ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceiveHit");

	Params::BP_PlayerCharacter_C_ReceiveHit Parms{};

	Parms.MyComp = MyComp;
	Parms.Other = Other;
	Parms.OtherComp = OtherComp;
	Parms.bSelfMoved = bSelfMoved;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PlayePointLightShadowsOn
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::PlayePointLightShadowsOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "PlayePointLightShadowsOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.FocusLensBeamInteraction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::FocusLensBeamInteraction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "FocusLensBeamInteraction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PlayePointLightShadowsOff
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::PlayePointLightShadowsOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "PlayePointLightShadowsOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PlayePointLightToggle
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::PlayePointLightToggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "PlayePointLightToggle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PhotoMode
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FKey                             InKey                                                  (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// bool                                    Exit_To_Menu                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::PhotoMode(const struct FKey& InKey, bool Exit_To_Menu)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "PhotoMode");

	Params::BP_PlayerCharacter_C_PhotoMode Parms{};

	Parms.InKey = std::move(InKey);
	Parms.Exit_To_Menu = Exit_To_Menu;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.Bind Cheat Console Input
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::Bind_Cheat_Console_Input(class AController* Controller_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "Bind Cheat Console Input");

	Params::BP_PlayerCharacter_C_Bind_Cheat_Console_Input Parms{};

	Parms.Controller_0 = Controller_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceiveTick");

	Params::BP_PlayerCharacter_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LessBleedingInMaterials
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RGB                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::LessBleedingInMaterials(class FName RGB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "LessBleedingInMaterials");

	Params::BP_PlayerCharacter_C_LessBleedingInMaterials Parms{};

	Parms.RGB = RGB;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.PhotoMode_Cleanup
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::PhotoMode_Cleanup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "PhotoMode_Cleanup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MoreBleedingInMaterials
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             RGB                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::MoreBleedingInMaterials(class FName RGB)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "MoreBleedingInMaterials");

	Params::BP_PlayerCharacter_C_MoreBleedingInMaterials Parms{};

	Parms.RGB = RGB;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.EnterRainZone
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::EnterRainZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "EnterRainZone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ExitRainZone
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::ExitRainZone()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ExitRainZone");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterDeath
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            EventTags                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_PlayerCharacter_C::CharacterDeath(const struct FGameplayTagContainer& EventTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "CharacterDeath");

	Params::BP_PlayerCharacter_C_CharacterDeath Parms{};

	Parms.EventTags = std::move(EventTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MoveToGrappleLoc
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          GrappleLocation                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::MoveToGrappleLoc(const struct FVector& GrappleLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "MoveToGrappleLoc");

	Params::BP_PlayerCharacter_C_MoveToGrappleLoc Parms{};

	Parms.GrappleLocation = std::move(GrappleLocation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.RemoveSplatter
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SplatterStage                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::RemoveSplatter(class FName SplatterStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "RemoveSplatter");

	Params::BP_PlayerCharacter_C_RemoveSplatter Parms{};

	Parms.SplatterStage = SplatterStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SplatterEffect
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StageSplatter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FLinearColor                     ColorSplatter                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   RoughnessSplatter                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaIntensityForStage                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::SplatterEffect(int32 StageSplatter, const struct FLinearColor& ColorSplatter, float RoughnessSplatter, const float DeltaIntensityForStage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SplatterEffect");

	Params::BP_PlayerCharacter_C_SplatterEffect Parms{};

	Parms.StageSplatter = StageSplatter;
	Parms.ColorSplatter = std::move(ColorSplatter);
	Parms.RoughnessSplatter = RoughnessSplatter;
	Parms.DeltaIntensityForStage = DeltaIntensityForStage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceivePossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceivePossessed");

	Params::BP_PlayerCharacter_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveUnpossessed
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceiveUnpossessed");

	Params::BP_PlayerCharacter_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ApplyBurning
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::ApplyBurning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ApplyBurning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ResetBurn
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::ResetBurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ResetBurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.BeamInteraction
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ImpactPoint                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           MirrorRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::BeamInteraction(const struct FVector& ImpactPoint, class UPrimitiveComponent* HitComponent, class AActor* MirrorRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "BeamInteraction");

	Params::BP_PlayerCharacter_C_BeamInteraction Parms{};

	Parms.ImpactPoint = std::move(ImpactPoint);
	Parms.HitComponent = HitComponent;
	Parms.MirrorRef = MirrorRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ControlRotationFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           FocusTarget                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ControlRotationFocus(class AActor* FocusTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ControlRotationFocus");

	Params::BP_PlayerCharacter_C_ControlRotationFocus Parms{};

	Parms.FocusTarget = FocusTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.DrunkWalk
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Stop                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::DrunkWalk(bool Stop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "DrunkWalk");

	Params::BP_PlayerCharacter_C_DrunkWalk Parms{};

	Parms.Stop = Stop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetLastQuicktimeInput
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EFaceButtonType                         LastIQuicktimeInput_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::SetLastQuicktimeInput(EFaceButtonType LastIQuicktimeInput_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SetLastQuicktimeInput");

	Params::BP_PlayerCharacter_C_SetLastQuicktimeInput Parms{};

	Parms.LastIQuicktimeInput_0 = LastIQuicktimeInput_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetMostSuitableMeleeSection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EAnimationMontageIdentifier             Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::SetMostSuitableMeleeSection(EAnimationMontageIdentifier Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SetMostSuitableMeleeSection");

	Params::BP_PlayerCharacter_C_SetMostSuitableMeleeSection Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.MeleeAttackTranslate
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          StartVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          EndVector                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::MeleeAttackTranslate(const struct FVector& StartVector, const struct FVector& EndVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "MeleeAttackTranslate");

	Params::BP_PlayerCharacter_C_MeleeAttackTranslate Parms{};

	Parms.StartVector = std::move(StartVector);
	Parms.EndVector = std::move(EndVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.lowHealthBark
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewIsInCombat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::LowHealthBark(bool bNewIsInCombat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "lowHealthBark");

	Params::BP_PlayerCharacter_C_LowHealthBark Parms{};

	Parms.bNewIsInCombat = bNewIsInCombat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterFadeManualDisable
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::CharacterFadeManualDisable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "CharacterFadeManualDisable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterFadeManualEnable
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::CharacterFadeManualEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "CharacterFadeManualEnable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.SetLastQuicktimeInput_2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFaceButtonType                         LastInput                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::SetLastQuicktimeInput_2(EFaceButtonType LastInput)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "SetLastQuicktimeInput_2");

	Params::BP_PlayerCharacter_C_SetLastQuicktimeInput_2 Parms{};

	Parms.LastInput = LastInput;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.AddSmokeBuildup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   PercentToAdd                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::AddSmokeBuildup(float PercentToAdd)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "AddSmokeBuildup");

	Params::BP_PlayerCharacter_C_AddSmokeBuildup Parms{};

	Parms.PercentToAdd = PercentToAdd;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.LoadBloodVFX
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::LoadBloodVFX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "LoadBloodVFX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.DifficultyChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EDifficulty                             NewDifficulty                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::DifficultyChanged(EDifficulty NewDifficulty)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "DifficultyChanged");

	Params::BP_PlayerCharacter_C_DifficultyChanged Parms{};

	Parms.NewDifficulty = NewDifficulty;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceiveEndPlay");

	Params::BP_PlayerCharacter_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.UpdateSlopeGETimerEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::UpdateSlopeGETimerEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "UpdateSlopeGETimerEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.CharacterSwitchWarning
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AOFPlayerCharacter*               Character                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::CharacterSwitchWarning(const class AOFPlayerCharacter* Character)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "CharacterSwitchWarning");

	Params::BP_PlayerCharacter_C_CharacterSwitchWarning Parms{};

	Parms.Character = Character;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCombatStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bNewIsInCombat                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_PlayerCharacter_C::OnCombatStateChanged(bool bNewIsInCombat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnCombatStateChanged");

	Params::BP_PlayerCharacter_C_OnCombatStateChanged Parms{};

	Parms.bNewIsInCombat = bNewIsInCombat;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_PlayerCharacter_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.ExecuteUbergraph_BP_PlayerCharacter
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_PlayerCharacter_C::ExecuteUbergraph_BP_PlayerCharacter(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "ExecuteUbergraph_BP_PlayerCharacter");

	Params::BP_PlayerCharacter_C_ExecuteUbergraph_BP_PlayerCharacter Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnWeaponFired__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::OnWeaponFired__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnWeaponFired__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnSwitchConsumable__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::OnSwitchConsumable__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnSwitchConsumable__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnInspect__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::OnInspect__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnInspect__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_PlayerCharacter.BP_PlayerCharacter_C.OnCancel__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_PlayerCharacter_C::OnCancel__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_PlayerCharacter_C", "OnCancel__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}

}

