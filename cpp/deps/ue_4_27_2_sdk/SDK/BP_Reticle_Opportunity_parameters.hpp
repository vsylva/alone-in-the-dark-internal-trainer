#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Reticle_Opportunity

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_Reticle_Opportunity.BP_Reticle_Opportunity_C.ExecuteUbergraph_BP_Reticle_Opportunity
// 0x0020 (0x0020 - 0x0000)
struct BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bNewValue;                            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_OpportunityTarget_C*               K2Node_DynamicCast_AsWBP_Opportunity_Target;       // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity) == 0x000008, "Wrong alignment on BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity");
static_assert(sizeof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity) == 0x000020, "Wrong size on BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity");
static_assert(offsetof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity, EntryPoint) == 0x000000, "Member 'BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000004, "Member 'BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity, K2Node_Event_bNewValue) == 0x000005, "Member 'BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity::K2Node_Event_bNewValue' has a wrong offset!");
static_assert(offsetof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity, CallFunc_GetWidget_ReturnValue) == 0x000008, "Member 'BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity, K2Node_DynamicCast_AsWBP_Opportunity_Target) == 0x000010, "Member 'BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity::K2Node_DynamicCast_AsWBP_Opportunity_Target' has a wrong offset!");
static_assert(offsetof(BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_Reticle_Opportunity_C_ExecuteUbergraph_BP_Reticle_Opportunity::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Reticle_Opportunity.BP_Reticle_Opportunity_C.OnTargetingAnActor
// 0x0001 (0x0001 - 0x0000)
struct BP_Reticle_Opportunity_C_OnTargetingAnActor final
{
public:
	bool                                          bNewValue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Reticle_Opportunity_C_OnTargetingAnActor) == 0x000001, "Wrong alignment on BP_Reticle_Opportunity_C_OnTargetingAnActor");
static_assert(sizeof(BP_Reticle_Opportunity_C_OnTargetingAnActor) == 0x000001, "Wrong size on BP_Reticle_Opportunity_C_OnTargetingAnActor");
static_assert(offsetof(BP_Reticle_Opportunity_C_OnTargetingAnActor, bNewValue) == 0x000000, "Member 'BP_Reticle_Opportunity_C_OnTargetingAnActor::bNewValue' has a wrong offset!");

}

