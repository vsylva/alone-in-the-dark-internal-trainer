#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CollectiblesButton

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WBP_OFButton_Options_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CollectiblesButton.WBP_CollectiblesButton_C
// 0x0080 (0x0AD8 - 0x0A58)
class UWBP_CollectiblesButton_C final : public UWBP_OFButton_Options_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_CollectiblesButton_C;           // 0x0A58(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UHorizontalBox*                         ButtonHorizontalBox;                               // 0x0A60(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               ButtonSizeBox;                                     // 0x0A68(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HowManyText;                                       // 0x0A70(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_update_icon_C*                     WBP_update_icon;                                   // 0x0A78(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCollectibleSet*                        Collectible;                                       // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnCollectibleHover;                                // 0x0A88(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         HowManyFound;                                      // 0x0A98(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9C[0x4];                                      // 0x0A9C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCollectiblesDataAsset*                 CollectibleHard;                                   // 0x0AA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CollectibleName;                                   // 0x0AA8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          HaveCollectibleOne;                                // 0x0AC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HaveCollectibleThree;                              // 0x0AC1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          HaveCollectibleTwo;                                // 0x0AC2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC3[0x5];                                      // 0x0AC3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemData*>                      Items;                                             // 0x0AC8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void SetButtonState(bool InChecked);
	void PlayIconAnimation();
	void GetWidgetSizeAspectRation();
	void OnLoaded_AA3DADE94C26AEF2B2212188343462FF(class UObject* Loaded);
	void OnLoaded_44F4CB904C27329E7CE2E9B22F3E9762(class UObject* Loaded);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void PreConstruct(bool IsDesignTime);
	void OnCreated();
	void BndEvt__wbp_testbutton_OFButton_K2Node_ComponentBoundEvent_0_OFButtonHoverEvent__DelegateSignature(class UButton* Button);
	void Construct();
	void Destruct();
	void Call_OnHoveredButton();
	void BndEvt__WBP_CollectiblesButton_OFButton_K2Node_ComponentBoundEvent_1_OFButtonHoverEvent__DelegateSignature(class UButton* Button);
	void ExecuteUbergraph_WBP_CollectiblesButton(int32 EntryPoint);
	void OnCollectibleHover__DelegateSignature(class UWBP_CollectiblesButton_C* CollectibleButton);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CollectiblesButton_C">();
	}
	static class UWBP_CollectiblesButton_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CollectiblesButton_C>();
	}
};
static_assert(alignof(UWBP_CollectiblesButton_C) == 0x000008, "Wrong alignment on UWBP_CollectiblesButton_C");
static_assert(sizeof(UWBP_CollectiblesButton_C) == 0x000AD8, "Wrong size on UWBP_CollectiblesButton_C");
static_assert(offsetof(UWBP_CollectiblesButton_C, UberGraphFrame_WBP_CollectiblesButton_C) == 0x000A58, "Member 'UWBP_CollectiblesButton_C::UberGraphFrame_WBP_CollectiblesButton_C' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, ButtonHorizontalBox) == 0x000A60, "Member 'UWBP_CollectiblesButton_C::ButtonHorizontalBox' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, ButtonSizeBox) == 0x000A68, "Member 'UWBP_CollectiblesButton_C::ButtonSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, HowManyText) == 0x000A70, "Member 'UWBP_CollectiblesButton_C::HowManyText' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, WBP_update_icon) == 0x000A78, "Member 'UWBP_CollectiblesButton_C::WBP_update_icon' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, Collectible) == 0x000A80, "Member 'UWBP_CollectiblesButton_C::Collectible' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, OnCollectibleHover) == 0x000A88, "Member 'UWBP_CollectiblesButton_C::OnCollectibleHover' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, HowManyFound) == 0x000A98, "Member 'UWBP_CollectiblesButton_C::HowManyFound' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, CollectibleHard) == 0x000AA0, "Member 'UWBP_CollectiblesButton_C::CollectibleHard' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, CollectibleName) == 0x000AA8, "Member 'UWBP_CollectiblesButton_C::CollectibleName' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, HaveCollectibleOne) == 0x000AC0, "Member 'UWBP_CollectiblesButton_C::HaveCollectibleOne' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, HaveCollectibleThree) == 0x000AC1, "Member 'UWBP_CollectiblesButton_C::HaveCollectibleThree' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, HaveCollectibleTwo) == 0x000AC2, "Member 'UWBP_CollectiblesButton_C::HaveCollectibleTwo' has a wrong offset!");
static_assert(offsetof(UWBP_CollectiblesButton_C, Items) == 0x000AC8, "Member 'UWBP_CollectiblesButton_C::Items' has a wrong offset!");

}

