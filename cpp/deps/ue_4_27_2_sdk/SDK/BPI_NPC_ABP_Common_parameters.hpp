#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_NPC_ABP_Common

#include "Basic.hpp"

#include "ENPCLocation_Batiste_structs.hpp"
#include "ENPCLocation_Ruth_structs.hpp"
#include "ENPCLocation_Grace_structs.hpp"
#include "ENPCGrayAptLocation_structs.hpp"


namespace SDK::Params
{

// Function BPI_NPC_ABP_Common.BPI_NPC_ABP_Common_C.SetBatisteLocation
// 0x0001 (0x0001 - 0x0000)
struct BPI_NPC_ABP_Common_C_SetBatisteLocation final
{
public:
	ENPCLocation_Batiste                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NPC_ABP_Common_C_SetBatisteLocation) == 0x000001, "Wrong alignment on BPI_NPC_ABP_Common_C_SetBatisteLocation");
static_assert(sizeof(BPI_NPC_ABP_Common_C_SetBatisteLocation) == 0x000001, "Wrong size on BPI_NPC_ABP_Common_C_SetBatisteLocation");
static_assert(offsetof(BPI_NPC_ABP_Common_C_SetBatisteLocation, Value) == 0x000000, "Member 'BPI_NPC_ABP_Common_C_SetBatisteLocation::Value' has a wrong offset!");

// Function BPI_NPC_ABP_Common.BPI_NPC_ABP_Common_C.SetRuthLocation
// 0x0001 (0x0001 - 0x0000)
struct BPI_NPC_ABP_Common_C_SetRuthLocation final
{
public:
	ENPCLocation_Ruth                             Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NPC_ABP_Common_C_SetRuthLocation) == 0x000001, "Wrong alignment on BPI_NPC_ABP_Common_C_SetRuthLocation");
static_assert(sizeof(BPI_NPC_ABP_Common_C_SetRuthLocation) == 0x000001, "Wrong size on BPI_NPC_ABP_Common_C_SetRuthLocation");
static_assert(offsetof(BPI_NPC_ABP_Common_C_SetRuthLocation, Value) == 0x000000, "Member 'BPI_NPC_ABP_Common_C_SetRuthLocation::Value' has a wrong offset!");

// Function BPI_NPC_ABP_Common.BPI_NPC_ABP_Common_C.SetGraceLocation
// 0x0001 (0x0001 - 0x0000)
struct BPI_NPC_ABP_Common_C_SetGraceLocation final
{
public:
	ENPCLocation_Grace                            Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NPC_ABP_Common_C_SetGraceLocation) == 0x000001, "Wrong alignment on BPI_NPC_ABP_Common_C_SetGraceLocation");
static_assert(sizeof(BPI_NPC_ABP_Common_C_SetGraceLocation) == 0x000001, "Wrong size on BPI_NPC_ABP_Common_C_SetGraceLocation");
static_assert(offsetof(BPI_NPC_ABP_Common_C_SetGraceLocation, Value) == 0x000000, "Member 'BPI_NPC_ABP_Common_C_SetGraceLocation::Value' has a wrong offset!");

// Function BPI_NPC_ABP_Common.BPI_NPC_ABP_Common_C.SetGraysAptLocation
// 0x0001 (0x0001 - 0x0000)
struct BPI_NPC_ABP_Common_C_SetGraysAptLocation final
{
public:
	ENPCGrayAptLocation                           Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_NPC_ABP_Common_C_SetGraysAptLocation) == 0x000001, "Wrong alignment on BPI_NPC_ABP_Common_C_SetGraysAptLocation");
static_assert(sizeof(BPI_NPC_ABP_Common_C_SetGraysAptLocation) == 0x000001, "Wrong size on BPI_NPC_ABP_Common_C_SetGraysAptLocation");
static_assert(offsetof(BPI_NPC_ABP_Common_C_SetGraysAptLocation, Value) == 0x000000, "Member 'BPI_NPC_ABP_Common_C_SetGraysAptLocation::Value' has a wrong offset!");

}

