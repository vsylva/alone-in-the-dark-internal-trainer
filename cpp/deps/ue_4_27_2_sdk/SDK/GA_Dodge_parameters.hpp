#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Dodge

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "EWeapons_structs.hpp"


namespace SDK::Params
{

// Function GA_Dodge.GA_Dodge_C.ExecuteUbergraph_GA_Dodge
// 0x0768 (0x0768 - 0x0000)
struct GA_Dodge_C_ExecuteUbergraph_GA_Dodge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x0008(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate;              // 0x00B8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x00C8(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_AnimationAssetManager*   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitGameplayTagAdded*      CallFunc_WaitGameplayTagAdd_ReturnValue;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x01BC(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x01C8(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x0278(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x0280(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0330(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0340(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x0348(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0408(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0410(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x04C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x04D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x04D8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0588(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable_1;                            // 0x0598(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0648(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x0654(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_671[0x7];                                      // 0x0671(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0680(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAvatarSlow_ReturnValue;                 // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_68D[0x3];                                      // 0x068D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0695(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_696[0x2];                                      // 0x0696(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue; // 0x0698(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x06A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_GetMontageTag_ReturnValue;                // 0x06A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCameraShakeBase>           Temp_class_Variable;                               // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_HasSlowedStatus_ReturnValue;              // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_EnableCameraModifier_ReturnValue;         // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCameraShakeBase>           Temp_class_Variable_1;                             // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x06D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UCameraShakeBase>           Temp_class_Variable_2;                             // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPendingInputVector_ReturnValue;        // 0x06F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x06FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TSubclassOf<class UCameraShakeBase>           K2Node_Select_Default;                             // 0x0708(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPiecesAbilityTask_RotateTo*            CallFunc_RotateActorTo_ReturnValue;                // 0x0710(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UCameraShakeBase>           K2Node_Select_Default_1;                           // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponentFromActorInfo_ReturnValue; // 0x0730(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetMontageForSkeletonBlockingLoad_ReturnValue; // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWaitForEvent* CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74A[0x6];                                      // 0x074A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge) == 0x000008, "Wrong alignment on GA_Dodge_C_ExecuteUbergraph_GA_Dodge");
static_assert(sizeof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge) == 0x000768, "Wrong size on GA_Dodge_C_ExecuteUbergraph_GA_Dodge");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, EntryPoint) == 0x000000, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_bool_Variable) == 0x000004, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_Payload) == 0x000008, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate) == 0x0000B8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_struct_Variable) == 0x0000C8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000178, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue) == 0x000180, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000188, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000190, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_WaitGameplayTagAdd_ReturnValue) == 0x0001A0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_WaitGameplayTagAdd_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_2) == 0x0001A8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue_1) == 0x0001B8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_4) == 0x0001BC, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_4) == 0x0001C8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_3) == 0x000278, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_3) == 0x000280, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000330, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_2) == 0x000340, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_2) == 0x000348, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003F8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_1) == 0x000408, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_1) == 0x000410, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_5) == 0x0004C0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag) == 0x0004D0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData) == 0x0004D8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_6) == 0x000588, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_struct_Variable_1) == 0x000598, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_struct_Variable_2) == 0x000648, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000650, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_7) == 0x000654, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000668, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_bool_Variable_1) == 0x000670, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000678, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetVelocity_ReturnValue) == 0x000680, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsAvatarSlow_ReturnValue) == 0x00068C, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsAvatarSlow_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_VSize_ReturnValue) == 0x000690, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000694, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue_2) == 0x000695, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue) == 0x000698, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_BP_ApplyGameplayEffectToOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_K2_SetTimer_ReturnValue) == 0x0006A0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetMontageTag_ReturnValue) == 0x0006A8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetMontageTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_class_Variable) == 0x0006B0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_HasSlowedStatus_ReturnValue) == 0x0006B8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_HasSlowedStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_SelectFloat_ReturnValue) == 0x0006BC, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_EnableCameraModifier_ReturnValue) == 0x0006C0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_EnableCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_class_Variable_1) == 0x0006C8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0006D0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetActorUpVector_ReturnValue) == 0x0006D8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_class_Variable_2) == 0x0006E8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetPendingInputVector_ReturnValue) == 0x0006F0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetPendingInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_MakeRotFromXZ_ReturnValue) == 0x0006FC, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_Select_Default) == 0x000708, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_RotateActorTo_ReturnValue) == 0x000710, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_RotateActorTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_Select_Default_1) == 0x000718, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_StartCameraShake_ReturnValue) == 0x000720, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue_3) == 0x000728, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetOwningComponentFromActorInfo_ReturnValue) == 0x000730, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetOwningComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetMontageForSkeletonBlockingLoad_ReturnValue) == 0x000738, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetMontageForSkeletonBlockingLoad_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000740, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue_4) == 0x000748, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_Event_bWasCancelled) == 0x000749, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000750, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_DynamicCast_AsCharacter) == 0x000758, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_DynamicCast_bSuccess) == 0x000760, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_K2_CommitAbility_ReturnValue) == 0x000761, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Dodge_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Dodge_C_K2_OnEndAbility");
static_assert(sizeof(GA_Dodge_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Dodge_C_K2_OnEndAbility");
static_assert(offsetof(GA_Dodge_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Dodge_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x000008, "Wrong alignment on GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(sizeof(GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x0000B8, "Wrong size on GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(offsetof(GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventData) == 0x000008, "Member 'GA_Dodge_C_OnCompleted_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x000008, "Wrong alignment on GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(sizeof(GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x0000B8, "Wrong size on GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(offsetof(GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventData) == 0x000008, "Member 'GA_Dodge_C_OnBlendOut_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x000008, "Wrong alignment on GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(sizeof(GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x0000B8, "Wrong size on GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(offsetof(GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventData) == 0x000008, "Member 'GA_Dodge_C_OnInterrupted_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x000008, "Wrong alignment on GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(sizeof(GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x0000B8, "Wrong size on GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(offsetof(GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventData) == 0x000008, "Member 'GA_Dodge_C_OnCancelled_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x000008, "Wrong alignment on GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(sizeof(GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8) == 0x0000B8, "Wrong size on GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8");
static_assert(offsetof(GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventTag) == 0x000000, "Member 'GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8, EventData) == 0x000008, "Member 'GA_Dodge_C_EventReceived_0C2AB52843FB6FC85D2EE9AC5E746AD8::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.EventReceived_219563D34EF2AB413E0C88BAF6FE27DC
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC) == 0x000008, "Wrong alignment on GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC");
static_assert(sizeof(GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC) == 0x0000B0, "Wrong size on GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC");
static_assert(offsetof(GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC, Payload) == 0x000000, "Member 'GA_Dodge_C_EventReceived_219563D34EF2AB413E0C88BAF6FE27DC::Payload' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.GetDodgeLaunchVector
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Dodge_C_GetDodgeLaunchVector final
{
public:
	class ACharacter*                             DodgingCharacter;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchVector;                                      // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LaunchDirection;                                   // 0x0014(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastMovementInputVector_ReturnValue;   // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute; // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_GetDodgeLaunchVector) == 0x000008, "Wrong alignment on GA_Dodge_C_GetDodgeLaunchVector");
static_assert(sizeof(GA_Dodge_C_GetDodgeLaunchVector) == 0x0000B0, "Wrong size on GA_Dodge_C_GetDodgeLaunchVector");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, DodgingCharacter) == 0x000000, "Member 'GA_Dodge_C_GetDodgeLaunchVector::DodgingCharacter' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, LaunchVector) == 0x000008, "Member 'GA_Dodge_C_GetDodgeLaunchVector::LaunchVector' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, LaunchDirection) == 0x000014, "Member 'GA_Dodge_C_GetDodgeLaunchVector::LaunchDirection' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, Direction) == 0x000020, "Member 'GA_Dodge_C_GetDodgeLaunchVector::Direction' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_GetLastMovementInputVector_ReturnValue) == 0x00002C, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_GetLastMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_BreakVector_X) == 0x00003C, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_BreakVector_Y) == 0x000040, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_BreakVector_Z) == 0x000044, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue) == 0x000068, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_GetAbilitySystemComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_GetActorForwardVector_ReturnValue) == 0x000070, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute) == 0x00007C, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_GetFloatAttributeFromAbilitySystemComponent_bSuccessfullyFoundAttribute' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue) == 0x000080, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_GetFloatAttributeFromAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_BreakVector_X_1) == 0x000084, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_BreakVector_Y_1) == 0x000088, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_BreakVector_Z_1) == 0x00008C, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000090, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_MakeVector_ReturnValue_1) == 0x000094, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDodgeLaunchVector, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000A0, "Member 'GA_Dodge_C_GetDodgeLaunchVector::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.SelectStartingMontage
// 0x0060 (0x0060 - 0x0000)
struct GA_Dodge_C_SelectStartingMontage final
{
public:
	struct FVector                                DodgeDirection;                                    // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Character;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Section_Name;                                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DodgeSectionKey;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinDiff;                                           // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Degrees;                                           // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SectionNames;                                      // 0x002C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorRightVector_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_SelectStartingMontage) == 0x000008, "Wrong alignment on GA_Dodge_C_SelectStartingMontage");
static_assert(sizeof(GA_Dodge_C_SelectStartingMontage) == 0x000060, "Wrong size on GA_Dodge_C_SelectStartingMontage");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, DodgeDirection) == 0x000000, "Member 'GA_Dodge_C_SelectStartingMontage::DodgeDirection' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, Character) == 0x000010, "Member 'GA_Dodge_C_SelectStartingMontage::Character' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, Section_Name) == 0x000018, "Member 'GA_Dodge_C_SelectStartingMontage::Section_Name' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, DodgeSectionKey) == 0x000020, "Member 'GA_Dodge_C_SelectStartingMontage::DodgeSectionKey' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, MinDiff) == 0x000024, "Member 'GA_Dodge_C_SelectStartingMontage::MinDiff' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, Degrees) == 0x000028, "Member 'GA_Dodge_C_SelectStartingMontage::Degrees' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, SectionNames) == 0x00002C, "Member 'GA_Dodge_C_SelectStartingMontage::SectionNames' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, CallFunc_GetActorForwardVector_ReturnValue) == 0x000034, "Member 'GA_Dodge_C_SelectStartingMontage::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, CallFunc_GetActorRightVector_ReturnValue) == 0x000040, "Member 'GA_Dodge_C_SelectStartingMontage::CallFunc_GetActorRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, CallFunc_Dot_VectorVector_ReturnValue) == 0x00004C, "Member 'GA_Dodge_C_SelectStartingMontage::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000050, "Member 'GA_Dodge_C_SelectStartingMontage::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, CallFunc_DegAtan2_ReturnValue) == 0x000054, "Member 'GA_Dodge_C_SelectStartingMontage::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000058, "Member 'GA_Dodge_C_SelectStartingMontage::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SelectStartingMontage, CallFunc_Add_FloatFloat_ReturnValue) == 0x00005C, "Member 'GA_Dodge_C_SelectStartingMontage::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.GetDirectionDegrees
// 0x0088 (0x0088 - 0x0000)
struct GA_Dodge_C_GetDirectionDegrees final
{
public:
	float                                         Degrees;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLastMovementInputVector_ReturnValue;   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAtan2_ReturnValue;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_GetDirectionDegrees) == 0x000008, "Wrong alignment on GA_Dodge_C_GetDirectionDegrees");
static_assert(sizeof(GA_Dodge_C_GetDirectionDegrees) == 0x000088, "Wrong size on GA_Dodge_C_GetDirectionDegrees");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, Degrees) == 0x000000, "Member 'GA_Dodge_C_GetDirectionDegrees::Degrees' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, K2Node_DynamicCast_AsCharacter) == 0x000010, "Member 'GA_Dodge_C_GetDirectionDegrees::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Dodge_C_GetDirectionDegrees::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_GetActorForwardVector_ReturnValue) == 0x00001C, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_GetLastMovementInputVector_ReturnValue) == 0x000028, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_GetLastMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000034, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_BreakVector_X) == 0x000040, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_BreakVector_Y) == 0x000044, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_BreakVector_Z) == 0x000048, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_MakeVector_ReturnValue) == 0x00004C, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000058, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_Normal_ReturnValue) == 0x000064, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_BreakVector_X_1) == 0x000070, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_BreakVector_Y_1) == 0x000074, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_BreakVector_Z_1) == 0x000078, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_DegAtan2_ReturnValue) == 0x00007C, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_Add_FloatFloat_ReturnValue) == 0x000080, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetDirectionDegrees, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000084, "Member 'GA_Dodge_C_GetDirectionDegrees::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.SnapAngle
// 0x0018 (0x0018 - 0x0000)
struct GA_Dodge_C_SnapAngle final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SnappedAngle;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_SnapAngle) == 0x000004, "Wrong alignment on GA_Dodge_C_SnapAngle");
static_assert(sizeof(GA_Dodge_C_SnapAngle) == 0x000018, "Wrong size on GA_Dodge_C_SnapAngle");
static_assert(offsetof(GA_Dodge_C_SnapAngle, Angle) == 0x000000, "Member 'GA_Dodge_C_SnapAngle::Angle' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SnapAngle, SnappedAngle) == 0x000004, "Member 'GA_Dodge_C_SnapAngle::SnappedAngle' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SnapAngle, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'GA_Dodge_C_SnapAngle::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SnapAngle, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00000C, "Member 'GA_Dodge_C_SnapAngle::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SnapAngle, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000010, "Member 'GA_Dodge_C_SnapAngle::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_SnapAngle, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000014, "Member 'GA_Dodge_C_SnapAngle::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.Rotate Character
// 0x0048 (0x0048 - 0x0000)
struct GA_Dodge_C_Rotate_Character final
{
public:
	float                                         Angle;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_Rotate_Character) == 0x000008, "Wrong alignment on GA_Dodge_C_Rotate_Character");
static_assert(sizeof(GA_Dodge_C_Rotate_Character) == 0x000048, "Wrong size on GA_Dodge_C_Rotate_Character");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, Angle) == 0x000000, "Member 'GA_Dodge_C_Rotate_Character::Angle' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Dodge_C_Rotate_Character::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000010, "Member 'GA_Dodge_C_Rotate_Character::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GA_Dodge_C_Rotate_Character::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00001C, "Member 'GA_Dodge_C_Rotate_Character::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'GA_Dodge_C_Rotate_Character::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'GA_Dodge_C_Rotate_Character::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'GA_Dodge_C_Rotate_Character::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, CallFunc_Add_FloatFloat_ReturnValue) == 0x000034, "Member 'GA_Dodge_C_Rotate_Character::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Rotate_Character, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'GA_Dodge_C_Rotate_Character::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.IsAvatarSlow
// 0x0028 (0x0028 - 0x0000)
struct GA_Dodge_C_IsAvatarSlow final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_IsAvatarSlow) == 0x000008, "Wrong alignment on GA_Dodge_C_IsAvatarSlow");
static_assert(sizeof(GA_Dodge_C_IsAvatarSlow) == 0x000028, "Wrong size on GA_Dodge_C_IsAvatarSlow");
static_assert(offsetof(GA_Dodge_C_IsAvatarSlow, ReturnValue) == 0x000000, "Member 'GA_Dodge_C_IsAvatarSlow::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_IsAvatarSlow, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Dodge_C_IsAvatarSlow::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_IsAvatarSlow, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'GA_Dodge_C_IsAvatarSlow::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_IsAvatarSlow, CallFunc_VSize_ReturnValue) == 0x00001C, "Member 'GA_Dodge_C_IsAvatarSlow::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_IsAvatarSlow, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'GA_Dodge_C_IsAvatarSlow::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.RotateVelocity
// 0x0028 (0x0028 - 0x0000)
struct GA_Dodge_C_RotateVelocity final
{
public:
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_RotateVelocity) == 0x000004, "Wrong alignment on GA_Dodge_C_RotateVelocity");
static_assert(sizeof(GA_Dodge_C_RotateVelocity) == 0x000028, "Wrong size on GA_Dodge_C_RotateVelocity");
static_assert(offsetof(GA_Dodge_C_RotateVelocity, CallFunc_GetVelocity_ReturnValue) == 0x000000, "Member 'GA_Dodge_C_RotateVelocity::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_RotateVelocity, CallFunc_GetActorForwardVector_ReturnValue) == 0x00000C, "Member 'GA_Dodge_C_RotateVelocity::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_RotateVelocity, CallFunc_VSize_ReturnValue) == 0x000018, "Member 'GA_Dodge_C_RotateVelocity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_RotateVelocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00001C, "Member 'GA_Dodge_C_RotateVelocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.GetMontageTag
// 0x0060 (0x0060 - 0x0000)
struct GA_Dodge_C_GetMontageTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x000C(0x0008)(NoDestructor, HasGetValueTypeHash)
	EWeapons                                      Temp_byte_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_2;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is2HandedMelee_Value;                     // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetHitscanWeaponType_HasHitscanWeapon;    // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeapons                                      CallFunc_GetHitscanWeaponType_WeaponType;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue_1;     // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default;                             // 0x0040(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_1;                           // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_2;                           // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Select_Default_3;                           // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_GetMontageTag) == 0x000004, "Wrong alignment on GA_Dodge_C_GetMontageTag");
static_assert(sizeof(GA_Dodge_C_GetMontageTag) == 0x000060, "Wrong size on GA_Dodge_C_GetMontageTag");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, ReturnValue) == 0x000000, "Member 'GA_Dodge_C_GetMontageTag::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, Temp_bool_Variable) == 0x000008, "Member 'GA_Dodge_C_GetMontageTag::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, Temp_struct_Variable) == 0x00000C, "Member 'GA_Dodge_C_GetMontageTag::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, Temp_byte_Variable) == 0x000014, "Member 'GA_Dodge_C_GetMontageTag::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, Temp_struct_Variable_1) == 0x000018, "Member 'GA_Dodge_C_GetMontageTag::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, Temp_struct_Variable_2) == 0x000020, "Member 'GA_Dodge_C_GetMontageTag::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, Temp_bool_Variable_1) == 0x000028, "Member 'GA_Dodge_C_GetMontageTag::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, Temp_bool_Variable_2) == 0x000029, "Member 'GA_Dodge_C_GetMontageTag::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, CallFunc_Is2HandedMelee_Value) == 0x00002A, "Member 'GA_Dodge_C_GetMontageTag::CallFunc_Is2HandedMelee_Value' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, CallFunc_GetHitscanWeaponType_HasHitscanWeapon) == 0x00002B, "Member 'GA_Dodge_C_GetMontageTag::CallFunc_GetHitscanWeaponType_HasHitscanWeapon' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, CallFunc_GetHitscanWeaponType_WeaponType) == 0x00002C, "Member 'GA_Dodge_C_GetMontageTag::CallFunc_GetHitscanWeaponType_WeaponType' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000030, "Member 'GA_Dodge_C_GetMontageTag::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, CallFunc_MakeLiteralGameplayTag_ReturnValue_1) == 0x000038, "Member 'GA_Dodge_C_GetMontageTag::CallFunc_MakeLiteralGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, K2Node_Select_Default) == 0x000040, "Member 'GA_Dodge_C_GetMontageTag::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, K2Node_Select_Default_1) == 0x000048, "Member 'GA_Dodge_C_GetMontageTag::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, K2Node_Select_Default_2) == 0x000050, "Member 'GA_Dodge_C_GetMontageTag::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTag, K2Node_Select_Default_3) == 0x000058, "Member 'GA_Dodge_C_GetMontageTag::K2Node_Select_Default_3' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.K2_CanActivateAbility
// 0x0098 (0x0098 - 0x0000)
struct GA_Dodge_C_K2_CanActivateAbility final
{
public:
	struct FGameplayAbilityActorInfo              ActorInfo;                                         // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FGameplayAbilitySpecHandle             Handle;                                            // 0x0048(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  RelevantTags;                                      // 0x0050(0x0020)(Parm, OutParm)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetLastMovementInputVector_ReturnValue;   // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_K2_CanActivateAbility) == 0x000008, "Wrong alignment on GA_Dodge_C_K2_CanActivateAbility");
static_assert(sizeof(GA_Dodge_C_K2_CanActivateAbility) == 0x000098, "Wrong size on GA_Dodge_C_K2_CanActivateAbility");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, ActorInfo) == 0x000000, "Member 'GA_Dodge_C_K2_CanActivateAbility::ActorInfo' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, Handle) == 0x000048, "Member 'GA_Dodge_C_K2_CanActivateAbility::Handle' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, RelevantTags) == 0x000050, "Member 'GA_Dodge_C_K2_CanActivateAbility::RelevantTags' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, ReturnValue) == 0x000070, "Member 'GA_Dodge_C_K2_CanActivateAbility::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, K2Node_DynamicCast_AsCharacter) == 0x000078, "Member 'GA_Dodge_C_K2_CanActivateAbility::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GA_Dodge_C_K2_CanActivateAbility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, CallFunc_GetLastMovementInputVector_ReturnValue) == 0x000084, "Member 'GA_Dodge_C_K2_CanActivateAbility::CallFunc_GetLastMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000090, "Member 'GA_Dodge_C_K2_CanActivateAbility::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_K2_CanActivateAbility, CallFunc_Not_PreBool_ReturnValue) == 0x000091, "Member 'GA_Dodge_C_K2_CanActivateAbility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.GetHitscanWeaponType
// 0x0004 (0x0004 - 0x0000)
struct GA_Dodge_C_GetHitscanWeaponType final
{
public:
	bool                                          HasHitscanWeapon;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeapons                                      WeaponType;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Hitscan_Weapon_Type_HasHitscanWeapon; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeapons                                      CallFunc_Get_Hitscan_Weapon_Type_WeaponType;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_GetHitscanWeaponType) == 0x000001, "Wrong alignment on GA_Dodge_C_GetHitscanWeaponType");
static_assert(sizeof(GA_Dodge_C_GetHitscanWeaponType) == 0x000004, "Wrong size on GA_Dodge_C_GetHitscanWeaponType");
static_assert(offsetof(GA_Dodge_C_GetHitscanWeaponType, HasHitscanWeapon) == 0x000000, "Member 'GA_Dodge_C_GetHitscanWeaponType::HasHitscanWeapon' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetHitscanWeaponType, WeaponType) == 0x000001, "Member 'GA_Dodge_C_GetHitscanWeaponType::WeaponType' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetHitscanWeaponType, CallFunc_Get_Hitscan_Weapon_Type_HasHitscanWeapon) == 0x000002, "Member 'GA_Dodge_C_GetHitscanWeaponType::CallFunc_Get_Hitscan_Weapon_Type_HasHitscanWeapon' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetHitscanWeaponType, CallFunc_Get_Hitscan_Weapon_Type_WeaponType) == 0x000003, "Member 'GA_Dodge_C_GetHitscanWeaponType::CallFunc_Get_Hitscan_Weapon_Type_WeaponType' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.HasSlowedStatus
// 0x0030 (0x0030 - 0x0000)
struct GA_Dodge_C_HasSlowedStatus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_HasSlowedStatus) == 0x000008, "Wrong alignment on GA_Dodge_C_HasSlowedStatus");
static_assert(sizeof(GA_Dodge_C_HasSlowedStatus) == 0x000030, "Wrong size on GA_Dodge_C_HasSlowedStatus");
static_assert(offsetof(GA_Dodge_C_HasSlowedStatus, ReturnValue) == 0x000000, "Member 'GA_Dodge_C_HasSlowedStatus::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_HasSlowedStatus, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000008, "Member 'GA_Dodge_C_HasSlowedStatus::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_HasSlowedStatus, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000010, "Member 'GA_Dodge_C_HasSlowedStatus::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_HasSlowedStatus, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000018, "Member 'GA_Dodge_C_HasSlowedStatus::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_HasSlowedStatus, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000028, "Member 'GA_Dodge_C_HasSlowedStatus::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.Is2HandedMelee
// 0x0002 (0x0002 - 0x0000)
struct GA_Dodge_C_Is2HandedMelee final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_2Handed_Melee_Value;                   // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_Is2HandedMelee) == 0x000001, "Wrong alignment on GA_Dodge_C_Is2HandedMelee");
static_assert(sizeof(GA_Dodge_C_Is2HandedMelee) == 0x000002, "Wrong size on GA_Dodge_C_Is2HandedMelee");
static_assert(offsetof(GA_Dodge_C_Is2HandedMelee, Value) == 0x000000, "Member 'GA_Dodge_C_Is2HandedMelee::Value' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_Is2HandedMelee, CallFunc_Is_2Handed_Melee_Value) == 0x000001, "Member 'GA_Dodge_C_Is2HandedMelee::CallFunc_Is_2Handed_Melee_Value' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.GetMontageTagsToLoad
// 0x0070 (0x0070 - 0x0000)
struct GA_Dodge_C_GetMontageTagsToLoad final
{
public:
	class ACharacter*                             OwnerCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
	EWeapons                                      Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Hitscan_Weapon_Type_HasHitscanWeapon; // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWeapons                                      CallFunc_Get_Hitscan_Weapon_Type_WeaponType;       // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_2Handed_Melee_Value;                   // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array_2;                          // 0x0040(0x0010)(ReferenceParm)
	TArray<struct FGameplayTag>                   K2Node_MakeArray_Array_3;                          // 0x0050(0x0010)(ReferenceParm)
	TArray<struct FGameplayTag>                   K2Node_Select_Default;                             // 0x0060(0x0010)(ReferenceParm)
};
static_assert(alignof(GA_Dodge_C_GetMontageTagsToLoad) == 0x000008, "Wrong alignment on GA_Dodge_C_GetMontageTagsToLoad");
static_assert(sizeof(GA_Dodge_C_GetMontageTagsToLoad) == 0x000070, "Wrong size on GA_Dodge_C_GetMontageTagsToLoad");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, OwnerCharacter) == 0x000000, "Member 'GA_Dodge_C_GetMontageTagsToLoad::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, ReturnValue) == 0x000008, "Member 'GA_Dodge_C_GetMontageTagsToLoad::ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, Temp_byte_Variable) == 0x000018, "Member 'GA_Dodge_C_GetMontageTagsToLoad::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, CallFunc_Get_Hitscan_Weapon_Type_HasHitscanWeapon) == 0x000019, "Member 'GA_Dodge_C_GetMontageTagsToLoad::CallFunc_Get_Hitscan_Weapon_Type_HasHitscanWeapon' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, CallFunc_Get_Hitscan_Weapon_Type_WeaponType) == 0x00001A, "Member 'GA_Dodge_C_GetMontageTagsToLoad::CallFunc_Get_Hitscan_Weapon_Type_WeaponType' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, CallFunc_Is_2Handed_Melee_Value) == 0x00001B, "Member 'GA_Dodge_C_GetMontageTagsToLoad::CallFunc_Is_2Handed_Melee_Value' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, K2Node_MakeArray_Array) == 0x000020, "Member 'GA_Dodge_C_GetMontageTagsToLoad::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, K2Node_MakeArray_Array_1) == 0x000030, "Member 'GA_Dodge_C_GetMontageTagsToLoad::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, K2Node_MakeArray_Array_2) == 0x000040, "Member 'GA_Dodge_C_GetMontageTagsToLoad::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, K2Node_MakeArray_Array_3) == 0x000050, "Member 'GA_Dodge_C_GetMontageTagsToLoad::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontageTagsToLoad, K2Node_Select_Default) == 0x000060, "Member 'GA_Dodge_C_GetMontageTagsToLoad::K2Node_Select_Default' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.GetMontagesToLoad
// 0x00C0 (0x00C0 - 0x0000)
struct GA_Dodge_C_GetMontagesToLoad final
{
public:
	class ACharacter*                             OwnerCharacter;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                ReturnArray;                                       // 0x0008(0x0010)(Parm, OutParm)
	TArray<struct FSoftObjectPath>                MontagesToLoad;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	class UGameSubsystem_AnimationAssetManager*   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FGameplayTag>                   CallFunc_GetMontageTagsToLoad_ReturnValue;         // 0x0030(0x0010)(ReferenceParm)
	class USkeletalMeshComponent*                 CallFunc_GetComponentByClass_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Array_Get_Item;                           // 0x0054(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UAnimMontage>            CallFunc_GetMontageForSkeleton_ReturnValue;        // 0x0060(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftObjectReferenceToString_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x00A0(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_GetMontagesToLoad) == 0x000008, "Wrong alignment on GA_Dodge_C_GetMontagesToLoad");
static_assert(sizeof(GA_Dodge_C_GetMontagesToLoad) == 0x0000C0, "Wrong size on GA_Dodge_C_GetMontagesToLoad");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, OwnerCharacter) == 0x000000, "Member 'GA_Dodge_C_GetMontagesToLoad::OwnerCharacter' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, ReturnArray) == 0x000008, "Member 'GA_Dodge_C_GetMontagesToLoad::ReturnArray' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, MontagesToLoad) == 0x000018, "Member 'GA_Dodge_C_GetMontagesToLoad::MontagesToLoad' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000028, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_GetMontageTagsToLoad_ReturnValue) == 0x000030, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_GetMontageTagsToLoad_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_GetComponentByClass_ReturnValue) == 0x000040, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, Temp_int_Array_Index_Variable) == 0x00004C, "Member 'GA_Dodge_C_GetMontagesToLoad::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'GA_Dodge_C_GetMontagesToLoad::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_Array_Get_Item) == 0x000054, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_GetMontageForSkeleton_ReturnValue) == 0x000060, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_GetMontageForSkeleton_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_Conv_SoftObjectReferenceToString_ReturnValue) == 0x000090, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_Conv_SoftObjectReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x0000A0, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_Add_IntInt_ReturnValue) == 0x0000B8, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_GetMontagesToLoad, CallFunc_Array_AddUnique_ReturnValue) == 0x0000BC, "Member 'GA_Dodge_C_GetMontagesToLoad::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnGiveAbility_GetAssetsToBeAsyncLoaded
// 0x0068 (0x0068 - 0x0000)
struct GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded final
{
public:
	class AActor*                                 OwnerActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                AssetsToLoad;                                      // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_SoftClassReferenceToString_ReturnValue; // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSoftObjectPath>                CallFunc_GetMontagesToLoad_ReturnArray;            // 0x0038(0x0010)(ReferenceParm)
	struct FSoftObjectPath                        CallFunc_MakeSoftObjectPath_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded) == 0x000008, "Wrong alignment on GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded");
static_assert(sizeof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded) == 0x000068, "Wrong size on GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, OwnerActor) == 0x000000, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::OwnerActor' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, AssetsToLoad) == 0x000008, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::AssetsToLoad' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, K2Node_DynamicCast_AsCharacter) == 0x000018, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_Conv_SoftClassReferenceToString_ReturnValue) == 0x000028, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_Conv_SoftClassReferenceToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_GetMontagesToLoad_ReturnArray) == 0x000038, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_GetMontagesToLoad_ReturnArray' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_MakeSoftObjectPath_ReturnValue) == 0x000048, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_MakeSoftObjectPath_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded, CallFunc_Array_AddUnique_ReturnValue) == 0x000060, "Member 'GA_Dodge_C_OnGiveAbility_GetAssetsToBeAsyncLoaded::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

}

