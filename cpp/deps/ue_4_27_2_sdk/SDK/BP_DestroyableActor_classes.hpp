#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DestroyableActor

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "EDestructibleFinalStage_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DestroyableActor.BP_DestroyableActor_C
// 0x00E0 (0x0318 - 0x0238)
class ABP_DestroyableActor_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        RootExtraCollision;                                // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFlowComponent*                         Flow;                                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDestructibleComponent*                 DestructibleMesh;                                  // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   DamageStageMesh;                                   // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   BlockingMesh;                                      // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          Destroyed;                                         // 0x0268(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_269[0x3];                                      // 0x0269(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         HitsRemaining;                                     // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   RequiredWeaponClass;                               // 0x0270(0x0028)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TArray<class UStaticMesh*>                    MeshDamageStages;                                  // 0x0298(0x0010)(Edit, BlueprintVisible)
	EDestructibleFinalStage                       Final_Stage_Destruction_Type;                      // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Destructible_simulation_on_Final_Stage;            // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Base_Mesh;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FHitResult>                     HitResults;                                        // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UDestructibleMesh*                      Destructible_Asset;                                // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Continuous_Destructible_Simulation;                // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Physics_simulation_on_final_stage;                 // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Damage_Spread_Destructible;                        // 0x02D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Impulse_Strength_Destructible;                     // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Impulse_Strength_Physics_sim;                      // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Particle_Effect_on_Final_Stage;                    // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraSystem*                         Particle_Effect;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                In_Vec;                                            // 0x02F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Notify_Tag_On_Destroy;                             // 0x02FC(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_304[0x4];                                      // 0x0304(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             BlockerHit;                                        // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BlockerHit__DelegateSignature();
	void ExecuteUbergraph_BP_DestroyableActor(int32 EntryPoint);
	void WeaponHit(class AActor* Weapon, const struct FGameplayTag& EventTag, const struct FGameplayEventData& Payload);
	void DestroyBlocker();
	void ReceiveBeginPlay();
	void UserConstructionScript();
	void DamageStages();
	void PhysicsSimulationFinalStage();
	void DestructibleSimulationFinalStage();
	void ParticleEffectsFinalStage();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DestroyableActor_C">();
	}
	static class ABP_DestroyableActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DestroyableActor_C>();
	}
};
static_assert(alignof(ABP_DestroyableActor_C) == 0x000008, "Wrong alignment on ABP_DestroyableActor_C");
static_assert(sizeof(ABP_DestroyableActor_C) == 0x000318, "Wrong size on ABP_DestroyableActor_C");
static_assert(offsetof(ABP_DestroyableActor_C, UberGraphFrame) == 0x000238, "Member 'ABP_DestroyableActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, RootExtraCollision) == 0x000240, "Member 'ABP_DestroyableActor_C::RootExtraCollision' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Flow) == 0x000248, "Member 'ABP_DestroyableActor_C::Flow' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, DestructibleMesh) == 0x000250, "Member 'ABP_DestroyableActor_C::DestructibleMesh' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, DamageStageMesh) == 0x000258, "Member 'ABP_DestroyableActor_C::DamageStageMesh' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, BlockingMesh) == 0x000260, "Member 'ABP_DestroyableActor_C::BlockingMesh' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Destroyed) == 0x000268, "Member 'ABP_DestroyableActor_C::Destroyed' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, HitsRemaining) == 0x00026C, "Member 'ABP_DestroyableActor_C::HitsRemaining' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, RequiredWeaponClass) == 0x000270, "Member 'ABP_DestroyableActor_C::RequiredWeaponClass' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, MeshDamageStages) == 0x000298, "Member 'ABP_DestroyableActor_C::MeshDamageStages' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Final_Stage_Destruction_Type) == 0x0002A8, "Member 'ABP_DestroyableActor_C::Final_Stage_Destruction_Type' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Destructible_simulation_on_Final_Stage) == 0x0002A9, "Member 'ABP_DestroyableActor_C::Destructible_simulation_on_Final_Stage' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Base_Mesh) == 0x0002B0, "Member 'ABP_DestroyableActor_C::Base_Mesh' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, HitResults) == 0x0002B8, "Member 'ABP_DestroyableActor_C::HitResults' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Destructible_Asset) == 0x0002C8, "Member 'ABP_DestroyableActor_C::Destructible_Asset' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Continuous_Destructible_Simulation) == 0x0002D0, "Member 'ABP_DestroyableActor_C::Continuous_Destructible_Simulation' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Physics_simulation_on_final_stage) == 0x0002D1, "Member 'ABP_DestroyableActor_C::Physics_simulation_on_final_stage' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Damage_Spread_Destructible) == 0x0002D4, "Member 'ABP_DestroyableActor_C::Damage_Spread_Destructible' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Impulse_Strength_Destructible) == 0x0002D8, "Member 'ABP_DestroyableActor_C::Impulse_Strength_Destructible' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Impulse_Strength_Physics_sim) == 0x0002DC, "Member 'ABP_DestroyableActor_C::Impulse_Strength_Physics_sim' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Particle_Effect_on_Final_Stage) == 0x0002E0, "Member 'ABP_DestroyableActor_C::Particle_Effect_on_Final_Stage' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Particle_Effect) == 0x0002E8, "Member 'ABP_DestroyableActor_C::Particle_Effect' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, In_Vec) == 0x0002F0, "Member 'ABP_DestroyableActor_C::In_Vec' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, Notify_Tag_On_Destroy) == 0x0002FC, "Member 'ABP_DestroyableActor_C::Notify_Tag_On_Destroy' has a wrong offset!");
static_assert(offsetof(ABP_DestroyableActor_C, BlockerHit) == 0x000308, "Member 'ABP_DestroyableActor_C::BlockerHit' has a wrong offset!");

}

