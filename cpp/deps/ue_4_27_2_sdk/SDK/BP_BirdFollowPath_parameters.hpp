#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BirdFollowPath

#include "Basic.hpp"

#include "FMODStudio_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.SetBirdTransformAtDistAlongSpline
// 0x00D0 (0x00D0 - 0x0000)
struct BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue; // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0040(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline) == 0x000010, "Wrong alignment on BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline");
static_assert(sizeof(BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline) == 0x0000D0, "Wrong size on BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline");
static_assert(offsetof(BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline, Distance) == 0x000000, "Member 'BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline::Distance' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline, CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue) == 0x000010, "Member 'BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline::CallFunc_GetTransformAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000040, "Member 'BP_BirdFollowPath_C_SetBirdTransformAtDistAlongSpline::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.UpdateFlyingMovement
// 0x0018 (0x0018 - 0x0000)
struct BP_BirdFollowPath_C_UpdateFlyingMovement final
{
public:
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFollowPath_C_UpdateFlyingMovement) == 0x000004, "Wrong alignment on BP_BirdFollowPath_C_UpdateFlyingMovement");
static_assert(sizeof(BP_BirdFollowPath_C_UpdateFlyingMovement) == 0x000018, "Wrong size on BP_BirdFollowPath_C_UpdateFlyingMovement");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingMovement, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000000, "Member 'BP_BirdFollowPath_C_UpdateFlyingMovement::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingMovement, CallFunc_FClamp_ReturnValue) == 0x000004, "Member 'BP_BirdFollowPath_C_UpdateFlyingMovement::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingMovement, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_BirdFollowPath_C_UpdateFlyingMovement::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingMovement, CallFunc_Lerp_ReturnValue) == 0x00000C, "Member 'BP_BirdFollowPath_C_UpdateFlyingMovement::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingMovement, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BirdFollowPath_C_UpdateFlyingMovement::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingMovement, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_BirdFollowPath_C_UpdateFlyingMovement::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.UpdateFlyingAnimationBlend
// 0x0024 (0x0024 - 0x0000)
struct BP_BirdFollowPath_C_UpdateFlyingAnimationBlend final
{
public:
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialParameterInfo                 K2Node_MakeStruct_MaterialParameterInfo;           // 0x0008(0x0010)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend) == 0x000004, "Wrong alignment on BP_BirdFollowPath_C_UpdateFlyingAnimationBlend");
static_assert(sizeof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend) == 0x000024, "Wrong size on BP_BirdFollowPath_C_UpdateFlyingAnimationBlend");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'BP_BirdFollowPath_C_UpdateFlyingAnimationBlend::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_BirdFollowPath_C_UpdateFlyingAnimationBlend::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend, K2Node_MakeStruct_MaterialParameterInfo) == 0x000008, "Member 'BP_BirdFollowPath_C_UpdateFlyingAnimationBlend::K2Node_MakeStruct_MaterialParameterInfo' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_BirdFollowPath_C_UpdateFlyingAnimationBlend::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend, CallFunc_FClamp_ReturnValue) == 0x00001C, "Member 'BP_BirdFollowPath_C_UpdateFlyingAnimationBlend::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_UpdateFlyingAnimationBlend, CallFunc_Less_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_BirdFollowPath_C_UpdateFlyingAnimationBlend::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.UserConstructionScript
// 0x000C (0x000C - 0x0000)
struct BP_BirdFollowPath_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFollowPath_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_BirdFollowPath_C_UserConstructionScript");
static_assert(sizeof(BP_BirdFollowPath_C_UserConstructionScript) == 0x00000C, "Wrong size on BP_BirdFollowPath_C_UserConstructionScript");
static_assert(offsetof(BP_BirdFollowPath_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BP_BirdFollowPath_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BirdFollowPath_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFollowPath_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BirdFollowPath_C_ReceiveTick");
static_assert(sizeof(BP_BirdFollowPath_C_ReceiveTick) == 0x000004, "Wrong size on BP_BirdFollowPath_C_ReceiveTick");
static_assert(offsetof(BP_BirdFollowPath_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BirdFollowPath_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_BirdFollowPath_C_BndEvt__BP_BirdFollowPath_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.WeaponHit
// 0x00C0 (0x00C0 - 0x0000)
struct BP_BirdFollowPath_C_WeaponHit final
{
public:
	class AActor*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Payload;                                           // 0x0010(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BirdFollowPath_C_WeaponHit) == 0x000008, "Wrong alignment on BP_BirdFollowPath_C_WeaponHit");
static_assert(sizeof(BP_BirdFollowPath_C_WeaponHit) == 0x0000C0, "Wrong size on BP_BirdFollowPath_C_WeaponHit");
static_assert(offsetof(BP_BirdFollowPath_C_WeaponHit, Weapon) == 0x000000, "Member 'BP_BirdFollowPath_C_WeaponHit::Weapon' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_WeaponHit, EventTag) == 0x000008, "Member 'BP_BirdFollowPath_C_WeaponHit::EventTag' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_WeaponHit, Payload) == 0x000010, "Member 'BP_BirdFollowPath_C_WeaponHit::Payload' has a wrong offset!");

// Function BP_BirdFollowPath.BP_BirdFollowPath_C.ExecuteUbergraph_BP_BirdFollowPath
// 0x0200 (0x0200 - 0x0000)
struct BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0028(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Weapon;                               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_Payload;                              // 0x00E0(0x00B0)()
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0190(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x01CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x01D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath) == 0x000010, "Wrong alignment on BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath");
static_assert(sizeof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath) == 0x000200, "Wrong size on BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, EntryPoint) == 0x000000, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_ComponentBoundEvent_bFromSweep) == 0x000024, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_ComponentBoundEvent_SweepResult) == 0x000028, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_DynamicCast_AsOFPlayer_Character) == 0x0000B0, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_DynamicCast_bSuccess) == 0x0000B8, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000BC, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_GetSplineLength_ReturnValue) == 0x0000C4, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0000C8, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_Event_Weapon) == 0x0000D0, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_Event_Weapon' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_Event_EventTag) == 0x0000D8, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, K2Node_Event_Payload) == 0x0000E0, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_GetTransform_ReturnValue) == 0x000190, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_BreakTransform_Location) == 0x0001C0, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_BreakTransform_Rotation) == 0x0001CC, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_BreakTransform_Scale) == 0x0001D8, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_PlayEventAtLocation_ReturnValue) == 0x0001E8, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0001F0, "Member 'BP_BirdFollowPath_C_ExecuteUbergraph_BP_BirdFollowPath::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");

}

