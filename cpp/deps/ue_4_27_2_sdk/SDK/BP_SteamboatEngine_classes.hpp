#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SteamboatEngine

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SteamboatEngine.BP_SteamboatEngine_C
// 0x0118 (0x0350 - 0x0238)
class ABP_SteamboatEngine_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPersistenceComponent*                  Persistence;                                       // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFlowComponent*                         Flow;                                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionFlowComponent*              InteractionFlow;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CoverBox;                                          // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ButtonCover;                                       // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   IndicatorLight3;                                   // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   IndicatorLight2;                                   // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   IndicatorLight1;                                   // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Indicator3;                                        // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Indicator2;                                        // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Indicator1;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Button;                                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   ButtonBox;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   IndicatorBox;                                      // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Engine;                                            // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         OpenCoverTimeline_Alpha_0C0188064EDEECBFA6E7638CF9D95229; // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            OpenCoverTimeline__Direction_0C0188064EDEECBFA6E7638CF9D95229; // 0x02C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C5[0x3];                                      // 0x02C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     OpenCoverTimeline;                                 // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ButtonPressTimeline_ButtonPress_F1F43224453545F0E935A2BAD6C66DA8; // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            ButtonPressTimeline__Direction_F1F43224453545F0E935A2BAD6C66DA8; // 0x02D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D5[0x3];                                      // 0x02D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     ButtonPressTimeline;                               // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ButtonIsPressed;                                   // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           Indicators;                                        // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<bool>                                  LocksUnlocked;                                     // 0x02F8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, SaveGame)
	bool                                          AllLocksUnlocked;                                  // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          CoverOpen;                                         // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             StartEngine;                                       // 0x0310(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UMaterialInstanceDynamic*               PowerLampMaterial;                                 // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PressureLampMaterial;                              // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               SteamLampMaterial;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               EngineLampMaterial;                                // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxEmissiveStrength;                               // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsPowerLampActive;                                // 0x0344(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          bIsPressureLampActive;                             // 0x0345(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          bIsSteamLampActive;                                // 0x0346(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          bIsEngineLampActive;                               // 0x0347(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	bool                                          bStartSolved;                                      // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void StartEngine__DelegateSignature();
	void ExecuteUbergraph_BP_SteamboatEngine(int32 EntryPoint);
	void BndEvt__BP_SteamboatEngine_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent, const struct FGameplayTag& NotifyTag);
	void PlayUnlockedBark();
	void PlayLockedInteractBark();
	void BndEvt__BP_SteamboatEngine_InteractionFlow_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter);
	void EngineUnlocked();
	void BreakLockLoop();
	void UnlockEngineLock();
	void PressButton();
	void ReceiveBeginPlay();
	void OpenCoverTimeline__UpdateFunc();
	void OpenCoverTimeline__FinishedFunc();
	void ButtonPressTimeline__UpdateFunc();
	void ButtonPressTimeline__FinishedFunc();
	void UserConstructionScript();
	void ActivatePowerLamp();
	void ActivatePressureLamp();
	void ActivateSteamLamp();
	void ActivateEngineLamp();
	void ReactivateActiveLamps();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SteamboatEngine_C">();
	}
	static class ABP_SteamboatEngine_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SteamboatEngine_C>();
	}
};
static_assert(alignof(ABP_SteamboatEngine_C) == 0x000008, "Wrong alignment on ABP_SteamboatEngine_C");
static_assert(sizeof(ABP_SteamboatEngine_C) == 0x000350, "Wrong size on ABP_SteamboatEngine_C");
static_assert(offsetof(ABP_SteamboatEngine_C, UberGraphFrame) == 0x000238, "Member 'ABP_SteamboatEngine_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Persistence) == 0x000240, "Member 'ABP_SteamboatEngine_C::Persistence' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Flow) == 0x000248, "Member 'ABP_SteamboatEngine_C::Flow' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, InteractionFlow) == 0x000250, "Member 'ABP_SteamboatEngine_C::InteractionFlow' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, CoverBox) == 0x000258, "Member 'ABP_SteamboatEngine_C::CoverBox' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, ButtonCover) == 0x000260, "Member 'ABP_SteamboatEngine_C::ButtonCover' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, IndicatorLight3) == 0x000268, "Member 'ABP_SteamboatEngine_C::IndicatorLight3' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, IndicatorLight2) == 0x000270, "Member 'ABP_SteamboatEngine_C::IndicatorLight2' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, IndicatorLight1) == 0x000278, "Member 'ABP_SteamboatEngine_C::IndicatorLight1' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Indicator3) == 0x000280, "Member 'ABP_SteamboatEngine_C::Indicator3' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Indicator2) == 0x000288, "Member 'ABP_SteamboatEngine_C::Indicator2' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Indicator1) == 0x000290, "Member 'ABP_SteamboatEngine_C::Indicator1' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Button) == 0x000298, "Member 'ABP_SteamboatEngine_C::Button' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, ButtonBox) == 0x0002A0, "Member 'ABP_SteamboatEngine_C::ButtonBox' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, IndicatorBox) == 0x0002A8, "Member 'ABP_SteamboatEngine_C::IndicatorBox' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Engine) == 0x0002B0, "Member 'ABP_SteamboatEngine_C::Engine' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, DefaultSceneRoot) == 0x0002B8, "Member 'ABP_SteamboatEngine_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, OpenCoverTimeline_Alpha_0C0188064EDEECBFA6E7638CF9D95229) == 0x0002C0, "Member 'ABP_SteamboatEngine_C::OpenCoverTimeline_Alpha_0C0188064EDEECBFA6E7638CF9D95229' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, OpenCoverTimeline__Direction_0C0188064EDEECBFA6E7638CF9D95229) == 0x0002C4, "Member 'ABP_SteamboatEngine_C::OpenCoverTimeline__Direction_0C0188064EDEECBFA6E7638CF9D95229' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, OpenCoverTimeline) == 0x0002C8, "Member 'ABP_SteamboatEngine_C::OpenCoverTimeline' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, ButtonPressTimeline_ButtonPress_F1F43224453545F0E935A2BAD6C66DA8) == 0x0002D0, "Member 'ABP_SteamboatEngine_C::ButtonPressTimeline_ButtonPress_F1F43224453545F0E935A2BAD6C66DA8' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, ButtonPressTimeline__Direction_F1F43224453545F0E935A2BAD6C66DA8) == 0x0002D4, "Member 'ABP_SteamboatEngine_C::ButtonPressTimeline__Direction_F1F43224453545F0E935A2BAD6C66DA8' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, ButtonPressTimeline) == 0x0002D8, "Member 'ABP_SteamboatEngine_C::ButtonPressTimeline' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, ButtonIsPressed) == 0x0002E0, "Member 'ABP_SteamboatEngine_C::ButtonIsPressed' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, Indicators) == 0x0002E8, "Member 'ABP_SteamboatEngine_C::Indicators' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, LocksUnlocked) == 0x0002F8, "Member 'ABP_SteamboatEngine_C::LocksUnlocked' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, AllLocksUnlocked) == 0x000308, "Member 'ABP_SteamboatEngine_C::AllLocksUnlocked' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, CoverOpen) == 0x000309, "Member 'ABP_SteamboatEngine_C::CoverOpen' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, StartEngine) == 0x000310, "Member 'ABP_SteamboatEngine_C::StartEngine' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, PowerLampMaterial) == 0x000320, "Member 'ABP_SteamboatEngine_C::PowerLampMaterial' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, PressureLampMaterial) == 0x000328, "Member 'ABP_SteamboatEngine_C::PressureLampMaterial' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, SteamLampMaterial) == 0x000330, "Member 'ABP_SteamboatEngine_C::SteamLampMaterial' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, EngineLampMaterial) == 0x000338, "Member 'ABP_SteamboatEngine_C::EngineLampMaterial' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, MaxEmissiveStrength) == 0x000340, "Member 'ABP_SteamboatEngine_C::MaxEmissiveStrength' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, bIsPowerLampActive) == 0x000344, "Member 'ABP_SteamboatEngine_C::bIsPowerLampActive' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, bIsPressureLampActive) == 0x000345, "Member 'ABP_SteamboatEngine_C::bIsPressureLampActive' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, bIsSteamLampActive) == 0x000346, "Member 'ABP_SteamboatEngine_C::bIsSteamLampActive' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, bIsEngineLampActive) == 0x000347, "Member 'ABP_SteamboatEngine_C::bIsEngineLampActive' has a wrong offset!");
static_assert(offsetof(ABP_SteamboatEngine_C, bStartSolved) == 0x000348, "Member 'ABP_SteamboatEngine_C::bStartSolved' has a wrong offset!");

}

