#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "PiecesAnimNodes_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Door.BP_Door_C
// 0x0180 (0x15A0 - 0x1420)
class ABP_Door_C final : public ADoor
{
public:
	uint8                                         Pad_1418[0x8];                                     // 0x1418(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x1420(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   BoltLatchHousing;                                  // 0x1428(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ULockAchievementTrackingComponent*      LockAchievementTracking;                           // 0x1430(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PuzzleLight_C*                      BP_Bolt_Light;                                     // 0x1438(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PuzzleLight_C*                      BP_Key_Light;                                      // 0x1440(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   _editor_only__DebugStatusTextMirrored;             // 0x1448(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UTextRenderComponent*                   _editor_only__DebugStatusText;                     // 0x1450(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight_Key;                                     // 0x1458(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFlowComponent*                         Flow_DEPRECATED;                                   // 0x1460(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPaperSpriteComponent*                  EditorStateSprite2;                                // 0x1468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPaperSpriteComponent*                  EditorStateSprite1;                                // 0x1470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         UnlockTimeLine_RotationRoll_5B10F546454D464EEEBA49AF1F17F382; // 0x1478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         UnlockTimeLine_TransfromX_5B10F546454D464EEEBA49AF1F17F382; // 0x147C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            UnlockTimeLine__Direction_5B10F546454D464EEEBA49AF1F17F382; // 0x1480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1481[0x7];                                     // 0x1481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     UnlockTimeLine;                                    // 0x1488(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   OpenDoorNotifyName;                                // 0x1490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FlowNotifyTag;                                     // 0x1498(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          UseItemPicker;                                     // 0x14A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14A1[0x7];                                     // 0x14A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             DoorUnlockCompleted;                               // 0x14A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             DoorUnlockStarted;                                 // 0x14B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TSubclassOf<class UCameraModifier>            Dynamic_DOF_Class;                                 // 0x14C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 First_Time_Opening_Camera_Modifier_Class;          // 0x14D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 First_Time_Opening_Lag_Class;                      // 0x14D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        First_Time_Opening_Lag;                            // 0x14E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        First_Time_Opening_Camera_Modifier;                // 0x14E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirstTimeOpeningActive;                            // 0x14F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14F1[0x3];                                     // 0x14F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CameraDefualtMaxYaw;                               // 0x14F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CameraDefualtMinYaw;                               // 0x14F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Item_Category;                                     // 0x14FC(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1504[0x4];                                     // 0x1504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              ItemKeyHard;                                       // 0x1508(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class FName                                   DoorHandleNotifyName;                              // 0x1510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DoorHandleTimelinePlayed;                          // 0x1518(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1519[0x7];                                     // 0x1519(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   ItemPickerTargetName;                              // 0x1520(0x0018)(Edit, BlueprintVisible)
	class UBPAsyncAction_RepositionAndReorient*   RepositionAndReorientProxy;                        // 0x1538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBarkCollection                        MissingKeyBark;                                    // 0x1540(0x0050)(Edit, BlueprintVisible)
	float                                         MissingKeyBarkDelay;                               // 0x1590(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	class FText GetTargetName();
	bool CheckIfRightItem(class UItemData* ItemData);
	void AddArchivedKeys();
	void Toggle_Clockwise_Opening();
	void StopReposition(bool SnapCharacterToTargetLocation);
	void FindKeySocket(struct FVector* OutLocation, bool* LocationFound);
	struct FVector FixupKeyArrowLocation(const struct FVector& CalculatedLocation);
	void AlignKeyArrowWithSocket();
	void SetDebugStatusText(const class FText& Value);
	void HandleDoorHandleNotify();
	void First_Time_Opening_Finished();
	void FirstTimeOpening(float PlusValueOnYaw);
	bool GetIsRightHand();
	void GetIKParameters(TArray<struct FIKParameters>* IKParameters);
	void UnlockTimeLine__FinishedFunc();
	void UnlockTimeLine__UpdateFunc();
	void UnlockTimeLine__ForcedFeedback__EventFunc();
	void OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B(class ACharacter* TransformedCharacter);
	void OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B(class ACharacter* TransformedCharacter);
	void OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B(class ACharacter* TransformedCharacter);
	void OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnNotifyEnd_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnNotifyBegin_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnInterrupted_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnBlendOut_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnCompleted_55DD772447DC15195F17D29545C4A04B(class FName NotifyName);
	void OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16(class FName NotifyName);
	void OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16(class FName NotifyName);
	void OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16(class FName NotifyName);
	void OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16(class FName NotifyName);
	void OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16(class FName NotifyName);
	void OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6(class UObject* Loaded);
	void Add_Camera_Modifier(class UClass*& ModifierClass);
	void OnLoaded_A69EEFB34070966B54708E807E3F2FC2(class UObject* Loaded);
	void ReceiveTick(float DeltaSeconds);
	void PlayMontage(const class USkeletalMeshComponent* InSkeletalMesh, const class UAnimMontage* MontageToPlay, class FName StartingSection);
	void MoveToInteraction(class ACharacter* InteractingCharacter, const class USceneComponent* MoveToLocation);
	void OpenItemPicker(class ACharacter* InteractingCharacter);
	void UserConstructionScript();
	void OnWindowClose();
	void PlayFirstTimeOpening();
	void UnBoltDoor(class ACharacter* InteractingCharacter);
	void ReceiveBeginPlay();
	void OnInteract(class ACharacter* InteractionCharacter);
	void UnlockDoorWithKey();
	void OnItemPickerClosed();
	void BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent, const struct FGameplayTag& NotifyTag);
	void OnDoorUnboltFinished();
	void OnLockStateSet_Event_0(EDoorLockState NewLockState, EDoorLockState OldLockState);
	void BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter);
	void SetCosmeticsForLockState(EDoorLockState InLockState);
	void BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter);
	void UpdateClockwiseOpening(bool bClockwiseOpeningPosition);
	void ExecuteUbergraph_BP_Door(int32 EntryPoint);
	void DoorUnlockStarted__DelegateSignature();
	void DoorUnlockCompleted__DelegateSignature();
	void PlayForcedFeedbackOnDoorTackled();

	struct FGameplayTag GetItemCategoryGameplayTag() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Door_C">();
	}
	static class ABP_Door_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Door_C>();
	}
};
static_assert(alignof(ABP_Door_C) == 0x000010, "Wrong alignment on ABP_Door_C");
static_assert(sizeof(ABP_Door_C) == 0x0015A0, "Wrong size on ABP_Door_C");
static_assert(offsetof(ABP_Door_C, UberGraphFrame) == 0x001420, "Member 'ABP_Door_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, BoltLatchHousing) == 0x001428, "Member 'ABP_Door_C::BoltLatchHousing' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, LockAchievementTracking) == 0x001430, "Member 'ABP_Door_C::LockAchievementTracking' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, BP_Bolt_Light) == 0x001438, "Member 'ABP_Door_C::BP_Bolt_Light' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, BP_Key_Light) == 0x001440, "Member 'ABP_Door_C::BP_Key_Light' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, _editor_only__DebugStatusTextMirrored) == 0x001448, "Member 'ABP_Door_C::_editor_only__DebugStatusTextMirrored' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, _editor_only__DebugStatusText) == 0x001450, "Member 'ABP_Door_C::_editor_only__DebugStatusText' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, SpotLight_Key) == 0x001458, "Member 'ABP_Door_C::SpotLight_Key' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, Flow_DEPRECATED) == 0x001460, "Member 'ABP_Door_C::Flow_DEPRECATED' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, EditorStateSprite2) == 0x001468, "Member 'ABP_Door_C::EditorStateSprite2' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, EditorStateSprite1) == 0x001470, "Member 'ABP_Door_C::EditorStateSprite1' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, UnlockTimeLine_RotationRoll_5B10F546454D464EEEBA49AF1F17F382) == 0x001478, "Member 'ABP_Door_C::UnlockTimeLine_RotationRoll_5B10F546454D464EEEBA49AF1F17F382' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, UnlockTimeLine_TransfromX_5B10F546454D464EEEBA49AF1F17F382) == 0x00147C, "Member 'ABP_Door_C::UnlockTimeLine_TransfromX_5B10F546454D464EEEBA49AF1F17F382' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, UnlockTimeLine__Direction_5B10F546454D464EEEBA49AF1F17F382) == 0x001480, "Member 'ABP_Door_C::UnlockTimeLine__Direction_5B10F546454D464EEEBA49AF1F17F382' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, UnlockTimeLine) == 0x001488, "Member 'ABP_Door_C::UnlockTimeLine' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, OpenDoorNotifyName) == 0x001490, "Member 'ABP_Door_C::OpenDoorNotifyName' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, FlowNotifyTag) == 0x001498, "Member 'ABP_Door_C::FlowNotifyTag' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, UseItemPicker) == 0x0014A0, "Member 'ABP_Door_C::UseItemPicker' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorUnlockCompleted) == 0x0014A8, "Member 'ABP_Door_C::DoorUnlockCompleted' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorUnlockStarted) == 0x0014B8, "Member 'ABP_Door_C::DoorUnlockStarted' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, Dynamic_DOF_Class) == 0x0014C8, "Member 'ABP_Door_C::Dynamic_DOF_Class' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, First_Time_Opening_Camera_Modifier_Class) == 0x0014D0, "Member 'ABP_Door_C::First_Time_Opening_Camera_Modifier_Class' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, First_Time_Opening_Lag_Class) == 0x0014D8, "Member 'ABP_Door_C::First_Time_Opening_Lag_Class' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, First_Time_Opening_Lag) == 0x0014E0, "Member 'ABP_Door_C::First_Time_Opening_Lag' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, First_Time_Opening_Camera_Modifier) == 0x0014E8, "Member 'ABP_Door_C::First_Time_Opening_Camera_Modifier' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, FirstTimeOpeningActive) == 0x0014F0, "Member 'ABP_Door_C::FirstTimeOpeningActive' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, CameraDefualtMaxYaw) == 0x0014F4, "Member 'ABP_Door_C::CameraDefualtMaxYaw' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, CameraDefualtMinYaw) == 0x0014F8, "Member 'ABP_Door_C::CameraDefualtMinYaw' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, Item_Category) == 0x0014FC, "Member 'ABP_Door_C::Item_Category' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, ItemKeyHard) == 0x001508, "Member 'ABP_Door_C::ItemKeyHard' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorHandleNotifyName) == 0x001510, "Member 'ABP_Door_C::DoorHandleNotifyName' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, DoorHandleTimelinePlayed) == 0x001518, "Member 'ABP_Door_C::DoorHandleTimelinePlayed' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, ItemPickerTargetName) == 0x001520, "Member 'ABP_Door_C::ItemPickerTargetName' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, RepositionAndReorientProxy) == 0x001538, "Member 'ABP_Door_C::RepositionAndReorientProxy' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, MissingKeyBark) == 0x001540, "Member 'ABP_Door_C::MissingKeyBark' has a wrong offset!");
static_assert(offsetof(ABP_Door_C, MissingKeyBarkDelay) == 0x001590, "Member 'ABP_Door_C::MissingKeyBarkDelay' has a wrong offset!");

}

