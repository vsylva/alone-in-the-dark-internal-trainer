#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesFlowGraph

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "PiecesFactsDB_structs.hpp"


namespace SDK::Params
{

// Function PiecesFlowGraph.FlowLevelStreamingComponent.OnReceiveNotify
// 0x0010 (0x0010 - 0x0000)
struct FlowLevelStreamingComponent_OnReceiveNotify final
{
public:
	class UFlowComponent*                         FlowComponent;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                           NotifyTag;                                         // 0x0008(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowLevelStreamingComponent_OnReceiveNotify) == 0x000008, "Wrong alignment on FlowLevelStreamingComponent_OnReceiveNotify");
static_assert(sizeof(FlowLevelStreamingComponent_OnReceiveNotify) == 0x000010, "Wrong size on FlowLevelStreamingComponent_OnReceiveNotify");
static_assert(offsetof(FlowLevelStreamingComponent_OnReceiveNotify, FlowComponent) == 0x000000, "Member 'FlowLevelStreamingComponent_OnReceiveNotify::FlowComponent' has a wrong offset!");
static_assert(offsetof(FlowLevelStreamingComponent_OnReceiveNotify, NotifyTag) == 0x000008, "Member 'FlowLevelStreamingComponent_OnReceiveNotify::NotifyTag' has a wrong offset!");

// Function PiecesFlowGraph.FlowNode_FactDB_OnFactUpdated.FactUpdatedHandler
// 0x000C (0x000C - 0x0000)
struct FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	ESubscriptionTagChangeType                    ChangeType;                                        // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler) == 0x000004, "Wrong alignment on FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler");
static_assert(sizeof(FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler) == 0x00000C, "Wrong size on FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler");
static_assert(offsetof(FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler, Tag) == 0x000000, "Member 'FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler::Tag' has a wrong offset!");
static_assert(offsetof(FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler, ChangeType) == 0x000008, "Member 'FlowNode_FactDB_OnFactUpdated_FactUpdatedHandler::ChangeType' has a wrong offset!");

// Function PiecesFlowGraph.FlowNode_SaveGame.OnSaveDone
// 0x0001 (0x0001 - 0x0000)
struct FlowNode_SaveGame_OnSaveDone final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowNode_SaveGame_OnSaveDone) == 0x000001, "Wrong alignment on FlowNode_SaveGame_OnSaveDone");
static_assert(sizeof(FlowNode_SaveGame_OnSaveDone) == 0x000001, "Wrong size on FlowNode_SaveGame_OnSaveDone");
static_assert(offsetof(FlowNode_SaveGame_OnSaveDone, bSuccess) == 0x000000, "Member 'FlowNode_SaveGame_OnSaveDone::bSuccess' has a wrong offset!");

// Function PiecesFlowGraph.FlowTriggerComponent.ComponentBeginOverlap
// 0x00A8 (0x00A8 - 0x0000)
struct FlowTriggerComponent_ComponentBeginOverlap final
{
public:
	class UPrimitiveComponent*                    InOverlappedComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InOtherActor;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    InOtherComp;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InOtherBodyIndex;                                  // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             InSweepResult;                                     // 0x0020(0x0088)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
};
static_assert(alignof(FlowTriggerComponent_ComponentBeginOverlap) == 0x000008, "Wrong alignment on FlowTriggerComponent_ComponentBeginOverlap");
static_assert(sizeof(FlowTriggerComponent_ComponentBeginOverlap) == 0x0000A8, "Wrong size on FlowTriggerComponent_ComponentBeginOverlap");
static_assert(offsetof(FlowTriggerComponent_ComponentBeginOverlap, InOverlappedComponent) == 0x000000, "Member 'FlowTriggerComponent_ComponentBeginOverlap::InOverlappedComponent' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentBeginOverlap, InOtherActor) == 0x000008, "Member 'FlowTriggerComponent_ComponentBeginOverlap::InOtherActor' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentBeginOverlap, InOtherComp) == 0x000010, "Member 'FlowTriggerComponent_ComponentBeginOverlap::InOtherComp' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentBeginOverlap, InOtherBodyIndex) == 0x000018, "Member 'FlowTriggerComponent_ComponentBeginOverlap::InOtherBodyIndex' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentBeginOverlap, bFromSweep) == 0x00001C, "Member 'FlowTriggerComponent_ComponentBeginOverlap::bFromSweep' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentBeginOverlap, InSweepResult) == 0x000020, "Member 'FlowTriggerComponent_ComponentBeginOverlap::InSweepResult' has a wrong offset!");

// Function PiecesFlowGraph.FlowTriggerComponent.ComponentEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct FlowTriggerComponent_ComponentEndOverlap final
{
public:
	class UPrimitiveComponent*                    InOverlappedComponent;                             // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 InOtherActor;                                      // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPrimitiveComponent*                    InOtherComp;                                       // 0x0010(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         InOtherBodyIndex;                                  // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FlowTriggerComponent_ComponentEndOverlap) == 0x000008, "Wrong alignment on FlowTriggerComponent_ComponentEndOverlap");
static_assert(sizeof(FlowTriggerComponent_ComponentEndOverlap) == 0x000020, "Wrong size on FlowTriggerComponent_ComponentEndOverlap");
static_assert(offsetof(FlowTriggerComponent_ComponentEndOverlap, InOverlappedComponent) == 0x000000, "Member 'FlowTriggerComponent_ComponentEndOverlap::InOverlappedComponent' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentEndOverlap, InOtherActor) == 0x000008, "Member 'FlowTriggerComponent_ComponentEndOverlap::InOtherActor' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentEndOverlap, InOtherComp) == 0x000010, "Member 'FlowTriggerComponent_ComponentEndOverlap::InOtherComp' has a wrong offset!");
static_assert(offsetof(FlowTriggerComponent_ComponentEndOverlap, InOtherBodyIndex) == 0x000018, "Member 'FlowTriggerComponent_ComponentEndOverlap::InOtherBodyIndex' has a wrong offset!");

}

