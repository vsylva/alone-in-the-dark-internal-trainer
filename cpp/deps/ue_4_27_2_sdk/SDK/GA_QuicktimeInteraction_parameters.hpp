#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_QuicktimeInteraction

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"
#include "CharacterSize_structs.hpp"
#include "AnimationMontageIdentifier_structs.hpp"
#include "CemeteryCreatureType_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FaceButtonType_structs.hpp"


namespace SDK::Params
{

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.hitscanWeaponFired
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_HitscanWeaponFired final
{
public:
	bool                                          Success;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_HitscanWeaponFired) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_HitscanWeaponFired");
static_assert(sizeof(GA_QuicktimeInteraction_C_HitscanWeaponFired) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_HitscanWeaponFired");
static_assert(offsetof(GA_QuicktimeInteraction_C_HitscanWeaponFired, Success) == 0x000000, "Member 'GA_QuicktimeInteraction_C_HitscanWeaponFired::Success' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.GetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_GetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_GetMostSuitableMeleeSection");
static_assert(sizeof(GA_QuicktimeInteraction_C_GetMostSuitableMeleeSection) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_GetMostSuitableMeleeSection");
static_assert(offsetof(GA_QuicktimeInteraction_C_GetMostSuitableMeleeSection, Value) == 0x000000, "Member 'GA_QuicktimeInteraction_C_GetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.getAggroState
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_GetAggroState final
{
public:
	bool                                          Aggro;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_GetAggroState) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_GetAggroState");
static_assert(sizeof(GA_QuicktimeInteraction_C_GetAggroState) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_GetAggroState");
static_assert(offsetof(GA_QuicktimeInteraction_C_GetAggroState, Aggro) == 0x000000, "Member 'GA_QuicktimeInteraction_C_GetAggroState::Aggro' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.setNewAggro
// 0x0002 (0x0002 - 0x0000)
struct GA_QuicktimeInteraction_C_SetNewAggro final
{
public:
	bool                                          NewAggro;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_SetNewAggro) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_SetNewAggro");
static_assert(sizeof(GA_QuicktimeInteraction_C_SetNewAggro) == 0x000002, "Wrong size on GA_QuicktimeInteraction_C_SetNewAggro");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetNewAggro, NewAggro) == 0x000000, "Member 'GA_QuicktimeInteraction_C_SetNewAggro::NewAggro' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetNewAggro, Success) == 0x000001, "Member 'GA_QuicktimeInteraction_C_SetNewAggro::Success' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.IncrementJac3ProneCounter
// 0x0004 (0x0004 - 0x0000)
struct GA_QuicktimeInteraction_C_IncrementJac3ProneCounter final
{
public:
	int32                                         ProneCounter;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_IncrementJac3ProneCounter) == 0x000004, "Wrong alignment on GA_QuicktimeInteraction_C_IncrementJac3ProneCounter");
static_assert(sizeof(GA_QuicktimeInteraction_C_IncrementJac3ProneCounter) == 0x000004, "Wrong size on GA_QuicktimeInteraction_C_IncrementJac3ProneCounter");
static_assert(offsetof(GA_QuicktimeInteraction_C_IncrementJac3ProneCounter, ProneCounter) == 0x000000, "Member 'GA_QuicktimeInteraction_C_IncrementJac3ProneCounter::ProneCounter' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.GetCharacterSize
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_GetCharacterSize final
{
public:
	ECharacterSize                                Size;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_GetCharacterSize) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_GetCharacterSize");
static_assert(sizeof(GA_QuicktimeInteraction_C_GetCharacterSize) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_GetCharacterSize");
static_assert(offsetof(GA_QuicktimeInteraction_C_GetCharacterSize, Size) == 0x000000, "Member 'GA_QuicktimeInteraction_C_GetCharacterSize::Size' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.getCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_GetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CemeteryCreatureType;                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_GetCemeteryCreatureType) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_GetCemeteryCreatureType");
static_assert(sizeof(GA_QuicktimeInteraction_C_GetCemeteryCreatureType) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_GetCemeteryCreatureType");
static_assert(offsetof(GA_QuicktimeInteraction_C_GetCemeteryCreatureType, CemeteryCreatureType) == 0x000000, "Member 'GA_QuicktimeInteraction_C_GetCemeteryCreatureType::CemeteryCreatureType' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.setCanCirculate
// 0x0002 (0x0002 - 0x0000)
struct GA_QuicktimeInteraction_C_SetCanCirculate final
{
public:
	bool                                          CanCirculate;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_SetCanCirculate) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_SetCanCirculate");
static_assert(sizeof(GA_QuicktimeInteraction_C_SetCanCirculate) == 0x000002, "Wrong size on GA_QuicktimeInteraction_C_SetCanCirculate");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetCanCirculate, CanCirculate) == 0x000000, "Member 'GA_QuicktimeInteraction_C_SetCanCirculate::CanCirculate' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetCanCirculate, Success) == 0x000001, "Member 'GA_QuicktimeInteraction_C_SetCanCirculate::Success' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.setStartOnWall
// 0x0002 (0x0002 - 0x0000)
struct GA_QuicktimeInteraction_C_SetStartOnWall final
{
public:
	bool                                          StartOnWall;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_SetStartOnWall) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_SetStartOnWall");
static_assert(sizeof(GA_QuicktimeInteraction_C_SetStartOnWall) == 0x000002, "Wrong size on GA_QuicktimeInteraction_C_SetStartOnWall");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetStartOnWall, StartOnWall) == 0x000000, "Member 'GA_QuicktimeInteraction_C_SetStartOnWall::StartOnWall' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetStartOnWall, Success) == 0x000001, "Member 'GA_QuicktimeInteraction_C_SetStartOnWall::Success' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.AimedAt
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_AimedAt final
{
public:
	bool                                          Return;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_AimedAt) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_AimedAt");
static_assert(sizeof(GA_QuicktimeInteraction_C_AimedAt) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_AimedAt");
static_assert(offsetof(GA_QuicktimeInteraction_C_AimedAt, Return) == 0x000000, "Member 'GA_QuicktimeInteraction_C_AimedAt::Return' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.FlashlightHit
// 0x0008 (0x0008 - 0x0000)
struct GA_QuicktimeInteraction_C_FlashlightHit final
{
public:
	float                                         Distance;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_FlashlightHit) == 0x000004, "Wrong alignment on GA_QuicktimeInteraction_C_FlashlightHit");
static_assert(sizeof(GA_QuicktimeInteraction_C_FlashlightHit) == 0x000008, "Wrong size on GA_QuicktimeInteraction_C_FlashlightHit");
static_assert(offsetof(GA_QuicktimeInteraction_C_FlashlightHit, Distance) == 0x000000, "Member 'GA_QuicktimeInteraction_C_FlashlightHit::Distance' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_FlashlightHit, Success) == 0x000004, "Member 'GA_QuicktimeInteraction_C_FlashlightHit::Success' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.GetUpgradeComponent
// 0x0008 (0x0008 - 0x0000)
struct GA_QuicktimeInteraction_C_GetUpgradeComponent final
{
public:
	class UWeaponUpgradeComponent_C*              UpgradeComponent;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_GetUpgradeComponent) == 0x000008, "Wrong alignment on GA_QuicktimeInteraction_C_GetUpgradeComponent");
static_assert(sizeof(GA_QuicktimeInteraction_C_GetUpgradeComponent) == 0x000008, "Wrong size on GA_QuicktimeInteraction_C_GetUpgradeComponent");
static_assert(offsetof(GA_QuicktimeInteraction_C_GetUpgradeComponent, UpgradeComponent) == 0x000000, "Member 'GA_QuicktimeInteraction_C_GetUpgradeComponent::UpgradeComponent' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.EventReceived_3E4026B44742CE6CDECEEAB201DE8654
// 0x00B0 (0x00B0 - 0x0000)
struct GA_QuicktimeInteraction_C_EventReceived_3E4026B44742CE6CDECEEAB201DE8654 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_QuicktimeInteraction_C_EventReceived_3E4026B44742CE6CDECEEAB201DE8654) == 0x000008, "Wrong alignment on GA_QuicktimeInteraction_C_EventReceived_3E4026B44742CE6CDECEEAB201DE8654");
static_assert(sizeof(GA_QuicktimeInteraction_C_EventReceived_3E4026B44742CE6CDECEEAB201DE8654) == 0x0000B0, "Wrong size on GA_QuicktimeInteraction_C_EventReceived_3E4026B44742CE6CDECEEAB201DE8654");
static_assert(offsetof(GA_QuicktimeInteraction_C_EventReceived_3E4026B44742CE6CDECEEAB201DE8654, Payload) == 0x000000, "Member 'GA_QuicktimeInteraction_C_EventReceived_3E4026B44742CE6CDECEEAB201DE8654::Payload' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.SetCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_SetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CreatureType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_SetCemeteryCreatureType) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_SetCemeteryCreatureType");
static_assert(sizeof(GA_QuicktimeInteraction_C_SetCemeteryCreatureType) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_SetCemeteryCreatureType");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetCemeteryCreatureType, CreatureType) == 0x000000, "Member 'GA_QuicktimeInteraction_C_SetCemeteryCreatureType::CreatureType' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.QuicktimeInput
// 0x0008 (0x0008 - 0x0000)
struct GA_QuicktimeInteraction_C_QuicktimeInput final
{
public:
	float                                         CurrentProgress;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxProgress;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_QuicktimeInput) == 0x000004, "Wrong alignment on GA_QuicktimeInteraction_C_QuicktimeInput");
static_assert(sizeof(GA_QuicktimeInteraction_C_QuicktimeInput) == 0x000008, "Wrong size on GA_QuicktimeInteraction_C_QuicktimeInput");
static_assert(offsetof(GA_QuicktimeInteraction_C_QuicktimeInput, CurrentProgress) == 0x000000, "Member 'GA_QuicktimeInteraction_C_QuicktimeInput::CurrentProgress' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_QuicktimeInput, MaxProgress) == 0x000004, "Member 'GA_QuicktimeInteraction_C_QuicktimeInput::MaxProgress' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.MeleeAttackTranslate
// 0x0018 (0x0018 - 0x0000)
struct GA_QuicktimeInteraction_C_MeleeAttackTranslate final
{
public:
	struct FVector                                StartVector;                                       // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EndVector;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_MeleeAttackTranslate) == 0x000004, "Wrong alignment on GA_QuicktimeInteraction_C_MeleeAttackTranslate");
static_assert(sizeof(GA_QuicktimeInteraction_C_MeleeAttackTranslate) == 0x000018, "Wrong size on GA_QuicktimeInteraction_C_MeleeAttackTranslate");
static_assert(offsetof(GA_QuicktimeInteraction_C_MeleeAttackTranslate, StartVector) == 0x000000, "Member 'GA_QuicktimeInteraction_C_MeleeAttackTranslate::StartVector' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_MeleeAttackTranslate, EndVector) == 0x00000C, "Member 'GA_QuicktimeInteraction_C_MeleeAttackTranslate::EndVector' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.ControlRotationFocus
// 0x0008 (0x0008 - 0x0000)
struct GA_QuicktimeInteraction_C_ControlRotationFocus final
{
public:
	class AActor*                                 FocusTarget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_ControlRotationFocus) == 0x000008, "Wrong alignment on GA_QuicktimeInteraction_C_ControlRotationFocus");
static_assert(sizeof(GA_QuicktimeInteraction_C_ControlRotationFocus) == 0x000008, "Wrong size on GA_QuicktimeInteraction_C_ControlRotationFocus");
static_assert(offsetof(GA_QuicktimeInteraction_C_ControlRotationFocus, FocusTarget) == 0x000000, "Member 'GA_QuicktimeInteraction_C_ControlRotationFocus::FocusTarget' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.MoveToGrappleLocatio
// 0x000C (0x000C - 0x0000)
struct GA_QuicktimeInteraction_C_MoveToGrappleLocatio final
{
public:
	struct FVector                                Grapple_Location;                                  // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_MoveToGrappleLocatio) == 0x000004, "Wrong alignment on GA_QuicktimeInteraction_C_MoveToGrappleLocatio");
static_assert(sizeof(GA_QuicktimeInteraction_C_MoveToGrappleLocatio) == 0x00000C, "Wrong size on GA_QuicktimeInteraction_C_MoveToGrappleLocatio");
static_assert(offsetof(GA_QuicktimeInteraction_C_MoveToGrappleLocatio, Grapple_Location) == 0x000000, "Member 'GA_QuicktimeInteraction_C_MoveToGrappleLocatio::Grapple_Location' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.SetMostSuitableMeleeSection
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_SetMostSuitableMeleeSection final
{
public:
	EAnimationMontageIdentifier                   Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_SetMostSuitableMeleeSection");
static_assert(sizeof(GA_QuicktimeInteraction_C_SetMostSuitableMeleeSection) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_SetMostSuitableMeleeSection");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetMostSuitableMeleeSection, Value) == 0x000000, "Member 'GA_QuicktimeInteraction_C_SetMostSuitableMeleeSection::Value' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.updateBossHealthData
// 0x0004 (0x0004 - 0x0000)
struct GA_QuicktimeInteraction_C_UpdateBossHealthData final
{
public:
	float                                         CurrentHealthPercentage;                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GA_QuicktimeInteraction_C_UpdateBossHealthData) == 0x000004, "Wrong alignment on GA_QuicktimeInteraction_C_UpdateBossHealthData");
static_assert(sizeof(GA_QuicktimeInteraction_C_UpdateBossHealthData) == 0x000004, "Wrong size on GA_QuicktimeInteraction_C_UpdateBossHealthData");
static_assert(offsetof(GA_QuicktimeInteraction_C_UpdateBossHealthData, CurrentHealthPercentage) == 0x000000, "Member 'GA_QuicktimeInteraction_C_UpdateBossHealthData::CurrentHealthPercentage' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_QuicktimeInteraction_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_K2_OnEndAbility");
static_assert(sizeof(GA_QuicktimeInteraction_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_QuicktimeInteraction_C_K2_OnEndAbility");
static_assert(offsetof(GA_QuicktimeInteraction_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_QuicktimeInteraction_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.ExecuteUbergraph_GA_QuicktimeInteraction
// 0x0478 (0x0478 - 0x0000)
struct GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInputTriggerTreatedAsHold_ReturnValue; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_3;            // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_4;            // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_5;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	class UAbilityTask_WaitInputActionAll*        CallFunc_WaitInputActionTriggered_ReturnValue;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOFSaveGameDataSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDifficulty                                   CallFunc_GetCurrentDifficulty_ReturnValue;         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDifficulty                                   Temp_byte_Variable;                                // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_3;                             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable;                               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_1;                             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_2;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_3;                             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UGameplayEffect>            Temp_class_Variable_4;                             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x00DC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x00E4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_2;                            // 0x00EC(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_3;                            // 0x00F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable_4;                            // 0x00FC(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_6;            // 0x0104(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitDelay*                 CallFunc_WaitDelay_ReturnValue;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ECemeteryCreatureType                         K2Node_Event_CreatureType;                         // 0x0125(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_126[0x2];                                      // 0x0126(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_CurrentProgress;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MaxProgress;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_StartVector;                          // 0x0130(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_EndVector;                            // 0x013C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_FocusTarget;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Grapple_Location;                     // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAnimationMontageIdentifier                   K2Node_Event_Value;                                // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_currentHealthPercentage;              // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_164[0x4];                                      // 0x0164(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraShakeBase*                       CallFunc_StartCameraShake_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_QuickTimeEvent_C*                  CallFunc_Create_ReturnValue;                       // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaceButtonType                               Temp_byte_Variable_1;                              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0192(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_193[0x5];                                      // 0x0193(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CombatInterface_C> K2Node_DynamicCast_AsBPI_Combat_Interface;         // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFaceButtonType                               Temp_byte_Variable_2;                              // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_QuicktimeInput_C> K2Node_DynamicCast_AsBPI_Quicktime_Input;          // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface; // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1FB[0x1];                                      // 0x01FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_7;            // 0x01FC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0210(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Temp_struct_Variable_5;                            // 0x0218(0x00B0)()
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_CombatInterface_C> K2Node_DynamicCast_AsBPI_Combat_Interface_1;       // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue_1;    // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E3[0x1];                                      // 0x02E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x02E8(0x00B0)()
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaceButtonType                               Temp_byte_Variable_3;                              // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A1[0x3];                                      // 0x03A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Lerp_ReturnValue;                         // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FClamp_ReturnValue_1;                     // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UGameplayEffect>            K2Node_Select_Default_1;                           // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x03C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_1;     // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_1;  // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_2;     // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F1[0x3];                                      // 0x03F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x03F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_2;  // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_3;     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_3;                           // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_411[0x3];                                      // 0x0411(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_4;                           // 0x0414(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x041C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0420(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_Select_Default_5;                           // 0x0430(0x0008)(NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput_3;  // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue_4;     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0449(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44A[0x6];                                      // 0x044A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_QuickTimeEventClamp_C> K2Node_DynamicCast_AsBPI_Quick_Time_Event_Clamp;   // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0469(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46A[0x2];                                      // 0x046A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetQTEClamp_Value;                        // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue_2;                     // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaceButtonType                               Temp_byte_Variable_4;                              // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFaceButtonType                               K2Node_Select_Default_6;                           // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction) == 0x000008, "Wrong alignment on GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction");
static_assert(sizeof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction) == 0x000478, "Wrong size on GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, EntryPoint) == 0x000000, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_bool_Variable) == 0x000004, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetInputTriggerTreatedAsHold_ReturnValue) == 0x000005, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetInputTriggerTreatedAsHold_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_Not_PreBool_ReturnValue) == 0x000006, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_3) == 0x000038, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_4) == 0x000048, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_5) == 0x000058, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_WaitInputActionTriggered_ReturnValue) == 0x000068, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_WaitInputActionTriggered_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000070, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetCurrentDifficulty_ReturnValue) == 0x000078, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetCurrentDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_IsValid_ReturnValue) == 0x000079, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_byte_Variable) == 0x00007A, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_float_Variable) == 0x00007C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_float_Variable_1) == 0x000080, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_float_Variable_2) == 0x000084, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_float_Variable_3) == 0x000088, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_bool_Variable_1) == 0x00008C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Select_Default) == 0x000090, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_int_Variable) == 0x000094, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_bool_Variable_2) == 0x000098, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_int_Variable_1) == 0x00009C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_bool_Variable_3) == 0x0000A0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_int_Variable_2) == 0x0000A4, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_int_Variable_3) == 0x0000A8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_int_Variable_4) == 0x0000AC, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_class_Variable) == 0x0000B0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_class_Variable_1) == 0x0000B8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_class_Variable_2) == 0x0000C0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_class_Variable_3) == 0x0000C8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_class_Variable_4) == 0x0000D0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_class_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_int_Variable_5) == 0x0000D8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_struct_Variable) == 0x0000DC, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_struct_Variable_1) == 0x0000E4, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_struct_Variable_2) == 0x0000EC, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_struct_Variable_3) == 0x0000F4, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_struct_Variable_4) == 0x0000FC, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_6) == 0x000104, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_WaitDelay_ReturnValue) == 0x000118, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_int_Variable_6) == 0x000120, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_IsValid_ReturnValue_1) == 0x000124, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_CreatureType) == 0x000125, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_CreatureType' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_CurrentProgress) == 0x000128, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_CurrentProgress' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_MaxProgress) == 0x00012C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_MaxProgress' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_StartVector) == 0x000130, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_StartVector' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_EndVector) == 0x00013C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_EndVector' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_FocusTarget) == 0x000148, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_FocusTarget' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_Grapple_Location) == 0x000150, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_Grapple_Location' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_Value) == 0x00015C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_currentHealthPercentage) == 0x000160, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_currentHealthPercentage' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000168, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_Add_FloatFloat_ReturnValue) == 0x000170, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_StartCameraShake_ReturnValue) == 0x000178, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_StartCameraShake_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetPlayerController_ReturnValue) == 0x000180, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_Create_ReturnValue) == 0x000188, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_byte_Variable_1) == 0x000190, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_IsValid_ReturnValue_2) == 0x000191, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Event_bWasCancelled) == 0x000192, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000198, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_AsBPI_Combat_Interface) == 0x0001A0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_AsBPI_Combat_Interface' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_bSuccess) == 0x0001B0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_AsOFPlayer_Character) == 0x0001B8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_byte_Variable_2) == 0x0001C1, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_AsBPI_Quicktime_Input) == 0x0001C8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_AsBPI_Quicktime_Input' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_bSuccess_2) == 0x0001D8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_WaitGameplayEvent_ReturnValue) == 0x0001E0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface) == 0x0001E8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_AsGameplay_Tag_Asset_Interface' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_IsValid_ReturnValue_3) == 0x0001F9, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x0001FA, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_7) == 0x0001FC, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000210, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_struct_Variable_5) == 0x000218, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x0002C8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_FTrunc_ReturnValue) == 0x0002CC, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_AsBPI_Combat_Interface_1) == 0x0002D0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_AsBPI_Combat_Interface_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_bSuccess_4) == 0x0002E0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0002E1, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GreaterEqual_FloatFloat_ReturnValue_1) == 0x0002E2, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GreaterEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0002E4, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CustomEvent_Payload) == 0x0002E8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetFloatValue_ReturnValue) == 0x000398, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_FClamp_ReturnValue) == 0x00039C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_byte_Variable_3) == 0x0003A0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_Lerp_ReturnValue) == 0x0003A4, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0003A8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0003AC, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_FClamp_ReturnValue_1) == 0x0003B0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Select_Default_1) == 0x0003B8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x0003C0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x0003C8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_ReturnValue_1) == 0x0003D8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_self_CastInput_1) == 0x0003E0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_ReturnValue_2) == 0x0003F0, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Select_Default_2) == 0x0003F4, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_self_CastInput_2) == 0x0003F8, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_self_CastInput_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_ReturnValue_3) == 0x000408, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Select_Default_3) == 0x00040C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_bool_Has_Been_Initd_Variable) == 0x000410, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Select_Default_4) == 0x000414, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000418, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_Subtract_IntInt_ReturnValue) == 0x00041C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_CreateDelegate_OutputDelegate_8) == 0x000420, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Select_Default_5) == 0x000430, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_self_CastInput_3) == 0x000438, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_self_CastInput_3' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_HasMatchingGameplayTag_ReturnValue_4) == 0x000448, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_HasMatchingGameplayTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_BooleanAND_ReturnValue) == 0x000449, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x000450, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_AsBPI_Quick_Time_Event_Clamp) == 0x000458, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_AsBPI_Quick_Time_Event_Clamp' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_DynamicCast_bSuccess_5) == 0x000468, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_DoesImplementInterface_ReturnValue) == 0x000469, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_GetQTEClamp_Value) == 0x00046C, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_GetQTEClamp_Value' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, CallFunc_FClamp_ReturnValue_2) == 0x000470, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_byte_Variable_4) == 0x000474, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, K2Node_Select_Default_6) == 0x000475, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction, Temp_bool_IsClosed_Variable) == 0x000476, "Member 'GA_QuicktimeInteraction_C_ExecuteUbergraph_GA_QuicktimeInteraction::Temp_bool_IsClosed_Variable' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.setStartBurrowed
// 0x0002 (0x0002 - 0x0000)
struct GA_QuicktimeInteraction_C_SetStartBurrowed final
{
public:
	bool                                          beginBurrowed;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Success;                                           // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_SetStartBurrowed) == 0x000001, "Wrong alignment on GA_QuicktimeInteraction_C_SetStartBurrowed");
static_assert(sizeof(GA_QuicktimeInteraction_C_SetStartBurrowed) == 0x000002, "Wrong size on GA_QuicktimeInteraction_C_SetStartBurrowed");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetStartBurrowed, beginBurrowed) == 0x000000, "Member 'GA_QuicktimeInteraction_C_SetStartBurrowed::beginBurrowed' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetStartBurrowed, Success) == 0x000001, "Member 'GA_QuicktimeInteraction_C_SetStartBurrowed::Success' has a wrong offset!");

// Function GA_QuicktimeInteraction.GA_QuicktimeInteraction_C.setOrderTarget
// 0x0010 (0x0010 - 0x0000)
struct GA_QuicktimeInteraction_C_SetOrderTarget final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_QuicktimeInteraction_C_SetOrderTarget) == 0x000004, "Wrong alignment on GA_QuicktimeInteraction_C_SetOrderTarget");
static_assert(sizeof(GA_QuicktimeInteraction_C_SetOrderTarget) == 0x000010, "Wrong size on GA_QuicktimeInteraction_C_SetOrderTarget");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetOrderTarget, Location) == 0x000000, "Member 'GA_QuicktimeInteraction_C_SetOrderTarget::Location' has a wrong offset!");
static_assert(offsetof(GA_QuicktimeInteraction_C_SetOrderTarget, Success) == 0x00000C, "Member 'GA_QuicktimeInteraction_C_SetOrderTarget::Success' has a wrong offset!");

}

