#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ControlsOption

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WBP_OptionSelectionPage_classes.hpp"
#include "PiecesPlatform_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ControlsOption.WBP_ControlsOption_C
// 0x0070 (0x0348 - 0x02D8)
class UWBP_ControlsOption_C final : public UWBP_OptionSelectionPage_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_ControlsOption_C;               // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Gfx_deco_frame_1;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           OptionVerticalBox;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IncreaseDecrease_C*                WBP_AimSens;                                       // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_IncreaseDecrease_C*                WBP_CameraSens;                                    // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFOptionsSelection_C*              WBP_ControlsLayout;                                // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_InputToggleHoldOption_QTE_C*       WBP_InputToggleHoldOption_QTE;                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFCheckBox_C*                      WBP_InvertedCamera;                                // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFCheckBox_C*                      WBP_InvertedHorizontal;                            // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFOptionsSelection_C*              WBP_KeyBindingPC_1;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SprintToggleHoldOption_GamePad_C*  WBP_SprintToggleHoldOption_GamePad;                // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_SprintToggleHoldOption_KBM_C*      WBP_SprintToggleHoldOption_KBM;                    // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UPiecesInputMappingContext*             Input;                                             // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ApplySettingsTimerHandle;                          // 0x0340(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ControlsOption(int32 EntryPoint);
	void OnResetPressed();
	void PostInputApplySettings();
	void BndEvt__WBP_GamePlayOption_WBP_InvertedCamera_K2Node_ComponentBoundEvent_4_OnCheckBoxChanged__DelegateSignature(bool CheckBoxChanged);
	void BndEvt__WBP_GamePlayOption_WBP_InvertedHorizontal_K2Node_ComponentBoundEvent_10_OnCheckBoxChanged__DelegateSignature(bool CheckBoxChanged);
	void BndEvt__WBP_ControlsOption_WBP_CameraSens_K2Node_ComponentBoundEvent_5_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_ControlsOption_WBP_CameraSens_K2Node_ComponentBoundEvent_4_OnDecreaseHandler__DelegateSignature();
	void BndEvt__WBP_ControlsOption_WBP_AimSens_K2Node_ComponentBoundEvent_3_OnDecreaseHandler__DelegateSignature();
	void BndEvt__WBP_ControlsOption_WBP_AimSens_K2Node_ComponentBoundEvent_2_OnIncreaseHandler__DelegateSignature();
	void OnWidgetHover(class UWidget* Widget);
	void OnInitialized();
	void BndEvt__WBP_ControlsOption_WBP_KeyBindingPC_1_K2Node_ComponentBoundEvent_1_OnButtonPressed__DelegateSignature();
	void BndEvt__WBP_ControlsOption_WBP_KeyBindingGamepad_K2Node_ComponentBoundEvent_0_OnButtonPressed__DelegateSignature();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void OnSuccess_8A13ABC0432147666D02208C293ABF12();
	void OnFailed_8A13ABC0432147666D02208C293ABF12();
	void GetWidgets(TArray<class UWidget*>* Widgets);
	void SetFmodVolume(bool Adding, float& VolumeSettingFloat, class FName ParameterName, class UWBP_IncreaseDecrease_C*& IncreaseDecreaseWidget);
	void CreateWidget(class UClass* InWidgetClass, class UUserWidget** OutWidget);
	void RemoveWidgetFrom(class UWidget* Widget);
	void SetHoverDescriptionText(class UObject* Object);
	void UpdateUI();
	void UpdateSensOption();
	void DelayedApplySettings();
	void GetGamepadWidgetClass(class UClass** WidgetClass);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ControlsOption_C">();
	}
	static class UWBP_ControlsOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ControlsOption_C>();
	}
};
static_assert(alignof(UWBP_ControlsOption_C) == 0x000008, "Wrong alignment on UWBP_ControlsOption_C");
static_assert(sizeof(UWBP_ControlsOption_C) == 0x000348, "Wrong size on UWBP_ControlsOption_C");
static_assert(offsetof(UWBP_ControlsOption_C, UberGraphFrame_WBP_ControlsOption_C) == 0x0002D8, "Member 'UWBP_ControlsOption_C::UberGraphFrame_WBP_ControlsOption_C' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, Gfx_deco_frame_1) == 0x0002E0, "Member 'UWBP_ControlsOption_C::Gfx_deco_frame_1' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, OptionVerticalBox) == 0x0002E8, "Member 'UWBP_ControlsOption_C::OptionVerticalBox' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_AimSens) == 0x0002F0, "Member 'UWBP_ControlsOption_C::WBP_AimSens' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_CameraSens) == 0x0002F8, "Member 'UWBP_ControlsOption_C::WBP_CameraSens' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_ControlsLayout) == 0x000300, "Member 'UWBP_ControlsOption_C::WBP_ControlsLayout' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_InputToggleHoldOption_QTE) == 0x000308, "Member 'UWBP_ControlsOption_C::WBP_InputToggleHoldOption_QTE' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_InvertedCamera) == 0x000310, "Member 'UWBP_ControlsOption_C::WBP_InvertedCamera' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_InvertedHorizontal) == 0x000318, "Member 'UWBP_ControlsOption_C::WBP_InvertedHorizontal' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_KeyBindingPC_1) == 0x000320, "Member 'UWBP_ControlsOption_C::WBP_KeyBindingPC_1' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_SprintToggleHoldOption_GamePad) == 0x000328, "Member 'UWBP_ControlsOption_C::WBP_SprintToggleHoldOption_GamePad' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, WBP_SprintToggleHoldOption_KBM) == 0x000330, "Member 'UWBP_ControlsOption_C::WBP_SprintToggleHoldOption_KBM' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, Input) == 0x000338, "Member 'UWBP_ControlsOption_C::Input' has a wrong offset!");
static_assert(offsetof(UWBP_ControlsOption_C, ApplySettingsTimerHandle) == 0x000340, "Member 'UWBP_ControlsOption_C::ApplySettingsTimerHandle' has a wrong offset!");

}

