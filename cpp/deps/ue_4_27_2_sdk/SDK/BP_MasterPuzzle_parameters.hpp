#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MasterPuzzle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "EPuzzleMovementStates_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "EOtherworldPathwayStage_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.ExecuteUbergraph_BP_MasterPuzzle
// 0x0AD0 (0x0AD0 - 0x0000)
struct BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMoveComponentAction                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSolved_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsSolved_ReturnValue_1;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x000C(0x0010)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_InputActionValueToAxis1D_ReturnValue; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_1;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_2;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputDebugKeyEvent_Key;                     // 0x0038(0x0018)(HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_2;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0054(0x0010)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_3;                             // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_4;                             // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_5;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_6;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPuzzleMovementStates                         CallFunc_GetState_State;                           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_PreviousItemIndex;      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_SelectedItemIndex;      // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHeldItemIndex_ReturnValue;             // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetHeldItem_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllPiecesAdded_bAllPiecesAdded;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetHeldItem_ReturnValue_1;                // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_2;     // 0x00C0(0x0010)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_2;     // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_2;   // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndexOfItem_SlotIndex;             // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSlotTransformInIndex_ReturnValue;      // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllPiecesAdded_bAllPiecesAdded_1;         // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_1;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_IsHoldingItem;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_ComponentBoundEvent_CurrentSelectedIndex;   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_PreviousSelectedIndex;  // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_NavigationSuccessful;   // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_2;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_ExitingPuzzle;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              CallFunc_Array_Get_Item;                           // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_3;                // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_CustomEvent_Added_Tile;                     // 0x0180(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_AllPiecesAdded_bAllPiecesAdded_2;         // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddRelativeLocation_SweepHitResult;    // 0x018C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_214[0xC];                                      // 0x0214(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0220(0x0030)(IsPlainOldData, NoDestructor)
	float                                         Temp_float_Variable_7;                             // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_8;                             // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_9;                             // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x025C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0268(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0274(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_4;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_5;                // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation; // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation; // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation; // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation_1; // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation_1; // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation_1; // 0x02D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation_2; // 0x02E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation_2; // 0x02EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation_2; // 0x02F8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_3;     // 0x0304(0x0010)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_3;     // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_3;   // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPuzzleMovementStates                         CallFunc_GetState_State_1;                         // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x031D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31E[0x2];                                      // 0x031E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1; // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_326[0x2];                                      // 0x0326(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0328(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x032C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x032D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32E[0x2];                                      // 0x032E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0330(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x033C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0348(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0354(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0360(0x0030)(IsPlainOldData, NoDestructor)
	class ACharacter*                             CallFunc_GetInteractingChar_ReturnValue;           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0398(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x03A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x03B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03C0(0x0030)(IsPlainOldData, NoDestructor)
	class ACharacter*                             CallFunc_GetInteractingChar_ReturnValue_1;         // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_Talisman_IP_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x040C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0418(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_GameplayTag;                    // 0x0424(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Talisman_IP_C*                      K2Node_CustomEvent_TalismanActor;                  // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x3];                                      // 0x0439(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_10;                            // 0x043C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_float_Variable_11;                            // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllPiecesAdded_bAllPiecesAdded_3;         // 0x0444(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPuzzleMovementStates                         CallFunc_GetState_State_2;                         // 0x0445(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_446[0x2];                                      // 0x0446(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_float_Variable_12;                            // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x044C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44D[0x3];                                      // 0x044D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_4;     // 0x0450(0x0010)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_4;     // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_4;   // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_469[0x3];                                      // 0x0469(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2; // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0474(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_CameraPanTime;                  // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_OverTime;                       // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_3;       // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_496[0x2];                                      // 0x0496(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x0498(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMoveComponentAction                          Temp_byte_Variable_3;                              // 0x04BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_4;                              // 0x04BE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_5;                              // 0x04BF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_6;                              // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APuzzleActor*                           K2Node_CustomEvent_PuzzleActor;                    // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerController*                    K2Node_CustomEvent_InteractingController;          // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_4;       // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D9[0x3];                                      // 0x04D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult; // 0x04DC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	TDelegate<void(class APuzzleActor* PuzzleActor, class AOFPlayerController* InteractingController)> K2Node_CreateDelegate_OutputDelegate;              // 0x0564(0x0010)(ZeroConstructor, NoDestructor)
	EPuzzleMovementStates                         CallFunc_GetState_State_3;                         // 0x0574(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_575[0x3];                                      // 0x0575(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& GameplayTag, class ABP_Talisman_IP_C* TalismanActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0578(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0589(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x058A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x058B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_58D[0x3];                                      // 0x058D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerController*                    K2Node_Event_InteractingPlayerController;          // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_ComponentBoundEvent_InteractionCharacter;   // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddItemToInventory_ReturnValue;           // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x05A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5AA[0x2];                                      // 0x05AA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeNewRotation_ReturnValue;              // 0x05AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPuzzleMovementStates                         CallFunc_GetState_State_4;                         // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x05BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5BC[0x4];                                      // 0x05BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_6;                // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AllPiecesAdded_bAllPiecesAdded_4;         // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_All_Items_In_Desired_Positions_ReturnValue; // 0x05C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5CA[0x2];                                      // 0x05CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x05CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x05DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x05E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x05E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x05F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult;       // 0x05FC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_1;     // 0x0684(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x070C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddLocalRotation_SweepHitResult_2;     // 0x0718(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x07A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue_1;                      // 0x07AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x07B8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0840(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_RLerp_ReturnValue_2;                      // 0x08C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMoveComponentAction                          Temp_byte_Variable_7;                              // 0x08D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D5[0x3];                                      // 0x08D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x08D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue_7;                // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_968[0x8];                                      // 0x0968(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0970(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x09A0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EMoveComponentAction                          Temp_byte_Variable_8;                              // 0x0A28(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A29[0x3];                                      // 0x0A29(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_ActionValue;                    // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0A31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanRotateSelectedPiece_ReturnValue;       // 0x0A32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A33[0x1];                                      // 0x0A33(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectedItemIndex_ReturnValue;         // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetHeldItem_ReturnValue_2;                // 0x0A38(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSlotTransformInIndex_ReturnValue_1;    // 0x0A40(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0A70(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0AA0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0AAC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0AB8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMoveComponentAction                          Temp_byte_Variable_9;                              // 0x0AC4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0AC5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0AC6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMoveComponentAction                          Temp_byte_Variable_10;                             // 0x0AC7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle) == 0x000010, "Wrong alignment on BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle");
static_assert(sizeof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle) == 0x000AD0, "Wrong size on BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, EntryPoint) == 0x000000, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_bool_Variable) == 0x000004, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable) == 0x000005, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_1) == 0x000006, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetIsSolved_ReturnValue) == 0x000007, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetIsSolved_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetIsSolved_ReturnValue_1) == 0x000008, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetIsSolved_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x00000C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x00001C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x000020, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue) == 0x000024, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable) == 0x000028, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_1) == 0x00002C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_2) == 0x000030, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_InputDebugKeyEvent_Key) == 0x000038, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_InputDebugKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_2) == 0x000050, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000054, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000064, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x000068, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x00006C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_3) == 0x000070, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_4) == 0x000074, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_bool_Variable_1) == 0x000078, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_5) == 0x000080, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_6) == 0x000084, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetState_State) == 0x000088, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetState_State' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_bool_IsClosed_Variable) == 0x000089, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00008A, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_bool_Has_Been_Initd_Variable) == 0x00008B, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_ComponentBoundEvent_PreviousItemIndex) == 0x000098, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_ComponentBoundEvent_PreviousItemIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_ComponentBoundEvent_SelectedItemIndex) == 0x00009C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_ComponentBoundEvent_SelectedItemIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetHeldItemIndex_ReturnValue) == 0x0000A0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetHeldItemIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetHeldItem_ReturnValue) == 0x0000A8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetHeldItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_AllPiecesAdded_bAllPiecesAdded) == 0x0000B0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_AllPiecesAdded_bAllPiecesAdded' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetHeldItem_ReturnValue_1) == 0x0000B8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetHeldItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ActionValue_2) == 0x0000C0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ElapsedTime_2) == 0x0000D0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_TriggeredTime_2) == 0x0000D4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x0000D8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetSlotIndexOfItem_SlotIndex) == 0x0000DC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetSlotIndexOfItem_SlotIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetSlotTransformInIndex_ReturnValue) == 0x0000E0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetSlotTransformInIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Location) == 0x000110, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Rotation) == 0x00011C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_AllPiecesAdded_bAllPiecesAdded_1) == 0x000134, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_AllPiecesAdded_bAllPiecesAdded_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue) == 0x000138, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue_1) == 0x000140, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_ComponentBoundEvent_IsHoldingItem) == 0x000148, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_ComponentBoundEvent_IsHoldingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_ComponentBoundEvent_CurrentSelectedIndex) == 0x00014C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_ComponentBoundEvent_CurrentSelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_ComponentBoundEvent_PreviousSelectedIndex) == 0x000150, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_ComponentBoundEvent_PreviousSelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_ComponentBoundEvent_NavigationSuccessful) == 0x000154, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_ComponentBoundEvent_NavigationSuccessful' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue_2) == 0x000158, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanAND_ReturnValue) == 0x000160, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_ExitingPuzzle) == 0x000161, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_ExitingPuzzle' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Array_Get_Item) == 0x000168, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Array_Length_ReturnValue) == 0x000170, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Less_IntInt_ReturnValue) == 0x000174, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue_3) == 0x000178, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_Added_Tile) == 0x000180, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_Added_Tile' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_AllPiecesAdded_bAllPiecesAdded_2) == 0x000188, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_AllPiecesAdded_bAllPiecesAdded_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AddRelativeLocation_SweepHitResult) == 0x00018C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AddRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetRelativeTransform_ReturnValue) == 0x000220, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_7) == 0x000250, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_8) == 0x000254, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_9) == 0x000258, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Location_1) == 0x00025C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Rotation_1) == 0x000268, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Scale_1) == 0x000274, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue_4) == 0x000280, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue_5) == 0x000288, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_Event_DeltaSeconds) == 0x000290, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000294, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation) == 0x000298, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation) == 0x0002A4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation) == 0x0002B0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation_1) == 0x0002BC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation_1) == 0x0002C8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation_1) == 0x0002D4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation_2) == 0x0002E0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Large_Hand_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation_2) == 0x0002EC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Medium_Hand_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation_2) == 0x0002F8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetClockHandsCombinationRotation_Small_Hand_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ActionValue_3) == 0x000304, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ElapsedTime_3) == 0x000314, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ElapsedTime_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_TriggeredTime_3) == 0x000318, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_TriggeredTime_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetState_State_1) == 0x00031C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetState_State_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00031D, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1) == 0x000320, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanOR_ReturnValue) == 0x000324, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Not_PreBool_ReturnValue_1) == 0x000325, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Array_Length_ReturnValue_1) == 0x000328, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanAND_ReturnValue_1) == 0x00032C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Greater_IntInt_ReturnValue) == 0x00032D, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Location_2) == 0x000330, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Rotation_2) == 0x00033C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Scale_2) == 0x000348, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Add_VectorVector_ReturnValue) == 0x000354, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000360, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetInteractingChar_ReturnValue) == 0x000390, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetInteractingChar_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Location_3) == 0x000398, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Rotation_3) == 0x0003A4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Scale_3) == 0x0003B0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_MakeTransform_ReturnValue) == 0x0003C0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetInteractingChar_ReturnValue_1) == 0x0003F0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetInteractingChar_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003F8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_FinishSpawningActor_ReturnValue) == 0x000400, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000408, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Add_VectorVector_ReturnValue_1) == 0x00040C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_ComposeRotators_ReturnValue) == 0x000418, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_GameplayTag) == 0x000424, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_GameplayTag' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_TalismanActor) == 0x000430, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_TalismanActor' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000438, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_10) == 0x00043C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_10' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_11) == 0x000440, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_11' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_AllPiecesAdded_bAllPiecesAdded_3) == 0x000444, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_AllPiecesAdded_bAllPiecesAdded_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetState_State_2) == 0x000445, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetState_State_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_float_Variable_12) == 0x000448, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_float_Variable_12' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00044C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ActionValue_4) == 0x000450, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ActionValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_ElapsedTime_4) == 0x000460, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_ElapsedTime_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_EnhancedInputActionEvent_TriggeredTime_4) == 0x000464, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_EnhancedInputActionEvent_TriggeredTime_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanOR_ReturnValue_1) == 0x000468, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2) == 0x00046C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Conv_InputActionValueToAxis1D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000470, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000474, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_CameraPanTime) == 0x000480, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_CameraPanTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetAttachParent_ReturnValue) == 0x000488, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_OverTime) == 0x000490, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_OverTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x000494, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AttachToComponent_ReturnValue_3) == 0x000495, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AttachToComponent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Location_4) == 0x000498, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Rotation_4) == 0x0004A4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Scale_4) == 0x0004B0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanOR_ReturnValue_2) == 0x0004BC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_3) == 0x0004BD, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_4) == 0x0004BE, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_5) == 0x0004BF, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_6) == 0x0004C0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_PuzzleActor) == 0x0004C8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_PuzzleActor' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_InteractingController) == 0x0004D0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_InteractingController' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AttachToComponent_ReturnValue_4) == 0x0004D8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AttachToComponent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult) == 0x0004DC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_SetRelativeLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CreateDelegate_OutputDelegate) == 0x000564, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetState_State_3) == 0x000574, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetState_State_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CreateDelegate_OutputDelegate_1) == 0x000578, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000588, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanOR_ReturnValue_3) == 0x000589, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Not_PreBool_ReturnValue_2) == 0x00058A, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanAND_ReturnValue_2) == 0x00058B, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_IsValid_ReturnValue) == 0x00058C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_Event_InteractingPlayerController) == 0x000590, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_Event_InteractingPlayerController' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_ComponentBoundEvent_InteractionCharacter) == 0x000598, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_ComponentBoundEvent_InteractionCharacter' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetPlayerController_ReturnValue) == 0x0005A0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_AddItemToInventory_ReturnValue) == 0x0005A8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_AddItemToInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Not_PreBool_ReturnValue_3) == 0x0005A9, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_MakeNewRotation_ReturnValue) == 0x0005AC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_MakeNewRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanAND_ReturnValue_3) == 0x0005B8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetState_State_4) == 0x0005B9, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetState_State_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_SwitchEnum_CmpSuccess) == 0x0005BA, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_SwitchEnum_CmpSuccess_1) == 0x0005BB, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue_6) == 0x0005C0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_AllPiecesAdded_bAllPiecesAdded_4) == 0x0005C8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_AllPiecesAdded_bAllPiecesAdded_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_All_Items_In_Desired_Positions_ReturnValue) == 0x0005C9, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_All_Items_In_Desired_Positions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0005CC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0005D8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0005DC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x0005E0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_MakeRotator_ReturnValue) == 0x0005E4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_MakeRotator_ReturnValue_1) == 0x0005F0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AddLocalRotation_SweepHitResult) == 0x0005FC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AddLocalRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AddLocalRotation_SweepHitResult_1) == 0x000684, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AddLocalRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_MakeRotator_ReturnValue_2) == 0x00070C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_AddLocalRotation_SweepHitResult_2) == 0x000718, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_AddLocalRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_RLerp_ReturnValue) == 0x0007A0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_RLerp_ReturnValue_1) == 0x0007AC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_RLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x0007B8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000840, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_RLerp_ReturnValue_2) == 0x0008C8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_RLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_7) == 0x0008D4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x0008D8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_PlayEvent2D_ReturnValue_7) == 0x000960, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_PlayEvent2D_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_TLerp_ReturnValue) == 0x000970, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x0009A0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_8) == 0x000A28, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, K2Node_CustomEvent_ActionValue) == 0x000A2C, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::K2Node_CustomEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Less_FloatFloat_ReturnValue) == 0x000A30, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000A31, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_CanRotateSelectedPiece_ReturnValue) == 0x000A32, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_CanRotateSelectedPiece_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetSelectedItemIndex_ReturnValue) == 0x000A34, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetSelectedItemIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetHeldItem_ReturnValue_2) == 0x000A38, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetHeldItem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_GetSlotTransformInIndex_ReturnValue_1) == 0x000A40, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_GetSlotTransformInIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_ComposeTransforms_ReturnValue) == 0x000A70, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Location_5) == 0x000AA0, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Rotation_5) == 0x000AAC, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BreakTransform_Scale_5) == 0x000AB8, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_9) == 0x000AC4, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanOR_ReturnValue_4) == 0x000AC5, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, CallFunc_BooleanAND_ReturnValue_4) == 0x000AC6, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle, Temp_byte_Variable_10) == 0x000AC7, "Member 'BP_MasterPuzzle_C_ExecuteUbergraph_BP_MasterPuzzle::Temp_byte_Variable_10' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Rotate Tile
// 0x0004 (0x0004 - 0x0000)
struct BP_MasterPuzzle_C_Rotate_Tile final
{
public:
	float                                         ActionValue;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_Rotate_Tile) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_Rotate_Tile");
static_assert(sizeof(BP_MasterPuzzle_C_Rotate_Tile) == 0x000004, "Wrong size on BP_MasterPuzzle_C_Rotate_Tile");
static_assert(offsetof(BP_MasterPuzzle_C_Rotate_Tile, ActionValue) == 0x000000, "Member 'BP_MasterPuzzle_C_Rotate_Tile::ActionValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterPuzzle_C_BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature");
static_assert(sizeof(BP_MasterPuzzle_C_BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature) == 0x000008, "Wrong size on BP_MasterPuzzle_C_BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature");
static_assert(offsetof(BP_MasterPuzzle_C_BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature, InteractionCharacter) == 0x000000, "Member 'BP_MasterPuzzle_C_BndEvt__BP_MasterPuzzle_InteractionComponentFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature::InteractionCharacter' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SolvingPuzzle
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterPuzzle_C_SolvingPuzzle final
{
public:
	class AOFPlayerController*                    InteractingPlayerController;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_SolvingPuzzle) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_SolvingPuzzle");
static_assert(sizeof(BP_MasterPuzzle_C_SolvingPuzzle) == 0x000008, "Wrong size on BP_MasterPuzzle_C_SolvingPuzzle");
static_assert(offsetof(BP_MasterPuzzle_C_SolvingPuzzle, InteractingPlayerController) == 0x000000, "Member 'BP_MasterPuzzle_C_SolvingPuzzle::InteractingPlayerController' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.OnExitPuzzle
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_OnExitPuzzle final
{
public:
	class APuzzleActor*                           PuzzleActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerController*                    InteractingController;                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_OnExitPuzzle) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_OnExitPuzzle");
static_assert(sizeof(BP_MasterPuzzle_C_OnExitPuzzle) == 0x000010, "Wrong size on BP_MasterPuzzle_C_OnExitPuzzle");
static_assert(offsetof(BP_MasterPuzzle_C_OnExitPuzzle, PuzzleActor) == 0x000000, "Member 'BP_MasterPuzzle_C_OnExitPuzzle::PuzzleActor' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_OnExitPuzzle, InteractingController) == 0x000008, "Member 'BP_MasterPuzzle_C_OnExitPuzzle::InteractingController' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Move Camera to Original Position
// 0x0004 (0x0004 - 0x0000)
struct BP_MasterPuzzle_C_Move_Camera_to_Original_Position final
{
public:
	float                                         OverTime;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_Move_Camera_to_Original_Position) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_Move_Camera_to_Original_Position");
static_assert(sizeof(BP_MasterPuzzle_C_Move_Camera_to_Original_Position) == 0x000004, "Wrong size on BP_MasterPuzzle_C_Move_Camera_to_Original_Position");
static_assert(offsetof(BP_MasterPuzzle_C_Move_Camera_to_Original_Position, OverTime) == 0x000000, "Member 'BP_MasterPuzzle_C_Move_Camera_to_Original_Position::OverTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.MoveCameraToClock
// 0x0004 (0x0004 - 0x0000)
struct BP_MasterPuzzle_C_MoveCameraToClock final
{
public:
	float                                         CameraPanTime;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_MoveCameraToClock) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_MoveCameraToClock");
static_assert(sizeof(BP_MasterPuzzle_C_MoveCameraToClock) == 0x000004, "Wrong size on BP_MasterPuzzle_C_MoveCameraToClock");
static_assert(offsetof(BP_MasterPuzzle_C_MoveCameraToClock, CameraPanTime) == 0x000000, "Member 'BP_MasterPuzzle_C_MoveCameraToClock::CameraPanTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.OnValidCombinationEntered
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_OnValidCombinationEntered final
{
public:
	struct FGameplayTag                           GameplayTag;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	class ABP_Talisman_IP_C*                      TalismanActor;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_OnValidCombinationEntered) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_OnValidCombinationEntered");
static_assert(sizeof(BP_MasterPuzzle_C_OnValidCombinationEntered) == 0x000010, "Wrong size on BP_MasterPuzzle_C_OnValidCombinationEntered");
static_assert(offsetof(BP_MasterPuzzle_C_OnValidCombinationEntered, GameplayTag) == 0x000000, "Member 'BP_MasterPuzzle_C_OnValidCombinationEntered::GameplayTag' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_OnValidCombinationEntered, TalismanActor) == 0x000008, "Member 'BP_MasterPuzzle_C_OnValidCombinationEntered::TalismanActor' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_MasterPuzzle_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_ReceiveTick");
static_assert(sizeof(BP_MasterPuzzle_C_ReceiveTick) == 0x000004, "Wrong size on BP_MasterPuzzle_C_ReceiveTick");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_MasterPuzzle_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.AnimateAddedTiles
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterPuzzle_C_AnimateAddedTiles final
{
public:
	class USceneComponent*                        Added_Tile;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_AnimateAddedTiles) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_AnimateAddedTiles");
static_assert(sizeof(BP_MasterPuzzle_C_AnimateAddedTiles) == 0x000008, "Wrong size on BP_MasterPuzzle_C_AnimateAddedTiles");
static_assert(offsetof(BP_MasterPuzzle_C_AnimateAddedTiles, Added_Tile) == 0x000000, "Member 'BP_MasterPuzzle_C_AnimateAddedTiles::Added_Tile' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.PutBackTile
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterPuzzle_C_PutBackTile final
{
public:
	bool                                          Param_ExitingPuzzle_0;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_PutBackTile) == 0x000001, "Wrong alignment on BP_MasterPuzzle_C_PutBackTile");
static_assert(sizeof(BP_MasterPuzzle_C_PutBackTile) == 0x000001, "Wrong size on BP_MasterPuzzle_C_PutBackTile");
static_assert(offsetof(BP_MasterPuzzle_C_PutBackTile, Param_ExitingPuzzle_0) == 0x000000, "Member 'BP_MasterPuzzle_C_PutBackTile::Param_ExitingPuzzle_0' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature final
{
public:
	bool                                          IsHoldingItem;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentSelectedIndex;                              // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PreviousSelectedIndex;                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NavigationSuccessful;                              // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature");
static_assert(sizeof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature) == 0x000010, "Wrong size on BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature");
static_assert(offsetof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature, IsHoldingItem) == 0x000000, "Member 'BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature::IsHoldingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature, CurrentSelectedIndex) == 0x000004, "Member 'BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature::CurrentSelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature, PreviousSelectedIndex) == 0x000008, "Member 'BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature::PreviousSelectedIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature, NavigationSuccessful) == 0x00000C, "Member 'BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_1_OnNavigated__DelegateSignature::NavigationSuccessful' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature final
{
public:
	int32                                         PreviousItemIndex;                                 // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SelectedItemIndex;                                 // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature");
static_assert(sizeof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature) == 0x000008, "Wrong size on BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature");
static_assert(offsetof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature, PreviousItemIndex) == 0x000000, "Member 'BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature::PreviousItemIndex' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature, SelectedItemIndex) == 0x000004, "Member 'BP_MasterPuzzle_C_BndEvt__BP_KeyholeBox_PuzzleSelectionComponent_K2Node_ComponentBoundEvent_0_OnSwapItem__DelegateSignature::SelectedItemIndex' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0) == 0x000018, "Wrong size on BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000010, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000014, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_Interact_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.InpActEvt_T_K2Node_InputDebugKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0");
static_assert(sizeof(BP_MasterPuzzle_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0) == 0x000018, "Wrong size on BP_MasterPuzzle_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0, Key) == 0x000000, "Member 'BP_MasterPuzzle_C_InpActEvt_T_K2Node_InputDebugKeyEvent_0::Key' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1) == 0x000018, "Wrong size on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000010, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000014, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Rotate_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2");
static_assert(sizeof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2) == 0x000018, "Wrong size on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2, ElapsedTime) == 0x000010, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2, TriggeredTime) == 0x000014, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Cancel_K2Node_EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3");
static_assert(sizeof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3) == 0x000018, "Wrong size on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3, ActionValue) == 0x000000, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3, ElapsedTime) == 0x000010, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3, TriggeredTime) == 0x000014, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_3::TriggeredTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4");
static_assert(sizeof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4) == 0x000018, "Wrong size on BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4, ActionValue) == 0x000000, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4::ActionValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4, ElapsedTime) == 0x000010, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4::ElapsedTime' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4, TriggeredTime) == 0x000014, "Member 'BP_MasterPuzzle_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_4::TriggeredTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.ReceiveBeginPlay
// 0x00A0 (0x00A0 - 0x0000)
struct BP_MasterPuzzle_C_ReceiveBeginPlay final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UFlowComponent* FlowComponent, struct FGameplayTag& NotifyTag)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_GetIsSolved_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array;                     // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemData*>                      CallFunc_Map_Keys_Keys;                            // 0x0058(0x0010)(ReferenceParm)
	class UItemData*                              CallFunc_Array_Get_Item_1;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            CallFunc_GetMesh_ReturnValue;                      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array_1;                   // 0x0088(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_ReceiveBeginPlay) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_ReceiveBeginPlay");
static_assert(sizeof(BP_MasterPuzzle_C_ReceiveBeginPlay) == 0x0000A0, "Wrong size on BP_MasterPuzzle_C_ReceiveBeginPlay");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_GetIsSolved_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_GetIsSolved_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_GetPuzzleItems_Array) == 0x000028, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_GetPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Array_Length_ReturnValue) == 0x00004C, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Map_Keys_Keys) == 0x000058, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Array_Get_Item_1) == 0x000068, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Array_Length_ReturnValue_1) == 0x000070, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_GetMesh_ReturnValue) == 0x000078, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_GetMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Less_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000081, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Map_Find_Value) == 0x000082, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_Map_Find_ReturnValue) == 0x000083, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_GetPuzzleItems_Array_1) == 0x000088, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_GetPuzzleItems_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ReceiveBeginPlay, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'BP_MasterPuzzle_C_ReceiveBeginPlay::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.IsItem In Desired Position
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterPuzzle_C_IsItem_In_Desired_Position final
{
public:
	class UObject*                                Item;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Desired_Index;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetItemInIndex_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_IsItem_In_Desired_Position) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_IsItem_In_Desired_Position");
static_assert(sizeof(BP_MasterPuzzle_C_IsItem_In_Desired_Position) == 0x000030, "Wrong size on BP_MasterPuzzle_C_IsItem_In_Desired_Position");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, Item) == 0x000000, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, Desired_Index) == 0x000008, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::Desired_Index' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, ReturnValue) == 0x00000C, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, CallFunc_GetItemInIndex_ReturnValue) == 0x000010, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::CallFunc_GetItemInIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, CallFunc_Round_ReturnValue) == 0x000028, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_IsItem_In_Desired_Position, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MasterPuzzle_C_IsItem_In_Desired_Position::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.All Items In Desired Positions
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterPuzzle_C_All_Items_In_Desired_Positions final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_GetDesiredPuzzleItems_Array;              // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsItem_In_Desired_Position_ReturnValue;   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_All_Items_In_Desired_Positions");
static_assert(sizeof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions) == 0x000030, "Wrong size on BP_MasterPuzzle_C_All_Items_In_Desired_Positions");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, CallFunc_GetDesiredPuzzleItems_Array) == 0x000010, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::CallFunc_GetDesiredPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, CallFunc_IsItem_In_Desired_Position_ReturnValue) == 0x00002C, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::CallFunc_IsItem_In_Desired_Position_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_All_Items_In_Desired_Positions, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'BP_MasterPuzzle_C_All_Items_In_Desired_Positions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Set Solved Tile Positions
// 0x0198 (0x0198 - 0x0000)
struct BP_MasterPuzzle_C_Set_Solved_Tile_Positions final
{
public:
	TArray<struct FVector>                        TilePlacements;                                    // 0x0000(0x0010)(Edit, BlueprintVisible)
	struct FVector                                Pos2;                                              // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Pos0;                                              // 0x001C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array;                     // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           CallFunc_GetDesiredPuzzleItems_Array;              // 0x0048(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_All_Items_In_Desired_Positions_ReturnValue; // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB[0x1];                                       // 0x00FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0100(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_Set_Solved_Tile_Positions");
static_assert(sizeof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions) == 0x000198, "Wrong size on BP_MasterPuzzle_C_Set_Solved_Tile_Positions");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, TilePlacements) == 0x000000, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::TilePlacements' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, Pos2) == 0x000010, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::Pos2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, Pos0) == 0x00001C, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::Pos0' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, Temp_int_Array_Index_Variable_1) == 0x000034, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_GetPuzzleItems_Array) == 0x000038, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_GetPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_GetDesiredPuzzleItems_Array) == 0x000048, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_GetDesiredPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Array_Get_Item) == 0x000058, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Array_Get_Item_1) == 0x000060, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000068, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Array_Length_ReturnValue_1) == 0x0000F4, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_All_Items_In_Desired_Positions_ReturnValue) == 0x0000F8, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_All_Items_In_Desired_Positions_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Less_IntInt_ReturnValue) == 0x0000F9, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Not_PreBool_ReturnValue) == 0x0000FA, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, Temp_int_Loop_Counter_Variable_1) == 0x0000FC, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000100, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Less_IntInt_ReturnValue_1) == 0x000188, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Add_IntInt_ReturnValue_1) == 0x00018C, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Set_Solved_Tile_Positions, CallFunc_Array_Add_ReturnValue) == 0x000190, "Member 'BP_MasterPuzzle_C_Set_Solved_Tile_Positions::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Interact With Tile
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterPuzzle_C_Interact_With_Tile final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsHoldingItem_IsHoldingItem;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetHeldItem_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetSelectedItem_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_Interact_With_Tile) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_Interact_With_Tile");
static_assert(sizeof(BP_MasterPuzzle_C_Interact_With_Tile) == 0x000020, "Wrong size on BP_MasterPuzzle_C_Interact_With_Tile");
static_assert(offsetof(BP_MasterPuzzle_C_Interact_With_Tile, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_Interact_With_Tile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Interact_With_Tile, CallFunc_GetIsHoldingItem_IsHoldingItem) == 0x000001, "Member 'BP_MasterPuzzle_C_Interact_With_Tile::CallFunc_GetIsHoldingItem_IsHoldingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Interact_With_Tile, CallFunc_GetHeldItem_ReturnValue) == 0x000008, "Member 'BP_MasterPuzzle_C_Interact_With_Tile::CallFunc_GetHeldItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Interact_With_Tile, CallFunc_GetSelectedItem_ReturnValue) == 0x000010, "Member 'BP_MasterPuzzle_C_Interact_With_Tile::CallFunc_GetSelectedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Interact_With_Tile, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_Interact_With_Tile::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SetItemMesh
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterPuzzle_C_SetItemMesh final
{
public:
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_GetMesh_ReturnValue;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_SetItemMesh) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_SetItemMesh");
static_assert(sizeof(BP_MasterPuzzle_C_SetItemMesh) == 0x000020, "Wrong size on BP_MasterPuzzle_C_SetItemMesh");
static_assert(offsetof(BP_MasterPuzzle_C_SetItemMesh, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_SetItemMesh::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetItemMesh, CallFunc_Array_Get_Item) == 0x000008, "Member 'BP_MasterPuzzle_C_SetItemMesh::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetItemMesh, CallFunc_GetMesh_ReturnValue) == 0x000010, "Member 'BP_MasterPuzzle_C_SetItemMesh::CallFunc_GetMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetItemMesh, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_SetItemMesh::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetItemMesh, CallFunc_SetStaticMesh_ReturnValue) == 0x000019, "Member 'BP_MasterPuzzle_C_SetItemMesh::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SetAdditionalTilesAsHidden
// 0x00C0 (0x00C0 - 0x0000)
struct BP_MasterPuzzle_C_SetAdditionalTilesAsHidden final
{
public:
	TArray<class UItemData*>                      HiddenMeshes;                                      // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23[0x1];                                       // 0x0023(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array;                     // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array_1;                   // 0x0060(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemData*>                      CallFunc_Map_Keys_Keys;                            // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              CallFunc_Array_Get_Item_2;                         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            CallFunc_GetMesh_ReturnValue;                      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_SetAdditionalTilesAsHidden");
static_assert(sizeof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden) == 0x0000C0, "Wrong size on BP_MasterPuzzle_C_SetAdditionalTilesAsHidden");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, HiddenMeshes) == 0x000000, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::HiddenMeshes' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_bool_True_if_break_was_hit_Variable) == 0x000018, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_int_Array_Index_Variable) == 0x00001C, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000021, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Not_PreBool_ReturnValue_1) == 0x000022, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_int_Loop_Counter_Variable_1) == 0x000024, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_int_Array_Index_Variable_1) == 0x00002C, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_int_Array_Index_Variable_2) == 0x000030, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_GetPuzzleItems_Array) == 0x000038, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_GetPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Add_IntInt_ReturnValue_2) == 0x000058, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_GetPuzzleItems_Array_1) == 0x000060, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_GetPuzzleItems_Array_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Less_IntInt_ReturnValue) == 0x000070, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_BooleanAND_ReturnValue) == 0x000080, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Array_Length_ReturnValue_1) == 0x000084, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Less_IntInt_ReturnValue_1) == 0x000088, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Map_Keys_Keys) == 0x000090, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A0, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Array_Get_Item_2) == 0x0000A8, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_GetMesh_ReturnValue) == 0x0000B0, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_GetMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Array_Length_ReturnValue_2) == 0x0000B8, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000BC, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetAdditionalTilesAsHidden, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000BD, "Member 'BP_MasterPuzzle_C_SetAdditionalTilesAsHidden::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Add Missing Tile
// 0x0058 (0x0058 - 0x0000)
struct BP_MasterPuzzle_C_Add_Missing_Tile final
{
public:
	class UItemData*                              ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UStaticMeshComponent*>           Added_Tiles;                                       // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UStaticMesh*                            CallFunc_GetMesh_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveItemFromInventory_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array;                     // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_Add_Missing_Tile) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_Add_Missing_Tile");
static_assert(sizeof(BP_MasterPuzzle_C_Add_Missing_Tile) == 0x000058, "Wrong size on BP_MasterPuzzle_C_Add_Missing_Tile");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, ItemData) == 0x000000, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::ItemData' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, Added_Tiles) == 0x000008, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::Added_Tiles' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_GetMesh_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_GetMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_RemoveItemFromInventory_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_RemoveItemFromInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, Temp_int_Array_Index_Variable) == 0x000024, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, Temp_bool_Variable) == 0x000030, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_GetPuzzleItems_Array) == 0x000038, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_GetPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_Array_Get_Item) == 0x000048, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Add_Missing_Tile, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000055, "Member 'BP_MasterPuzzle_C_Add_Missing_Tile::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Open Item Picker
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_Open_Item_Picker final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UWBP_ItemPicker_C*                      CallFunc_Open_Item_Picker_ItemPickerWidget;        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_Open_Item_Picker) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_Open_Item_Picker");
static_assert(sizeof(BP_MasterPuzzle_C_Open_Item_Picker) == 0x000018, "Wrong size on BP_MasterPuzzle_C_Open_Item_Picker");
static_assert(offsetof(BP_MasterPuzzle_C_Open_Item_Picker, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_MasterPuzzle_C_Open_Item_Picker::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Open_Item_Picker, CallFunc_Open_Item_Picker_ItemPickerWidget) == 0x000010, "Member 'BP_MasterPuzzle_C_Open_Item_Picker::CallFunc_Open_Item_Picker_ItemPickerWidget' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Attach Tiles to Puzzle Socket
// 0x0038 (0x0038 - 0x0000)
struct BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array;                     // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket");
static_assert(sizeof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket) == 0x000038, "Wrong size on BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, CallFunc_GetPuzzleItems_Array) == 0x000010, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::CallFunc_GetPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket, CallFunc_K2_AttachToComponent_ReturnValue) == 0x000031, "Member 'BP_MasterPuzzle_C_Attach_Tiles_to_Puzzle_Socket::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.UpdateClockTime
// 0x01F8 (0x01F8 - 0x0000)
struct BP_MasterPuzzle_C_UpdateClockTime final
{
public:
	struct FDateTime                              CallFunc_GetTime_ReturnValue;                      // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_2;          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00E8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0170(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_UpdateClockTime) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_UpdateClockTime");
static_assert(sizeof(BP_MasterPuzzle_C_UpdateClockTime) == 0x0001F8, "Wrong size on BP_MasterPuzzle_C_UpdateClockTime");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_GetTime_ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_GetTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_BreakDateTime_Year) == 0x00000C, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_BreakDateTime_Month) == 0x000010, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_BreakDateTime_Day) == 0x000014, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_BreakDateTime_Hour) == 0x000018, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_BreakDateTime_Minute) == 0x00001C, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_BreakDateTime_Second) == 0x000020, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_BreakDateTime_Millisecond) == 0x000024, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000028, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00002C, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x000030, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_MakeRotator_ReturnValue) == 0x000034, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_MakeRotator_ReturnValue_1) == 0x000040, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00004C, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_Multiply_IntFloat_ReturnValue_2) == 0x000050, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_Multiply_IntFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000054, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_MakeRotator_ReturnValue_2) == 0x0000DC, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000E8, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_UpdateClockTime, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000170, "Member 'BP_MasterPuzzle_C_UpdateClockTime::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SetClockTalismanNumbers
// 0x01D8 (0x01D8 - 0x0000)
struct BP_MasterPuzzle_C_SetClockTalismanNumbers final
{
public:
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDialRotationFromValue_Rotation;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetDialRotationFromValue_Rotation_1;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDialRotationFromValue_Rotation_2;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0034(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00C8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x0150(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_SetClockTalismanNumbers) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_SetClockTalismanNumbers");
static_assert(sizeof(BP_MasterPuzzle_C_SetClockTalismanNumbers) == 0x0001D8, "Wrong size on BP_MasterPuzzle_C_SetClockTalismanNumbers");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_Percent_IntInt_ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000004, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_GetDialRotationFromValue_Rotation) == 0x000008, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_GetDialRotationFromValue_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_Divide_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_MakeRotator_ReturnValue) == 0x000010, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_GetDialRotationFromValue_Rotation_1) == 0x00001C, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_GetDialRotationFromValue_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_MakeRotator_ReturnValue_1) == 0x000020, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_Divide_IntInt_ReturnValue_1) == 0x00002C, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_GetDialRotationFromValue_Rotation_2) == 0x000030, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_GetDialRotationFromValue_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000034, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_MakeRotator_ReturnValue_2) == 0x0000BC, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000C8, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetClockTalismanNumbers, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x000150, "Member 'BP_MasterPuzzle_C_SetClockTalismanNumbers::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.CancelExitsPuzzle
// 0x0001 (0x0001 - 0x0000)
struct BP_MasterPuzzle_C_CancelExitsPuzzle final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_CancelExitsPuzzle) == 0x000001, "Wrong alignment on BP_MasterPuzzle_C_CancelExitsPuzzle");
static_assert(sizeof(BP_MasterPuzzle_C_CancelExitsPuzzle) == 0x000001, "Wrong size on BP_MasterPuzzle_C_CancelExitsPuzzle");
static_assert(offsetof(BP_MasterPuzzle_C_CancelExitsPuzzle, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_CancelExitsPuzzle::ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SetTalismanCombinationValue
// 0x0058 (0x0058 - 0x0000)
struct BP_MasterPuzzle_C_SetTalismanCombinationValue final
{
public:
	TMap<struct FGameplayTag, int32>              Temp_struct_Variable;                              // 0x0000(0x0050)()
	int32                                         CallFunc_Map_Find_Value;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_SetTalismanCombinationValue) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_SetTalismanCombinationValue");
static_assert(sizeof(BP_MasterPuzzle_C_SetTalismanCombinationValue) == 0x000058, "Wrong size on BP_MasterPuzzle_C_SetTalismanCombinationValue");
static_assert(offsetof(BP_MasterPuzzle_C_SetTalismanCombinationValue, Temp_struct_Variable) == 0x000000, "Member 'BP_MasterPuzzle_C_SetTalismanCombinationValue::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetTalismanCombinationValue, CallFunc_Map_Find_Value) == 0x000050, "Member 'BP_MasterPuzzle_C_SetTalismanCombinationValue::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetTalismanCombinationValue, CallFunc_Map_Find_ReturnValue) == 0x000054, "Member 'BP_MasterPuzzle_C_SetTalismanCombinationValue::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.Cache Original Camera Transform
// 0x0040 (0x0040 - 0x0000)
struct BP_MasterPuzzle_C_Cache_Original_Camera_Transform final
{
public:
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0xE];                                        // 0x0002(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_Cache_Original_Camera_Transform) == 0x000010, "Wrong alignment on BP_MasterPuzzle_C_Cache_Original_Camera_Transform");
static_assert(sizeof(BP_MasterPuzzle_C_Cache_Original_Camera_Transform) == 0x000040, "Wrong size on BP_MasterPuzzle_C_Cache_Original_Camera_Transform");
static_assert(offsetof(BP_MasterPuzzle_C_Cache_Original_Camera_Transform, Temp_bool_Has_Been_Initd_Variable) == 0x000000, "Member 'BP_MasterPuzzle_C_Cache_Original_Camera_Transform::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Cache_Original_Camera_Transform, Temp_bool_IsClosed_Variable) == 0x000001, "Member 'BP_MasterPuzzle_C_Cache_Original_Camera_Transform::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_Cache_Original_Camera_Transform, CallFunc_GetRelativeTransform_ReturnValue) == 0x000010, "Member 'BP_MasterPuzzle_C_Cache_Original_Camera_Transform::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.AlignTiles
// 0x02C8 (0x02C8 - 0x0000)
struct BP_MasterPuzzle_C_AlignTiles final
{
public:
	float                                         Offset;                                            // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_DetermineStartRotations_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPermanentPuzzleItems_PermanentPuzzleItems; // 0x0028(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0044(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CD[0x3];                                       // 0x00CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPuzzleItems_Array;                     // 0x00D8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x00F4(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_2;  // 0x017C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_2;              // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_3;              // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0240(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_AlignTiles) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_AlignTiles");
static_assert(sizeof(BP_MasterPuzzle_C_AlignTiles) == 0x0002C8, "Wrong size on BP_MasterPuzzle_C_AlignTiles");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, Offset) == 0x000000, "Member 'BP_MasterPuzzle_C_AlignTiles::Offset' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MasterPuzzle_C_AlignTiles::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MasterPuzzle_C_AlignTiles::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, Temp_int_Array_Index_Variable_1) == 0x000010, "Member 'BP_MasterPuzzle_C_AlignTiles::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_DetermineStartRotations_ReturnValue) == 0x000014, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_DetermineStartRotations_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'BP_MasterPuzzle_C_AlignTiles::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_GetPermanentPuzzleItems_PermanentPuzzleItems) == 0x000028, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_GetPermanentPuzzleItems_PermanentPuzzleItems' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000044, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Less_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D0, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_GetPuzzleItems_Array) == 0x0000D8, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_GetPuzzleItems_Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Array_Get_Item_1) == 0x0000E8, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Divide_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x0000F4, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_K2_SetRelativeRotation_SweepHitResult_2) == 0x00017C, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_K2_SetRelativeRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000204, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Percent_IntInt_ReturnValue) == 0x000208, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Array_Length_ReturnValue_1) == 0x00020C, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Subtract_IntInt_ReturnValue) == 0x000210, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Less_IntInt_ReturnValue_1) == 0x000214, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000218, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Array_Length_ReturnValue_2) == 0x00021C, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Divide_IntInt_ReturnValue_2) == 0x000220, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Divide_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Divide_IntInt_ReturnValue_3) == 0x000224, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Divide_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000228, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x00022C, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000230, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_MakeVector_ReturnValue) == 0x000234, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AlignTiles, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000240, "Member 'BP_MasterPuzzle_C_AlignTiles::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SetOtherworldState
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_SetOtherworldState final
{
public:
	EOtherworldPathwayStage                       Enum;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFactsDB*                               CallFunc_GetGameplaySessionSubsystem_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_SetOtherworldState) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_SetOtherworldState");
static_assert(sizeof(BP_MasterPuzzle_C_SetOtherworldState) == 0x000010, "Wrong size on BP_MasterPuzzle_C_SetOtherworldState");
static_assert(offsetof(BP_MasterPuzzle_C_SetOtherworldState, Enum) == 0x000000, "Member 'BP_MasterPuzzle_C_SetOtherworldState::Enum' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetOtherworldState, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000004, "Member 'BP_MasterPuzzle_C_SetOtherworldState::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetOtherworldState, CallFunc_GetGameplaySessionSubsystem_ReturnValue) == 0x000008, "Member 'BP_MasterPuzzle_C_SetOtherworldState::CallFunc_GetGameplaySessionSubsystem_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.EnteringPuzzle
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_EnteringPuzzle final
{
public:
	class ACharacter*                             InteractingCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AllPiecesAdded_bAllPiecesAdded;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_EnteringPuzzle) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_EnteringPuzzle");
static_assert(sizeof(BP_MasterPuzzle_C_EnteringPuzzle) == 0x000010, "Wrong size on BP_MasterPuzzle_C_EnteringPuzzle");
static_assert(offsetof(BP_MasterPuzzle_C_EnteringPuzzle, InteractingCharacter) == 0x000000, "Member 'BP_MasterPuzzle_C_EnteringPuzzle::InteractingCharacter' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_EnteringPuzzle, CallFunc_AllPiecesAdded_bAllPiecesAdded) == 0x000008, "Member 'BP_MasterPuzzle_C_EnteringPuzzle::CallFunc_AllPiecesAdded_bAllPiecesAdded' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_EnteringPuzzle, CallFunc_Not_PreBool_ReturnValue) == 0x000009, "Member 'BP_MasterPuzzle_C_EnteringPuzzle::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.ExitingPuzzle
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_ExitingPuzzle final
{
public:
	class AOFPlayerController*                    InteractingPlayerController;                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsHoldingItem_IsHoldingItem;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_ExitingPuzzle) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_ExitingPuzzle");
static_assert(sizeof(BP_MasterPuzzle_C_ExitingPuzzle) == 0x000010, "Wrong size on BP_MasterPuzzle_C_ExitingPuzzle");
static_assert(offsetof(BP_MasterPuzzle_C_ExitingPuzzle, InteractingPlayerController) == 0x000000, "Member 'BP_MasterPuzzle_C_ExitingPuzzle::InteractingPlayerController' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExitingPuzzle, CallFunc_GetIsHoldingItem_IsHoldingItem) == 0x000008, "Member 'BP_MasterPuzzle_C_ExitingPuzzle::CallFunc_GetIsHoldingItem_IsHoldingItem' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_ExitingPuzzle, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_MasterPuzzle_C_ExitingPuzzle::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetRequiredItems
// 0x00D8 (0x00D8 - 0x0000)
struct BP_MasterPuzzle_C_GetRequiredItems final
{
public:
	TSet<class UItemData*>                        ReturnValue;                                       // 0x0000(0x0050)(Parm, OutParm, ReturnParm)
	TSet<class UItemData*>                        RequiredItemSet;                                   // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UItemData*>                      CallFunc_Map_Keys_Keys;                            // 0x00B0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              CallFunc_Array_Get_Item;                           // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_GetRequiredItems) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_GetRequiredItems");
static_assert(sizeof(BP_MasterPuzzle_C_GetRequiredItems) == 0x0000D8, "Wrong size on BP_MasterPuzzle_C_GetRequiredItems");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_GetRequiredItems::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, RequiredItemSet) == 0x000050, "Member 'BP_MasterPuzzle_C_GetRequiredItems::RequiredItemSet' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_MasterPuzzle_C_GetRequiredItems::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, Temp_int_Loop_Counter_Variable) == 0x0000A4, "Member 'BP_MasterPuzzle_C_GetRequiredItems::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, CallFunc_Add_IntInt_ReturnValue) == 0x0000A8, "Member 'BP_MasterPuzzle_C_GetRequiredItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, CallFunc_Map_Keys_Keys) == 0x0000B0, "Member 'BP_MasterPuzzle_C_GetRequiredItems::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'BP_MasterPuzzle_C_GetRequiredItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, CallFunc_Array_Get_Item) == 0x0000C8, "Member 'BP_MasterPuzzle_C_GetRequiredItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRequiredItems, CallFunc_Less_IntInt_ReturnValue) == 0x0000D0, "Member 'BP_MasterPuzzle_C_GetRequiredItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.MakeNewRotation
// 0x0038 (0x0038 - 0x0000)
struct BP_MasterPuzzle_C_MakeNewRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetRotationOfHeldItem_ReturnValue;        // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_MakeNewRotation) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_MakeNewRotation");
static_assert(sizeof(BP_MasterPuzzle_C_MakeNewRotation) == 0x000038, "Wrong size on BP_MasterPuzzle_C_MakeNewRotation");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_MakeNewRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, CallFunc_GetRotationOfHeldItem_ReturnValue) == 0x00000C, "Member 'BP_MasterPuzzle_C_MakeNewRotation::CallFunc_GetRotationOfHeldItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_MakeNewRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'BP_MasterPuzzle_C_MakeNewRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'BP_MasterPuzzle_C_MakeNewRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'BP_MasterPuzzle_C_MakeNewRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_MasterPuzzle_C_MakeNewRotation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_MakeNewRotation, CallFunc_MakeRotator_ReturnValue) == 0x00002C, "Member 'BP_MasterPuzzle_C_MakeNewRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.LerpToNewRotation
// 0x00B0 (0x00B0 - 0x0000)
struct BP_MasterPuzzle_C_LerpToNewRotation final
{
public:
	float                                         Alpha;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRotationOfHeldItem_ReturnValue;        // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPrimitiveComponent*                    CallFunc_GetHeldItem_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0024(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_LerpToNewRotation) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_LerpToNewRotation");
static_assert(sizeof(BP_MasterPuzzle_C_LerpToNewRotation) == 0x0000B0, "Wrong size on BP_MasterPuzzle_C_LerpToNewRotation");
static_assert(offsetof(BP_MasterPuzzle_C_LerpToNewRotation, Alpha) == 0x000000, "Member 'BP_MasterPuzzle_C_LerpToNewRotation::Alpha' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpToNewRotation, CallFunc_GetRotationOfHeldItem_ReturnValue) == 0x000004, "Member 'BP_MasterPuzzle_C_LerpToNewRotation::CallFunc_GetRotationOfHeldItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpToNewRotation, CallFunc_GetHeldItem_ReturnValue) == 0x000010, "Member 'BP_MasterPuzzle_C_LerpToNewRotation::CallFunc_GetHeldItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpToNewRotation, CallFunc_RLerp_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_LerpToNewRotation::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpToNewRotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000024, "Member 'BP_MasterPuzzle_C_LerpToNewRotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetRotationOfHeldItem
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_GetRotationOfHeldItem final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_GetHeldItem_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_GetRotationOfHeldItem) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_GetRotationOfHeldItem");
static_assert(sizeof(BP_MasterPuzzle_C_GetRotationOfHeldItem) == 0x000018, "Wrong size on BP_MasterPuzzle_C_GetRotationOfHeldItem");
static_assert(offsetof(BP_MasterPuzzle_C_GetRotationOfHeldItem, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_GetRotationOfHeldItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetRotationOfHeldItem, CallFunc_GetHeldItem_ReturnValue) == 0x000010, "Member 'BP_MasterPuzzle_C_GetRotationOfHeldItem::CallFunc_GetHeldItem_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetPermanentPuzzleItems
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_GetPermanentPuzzleItems final
{
public:
	TArray<class UStaticMeshComponent*>           PermanentPuzzleItems;                              // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_GetPermanentPuzzleItems) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_GetPermanentPuzzleItems");
static_assert(sizeof(BP_MasterPuzzle_C_GetPermanentPuzzleItems) == 0x000010, "Wrong size on BP_MasterPuzzle_C_GetPermanentPuzzleItems");
static_assert(offsetof(BP_MasterPuzzle_C_GetPermanentPuzzleItems, PermanentPuzzleItems) == 0x000000, "Member 'BP_MasterPuzzle_C_GetPermanentPuzzleItems::PermanentPuzzleItems' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SetPuzzleItemsPermanentlyInPlace
// 0x0038 (0x0038 - 0x0000)
struct BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetPermanentPuzzleItems_PermanentPuzzleItems; // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace");
static_assert(sizeof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace) == 0x000038, "Wrong size on BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace");
static_assert(offsetof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace, CallFunc_GetPermanentPuzzleItems_PermanentPuzzleItems) == 0x000010, "Member 'BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace::CallFunc_GetPermanentPuzzleItems_PermanentPuzzleItems' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_MasterPuzzle_C_SetPuzzleItemsPermanentlyInPlace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.LerpSwappedItem
// 0x0150 (0x0150 - 0x0000)
struct BP_MasterPuzzle_C_LerpSwappedItem final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Offset;                                            // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurveMultiplier;                                   // 0x0014(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSlotTransformInIndex_ReturnValue;      // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0084(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_GetItemInIndex_ReturnValue;               // 0x0090(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00BC(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_LerpSwappedItem) == 0x000010, "Wrong alignment on BP_MasterPuzzle_C_LerpSwappedItem");
static_assert(sizeof(BP_MasterPuzzle_C_LerpSwappedItem) == 0x000150, "Wrong size on BP_MasterPuzzle_C_LerpSwappedItem");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, Index_0) == 0x000000, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::Index_0' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, Alpha) == 0x000004, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::Alpha' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, Offset) == 0x000008, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::Offset' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CurveMultiplier) == 0x000014, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CurveMultiplier' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_GetVectorValue_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_GetSlotTransformInIndex_ReturnValue) == 0x000030, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_GetSlotTransformInIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_BreakTransform_Location) == 0x00006C, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_BreakTransform_Rotation) == 0x000078, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_BreakTransform_Scale) == 0x000084, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_GetItemInIndex_ReturnValue) == 0x000090, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_GetItemInIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_Add_VectorVector_ReturnValue) == 0x000098, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_VLerp_ReturnValue) == 0x0000A4, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000B0, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_LerpSwappedItem, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000BC, "Member 'BP_MasterPuzzle_C_LerpSwappedItem::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.SetCameraToPuzzleView
// 0x0088 (0x0088 - 0x0000)
struct BP_MasterPuzzle_C_SetCameraToPuzzleView final
{
public:
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0000(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_SetCameraToPuzzleView) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_SetCameraToPuzzleView");
static_assert(sizeof(BP_MasterPuzzle_C_SetCameraToPuzzleView) == 0x000088, "Wrong size on BP_MasterPuzzle_C_SetCameraToPuzzleView");
static_assert(offsetof(BP_MasterPuzzle_C_SetCameraToPuzzleView, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000000, "Member 'BP_MasterPuzzle_C_SetCameraToPuzzleView::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.FlowNotify_Cheat
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_FlowNotify_Cheat final
{
public:
	class UFlowComponent*                         FlowComponent_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NotifyTag;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CurrentlyInteracting_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_FlowNotify_Cheat) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_FlowNotify_Cheat");
static_assert(sizeof(BP_MasterPuzzle_C_FlowNotify_Cheat) == 0x000018, "Wrong size on BP_MasterPuzzle_C_FlowNotify_Cheat");
static_assert(offsetof(BP_MasterPuzzle_C_FlowNotify_Cheat, FlowComponent_0) == 0x000000, "Member 'BP_MasterPuzzle_C_FlowNotify_Cheat::FlowComponent_0' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_FlowNotify_Cheat, NotifyTag) == 0x000008, "Member 'BP_MasterPuzzle_C_FlowNotify_Cheat::NotifyTag' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_FlowNotify_Cheat, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000010, "Member 'BP_MasterPuzzle_C_FlowNotify_Cheat::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_FlowNotify_Cheat, CallFunc_CurrentlyInteracting_ReturnValue) == 0x000011, "Member 'BP_MasterPuzzle_C_FlowNotify_Cheat::CallFunc_CurrentlyInteracting_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.DetermineStartRotations
// 0x0044 (0x0044 - 0x0000)
struct BP_MasterPuzzle_C_DetermineStartRotations final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               TempRotation;                                      // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_Select_Default_1;                           // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_DetermineStartRotations) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_DetermineStartRotations");
static_assert(sizeof(BP_MasterPuzzle_C_DetermineStartRotations) == 0x000044, "Wrong size on BP_MasterPuzzle_C_DetermineStartRotations");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, Index_0) == 0x000000, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::Index_0' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, ReturnValue) == 0x000004, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, TempRotation) == 0x000010, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::TempRotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, Temp_bool_Variable) == 0x00001C, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, Temp_bool_Variable_1) == 0x00001D, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000024, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, K2Node_Select_Default) == 0x000028, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000034, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_DetermineStartRotations, K2Node_Select_Default_1) == 0x000038, "Member 'BP_MasterPuzzle_C_DetermineStartRotations::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.CheckIfRightItem
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_CheckIfRightItem final
{
public:
	class UItemData*                              ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_Value;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_CheckIfRightItem) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_CheckIfRightItem");
static_assert(sizeof(BP_MasterPuzzle_C_CheckIfRightItem) == 0x000010, "Wrong size on BP_MasterPuzzle_C_CheckIfRightItem");
static_assert(offsetof(BP_MasterPuzzle_C_CheckIfRightItem, ItemData) == 0x000000, "Member 'BP_MasterPuzzle_C_CheckIfRightItem::ItemData' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_CheckIfRightItem, ReturnValue) == 0x000008, "Member 'BP_MasterPuzzle_C_CheckIfRightItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_CheckIfRightItem, CallFunc_Map_Find_Value) == 0x000009, "Member 'BP_MasterPuzzle_C_CheckIfRightItem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_CheckIfRightItem, CallFunc_Map_Find_ReturnValue) == 0x00000A, "Member 'BP_MasterPuzzle_C_CheckIfRightItem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_CheckIfRightItem, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'BP_MasterPuzzle_C_CheckIfRightItem::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_CheckIfRightItem, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'BP_MasterPuzzle_C_CheckIfRightItem::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetTargetName
// 0x0018 (0x0018 - 0x0000)
struct BP_MasterPuzzle_C_GetTargetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_MasterPuzzle_C_GetTargetName) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_GetTargetName");
static_assert(sizeof(BP_MasterPuzzle_C_GetTargetName) == 0x000018, "Wrong size on BP_MasterPuzzle_C_GetTargetName");
static_assert(offsetof(BP_MasterPuzzle_C_GetTargetName, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_GetTargetName::ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetPuzzleItems
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterPuzzle_C_GetPuzzleItems final
{
public:
	TArray<class UStaticMeshComponent*>           Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_GetPuzzleItems) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_GetPuzzleItems");
static_assert(sizeof(BP_MasterPuzzle_C_GetPuzzleItems) == 0x000020, "Wrong size on BP_MasterPuzzle_C_GetPuzzleItems");
static_assert(offsetof(BP_MasterPuzzle_C_GetPuzzleItems, Array) == 0x000000, "Member 'BP_MasterPuzzle_C_GetPuzzleItems::Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetPuzzleItems, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_MasterPuzzle_C_GetPuzzleItems::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.AllPiecesAdded
// 0x0028 (0x0028 - 0x0000)
struct BP_MasterPuzzle_C_AllPiecesAdded final
{
public:
	bool                                          bAllPiecesAdded;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<bool>                                  CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_AllPiecesAdded) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_AllPiecesAdded");
static_assert(sizeof(BP_MasterPuzzle_C_AllPiecesAdded) == 0x000028, "Wrong size on BP_MasterPuzzle_C_AllPiecesAdded");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, bAllPiecesAdded) == 0x000000, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::bAllPiecesAdded' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, CallFunc_Map_Values_Values) == 0x000010, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_AllPiecesAdded, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'BP_MasterPuzzle_C_AllPiecesAdded::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetDesiredPuzzleItems
// 0x0020 (0x0020 - 0x0000)
struct BP_MasterPuzzle_C_GetDesiredPuzzleItems final
{
public:
	TArray<class UStaticMeshComponent*>           Array;                                             // 0x0000(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UStaticMeshComponent*>           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_MasterPuzzle_C_GetDesiredPuzzleItems) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_GetDesiredPuzzleItems");
static_assert(sizeof(BP_MasterPuzzle_C_GetDesiredPuzzleItems) == 0x000020, "Wrong size on BP_MasterPuzzle_C_GetDesiredPuzzleItems");
static_assert(offsetof(BP_MasterPuzzle_C_GetDesiredPuzzleItems, Array) == 0x000000, "Member 'BP_MasterPuzzle_C_GetDesiredPuzzleItems::Array' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDesiredPuzzleItems, K2Node_MakeArray_Array) == 0x000010, "Member 'BP_MasterPuzzle_C_GetDesiredPuzzleItems::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetDialRotationFromValue
// 0x0030 (0x0030 - 0x0000)
struct BP_MasterPuzzle_C_GetDialRotationFromValue final
{
public:
	int32                                         InValue;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxHandValue;                                      // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartOffset;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClockwiseRotation;                                // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Rotation;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_GetDialRotationFromValue) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_GetDialRotationFromValue");
static_assert(sizeof(BP_MasterPuzzle_C_GetDialRotationFromValue) == 0x000030, "Wrong size on BP_MasterPuzzle_C_GetDialRotationFromValue");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, InValue) == 0x000000, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::InValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, MaxHandValue) == 0x000004, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::MaxHandValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, StartOffset) == 0x000008, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::StartOffset' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, bClockwiseRotation) == 0x00000C, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::bClockwiseRotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, Rotation) == 0x000010, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetDialRotationFromValue, CallFunc_Multiply_IntFloat_ReturnValue) == 0x00002C, "Member 'BP_MasterPuzzle_C_GetDialRotationFromValue::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetClockHandsCombinationRotation
// 0x0064 (0x0064 - 0x0000)
struct BP_MasterPuzzle_C_GetClockHandsCombinationRotation final
{
public:
	struct FRotator                               Large_Hand_Rotation;                               // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Medium_Hand_Rotation;                              // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Small_Hand_Rotation;                               // 0x0018(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDialRotationFromValue_Rotation;        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetDialRotationFromValue_Rotation_1;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Divide_IntInt_ReturnValue_1;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetDialRotationFromValue_Rotation_2;      // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_GetClockHandsCombinationRotation");
static_assert(sizeof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation) == 0x000064, "Wrong size on BP_MasterPuzzle_C_GetClockHandsCombinationRotation");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, Large_Hand_Rotation) == 0x000000, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::Large_Hand_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, Medium_Hand_Rotation) == 0x00000C, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::Medium_Hand_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, Small_Hand_Rotation) == 0x000018, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::Small_Hand_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_Percent_IntInt_ReturnValue) == 0x000024, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_Percent_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_GetDialRotationFromValue_Rotation) == 0x00002C, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_GetDialRotationFromValue_Rotation' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_MakeRotator_ReturnValue) == 0x000034, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_GetDialRotationFromValue_Rotation_1) == 0x000040, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_GetDialRotationFromValue_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000044, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_Divide_IntInt_ReturnValue_1) == 0x000050, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_Divide_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_GetDialRotationFromValue_Rotation_2) == 0x000054, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_GetDialRotationFromValue_Rotation_2' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetClockHandsCombinationRotation, CallFunc_MakeRotator_ReturnValue_2) == 0x000058, "Member 'BP_MasterPuzzle_C_GetClockHandsCombinationRotation::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetTime
// 0x0010 (0x0010 - 0x0000)
struct BP_MasterPuzzle_C_GetTime final
{
public:
	struct FDateTime                              ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_Get_In_Game_Time_DateTime;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_GetTime) == 0x000008, "Wrong alignment on BP_MasterPuzzle_C_GetTime");
static_assert(sizeof(BP_MasterPuzzle_C_GetTime) == 0x000010, "Wrong size on BP_MasterPuzzle_C_GetTime");
static_assert(offsetof(BP_MasterPuzzle_C_GetTime, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_GetTime::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_GetTime, CallFunc_Get_In_Game_Time_DateTime) == 0x000008, "Member 'BP_MasterPuzzle_C_GetTime::CallFunc_Get_In_Game_Time_DateTime' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.CanRotateSelectedPiece
// 0x0002 (0x0002 - 0x0000)
struct BP_MasterPuzzle_C_CanRotateSelectedPiece final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsHoldingItem_IsHoldingItem;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MasterPuzzle_C_CanRotateSelectedPiece) == 0x000001, "Wrong alignment on BP_MasterPuzzle_C_CanRotateSelectedPiece");
static_assert(sizeof(BP_MasterPuzzle_C_CanRotateSelectedPiece) == 0x000002, "Wrong size on BP_MasterPuzzle_C_CanRotateSelectedPiece");
static_assert(offsetof(BP_MasterPuzzle_C_CanRotateSelectedPiece, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_CanRotateSelectedPiece::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MasterPuzzle_C_CanRotateSelectedPiece, CallFunc_GetIsHoldingItem_IsHoldingItem) == 0x000001, "Member 'BP_MasterPuzzle_C_CanRotateSelectedPiece::CallFunc_GetIsHoldingItem_IsHoldingItem' has a wrong offset!");

// Function BP_MasterPuzzle.BP_MasterPuzzle_C.GetItemCategoryGameplayTag
// 0x0008 (0x0008 - 0x0000)
struct BP_MasterPuzzle_C_GetItemCategoryGameplayTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MasterPuzzle_C_GetItemCategoryGameplayTag) == 0x000004, "Wrong alignment on BP_MasterPuzzle_C_GetItemCategoryGameplayTag");
static_assert(sizeof(BP_MasterPuzzle_C_GetItemCategoryGameplayTag) == 0x000008, "Wrong size on BP_MasterPuzzle_C_GetItemCategoryGameplayTag");
static_assert(offsetof(BP_MasterPuzzle_C_GetItemCategoryGameplayTag, ReturnValue) == 0x000000, "Member 'BP_MasterPuzzle_C_GetItemCategoryGameplayTag::ReturnValue' has a wrong offset!");

}

