#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CheatInputActor

#include "Basic.hpp"

#include "BP_CheatInputActor_classes.hpp"
#include "BP_CheatInputActor_parameters.hpp"


namespace SDK
{

// Function BP_CheatInputActor.BP_CheatInputActor_C.ExecuteUbergraph_BP_CheatInputActor
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CheatInputActor_C::ExecuteUbergraph_BP_CheatInputActor(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "ExecuteUbergraph_BP_CheatInputActor");

	Params::BP_CheatInputActor_C_ExecuteUbergraph_BP_CheatInputActor Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.SetConsoleCommandRef
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      Controller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CheatInputActor_C::SetConsoleCommandRef(class AController* Controller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "SetConsoleCommandRef");

	Params::BP_CheatInputActor_C_SetConsoleCommandRef Parms{};

	Parms.Controller = Controller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.HandleFlowIdentityCheatInput
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGameplayTag>             ResultChildren                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ChildrenExist                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CheatInputActor_C::HandleFlowIdentityCheatInput(const struct FGameplayTag& Result, TArray<struct FGameplayTag>& ResultChildren, bool ChildrenExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "HandleFlowIdentityCheatInput");

	Params::BP_CheatInputActor_C_HandleFlowIdentityCheatInput Parms{};

	Parms.Result = std::move(Result);
	Parms.ResultChildren = std::move(ResultChildren);
	Parms.ChildrenExist = ChildrenExist;

	UObject::ProcessEvent(Func, &Parms);

	ResultChildren = std::move(Parms.ResultChildren);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.HandleFlowTagCheatInput
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Result                                                 (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// TArray<struct FGameplayTag>             ResultChildren                                         (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    ChildrenExist                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_CheatInputActor_C::HandleFlowTagCheatInput(const struct FGameplayTag& Result, TArray<struct FGameplayTag>& ResultChildren, bool ChildrenExist)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "HandleFlowTagCheatInput");

	Params::BP_CheatInputActor_C_HandleFlowTagCheatInput Parms{};

	Parms.Result = std::move(Result);
	Parms.ResultChildren = std::move(ResultChildren);
	Parms.ChildrenExist = ChildrenExist;

	UObject::ProcessEvent(Func, &Parms);

	ResultChildren = std::move(Parms.ResultChildren);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CheatInputActor_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "ReceiveTick");

	Params::BP_CheatInputActor_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.KillMyself
// (BlueprintCallable, BlueprintEvent)

void ABP_CheatInputActor_C::KillMyself()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "KillMyself");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.noClipToggle
// (BlueprintCallable, BlueprintEvent)

void ABP_CheatInputActor_C::NoClipToggle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "noClipToggle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.NoClipUpdate
// (BlueprintCallable, BlueprintEvent)

void ABP_CheatInputActor_C::NoClipUpdate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "NoClipUpdate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_N_K2Node_InputDebugKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_N_K2Node_InputDebugKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_N_K2Node_InputDebugKeyEvent_0");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_N_K2Node_InputDebugKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_Six_K2Node_InputDebugKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_Six_K2Node_InputDebugKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_Six_K2Node_InputDebugKeyEvent_1");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_Six_K2Node_InputDebugKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_B_K2Node_InputDebugKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_B_K2Node_InputDebugKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_B_K2Node_InputDebugKeyEvent_2");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_B_K2Node_InputDebugKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Ctrl_Comma_K2Node_InputDebugKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Ctrl_Comma_K2Node_InputDebugKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Ctrl_Comma_K2Node_InputDebugKeyEvent_3");

	Params::BP_CheatInputActor_C_InpActEvt_Ctrl_Comma_K2Node_InputDebugKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Ctrl_Period_K2Node_InputDebugKeyEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Ctrl_Period_K2Node_InputDebugKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Ctrl_Period_K2Node_InputDebugKeyEvent_4");

	Params::BP_CheatInputActor_C_InpActEvt_Ctrl_Period_K2Node_InputDebugKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Ctrl_H_K2Node_InputDebugKeyEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Ctrl_H_K2Node_InputDebugKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Ctrl_H_K2Node_InputDebugKeyEvent_5");

	Params::BP_CheatInputActor_C_InpActEvt_Ctrl_H_K2Node_InputDebugKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_OpenCheatLevel_K2Node_InputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_OpenCheatLevel_K2Node_InputActionEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_OpenCheatLevel_K2Node_InputActionEvent_0");

	Params::BP_CheatInputActor_C_InpActEvt_OpenCheatLevel_K2Node_InputActionEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_0");

	Params::BP_CheatInputActor_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_1");

	Params::BP_CheatInputActor_C_InpActEvt_Gamepad_LeftTrigger_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_2");

	Params::BP_CheatInputActor_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_3");

	Params::BP_CheatInputActor_C_InpActEvt_Gamepad_RightTrigger_K2Node_InputKeyEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_E_K2Node_InputKeyEvent_4
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_E_K2Node_InputKeyEvent_4(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_E_K2Node_InputKeyEvent_4");

	Params::BP_CheatInputActor_C_InpActEvt_E_K2Node_InputKeyEvent_4 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_E_K2Node_InputKeyEvent_5
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_E_K2Node_InputKeyEvent_5(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_E_K2Node_InputKeyEvent_5");

	Params::BP_CheatInputActor_C_InpActEvt_E_K2Node_InputKeyEvent_5 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Q_K2Node_InputKeyEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Q_K2Node_InputKeyEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Q_K2Node_InputKeyEvent_6");

	Params::BP_CheatInputActor_C_InpActEvt_Q_K2Node_InputKeyEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Q_K2Node_InputKeyEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Q_K2Node_InputKeyEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Q_K2Node_InputKeyEvent_7");

	Params::BP_CheatInputActor_C_InpActEvt_Q_K2Node_InputKeyEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_NumPadOne_K2Node_InputDebugKeyEvent_6
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_NumPadOne_K2Node_InputDebugKeyEvent_6(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_NumPadOne_K2Node_InputDebugKeyEvent_6");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_NumPadOne_K2Node_InputDebugKeyEvent_6 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_NumPadZero_K2Node_InputDebugKeyEvent_7
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_NumPadZero_K2Node_InputDebugKeyEvent_7(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_NumPadZero_K2Node_InputDebugKeyEvent_7");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_NumPadZero_K2Node_InputDebugKeyEvent_7 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_H_K2Node_InputDebugKeyEvent_8
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_H_K2Node_InputDebugKeyEvent_8(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_H_K2Node_InputDebugKeyEvent_8");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_H_K2Node_InputDebugKeyEvent_8 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_L_K2Node_InputDebugKeyEvent_9
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_L_K2Node_InputDebugKeyEvent_9(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_L_K2Node_InputDebugKeyEvent_9");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_L_K2Node_InputDebugKeyEvent_9 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_Q_K2Node_InputDebugKeyEvent_10
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_Q_K2Node_InputDebugKeyEvent_10(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_Q_K2Node_InputDebugKeyEvent_10");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_Q_K2Node_InputDebugKeyEvent_10 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_V_K2Node_InputDebugKeyEvent_11
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_V_K2Node_InputDebugKeyEvent_11(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_V_K2Node_InputDebugKeyEvent_11");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_V_K2Node_InputDebugKeyEvent_11 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_X_K2Node_InputDebugKeyEvent_12
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_X_K2Node_InputDebugKeyEvent_12(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_X_K2Node_InputDebugKeyEvent_12");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_X_K2Node_InputDebugKeyEvent_12 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_R_K2Node_InputDebugKeyEvent_13
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_R_K2Node_InputDebugKeyEvent_13(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_R_K2Node_InputDebugKeyEvent_13");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_R_K2Node_InputDebugKeyEvent_13 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_A_K2Node_InputDebugKeyEvent_14
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_A_K2Node_InputDebugKeyEvent_14(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_A_K2Node_InputDebugKeyEvent_14");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_A_K2Node_InputDebugKeyEvent_14 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_E_K2Node_InputDebugKeyEvent_15
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_E_K2Node_InputDebugKeyEvent_15(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_E_K2Node_InputDebugKeyEvent_15");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_E_K2Node_InputDebugKeyEvent_15 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_U_K2Node_InputDebugKeyEvent_16
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_U_K2Node_InputDebugKeyEvent_16(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_U_K2Node_InputDebugKeyEvent_16");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_U_K2Node_InputDebugKeyEvent_16 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_17
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_17(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_17");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_G_K2Node_InputDebugKeyEvent_17 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CheatInputActor.BP_CheatInputActor_C.InpActEvt_Alt_K_K2Node_InputDebugKeyEvent_18
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CheatInputActor_C::InpActEvt_Alt_K_K2Node_InputDebugKeyEvent_18(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CheatInputActor_C", "InpActEvt_Alt_K_K2Node_InputDebugKeyEvent_18");

	Params::BP_CheatInputActor_C_InpActEvt_Alt_K_K2Node_InputDebugKeyEvent_18 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}

}

