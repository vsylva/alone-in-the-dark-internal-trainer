#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_OFPlayerCameraManager

#include "Basic.hpp"

#include "BP_OFPlayerCameraManager_classes.hpp"
#include "BP_OFPlayerCameraManager_parameters.hpp"


namespace SDK
{

// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.UpdateHealthInMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_OFPlayerCameraManager_C::UpdateHealthInMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "UpdateHealthInMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void ABP_OFPlayerCameraManager_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void ABP_OFPlayerCameraManager_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void ABP_OFPlayerCameraManager_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void ABP_OFPlayerCameraManager_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.FrostAmountTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_OFPlayerCameraManager_C::FrostAmountTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "FrostAmountTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.FrostAmountTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_OFPlayerCameraManager_C::FrostAmountTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "FrostAmountTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_OFPlayerCameraManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.OnHealthChanged
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewCurrentHealth                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   DeltaValue                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            EventTags                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_OFPlayerCameraManager_C::OnHealthChanged(float NewCurrentHealth, float DeltaValue, const struct FGameplayTagContainer& EventTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "OnHealthChanged");

	Params::BP_OFPlayerCameraManager_C_OnHealthChanged Parms{};

	Parms.NewCurrentHealth = NewCurrentHealth;
	Parms.DeltaValue = DeltaValue;
	Parms.EventTags = std::move(EventTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.DamageScreenEffectTransition
// (BlueprintCallable, BlueprintEvent)

void ABP_OFPlayerCameraManager_C::DamageScreenEffectTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "DamageScreenEffectTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.DamageScreenEffectStartFadeAway
// (BlueprintCallable, BlueprintEvent)

void ABP_OFPlayerCameraManager_C::DamageScreenEffectStartFadeAway()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "DamageScreenEffectStartFadeAway");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.OnHealthStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EPlayerHealthState                      NewHealthState                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OFPlayerCameraManager_C::OnHealthStateChanged(EPlayerHealthState NewHealthState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "OnHealthStateChanged");

	Params::BP_OFPlayerCameraManager_C_OnHealthStateChanged Parms{};

	Parms.NewHealthState = NewHealthState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.Jacob3AttackEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   EffectDuration                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Intensity                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OFPlayerCameraManager_C::Jacob3AttackEffect(const float EffectDuration, float Intensity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "Jacob3AttackEffect");

	Params::BP_OFPlayerCameraManager_C_Jacob3AttackEffect Parms{};

	Parms.EffectDuration = EffectDuration;
	Parms.Intensity = Intensity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.Jacob3AttackEnd
// (BlueprintCallable, BlueprintEvent)

void ABP_OFPlayerCameraManager_C::Jacob3AttackEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "Jacob3AttackEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_OFPlayerCameraManager.BP_OFPlayerCameraManager_C.ExecuteUbergraph_BP_OFPlayerCameraManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_OFPlayerCameraManager_C::ExecuteUbergraph_BP_OFPlayerCameraManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_OFPlayerCameraManager_C", "ExecuteUbergraph_BP_OFPlayerCameraManager");

	Params::BP_OFPlayerCameraManager_C_ExecuteUbergraph_BP_OFPlayerCameraManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

