#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightFixture

#include "Basic.hpp"

#include "BP_LightFixture_classes.hpp"
#include "BP_LightFixture_parameters.hpp"


namespace SDK
{

// Function BP_LightFixture.BP_LightFixture_C.ExecuteUbergraph_BP_LightFixture
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_LightFixture_C::ExecuteUbergraph_BP_LightFixture(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "ExecuteUbergraph_BP_LightFixture");

	Params::BP_LightFixture_C_ExecuteUbergraph_BP_LightFixture Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightFixture.BP_LightFixture_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_LightFixture_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightFixture.BP_LightFixture_C.LoadCompleteDelegate_CD4940744AC4667E7148BDA96292EF0E
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class UObject*>                  LoadedAssets                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_LightFixture_C::LoadCompleteDelegate_CD4940744AC4667E7148BDA96292EF0E(const TArray<class UObject*>& LoadedAssets)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "LoadCompleteDelegate_CD4940744AC4667E7148BDA96292EF0E");

	Params::BP_LightFixture_C_LoadCompleteDelegate_CD4940744AC4667E7148BDA96292EF0E Parms{};

	Parms.LoadedAssets = std::move(LoadedAssets);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightFixture.BP_LightFixture_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_LightFixture_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightFixture.BP_LightFixture_C.UpdateLightState
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LightFixture_C::UpdateLightState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "UpdateLightState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightFixture.BP_LightFixture_C.UpdateLightSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LightFixture_C::UpdateLightSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "UpdateLightSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightFixture.BP_LightFixture_C.ToggleLights
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LightFixture_C::ToggleLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "ToggleLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightFixture.BP_LightFixture_C.PlaySound
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSoftObjectPtr<class UFMODEvent>        Event_Played                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)

void ABP_LightFixture_C::PlaySound(const TSoftObjectPtr<class UFMODEvent>& Event_Played)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "PlaySound");

	Params::BP_LightFixture_C_PlaySound Parms{};

	Parms.Event_Played = Event_Played;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_LightFixture.BP_LightFixture_C.GatherChildLights
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_LightFixture_C::GatherChildLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "GatherChildLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightFixture.BP_LightFixture_C.GetAllLights
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class ULightComponent*>          AllLights                                              (Parm, OutParm, ContainsInstancedReference)

void ABP_LightFixture_C::GetAllLights(TArray<class ULightComponent*>* AllLights)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "GetAllLights");

	Params::BP_LightFixture_C_GetAllLights Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AllLights != nullptr)
		*AllLights = std::move(Parms.AllLights);
}


// Function BP_LightFixture.BP_LightFixture_C.BreakLights
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LightFixture_C::BreakLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "BreakLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_LightFixture.BP_LightFixture_C.Create Dynamic Material Instance
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_LightFixture_C::Create_Dynamic_Material_Instance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_LightFixture_C", "Create Dynamic Material Instance");

	UObject::ProcessEvent(Func, nullptr);
}

}

