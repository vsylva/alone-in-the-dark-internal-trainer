#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_VisionTrace

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTD_VisionTrace.BTD_VisionTrace_C
// 0x0038 (0x00D8 - 0x00A0)
class UBTD_VisionTrace_C final : public UBTDecorator_BlueprintBase
{
public:
	struct FBlackboardKeySelector                 Target;                                            // 0x00A0(0x0028)(Edit, BlueprintVisible)
	bool                                          Inverted;                                          // 0x00C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                StartOffset;                                       // 0x00CC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTD_VisionTrace_C">();
	}
	static class UBTD_VisionTrace_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTD_VisionTrace_C>();
	}
};
static_assert(alignof(UBTD_VisionTrace_C) == 0x000008, "Wrong alignment on UBTD_VisionTrace_C");
static_assert(sizeof(UBTD_VisionTrace_C) == 0x0000D8, "Wrong size on UBTD_VisionTrace_C");
static_assert(offsetof(UBTD_VisionTrace_C, Target) == 0x0000A0, "Member 'UBTD_VisionTrace_C::Target' has a wrong offset!");
static_assert(offsetof(UBTD_VisionTrace_C, Inverted) == 0x0000C8, "Member 'UBTD_VisionTrace_C::Inverted' has a wrong offset!");
static_assert(offsetof(UBTD_VisionTrace_C, StartOffset) == 0x0000CC, "Member 'UBTD_VisionTrace_C::StartOffset' has a wrong offset!");

}

