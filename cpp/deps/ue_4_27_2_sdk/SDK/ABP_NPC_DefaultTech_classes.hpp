#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_DefaultTech

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "ControlRig_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_NPC_DefaultTech.ABP_NPC_DefaultTech_C
// 0x1130 (0x1B80 - 0x0A50)
class UABP_NPC_DefaultTech_C final : public UOFNPCSubGraphAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0A50(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root_2;                              // 0x0A58(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose_1;                   // 0x0A88(0x0118)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_2;                        // 0x0BA0(0x0368)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x0F08(0x0030)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0F38(0x0118)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig_1;                        // 0x1050(0x0368)()
	struct FAnimNode_ControlRig                   AnimGraphNode_ControlRig;                          // 0x13B8(0x0368)()
	struct FAnimNode_SaveCachedPose               AnimGraphNode_SaveCachedPose;                      // 0x1720(0x0158)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x1878(0x00A0)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose_1;                     // 0x1918(0x0028)()
	struct FAnimNode_UseCachedPose                AnimGraphNode_UseCachedPose;                       // 0x1940(0x0028)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x1968(0x0030)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose;                        // 0x1998(0x0018)()
	float                                         __CustomProperty_FocusAlpha_77DC6CD042A9E5807E5923A0501CFE2A; // 0x19B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         __CustomProperty_HeadBodyBlend_77DC6CD042A9E5807E5923A0501CFE2A; // 0x19B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bHasFocusPoint_77DC6CD042A9E5807E5923A0501CFE2A; // 0x19B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          __CustomProperty_bNoRotationLimit_77DC6CD042A9E5807E5923A0501CFE2A; // 0x19B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19BA[0x2];                                     // 0x19BA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                __CustomProperty_FocusLocation_77DC6CD042A9E5807E5923A0501CFE2A; // 0x19BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFocusPointsVariables                  FocusPointSettings;                                // 0x19C8(0x0190)(BlueprintReadOnly)
	float                                         __CustomProperty_StepHeight_F54525FF45256F828675BA9F17EF9C86; // 0x1B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                __CustomProperty_GroundNormal_F54525FF45256F828675BA9F17EF9C86; // 0x1B5C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          __CustomProperty_bUseInternalData_F54525FF45256F828675BA9F17EF9C86; // 0x1B68(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B69[0x7];                                     // 0x1B69(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFCharacterMovementComponent*          MovementComponent;                                 // 0x1B70(0x0008)(BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_ABP_NPC_DefaultTech(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_DefaultTech_AnimGraphNode_ControlRig_77DC6CD042A9E5807E5923A0501CFE2A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NPC_DefaultTech_AnimGraphNode_ControlRig_F54525FF45256F828675BA9F17EF9C86();
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void FootIKLayer(const struct FPoseLink& FootIKInputPose, class UOFCharacterMovementComponent* MovementComponent_0, struct FPoseLink* FootIKLayer_0);
	void BodyFocusLayer(const struct FPoseLink& BodyFocusLayerInputPose, const struct FFocusPointsVariables& FocusPointSettings_0, struct FPoseLink* BodyFocusLayer_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_NPC_DefaultTech_C">();
	}
	static class UABP_NPC_DefaultTech_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_NPC_DefaultTech_C>();
	}
};
static_assert(alignof(UABP_NPC_DefaultTech_C) == 0x000010, "Wrong alignment on UABP_NPC_DefaultTech_C");
static_assert(sizeof(UABP_NPC_DefaultTech_C) == 0x001B80, "Wrong size on UABP_NPC_DefaultTech_C");
static_assert(offsetof(UABP_NPC_DefaultTech_C, UberGraphFrame) == 0x000A50, "Member 'UABP_NPC_DefaultTech_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_Root_2) == 0x000A58, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_Root_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_LinkedInputPose_1) == 0x000A88, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_LinkedInputPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_ControlRig_2) == 0x000BA0, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_ControlRig_2' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_Root_1) == 0x000F08, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_LinkedInputPose) == 0x000F38, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_ControlRig_1) == 0x001050, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_ControlRig_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_ControlRig) == 0x0013B8, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_ControlRig' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_SaveCachedPose) == 0x001720, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_SaveCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_BlendListByBool) == 0x001878, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_UseCachedPose_1) == 0x001918, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_UseCachedPose_1' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_UseCachedPose) == 0x001940, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_UseCachedPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_Root) == 0x001968, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, AnimGraphNode_LocalRefPose) == 0x001998, "Member 'UABP_NPC_DefaultTech_C::AnimGraphNode_LocalRefPose' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_FocusAlpha_77DC6CD042A9E5807E5923A0501CFE2A) == 0x0019B0, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_FocusAlpha_77DC6CD042A9E5807E5923A0501CFE2A' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_HeadBodyBlend_77DC6CD042A9E5807E5923A0501CFE2A) == 0x0019B4, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_HeadBodyBlend_77DC6CD042A9E5807E5923A0501CFE2A' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_bHasFocusPoint_77DC6CD042A9E5807E5923A0501CFE2A) == 0x0019B8, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_bHasFocusPoint_77DC6CD042A9E5807E5923A0501CFE2A' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_bNoRotationLimit_77DC6CD042A9E5807E5923A0501CFE2A) == 0x0019B9, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_bNoRotationLimit_77DC6CD042A9E5807E5923A0501CFE2A' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_FocusLocation_77DC6CD042A9E5807E5923A0501CFE2A) == 0x0019BC, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_FocusLocation_77DC6CD042A9E5807E5923A0501CFE2A' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, FocusPointSettings) == 0x0019C8, "Member 'UABP_NPC_DefaultTech_C::FocusPointSettings' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_StepHeight_F54525FF45256F828675BA9F17EF9C86) == 0x001B58, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_StepHeight_F54525FF45256F828675BA9F17EF9C86' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_GroundNormal_F54525FF45256F828675BA9F17EF9C86) == 0x001B5C, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_GroundNormal_F54525FF45256F828675BA9F17EF9C86' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, __CustomProperty_bUseInternalData_F54525FF45256F828675BA9F17EF9C86) == 0x001B68, "Member 'UABP_NPC_DefaultTech_C::__CustomProperty_bUseInternalData_F54525FF45256F828675BA9F17EF9C86' has a wrong offset!");
static_assert(offsetof(UABP_NPC_DefaultTech_C, MovementComponent) == 0x001B70, "Member 'UABP_NPC_DefaultTech_C::MovementComponent' has a wrong offset!");

}

