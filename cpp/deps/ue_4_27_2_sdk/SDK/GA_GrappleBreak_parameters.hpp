#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GrappleBreak

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_GrappleBreak.GA_GrappleBreak_C.ExecuteUbergraph_GA_GrappleBreak
// 0x0630 (0x0630 - 0x0000)
struct GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_AnimationAssetManager*   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0010(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0018(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x00D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x00E0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x01A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x01A8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0258(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0268(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0270(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0320(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0330(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0338(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03E8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x03F8(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x04A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          Temp_byte_Variable;                                // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           Temp_object_Variable;                              // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_1;                            // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_2;                            // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Temp_object_Variable_3;                            // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x04DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x04E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x04EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponentFromActorInfo_ReturnValue; // 0x0510(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_EventData;                            // 0x0518(0x00B0)(ConstParm)
	class UAnimMontage*                           CallFunc_GetMontageForSkeletonBlockingLoad_ReturnValue; // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D4[0x4];                                      // 0x05D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_WSD_C>            K2Node_DynamicCast_AsBPI_WSD;                      // 0x05D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E9[0x3];                                      // 0x05E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x05EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWaitForEvent* CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlayerCharacterType                          CallFunc_GetPlayerCharacterType_ReturnValue;       // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_CommitAbility_ReturnValue;             // 0x061A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61B[0x5];                                      // 0x061B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           K2Node_Select_Default_2;                           // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimMontage_ReturnValue;              // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x062C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak) == 0x000008, "Wrong alignment on GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak");
static_assert(sizeof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak) == 0x000630, "Wrong size on GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, EntryPoint) == 0x000000, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventTag_4) == 0x000010, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventData_4) == 0x000018, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CreateDelegate_OutputDelegate) == 0x0000C8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventTag_3) == 0x0000D8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventData_3) == 0x0000E0, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CreateDelegate_OutputDelegate_1) == 0x000190, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventTag_2) == 0x0001A0, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventData_2) == 0x0001A8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CreateDelegate_OutputDelegate_2) == 0x000258, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventTag_1) == 0x000268, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventData_1) == 0x000270, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CreateDelegate_OutputDelegate_3) == 0x000320, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventTag) == 0x000330, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CustomEvent_EventData) == 0x000338, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003E8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_struct_Variable) == 0x0003F8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_struct_Variable_1) == 0x0004A8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_byte_Variable) == 0x0004B0, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_object_Variable) == 0x0004B8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_object_Variable_1) == 0x0004C0, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_object_Variable_2) == 0x0004C8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_object_Variable_3) == 0x0004D0, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_int_Variable) == 0x0004D8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_name_Variable) == 0x0004DC, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_name_Variable_1) == 0x0004E4, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_name_Variable_2) == 0x0004EC, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_int_Variable_1) == 0x0004F4, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_name_Variable_3) == 0x0004F8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_name_Variable_4) == 0x000500, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, Temp_name_Variable_5) == 0x000508, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_GetOwningComponentFromActorInfo_ReturnValue) == 0x000510, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_GetOwningComponentFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_Event_EventData) == 0x000518, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_Event_EventData' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_GetMontageForSkeletonBlockingLoad_ReturnValue) == 0x0005C8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_GetMontageForSkeletonBlockingLoad_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_FTrunc_ReturnValue) == 0x0005D0, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_DynamicCast_AsBPI_WSD) == 0x0005D8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_DynamicCast_AsBPI_WSD' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_DynamicCast_bSuccess) == 0x0005E8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_Select_Default) == 0x0005EC, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x0005F8, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_Select_Default_1) == 0x000600, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_IsValid_ReturnValue) == 0x000608, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_DynamicCast_AsCharacter) == 0x000610, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_DynamicCast_bSuccess_1) == 0x000618, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_GetPlayerCharacterType_ReturnValue) == 0x000619, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_GetPlayerCharacterType_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_K2_CommitAbility_ReturnValue) == 0x00061A, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_K2_CommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_Select_Default_2) == 0x000620, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, CallFunc_PlayAnimMontage_ReturnValue) == 0x000628, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::CallFunc_PlayAnimMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak, K2Node_Event_bWasCancelled) == 0x00062C, "Member 'GA_GrappleBreak_C_ExecuteUbergraph_GA_GrappleBreak::K2Node_Event_bWasCancelled' has a wrong offset!");

// Function GA_GrappleBreak.GA_GrappleBreak_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_GrappleBreak_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_GrappleBreak_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_GrappleBreak_C_K2_OnEndAbility");
static_assert(sizeof(GA_GrappleBreak_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_GrappleBreak_C_K2_OnEndAbility");
static_assert(offsetof(GA_GrappleBreak_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_GrappleBreak_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_GrappleBreak.GA_GrappleBreak_C.K2_ActivateAbilityFromEvent
// 0x00B0 (0x00B0 - 0x0000)
struct GA_GrappleBreak_C_K2_ActivateAbilityFromEvent final
{
public:
	struct FGameplayEventData                     EventData;                                         // 0x0000(0x00B0)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GA_GrappleBreak_C_K2_ActivateAbilityFromEvent) == 0x000008, "Wrong alignment on GA_GrappleBreak_C_K2_ActivateAbilityFromEvent");
static_assert(sizeof(GA_GrappleBreak_C_K2_ActivateAbilityFromEvent) == 0x0000B0, "Wrong size on GA_GrappleBreak_C_K2_ActivateAbilityFromEvent");
static_assert(offsetof(GA_GrappleBreak_C_K2_ActivateAbilityFromEvent, EventData) == 0x000000, "Member 'GA_GrappleBreak_C_K2_ActivateAbilityFromEvent::EventData' has a wrong offset!");

// Function GA_GrappleBreak.GA_GrappleBreak_C.OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x000008, "Wrong alignment on GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(sizeof(GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x0000B8, "Wrong size on GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(offsetof(GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventTag) == 0x000000, "Member 'GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventData) == 0x000008, "Member 'GA_GrappleBreak_C_OnCompleted_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventData' has a wrong offset!");

// Function GA_GrappleBreak.GA_GrappleBreak_C.OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x000008, "Wrong alignment on GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(sizeof(GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x0000B8, "Wrong size on GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(offsetof(GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventTag) == 0x000000, "Member 'GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventData) == 0x000008, "Member 'GA_GrappleBreak_C_OnBlendOut_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventData' has a wrong offset!");

// Function GA_GrappleBreak.GA_GrappleBreak_C.OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x000008, "Wrong alignment on GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(sizeof(GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x0000B8, "Wrong size on GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(offsetof(GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventTag) == 0x000000, "Member 'GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventData) == 0x000008, "Member 'GA_GrappleBreak_C_OnInterrupted_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventData' has a wrong offset!");

// Function GA_GrappleBreak.GA_GrappleBreak_C.OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x000008, "Wrong alignment on GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(sizeof(GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x0000B8, "Wrong size on GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(offsetof(GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventTag) == 0x000000, "Member 'GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventData) == 0x000008, "Member 'GA_GrappleBreak_C_OnCancelled_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventData' has a wrong offset!");

// Function GA_GrappleBreak.GA_GrappleBreak_C.EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24
// 0x00B8 (0x00B8 - 0x0000)
struct GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24 final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x000008, "Wrong alignment on GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(sizeof(GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24) == 0x0000B8, "Wrong size on GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24");
static_assert(offsetof(GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventTag) == 0x000000, "Member 'GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventTag' has a wrong offset!");
static_assert(offsetof(GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24, EventData) == 0x000008, "Member 'GA_GrappleBreak_C_EventReceived_CC44F1034A97BC4F72B1A8BDD9BC4B24::EventData' has a wrong offset!");

}

