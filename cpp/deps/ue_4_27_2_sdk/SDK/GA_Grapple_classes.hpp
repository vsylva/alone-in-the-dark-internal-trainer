#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Grapple

#include "Basic.hpp"

#include "GA_AttackMelee_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PiecesSequence_structs.hpp"
#include "CharacterSize_structs.hpp"
#include "AnimationMontageIdentifier_structs.hpp"
#include "CemeteryCreatureType_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_Grapple.GA_Grapple_C
// 0x01A0 (0x05D0 - 0x0430)
class UGA_Grapple_C : public UGA_AttackMelee_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_Grapple_C;                       // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AOFEnemyCharacter*                      EnemyRef;                                          // 0x0438(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  PlayerCharacterRef;                                // 0x0440(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFEnemyAIController*                   EnemyController;                                   // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    GrappleSound;                                      // 0x0450(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LookAtEnemyBeforeGrapple;                          // 0x0458(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CMGrapple;                                         // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OldEnemyScale;                                     // 0x0468(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GrappleSnapLocation;                               // 0x0474(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TTickTimer;                                        // 0x0480(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SnapToPlayerLocation;                              // 0x0488(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDefaultLevelSequenceInstanceData*      CameraSequenceInstanceData;                        // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APiecesLevelSequenceActor*              CameraSequenceRef;                                 // 0x0498(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             OriginTransform;                                   // 0x04A0(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          QuickTimeSucceded;                                 // 0x04D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseTickSnap;                                       // 0x04D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D2[0x6];                                      // 0x04D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         GrappleSequenceToUse;                              // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           PlayerMontageTag;                                  // 0x04E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  Player_Immunity_Tags;                              // 0x04E8(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NavCheck;                                          // 0x0508(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GrappleHit;                                        // 0x0509(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          UseCameraSequence;                                 // 0x050A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_50B[0x5];                                      // 0x050B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         FailureSequenceRef;                                // 0x0510(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         SuccessSequenceRef;                                // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APiecesLevelSequenceActor*              CameraSequenceEndRef;                              // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EQSResultVector;                                   // 0x0528(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_534[0x4];                                      // 0x0534(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GrappleSceneMover_C*                SceneMoverRef;                                     // 0x0538(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             AdjustedTransformCurrent;                          // 0x0540(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FActiveGameplayEffectHandle            DamageImmunityHandle;                              // 0x0570(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         QTEPopupDelay;                                     // 0x0578(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseTranslationAdjustments;                         // 0x057C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_57D[0x3];                                      // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPiecesLevelSequencePlayerPlaybackSettings EndSequenceSettings;                               // 0x0580(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FPiecesLevelSequencePlayerPlaybackSettings StartSequenceSettings;                             // 0x05A0(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class AActor*>                         ActorsToIgnoreForTrace;                            // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void SetStartBurrowed(bool beginBurrowed, bool* Success);
	void SetOrderTarget(const struct FVector& Location, bool* Success);
	void HitscanWeaponFired(bool* Success);
	void GetMostSuitableMeleeSection(EAnimationMontageIdentifier* Value);
	void GetAggroState(bool* Aggro);
	void SetNewAggro(bool NewAggro, bool* Success);
	void IncrementJac3ProneCounter(int32* ProneCounter);
	void GetCharacterSize(ECharacterSize* Size_0);
	void GetCemeteryCreatureType(ECemeteryCreatureType* CemeteryCreatureType);
	void SetCanCirculate(bool CanCirculate, bool* Success);
	void SetStartOnWall(bool StartOnWall, bool* Success);
	void AimedAt(bool* Return);
	void GetUpgradeComponent(class UWeaponUpgradeComponent_C** UpgradeComponent);
	void FlashlightHit(float Distance, bool* Success);
	class ULevelSequence* GetEndSequence();
	void GA_Grapple_AutoGenFunc1();
	void TickTimer();
	void OnAbilityStart();
	void DeathEvent();
	void OnGrapple();
	void OnStruggleStart();
	void MoveToGrappleLocation();
	void OnGrappleEnd();
	void MeleeAttack();
	void EventReceived_C4754BBC460A2FE72DC5EB8769C24FEE(const struct FGameplayEventData& Payload);
	void EventReceived_C4311F71462092EC87856895E37E7A0C(const struct FGameplayEventData& Payload);
	void EventReceived_70B9556B427F6A1BD44E2393562B0E64(const struct FGameplayEventData& Payload);
	void LaserHit();
	void SetCemeteryCreatureType(ECemeteryCreatureType CreatureType);
	void QuicktimeInput(float CurrentProgress, float MaxProgress);
	void MeleeAttackTranslate(const struct FVector& StartVector, const struct FVector& EndVector);
	void ControlRotationFocus(class AActor* FocusTarget);
	void MoveToGrappleLocatio(const struct FVector& Grapple_Location);
	void SetMostSuitableMeleeSection(EAnimationMontageIdentifier Value);
	void QuicktimeSuccess();
	void EndSequenceFinished();
	void QueryComplete(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void UpdateBossHealthData(float CurrentHealthPercentage);
	void PlayAttackMontage();
	void K2_OnEndAbility(bool bWasCancelled);
	void EndGrapple();
	void TurnTimer();
	void ExecuteUbergraph_GA_Grapple(int32 EntryPoint);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_Grapple_C">();
	}
	static class UGA_Grapple_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_Grapple_C>();
	}
};
static_assert(alignof(UGA_Grapple_C) == 0x000010, "Wrong alignment on UGA_Grapple_C");
static_assert(sizeof(UGA_Grapple_C) == 0x0005D0, "Wrong size on UGA_Grapple_C");
static_assert(offsetof(UGA_Grapple_C, UberGraphFrame_GA_Grapple_C) == 0x000430, "Member 'UGA_Grapple_C::UberGraphFrame_GA_Grapple_C' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, EnemyRef) == 0x000438, "Member 'UGA_Grapple_C::EnemyRef' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, PlayerCharacterRef) == 0x000440, "Member 'UGA_Grapple_C::PlayerCharacterRef' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, EnemyController) == 0x000448, "Member 'UGA_Grapple_C::EnemyController' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, GrappleSound) == 0x000450, "Member 'UGA_Grapple_C::GrappleSound' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, LookAtEnemyBeforeGrapple) == 0x000458, "Member 'UGA_Grapple_C::LookAtEnemyBeforeGrapple' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, CMGrapple) == 0x000460, "Member 'UGA_Grapple_C::CMGrapple' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, OldEnemyScale) == 0x000468, "Member 'UGA_Grapple_C::OldEnemyScale' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, GrappleSnapLocation) == 0x000474, "Member 'UGA_Grapple_C::GrappleSnapLocation' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, TTickTimer) == 0x000480, "Member 'UGA_Grapple_C::TTickTimer' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, SnapToPlayerLocation) == 0x000488, "Member 'UGA_Grapple_C::SnapToPlayerLocation' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, CameraSequenceInstanceData) == 0x000490, "Member 'UGA_Grapple_C::CameraSequenceInstanceData' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, CameraSequenceRef) == 0x000498, "Member 'UGA_Grapple_C::CameraSequenceRef' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, OriginTransform) == 0x0004A0, "Member 'UGA_Grapple_C::OriginTransform' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, QuickTimeSucceded) == 0x0004D0, "Member 'UGA_Grapple_C::QuickTimeSucceded' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, UseTickSnap) == 0x0004D1, "Member 'UGA_Grapple_C::UseTickSnap' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, GrappleSequenceToUse) == 0x0004D8, "Member 'UGA_Grapple_C::GrappleSequenceToUse' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, PlayerMontageTag) == 0x0004E0, "Member 'UGA_Grapple_C::PlayerMontageTag' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, Player_Immunity_Tags) == 0x0004E8, "Member 'UGA_Grapple_C::Player_Immunity_Tags' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, NavCheck) == 0x000508, "Member 'UGA_Grapple_C::NavCheck' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, GrappleHit) == 0x000509, "Member 'UGA_Grapple_C::GrappleHit' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, UseCameraSequence) == 0x00050A, "Member 'UGA_Grapple_C::UseCameraSequence' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, FailureSequenceRef) == 0x000510, "Member 'UGA_Grapple_C::FailureSequenceRef' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, SuccessSequenceRef) == 0x000518, "Member 'UGA_Grapple_C::SuccessSequenceRef' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, CameraSequenceEndRef) == 0x000520, "Member 'UGA_Grapple_C::CameraSequenceEndRef' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, EQSResultVector) == 0x000528, "Member 'UGA_Grapple_C::EQSResultVector' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, SceneMoverRef) == 0x000538, "Member 'UGA_Grapple_C::SceneMoverRef' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, AdjustedTransformCurrent) == 0x000540, "Member 'UGA_Grapple_C::AdjustedTransformCurrent' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, DamageImmunityHandle) == 0x000570, "Member 'UGA_Grapple_C::DamageImmunityHandle' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, QTEPopupDelay) == 0x000578, "Member 'UGA_Grapple_C::QTEPopupDelay' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, UseTranslationAdjustments) == 0x00057C, "Member 'UGA_Grapple_C::UseTranslationAdjustments' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, EndSequenceSettings) == 0x000580, "Member 'UGA_Grapple_C::EndSequenceSettings' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, StartSequenceSettings) == 0x0005A0, "Member 'UGA_Grapple_C::StartSequenceSettings' has a wrong offset!");
static_assert(offsetof(UGA_Grapple_C, ActorsToIgnoreForTrace) == 0x0005C0, "Member 'UGA_Grapple_C::ActorsToIgnoreForTrace' has a wrong offset!");

}

