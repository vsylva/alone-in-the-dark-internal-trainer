#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: EQSC_Player

#include "Basic.hpp"


namespace SDK::Params
{

// Function EQSC_Player.EQSC_Player_C.ProvideSingleActor
// 0x0050 (0x0050 - 0x0000)
struct EQSC_Player_C_ProvideSingleActor final
{
public:
	class UObject*                                QuerierObject;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 QuerierActor;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ResultingActor;                                    // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TestPlayerTag;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0028(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(EQSC_Player_C_ProvideSingleActor) == 0x000008, "Wrong alignment on EQSC_Player_C_ProvideSingleActor");
static_assert(sizeof(EQSC_Player_C_ProvideSingleActor) == 0x000050, "Wrong size on EQSC_Player_C_ProvideSingleActor");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, QuerierObject) == 0x000000, "Member 'EQSC_Player_C_ProvideSingleActor::QuerierObject' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, QuerierActor) == 0x000008, "Member 'EQSC_Player_C_ProvideSingleActor::QuerierActor' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, ResultingActor) == 0x000010, "Member 'EQSC_Player_C_ProvideSingleActor::ResultingActor' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, TestPlayerTag) == 0x000018, "Member 'EQSC_Player_C_ProvideSingleActor::TestPlayerTag' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, CallFunc_GetPlayerPawn_ReturnValue) == 0x000020, "Member 'EQSC_Player_C_ProvideSingleActor::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, CallFunc_GetAllActorsWithTag_OutActors) == 0x000028, "Member 'EQSC_Player_C_ProvideSingleActor::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'EQSC_Player_C_ProvideSingleActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, CallFunc_Array_Get_Item) == 0x000040, "Member 'EQSC_Player_C_ProvideSingleActor::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'EQSC_Player_C_ProvideSingleActor::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(EQSC_Player_C_ProvideSingleActor, CallFunc_Greater_IntInt_ReturnValue) == 0x00004C, "Member 'EQSC_Player_C_ProvideSingleActor::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

}

