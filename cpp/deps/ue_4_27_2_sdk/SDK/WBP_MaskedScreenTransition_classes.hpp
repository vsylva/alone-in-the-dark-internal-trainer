#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MaskedScreenTransition

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MaskedScreenTransition.WBP_MaskedScreenTransition_C
// 0x0080 (0x02E0 - 0x0260)
class UWBP_MaskedScreenTransition_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPiecesRetainerBox*                     Mask;                                              // 0x0268(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UNamedSlot*                             WidgetSlot;                                        // 0x0270(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         ElapsedTimer;                                      // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TransitionLength;                                  // 0x027C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LengthOfCurve;                                     // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve_ErodeMin;                                    // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          PlayTransition;                                    // 0x0290(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            Curve_ErodeMax;                                    // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Curve_Scale;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PreTransition;                                     // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             PostTransition;                                    // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UCurveFloat*                            Curve_Opacity;                                     // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      MaskMaterial;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallOnce;                                          // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void DoTransition(float DeltaTime, bool* IsTransitionDone);
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void OnInitialized();
	void ExecuteUbergraph_WBP_MaskedScreenTransition(int32 EntryPoint);
	void PostTransition__DelegateSignature();
	void PreTransition__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MaskedScreenTransition_C">();
	}
	static class UWBP_MaskedScreenTransition_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MaskedScreenTransition_C>();
	}
};
static_assert(alignof(UWBP_MaskedScreenTransition_C) == 0x000008, "Wrong alignment on UWBP_MaskedScreenTransition_C");
static_assert(sizeof(UWBP_MaskedScreenTransition_C) == 0x0002E0, "Wrong size on UWBP_MaskedScreenTransition_C");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, UberGraphFrame) == 0x000260, "Member 'UWBP_MaskedScreenTransition_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, Mask) == 0x000268, "Member 'UWBP_MaskedScreenTransition_C::Mask' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, WidgetSlot) == 0x000270, "Member 'UWBP_MaskedScreenTransition_C::WidgetSlot' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, ElapsedTimer) == 0x000278, "Member 'UWBP_MaskedScreenTransition_C::ElapsedTimer' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, TransitionLength) == 0x00027C, "Member 'UWBP_MaskedScreenTransition_C::TransitionLength' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, LengthOfCurve) == 0x000280, "Member 'UWBP_MaskedScreenTransition_C::LengthOfCurve' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, Curve_ErodeMin) == 0x000288, "Member 'UWBP_MaskedScreenTransition_C::Curve_ErodeMin' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, PlayTransition) == 0x000290, "Member 'UWBP_MaskedScreenTransition_C::PlayTransition' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, Curve_ErodeMax) == 0x000298, "Member 'UWBP_MaskedScreenTransition_C::Curve_ErodeMax' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, Curve_Scale) == 0x0002A0, "Member 'UWBP_MaskedScreenTransition_C::Curve_Scale' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, PreTransition) == 0x0002A8, "Member 'UWBP_MaskedScreenTransition_C::PreTransition' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, PostTransition) == 0x0002B8, "Member 'UWBP_MaskedScreenTransition_C::PostTransition' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, Curve_Opacity) == 0x0002C8, "Member 'UWBP_MaskedScreenTransition_C::Curve_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, MaskMaterial) == 0x0002D0, "Member 'UWBP_MaskedScreenTransition_C::MaskMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_MaskedScreenTransition_C, CallOnce) == 0x0002D8, "Member 'UWBP_MaskedScreenTransition_C::CallOnce' has a wrong offset!");

}

