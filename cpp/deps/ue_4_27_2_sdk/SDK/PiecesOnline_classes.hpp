#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesOnline

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_classes.hpp"
#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class PiecesOnline.PiecesDLCSubsystem
// 0x0010 (0x0040 - 0x0030)
class UPiecesDLCSubsystem final : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x10];                                      // 0x0030(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	bool DLCIsOwned(const class UDLCData* DLCId);
	void QueryDLCStatus();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesDLCSubsystem">();
	}
	static class UPiecesDLCSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesDLCSubsystem>();
	}
};
static_assert(alignof(UPiecesDLCSubsystem) == 0x000008, "Wrong alignment on UPiecesDLCSubsystem");
static_assert(sizeof(UPiecesDLCSubsystem) == 0x000040, "Wrong size on UPiecesDLCSubsystem");

// Class PiecesOnline.PiecesActivitiesSubsystem
// 0x0038 (0x0068 - 0x0030)
class UPiecesActivitiesSubsystem : public UGameInstanceSubsystem
{
public:
	uint8                                         Pad_30[0x18];                                      // 0x0030(0x0018)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UPiecesActivityBase*>            Activities;                                        // 0x0048(0x0010)(ZeroConstructor, Protected, NativeAccessSpecifierProtected)
	uint8                                         Pad_58[0x10];                                      // 0x0058(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void OnEnterMainMenu();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesActivitiesSubsystem">();
	}
	static class UPiecesActivitiesSubsystem* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesActivitiesSubsystem>();
	}
};
static_assert(alignof(UPiecesActivitiesSubsystem) == 0x000008, "Wrong alignment on UPiecesActivitiesSubsystem");
static_assert(sizeof(UPiecesActivitiesSubsystem) == 0x000068, "Wrong size on UPiecesActivitiesSubsystem");
static_assert(offsetof(UPiecesActivitiesSubsystem, Activities) == 0x000048, "Member 'UPiecesActivitiesSubsystem::Activities' has a wrong offset!");

// Class PiecesOnline.PiecesActivityBase
// 0x0100 (0x0130 - 0x0030)
class UPiecesActivityBase : public UDataAsset
{
public:
	uint8                                         Pad_30[0x78];                                      // 0x0030(0x0078)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ActivityID;                                        // 0x00A8(0x0010)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class FString, struct FGameplayTag>      Tasks;                                             // 0x00B8(0x0050)(Edit, Protected, NativeAccessSpecifierProtected)
	bool                                          UnavailableWhenCompleted;                          // 0x0108(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 AvailableWhenActivityCompleted;                    // 0x0110(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	uint8                                         Pad_120[0x10];                                     // 0x0120(0x0010)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesActivityBase">();
	}
	static class UPiecesActivityBase* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesActivityBase>();
	}
};
static_assert(alignof(UPiecesActivityBase) == 0x000008, "Wrong alignment on UPiecesActivityBase");
static_assert(sizeof(UPiecesActivityBase) == 0x000130, "Wrong size on UPiecesActivityBase");
static_assert(offsetof(UPiecesActivityBase, ActivityID) == 0x0000A8, "Member 'UPiecesActivityBase::ActivityID' has a wrong offset!");
static_assert(offsetof(UPiecesActivityBase, Tasks) == 0x0000B8, "Member 'UPiecesActivityBase::Tasks' has a wrong offset!");
static_assert(offsetof(UPiecesActivityBase, UnavailableWhenCompleted) == 0x000108, "Member 'UPiecesActivityBase::UnavailableWhenCompleted' has a wrong offset!");
static_assert(offsetof(UPiecesActivityBase, AvailableWhenActivityCompleted) == 0x000110, "Member 'UPiecesActivityBase::AvailableWhenActivityCompleted' has a wrong offset!");

// Class PiecesOnline.BFL_PiecesOnline
// 0x0000 (0x0028 - 0x0028)
class UBFL_PiecesOnline final : public UBlueprintFunctionLibrary
{
public:
	static const class FString GetPlayerNickname();
	static const class FString GetPreOrderUrl();
	static void ShowStoreUI(const class FString& ProductID);
	static void ShowWebURL(const class FString& URL);
	static bool TakeScreenShot();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BFL_PiecesOnline">();
	}
	static class UBFL_PiecesOnline* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBFL_PiecesOnline>();
	}
};
static_assert(alignof(UBFL_PiecesOnline) == 0x000008, "Wrong alignment on UBFL_PiecesOnline");
static_assert(sizeof(UBFL_PiecesOnline) == 0x000028, "Wrong size on UBFL_PiecesOnline");

// Class PiecesOnline.BPAsyncAction_QueryDLCs
// 0x0018 (0x0048 - 0x0030)
class UBPAsyncAction_QueryDLCs final : public UBlueprintAsyncActionBase
{
public:
	FMulticastInlineDelegateProperty_             OnCompleted;                                       // 0x0030(0x0010)(ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_40[0x8];                                       // 0x0040(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UBPAsyncAction_QueryDLCs* AsyncQueryDLCs(class UObject* WorldContextObject);

	void OnDLCQueryComplete__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"BPAsyncAction_QueryDLCs">();
	}
	static class UBPAsyncAction_QueryDLCs* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPAsyncAction_QueryDLCs>();
	}
};
static_assert(alignof(UBPAsyncAction_QueryDLCs) == 0x000008, "Wrong alignment on UBPAsyncAction_QueryDLCs");
static_assert(sizeof(UBPAsyncAction_QueryDLCs) == 0x000048, "Wrong size on UBPAsyncAction_QueryDLCs");
static_assert(offsetof(UBPAsyncAction_QueryDLCs, OnCompleted) == 0x000030, "Member 'UBPAsyncAction_QueryDLCs::OnCompleted' has a wrong offset!");

// Class PiecesOnline.DLCData
// 0x0030 (0x0060 - 0x0030)
class UDLCData final : public UDataAsset
{
public:
	class FString                                 SteamAppID;                                        // 0x0030(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 XboxDurableId;                                     // 0x0040(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class FString                                 PlaystationEntitlementLabel;                       // 0x0050(0x0010)(Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DLCData">();
	}
	static class UDLCData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDLCData>();
	}
};
static_assert(alignof(UDLCData) == 0x000008, "Wrong alignment on UDLCData");
static_assert(sizeof(UDLCData) == 0x000060, "Wrong size on UDLCData");
static_assert(offsetof(UDLCData, SteamAppID) == 0x000030, "Member 'UDLCData::SteamAppID' has a wrong offset!");
static_assert(offsetof(UDLCData, XboxDurableId) == 0x000040, "Member 'UDLCData::XboxDurableId' has a wrong offset!");
static_assert(offsetof(UDLCData, PlaystationEntitlementLabel) == 0x000050, "Member 'UDLCData::PlaystationEntitlementLabel' has a wrong offset!");

// Class PiecesOnline.PiecesOnlineSettings
// 0x0088 (0x00C0 - 0x0038)
class UPiecesOnlineSettings final : public UDeveloperSettings
{
public:
	TArray<TSoftObjectPtr<class UPiecesActivityBase>> Activities;                                        // 0x0038(0x0010)(Edit, ZeroConstructor, Config, UObjectWrapper, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDLCData>                CostumePackDLC;                                    // 0x0048(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDLCData>                FilterPackDLC;                                     // 0x0070(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TSoftObjectPtr<class UDLCData>                CommentaryTrackDLC;                                // 0x0098(0x0028)(Edit, Config, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"PiecesOnlineSettings">();
	}
	static class UPiecesOnlineSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPiecesOnlineSettings>();
	}
};
static_assert(alignof(UPiecesOnlineSettings) == 0x000008, "Wrong alignment on UPiecesOnlineSettings");
static_assert(sizeof(UPiecesOnlineSettings) == 0x0000C0, "Wrong size on UPiecesOnlineSettings");
static_assert(offsetof(UPiecesOnlineSettings, Activities) == 0x000038, "Member 'UPiecesOnlineSettings::Activities' has a wrong offset!");
static_assert(offsetof(UPiecesOnlineSettings, CostumePackDLC) == 0x000048, "Member 'UPiecesOnlineSettings::CostumePackDLC' has a wrong offset!");
static_assert(offsetof(UPiecesOnlineSettings, FilterPackDLC) == 0x000070, "Member 'UPiecesOnlineSettings::FilterPackDLC' has a wrong offset!");
static_assert(offsetof(UPiecesOnlineSettings, CommentaryTrackDLC) == 0x000098, "Member 'UPiecesOnlineSettings::CommentaryTrackDLC' has a wrong offset!");

}

