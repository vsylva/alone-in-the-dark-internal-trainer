#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ContextualTraverse_Base

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.UnlinkPreviousABP
// 0x0028 (0x0028 - 0x0000)
struct BP_ContextualTraverse_Base_C_UnlinkPreviousABP final
{
public:
	class UAnimInstance*                          AnimInstance;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_UnlinkPreviousABP) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_UnlinkPreviousABP");
static_assert(sizeof(BP_ContextualTraverse_Base_C_UnlinkPreviousABP) == 0x000028, "Wrong size on BP_ContextualTraverse_Base_C_UnlinkPreviousABP");
static_assert(offsetof(BP_ContextualTraverse_Base_C_UnlinkPreviousABP, AnimInstance) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_UnlinkPreviousABP::AnimInstance' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_UnlinkPreviousABP, CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_UnlinkPreviousABP::CallFunc_GetLinkedAnimLayerInstanceByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_UnlinkPreviousABP, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_UnlinkPreviousABP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_UnlinkPreviousABP, CallFunc_GetAnimInstance_ReturnValue) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_UnlinkPreviousABP::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_UnlinkPreviousABP, CallFunc_GetObjectClass_ReturnValue) == 0x000020, "Member 'BP_ContextualTraverse_Base_C_UnlinkPreviousABP::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.EndInteractionIfInteracting
// 0x0010 (0x0010 - 0x0000)
struct BP_ContextualTraverse_Base_C_EndInteractionIfInteracting final
{
public:
	class UInteractionFlowComponent*              InteractionComponent;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CurrentlyInteracting_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_EndInteractionIfInteracting) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_EndInteractionIfInteracting");
static_assert(sizeof(BP_ContextualTraverse_Base_C_EndInteractionIfInteracting) == 0x000010, "Wrong size on BP_ContextualTraverse_Base_C_EndInteractionIfInteracting");
static_assert(offsetof(BP_ContextualTraverse_Base_C_EndInteractionIfInteracting, InteractionComponent) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_EndInteractionIfInteracting::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_EndInteractionIfInteracting, CallFunc_CurrentlyInteracting_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_EndInteractionIfInteracting::CallFunc_CurrentlyInteracting_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.DetermineSavingEnabledAfterFinishingTraversal
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Base_C_DetermineSavingEnabledAfterFinishingTraversal final
{
public:
	class UPiecesSavingEnabledSubsystem*          CallFunc_GetGameplaySessionSubsystem_ReturnValue;  // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_DetermineSavingEnabledAfterFinishingTraversal) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_DetermineSavingEnabledAfterFinishingTraversal");
static_assert(sizeof(BP_ContextualTraverse_Base_C_DetermineSavingEnabledAfterFinishingTraversal) == 0x000008, "Wrong size on BP_ContextualTraverse_Base_C_DetermineSavingEnabledAfterFinishingTraversal");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DetermineSavingEnabledAfterFinishingTraversal, CallFunc_GetGameplaySessionSubsystem_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_DetermineSavingEnabledAfterFinishingTraversal::CallFunc_GetGameplaySessionSubsystem_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.ActivateInteractionOnOverlap
// 0x0018 (0x0018 - 0x0000)
struct BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap final
{
public:
	class UPrimitiveComponent*                    Collider;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractionFlowComponent*              InteractionComponent;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOverlappingActor_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap");
static_assert(sizeof(BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap) == 0x000018, "Wrong size on BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap, Collider) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap::Collider' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap, InteractionComponent) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap::InteractionComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap, CallFunc_IsOverlappingActor_ReturnValue) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_ActivateInteractionOnOverlap::CallFunc_IsOverlappingActor_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.RemoveMotionWarpingStartData
// 0x0010 (0x0010 - 0x0000)
struct BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData final
{
public:
	class UMotionWarpingComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData");
static_assert(sizeof(BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData) == 0x000010, "Wrong size on BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData");
static_assert(offsetof(BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_RemoveMotionWarpingStartData::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.SetupStartMotionWarping
// 0x00A0 (0x00A0 - 0x0000)
struct BP_ContextualTraverse_Base_C_SetupStartMotionWarping final
{
public:
	class AActor*                                 InteractingCharacter_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        StartRotationComponent;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMotionWarpingComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_64[0xC];                                       // 0x0064(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping) == 0x000010, "Wrong alignment on BP_ContextualTraverse_Base_C_SetupStartMotionWarping");
static_assert(sizeof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping) == 0x0000A0, "Wrong size on BP_ContextualTraverse_Base_C_SetupStartMotionWarping");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, InteractingCharacter_0) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::InteractingCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, StartRotationComponent) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::StartRotationComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000034, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_BreakRotator_Roll_1) == 0x00004C, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_BreakRotator_Pitch_1) == 0x000050, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_BreakRotator_Yaw_1) == 0x000054, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_MakeRotator_ReturnValue) == 0x000058, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupStartMotionWarping, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'BP_ContextualTraverse_Base_C_SetupStartMotionWarping::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.StopReposition
// 0x0004 (0x0004 - 0x0000)
struct BP_ContextualTraverse_Base_C_StopReposition final
{
public:
	bool                                          StopTranslation;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          StopRotation;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_StopReposition) == 0x000001, "Wrong alignment on BP_ContextualTraverse_Base_C_StopReposition");
static_assert(sizeof(BP_ContextualTraverse_Base_C_StopReposition) == 0x000004, "Wrong size on BP_ContextualTraverse_Base_C_StopReposition");
static_assert(offsetof(BP_ContextualTraverse_Base_C_StopReposition, StopTranslation) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_StopReposition::StopTranslation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_StopReposition, StopRotation) == 0x000001, "Member 'BP_ContextualTraverse_Base_C_StopReposition::StopRotation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_StopReposition, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'BP_ContextualTraverse_Base_C_StopReposition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_StopReposition, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_ContextualTraverse_Base_C_StopReposition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.TryHolsterWeapon
// 0x0020 (0x0020 - 0x0000)
struct BP_ContextualTraverse_Base_C_TryHolsterWeapon final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Instant;                                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_TryHolsterWeapon) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_TryHolsterWeapon");
static_assert(sizeof(BP_ContextualTraverse_Base_C_TryHolsterWeapon) == 0x000020, "Wrong size on BP_ContextualTraverse_Base_C_TryHolsterWeapon");
static_assert(offsetof(BP_ContextualTraverse_Base_C_TryHolsterWeapon, Character) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_TryHolsterWeapon::Character' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_TryHolsterWeapon, Instant) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_TryHolsterWeapon::Instant' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_TryHolsterWeapon, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_TryHolsterWeapon::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_TryHolsterWeapon, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_TryHolsterWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.CacheInteractionCollision
// 0x0002 (0x0002 - 0x0000)
struct BP_ContextualTraverse_Base_C_CacheInteractionCollision final
{
public:
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             CallFunc_GetCollisionEnabled_ReturnValue_1;        // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_CacheInteractionCollision) == 0x000001, "Wrong alignment on BP_ContextualTraverse_Base_C_CacheInteractionCollision");
static_assert(sizeof(BP_ContextualTraverse_Base_C_CacheInteractionCollision) == 0x000002, "Wrong size on BP_ContextualTraverse_Base_C_CacheInteractionCollision");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CacheInteractionCollision, CallFunc_GetCollisionEnabled_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_CacheInteractionCollision::CallFunc_GetCollisionEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CacheInteractionCollision, CallFunc_GetCollisionEnabled_ReturnValue_1) == 0x000001, "Member 'BP_ContextualTraverse_Base_C_CacheInteractionCollision::CallFunc_GetCollisionEnabled_ReturnValue_1' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.ResetRotationOnAffectedPitch
// 0x0028 (0x0028 - 0x0000)
struct BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch");
static_assert(sizeof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch) == 0x000028, "Wrong size on BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch, CallFunc_BreakRotator_Roll) == 0x00000C, "Member 'BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch, CallFunc_BreakRotator_Pitch) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch, CallFunc_BreakRotator_Yaw) == 0x000014, "Member 'BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000024, "Member 'BP_ContextualTraverse_Base_C_ResetRotationOnAffectedPitch::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.RemoveGameEffect
// 0x0010 (0x0010 - 0x0000)
struct BP_ContextualTraverse_Base_C_RemoveGameEffect final
{
public:
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveActiveGameplayEffect_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_RemoveGameEffect) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_RemoveGameEffect");
static_assert(sizeof(BP_ContextualTraverse_Base_C_RemoveGameEffect) == 0x000010, "Wrong size on BP_ContextualTraverse_Base_C_RemoveGameEffect");
static_assert(offsetof(BP_ContextualTraverse_Base_C_RemoveGameEffect, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_RemoveGameEffect::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_RemoveGameEffect, CallFunc_RemoveActiveGameplayEffect_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_RemoveGameEffect::CallFunc_RemoveActiveGameplayEffect_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.DEPRECATED_DeactivateInteractionComponents
// 0x0038 (0x0038 - 0x0000)
struct BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UInteractionComponent*>          CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractionComponent*                  CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents");
static_assert(sizeof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents) == 0x000038, "Wrong size on BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_ContextualTraverse_Base_C_DEPRECATED_DeactivateInteractionComponents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.ApplyContextualTraverseGameEffect
// 0x0010 (0x0010 - 0x0000)
struct BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect final
{
public:
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue; // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect");
static_assert(sizeof(BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect) == 0x000010, "Wrong size on BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect, CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_ApplyContextualTraverseGameEffect::CallFunc_BP_ApplyGameplayEffectToSelf_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.SetupInteraction
// 0x0020 (0x0020 - 0x0000)
struct BP_ContextualTraverse_Base_C_SetupInteraction final
{
public:
	class ACharacter*                             InteractingCharacter_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  K2Node_DynamicCast_AsBP_Player_Character;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_SetupInteraction) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_SetupInteraction");
static_assert(sizeof(BP_ContextualTraverse_Base_C_SetupInteraction) == 0x000020, "Wrong size on BP_ContextualTraverse_Base_C_SetupInteraction");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupInteraction, InteractingCharacter_0) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_SetupInteraction::InteractingCharacter_0' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupInteraction, K2Node_DynamicCast_AsBP_Player_Character) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_SetupInteraction::K2Node_DynamicCast_AsBP_Player_Character' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupInteraction, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_SetupInteraction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_SetupInteraction, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_SetupInteraction::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.MakeRotationFromRotComponent
// 0x0050 (0x0050 - 0x0000)
struct BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent final
{
public:
	class USceneComponent*                        StartRotation_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FRotator                               OutRotation;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent");
static_assert(sizeof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent) == 0x000050, "Wrong size on BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, StartRotation_0) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::StartRotation_0' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, OutRotation) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::OutRotation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, Temp_bool_Variable) == 0x000014, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_BreakRotator_Roll) == 0x000024, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_BreakRotator_Pitch) == 0x000028, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_BreakRotator_Yaw) == 0x00002C, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_BreakRotator_Roll_1) == 0x000030, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_BreakRotator_Pitch_1) == 0x000034, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_BreakRotator_Yaw_1) == 0x000038, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, K2Node_Select_Default) == 0x00003C, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'BP_ContextualTraverse_Base_C_MakeRotationFromRotComponent::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.CalculatePlayerMovement
// 0x00F0 (0x00F0 - 0x0000)
struct BP_ContextualTraverse_Base_C_CalculatePlayerMovement final
{
public:
	class USceneComponent*                        StartLocation_0;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class USceneComponent*                        StartRotation_0;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         Alpha;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotationFromRotComponent_OutRotation; // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0060(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_CalculatePlayerMovement");
static_assert(sizeof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement) == 0x0000F0, "Wrong size on BP_ContextualTraverse_Base_C_CalculatePlayerMovement");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, StartLocation_0) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::StartLocation_0' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, StartRotation_0) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::StartRotation_0' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, Alpha) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::Alpha' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_MakeRotationFromRotComponent_OutRotation) == 0x000014, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_MakeRotationFromRotComponent_OutRotation' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_BreakVector_X) == 0x00002C, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_BreakVector_Y) == 0x000030, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_BreakVector_Z) == 0x000034, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_RLerp_ReturnValue) == 0x000038, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_Add_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_VLerp_ReturnValue) == 0x000054, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000060, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CalculatePlayerMovement, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x0000E8, "Member 'BP_ContextualTraverse_Base_C_CalculatePlayerMovement::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.CachePlayerLocAndRot
// 0x0018 (0x0018 - 0x0000)
struct BP_ContextualTraverse_Base_C_CachePlayerLocAndRot final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_CachePlayerLocAndRot) == 0x000004, "Wrong alignment on BP_ContextualTraverse_Base_C_CachePlayerLocAndRot");
static_assert(sizeof(BP_ContextualTraverse_Base_C_CachePlayerLocAndRot) == 0x000018, "Wrong size on BP_ContextualTraverse_Base_C_CachePlayerLocAndRot");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CachePlayerLocAndRot, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_CachePlayerLocAndRot::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_CachePlayerLocAndRot, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00000C, "Member 'BP_ContextualTraverse_Base_C_CachePlayerLocAndRot::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Base_C_OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87 final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87");
static_assert(sizeof(BP_ContextualTraverse_Base_C_OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87) == 0x000008, "Wrong size on BP_ContextualTraverse_Base_C_OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87");
static_assert(offsetof(BP_ContextualTraverse_Base_C_OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87, TransformedCharacter) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87::TransformedCharacter' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Base_C_OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87 final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87");
static_assert(sizeof(BP_ContextualTraverse_Base_C_OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87) == 0x000008, "Wrong size on BP_ContextualTraverse_Base_C_OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87");
static_assert(offsetof(BP_ContextualTraverse_Base_C_OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87, TransformedCharacter) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87::TransformedCharacter' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Base_C_OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87 final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87");
static_assert(sizeof(BP_ContextualTraverse_Base_C_OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87) == 0x000008, "Wrong size on BP_ContextualTraverse_Base_C_OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87");
static_assert(offsetof(BP_ContextualTraverse_Base_C_OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87, TransformedCharacter) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87::TransformedCharacter' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.MoveToStartPosition
// 0x0010 (0x0010 - 0x0000)
struct BP_ContextualTraverse_Base_C_MoveToStartPosition final
{
public:
	class USceneComponent*                        StartLocationComponent;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        StartRotationComponent;                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_MoveToStartPosition) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_MoveToStartPosition");
static_assert(sizeof(BP_ContextualTraverse_Base_C_MoveToStartPosition) == 0x000010, "Wrong size on BP_ContextualTraverse_Base_C_MoveToStartPosition");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MoveToStartPosition, StartLocationComponent) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_MoveToStartPosition::StartLocationComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_MoveToStartPosition, StartRotationComponent) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_MoveToStartPosition::StartRotationComponent' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature");
static_assert(sizeof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature) == 0x000008, "Wrong size on BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature, InteractionCharacter) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature::InteractionCharacter' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature final
{
public:
	class UFlowComponent*                         FlowComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NotifyTag;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature");
static_assert(sizeof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature) == 0x000010, "Wrong size on BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature, FlowComponent) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature::FlowComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature, NotifyTag) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature::NotifyTag' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.ForcedInteraction
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Base_C_ForcedInteraction final
{
public:
	class ACharacter*                             InteractingCharacter_0;                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_ForcedInteraction) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_ForcedInteraction");
static_assert(sizeof(BP_ContextualTraverse_Base_C_ForcedInteraction) == 0x000008, "Wrong size on BP_ContextualTraverse_Base_C_ForcedInteraction");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ForcedInteraction, InteractingCharacter_0) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_ForcedInteraction::InteractingCharacter_0' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature");
static_assert(sizeof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature) == 0x000008, "Wrong size on BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature");
static_assert(offsetof(BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature, InteractionCharacter) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature::InteractionCharacter' has a wrong offset!");

// Function BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C.ExecuteUbergraph_BP_ContextualTraverse_Base
// 0x02A0 (0x02A0 - 0x0000)
struct BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPiecesSavingEnabledSubsystem*          CallFunc_GetGameplaySessionSubsystem_ReturnValue;  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             Temp_object_Variable;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface;               // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface_1;             // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_CustomEvent_StartLocationComponent;         // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        K2Node_CustomEvent_StartRotationComponent;         // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0090(0x0030)(IsPlainOldData, NoDestructor)
	class ACharacter*                             K2Node_ComponentBoundEvent_InteractionCharacter_1; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter_1;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate;              // 0x00D0(0x0010)(ZeroConstructor, NoDestructor)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0100(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0188(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0198(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A4[0x4];                                      // 0x01A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character_1;         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01C4(0x0010)(ZeroConstructor, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E4[0x4];                                      // 0x01E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface_2;             // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x020C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMotionWarpingComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0228(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_RepositionAndReorient*   CallFunc_RepositionAndReorient_OutActionProxy;     // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_RepositionAndReorient*   CallFunc_RepositionAndReorient_ReturnValue;        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UFlowComponent*                         K2Node_ComponentBoundEvent_FlowComponent;          // 0x0250(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_NotifyTag;              // 0x0258(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_InteractingCharacter;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter_2;         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_ComponentBoundEvent_InteractionCharacter;   // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x028C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base) == 0x000010, "Wrong alignment on BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base");
static_assert(sizeof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base) == 0x0002A0, "Wrong size on BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, EntryPoint) == 0x000000, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_GetGameplaySessionSubsystem_ReturnValue) == 0x000008, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_GetGameplaySessionSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_FMax_ReturnValue) == 0x000010, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, Temp_object_Variable) == 0x000018, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CustomEvent_TransformedCharacter) == 0x000020, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CustomEvent_TransformedCharacter' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, Temp_bool_IsClosed_Variable) == 0x000030, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_AsAnim_Interface) == 0x000038, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_AsAnim_Interface' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_AsAnim_Interface_1) == 0x000050, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_AsAnim_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, Temp_bool_Has_Been_Initd_Variable) == 0x000061, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CustomEvent_StartLocationComponent) == 0x000068, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CustomEvent_StartLocationComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CustomEvent_StartRotationComponent) == 0x000070, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CustomEvent_StartRotationComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000078, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000090, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_InteractionCharacter_1) == 0x0000C0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_InteractionCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CustomEvent_TransformedCharacter_1) == 0x0000C8, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CustomEvent_TransformedCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0000E0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000E8, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OtherComp_1) == 0x0000F0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0000F8, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_bFromSweep) == 0x0000FC, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_SweepResult) == 0x000100, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000188, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OtherActor) == 0x000190, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OtherComp) == 0x000198, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001A0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_AsOFPlayer_Character) == 0x0001A8, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_AsOFPlayer_Character_1) == 0x0001B8, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_AsOFPlayer_Character_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_bSuccess_3) == 0x0001C0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001C4, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001D4, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_Vector_Distance_ReturnValue) == 0x0001E0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0001E8, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0001F0, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_AsAnim_Interface_2) == 0x0001F8, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_AsAnim_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_DynamicCast_bSuccess_4) == 0x000208, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_GetVelocity_ReturnValue) == 0x00020C, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000218, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_VSize_ReturnValue) == 0x000220, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_Less_FloatFloat_ReturnValue) == 0x000224, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_GetComponentByClass_ReturnValue) == 0x000228, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_SelectFloat_ReturnValue) == 0x000230, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_RepositionAndReorient_OutActionProxy) == 0x000238, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_RepositionAndReorient_OutActionProxy' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_RepositionAndReorient_ReturnValue) == 0x000240, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_RepositionAndReorient_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_IsValid_ReturnValue) == 0x000248, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_IsValid_ReturnValue_1) == 0x000249, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_FlowComponent) == 0x000250, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_FlowComponent' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_NotifyTag) == 0x000258, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_NotifyTag' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000260, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CustomEvent_InteractingCharacter) == 0x000268, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CustomEvent_InteractingCharacter' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CustomEvent_TransformedCharacter_2) == 0x000270, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CustomEvent_TransformedCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_IsValid_ReturnValue_2) == 0x000278, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_ComponentBoundEvent_InteractionCharacter) == 0x000280, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_ComponentBoundEvent_InteractionCharacter' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000288, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base, K2Node_CreateDelegate_OutputDelegate_2) == 0x00028C, "Member 'BP_ContextualTraverse_Base_C_ExecuteUbergraph_BP_ContextualTraverse_Base::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");

}

