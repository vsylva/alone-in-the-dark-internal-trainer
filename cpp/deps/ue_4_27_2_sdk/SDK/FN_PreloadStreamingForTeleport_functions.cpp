#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_PreloadStreamingForTeleport

#include "Basic.hpp"

#include "FN_PreloadStreamingForTeleport_classes.hpp"
#include "FN_PreloadStreamingForTeleport_parameters.hpp"


namespace SDK
{

// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.AddStreamingLoaderComponents
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    FoundMatchingTag                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UFN_PreloadStreamingForTeleport_C::AddStreamingLoaderComponents(bool* FoundMatchingTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "AddStreamingLoaderComponents");

	Params::FN_PreloadStreamingForTeleport_C_AddStreamingLoaderComponents Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FoundMatchingTag != nullptr)
		*FoundMatchingTag = Parms.FoundMatchingTag;
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.ShouldReenableStreaming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UFN_PreloadStreamingForTeleport_C::ShouldReenableStreaming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "ShouldReenableStreaming");

	Params::FN_PreloadStreamingForTeleport_C_ShouldReenableStreaming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.GetLevelsNotToStream
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<TSoftObjectPtr<class UWorld>>    Value                                                  (Parm, OutParm)

void UFN_PreloadStreamingForTeleport_C::GetLevelsNotToStream(TArray<TSoftObjectPtr<class UWorld>>* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "GetLevelsNotToStream");

	Params::FN_PreloadStreamingForTeleport_C_GetLevelsNotToStream Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.K2_ExecuteInput
// (Event, Protected, HasOutParams, BlueprintEvent)
// Parameters:
// class FName                             PinName                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFN_PreloadStreamingForTeleport_C::K2_ExecuteInput(const class FName& PinName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "K2_ExecuteInput");

	Params::FN_PreloadStreamingForTeleport_C_K2_ExecuteInput Parms{};

	Parms.PinName = PinName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.OnLoad
// (Event, Protected, BlueprintEvent)

void UFN_PreloadStreamingForTeleport_C::OnLoad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "OnLoad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.AddStreamingLoaderComponent
// (BlueprintCallable, BlueprintEvent)

void UFN_PreloadStreamingForTeleport_C::AddStreamingLoaderComponent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "AddStreamingLoaderComponent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.CancelPreloadEventTimer
// (BlueprintCallable, BlueprintEvent)

void UFN_PreloadStreamingForTeleport_C::CancelPreloadEventTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "CancelPreloadEventTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.ExecuteUbergraph_FN_PreloadStreamingForTeleport
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFN_PreloadStreamingForTeleport_C::ExecuteUbergraph_FN_PreloadStreamingForTeleport(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "ExecuteUbergraph_FN_PreloadStreamingForTeleport");

	Params::FN_PreloadStreamingForTeleport_C_ExecuteUbergraph_FN_PreloadStreamingForTeleport Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function FN_PreloadStreamingForTeleport.FN_PreloadStreamingForTeleport_C.K2_GetNodeDescription
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString UFN_PreloadStreamingForTeleport_C::K2_GetNodeDescription() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("FN_PreloadStreamingForTeleport_C", "K2_GetNodeDescription");

	Params::FN_PreloadStreamingForTeleport_C_K2_GetNodeDescription Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

