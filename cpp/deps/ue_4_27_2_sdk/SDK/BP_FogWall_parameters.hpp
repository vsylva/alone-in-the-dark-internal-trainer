#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FogWall

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FogWall.BP_FogWall_C.ExecuteUbergraph_BP_FogWall
// 0x0030 (0x0030 - 0x0000)
struct BP_FogWall_C_ExecuteUbergraph_BP_FogWall final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UOFGameUserSettings* Settings)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFGameUserSettings*                    CallFunc_GetOFGameUserSettings_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOFGameUserSettings*                    K2Node_CustomEvent_settings;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall) == 0x000008, "Wrong alignment on BP_FogWall_C_ExecuteUbergraph_BP_FogWall");
static_assert(sizeof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall) == 0x000030, "Wrong size on BP_FogWall_C_ExecuteUbergraph_BP_FogWall");
static_assert(offsetof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall, EntryPoint) == 0x000000, "Member 'BP_FogWall_C_ExecuteUbergraph_BP_FogWall::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_FogWall_C_ExecuteUbergraph_BP_FogWall::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall, CallFunc_GetOFGameUserSettings_ReturnValue) == 0x000018, "Member 'BP_FogWall_C_ExecuteUbergraph_BP_FogWall::CallFunc_GetOFGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall, K2Node_CustomEvent_settings) == 0x000020, "Member 'BP_FogWall_C_ExecuteUbergraph_BP_FogWall::K2Node_CustomEvent_settings' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_FogWall_C_ExecuteUbergraph_BP_FogWall::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_ExecuteUbergraph_BP_FogWall, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_FogWall_C_ExecuteUbergraph_BP_FogWall::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_FogWall.BP_FogWall_C.OnSettingsChanged
// 0x0008 (0x0008 - 0x0000)
struct BP_FogWall_C_OnSettingsChanged final
{
public:
	class UOFGameUserSettings*                    Settings;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FogWall_C_OnSettingsChanged) == 0x000008, "Wrong alignment on BP_FogWall_C_OnSettingsChanged");
static_assert(sizeof(BP_FogWall_C_OnSettingsChanged) == 0x000008, "Wrong size on BP_FogWall_C_OnSettingsChanged");
static_assert(offsetof(BP_FogWall_C_OnSettingsChanged, Settings) == 0x000000, "Member 'BP_FogWall_C_OnSettingsChanged::Settings' has a wrong offset!");

// Function BP_FogWall.BP_FogWall_C.UserConstructionScript
// 0x00D0 (0x00D0 - 0x0000)
struct BP_FogWall_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0048(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FogWall_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_FogWall_C_UserConstructionScript");
static_assert(sizeof(BP_FogWall_C_UserConstructionScript) == 0x0000D0, "Wrong size on BP_FogWall_C_UserConstructionScript");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue) == 0x000000, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000010, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue_1) == 0x00001C, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000034, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000038, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x00003C, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000044, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000048, "Member 'BP_FogWall_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_FogWall.BP_FogWall_C.SetBlockerLocation
// 0x00C4 (0x00C4 - 0x0000)
struct BP_FogWall_C_SetBlockerLocation final
{
public:
	float                                         FrontOffset;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetScaledBoxExtent_ReturnValue;           // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x003C(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_FogWall_C_SetBlockerLocation) == 0x000004, "Wrong alignment on BP_FogWall_C_SetBlockerLocation");
static_assert(sizeof(BP_FogWall_C_SetBlockerLocation) == 0x0000C4, "Wrong size on BP_FogWall_C_SetBlockerLocation");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, FrontOffset) == 0x000000, "Member 'BP_FogWall_C_SetBlockerLocation::FrontOffset' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_GetScaledBoxExtent_ReturnValue) == 0x000004, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_GetScaledBoxExtent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_BreakVector_X) == 0x000010, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_BreakVector_Y) == 0x000014, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_BreakVector_Z) == 0x000018, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_BreakVector_X_1) == 0x00001C, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_BreakVector_Y_1) == 0x000020, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_BreakVector_Z_1) == 0x000024, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_SetBlockerLocation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x00003C, "Member 'BP_FogWall_C_SetBlockerLocation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_FogWall.BP_FogWall_C.UpdateLowQualityFogVisibility
// 0x0010 (0x0010 - 0x0000)
struct BP_FogWall_C_UpdateLowQualityFogVisibility final
{
public:
	class UOFGameUserSettings*                    Settings;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetOFVolumetricQuality_ReturnValue;       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FogWall_C_UpdateLowQualityFogVisibility) == 0x000008, "Wrong alignment on BP_FogWall_C_UpdateLowQualityFogVisibility");
static_assert(sizeof(BP_FogWall_C_UpdateLowQualityFogVisibility) == 0x000010, "Wrong size on BP_FogWall_C_UpdateLowQualityFogVisibility");
static_assert(offsetof(BP_FogWall_C_UpdateLowQualityFogVisibility, Settings) == 0x000000, "Member 'BP_FogWall_C_UpdateLowQualityFogVisibility::Settings' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UpdateLowQualityFogVisibility, CallFunc_GetOFVolumetricQuality_ReturnValue) == 0x000008, "Member 'BP_FogWall_C_UpdateLowQualityFogVisibility::CallFunc_GetOFVolumetricQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FogWall_C_UpdateLowQualityFogVisibility, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'BP_FogWall_C_UpdateLowQualityFogVisibility::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

}

