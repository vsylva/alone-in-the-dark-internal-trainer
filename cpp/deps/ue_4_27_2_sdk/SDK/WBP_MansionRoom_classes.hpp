#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MansionRoom

#include "Basic.hpp"

#include "ObsidianFox_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_MansionRoom.WBP_MansionRoom_C
// 0x0188 (0x04A0 - 0x0318)
class UWBP_MansionRoom_C final : public UMapMansionRoom
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       HighlightPlayerPosition;                           // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 MansionRoom;                                       // 0x0328(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              TextBox;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               TextSizeBox;                                       // 0x0338(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   RoomText;                                          // 0x0340(0x0018)(Edit, BlueprintVisible)
	float                                         Angle;                                             // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextWidth;                                         // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TextHeight;                                        // 0x0360(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Rotate;                                            // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_365[0x3];                                      // 0x0365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             MansionRoomTexture_Player;                         // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             MansionRoomTexture;                                // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           UnexploredRoomColor;                               // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RoomCleared;                                       // 0x0388(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           RoomNotClearedColor;                               // 0x0398(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                In_Padding;                                        // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                PuzzleIconPadding;                                 // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          NewVar_0;                                          // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            ImageBrush;                                        // 0x03D0(0x0088)(Edit, BlueprintVisible)
	class FText                                   RoomTextWithItem;                                  // 0x0458(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	TSoftObjectPtr<class UItemData>               ItemToHave;                                        // 0x0470(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	float                                         AngleText;                                         // 0x0498(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetFloorColor();
	void HaveItemAndChangeName();
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void ExecuteUbergraph_WBP_MansionRoom(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_MansionRoom_C">();
	}
	static class UWBP_MansionRoom_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_MansionRoom_C>();
	}
};
static_assert(alignof(UWBP_MansionRoom_C) == 0x000008, "Wrong alignment on UWBP_MansionRoom_C");
static_assert(sizeof(UWBP_MansionRoom_C) == 0x0004A0, "Wrong size on UWBP_MansionRoom_C");
static_assert(offsetof(UWBP_MansionRoom_C, UberGraphFrame) == 0x000318, "Member 'UWBP_MansionRoom_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, HighlightPlayerPosition) == 0x000320, "Member 'UWBP_MansionRoom_C::HighlightPlayerPosition' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, MansionRoom) == 0x000328, "Member 'UWBP_MansionRoom_C::MansionRoom' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, TextBox) == 0x000330, "Member 'UWBP_MansionRoom_C::TextBox' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, TextSizeBox) == 0x000338, "Member 'UWBP_MansionRoom_C::TextSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, RoomText) == 0x000340, "Member 'UWBP_MansionRoom_C::RoomText' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, Angle) == 0x000358, "Member 'UWBP_MansionRoom_C::Angle' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, TextWidth) == 0x00035C, "Member 'UWBP_MansionRoom_C::TextWidth' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, TextHeight) == 0x000360, "Member 'UWBP_MansionRoom_C::TextHeight' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, Rotate) == 0x000364, "Member 'UWBP_MansionRoom_C::Rotate' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, MansionRoomTexture_Player) == 0x000368, "Member 'UWBP_MansionRoom_C::MansionRoomTexture_Player' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, MansionRoomTexture) == 0x000370, "Member 'UWBP_MansionRoom_C::MansionRoomTexture' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, UnexploredRoomColor) == 0x000378, "Member 'UWBP_MansionRoom_C::UnexploredRoomColor' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, RoomCleared) == 0x000388, "Member 'UWBP_MansionRoom_C::RoomCleared' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, RoomNotClearedColor) == 0x000398, "Member 'UWBP_MansionRoom_C::RoomNotClearedColor' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, In_Padding) == 0x0003A8, "Member 'UWBP_MansionRoom_C::In_Padding' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, PuzzleIconPadding) == 0x0003B8, "Member 'UWBP_MansionRoom_C::PuzzleIconPadding' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, NewVar_0) == 0x0003C8, "Member 'UWBP_MansionRoom_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, ImageBrush) == 0x0003D0, "Member 'UWBP_MansionRoom_C::ImageBrush' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, RoomTextWithItem) == 0x000458, "Member 'UWBP_MansionRoom_C::RoomTextWithItem' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, ItemToHave) == 0x000470, "Member 'UWBP_MansionRoom_C::ItemToHave' has a wrong offset!");
static_assert(offsetof(UWBP_MansionRoom_C, AngleText) == 0x000498, "Member 'UWBP_MansionRoom_C::AngleText' has a wrong offset!");

}

