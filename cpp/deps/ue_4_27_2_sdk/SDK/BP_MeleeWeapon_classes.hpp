#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MeleeWeapon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MeleeWeapon.BP_MeleeWeapon_C
// 0x0020 (0x0480 - 0x0460)
class ABP_MeleeWeapon_C : public AMeleeWeaponActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0460(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCapsuleComponent*                      Collider;                                          // 0x0468(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 WeaponMeshSk;                                      // 0x0470(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0478(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void IsTwoHanded(bool* Value);
	void SetTickForMesh();
	class USkeletalMeshComponent* GetMesh();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_MeleeWeapon(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MeleeWeapon_C">();
	}
	static class ABP_MeleeWeapon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MeleeWeapon_C>();
	}
};
static_assert(alignof(ABP_MeleeWeapon_C) == 0x000008, "Wrong alignment on ABP_MeleeWeapon_C");
static_assert(sizeof(ABP_MeleeWeapon_C) == 0x000480, "Wrong size on ABP_MeleeWeapon_C");
static_assert(offsetof(ABP_MeleeWeapon_C, UberGraphFrame) == 0x000460, "Member 'ABP_MeleeWeapon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MeleeWeapon_C, Collider) == 0x000468, "Member 'ABP_MeleeWeapon_C::Collider' has a wrong offset!");
static_assert(offsetof(ABP_MeleeWeapon_C, WeaponMeshSk) == 0x000470, "Member 'ABP_MeleeWeapon_C::WeaponMeshSk' has a wrong offset!");
static_assert(offsetof(ABP_MeleeWeapon_C, Arrow) == 0x000478, "Member 'ABP_MeleeWeapon_C::Arrow' has a wrong offset!");

}

