#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HitScanWeaponInterface

#include "Basic.hpp"

#include "BP_HitScanWeaponInterface_classes.hpp"
#include "BP_HitScanWeaponInterface_parameters.hpp"


namespace SDK
{

// Function BP_HitScanWeaponInterface.BP_HitScanWeaponInterface_C.GetWeaponType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EWeapons                                WeaponType                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_HitScanWeaponInterface_C::GetWeaponType(EWeapons* WeaponType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitScanWeaponInterface_C", "GetWeaponType");

	Params::BP_HitScanWeaponInterface_C_GetWeaponType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponType != nullptr)
		*WeaponType = Parms.WeaponType;
}


// Function BP_HitScanWeaponInterface.BP_HitScanWeaponInterface_C.GetCurrentSpreadPixelAdjustment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, Const)
// Parameters:
// float                                   Pixels                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   Screen_Percentage                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBP_HitScanWeaponInterface_C::GetCurrentSpreadPixelAdjustment(float* Pixels, float* Screen_Percentage) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_HitScanWeaponInterface_C", "GetCurrentSpreadPixelAdjustment");

	Params::BP_HitScanWeaponInterface_C_GetCurrentSpreadPixelAdjustment Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Pixels != nullptr)
		*Pixels = Parms.Pixels;

	if (Screen_Percentage != nullptr)
		*Screen_Percentage = Parms.Screen_Percentage;
}

}

