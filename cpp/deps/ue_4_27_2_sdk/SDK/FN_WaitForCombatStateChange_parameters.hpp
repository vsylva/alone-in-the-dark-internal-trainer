#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FN_WaitForCombatStateChange

#include "Basic.hpp"

#include "CombatStates_structs.hpp"


namespace SDK::Params
{

// Function FN_WaitForCombatStateChange.FN_WaitForCombatStateChange_C.K2_ExecuteInput
// 0x0008 (0x0008 - 0x0000)
struct FN_WaitForCombatStateChange_C_K2_ExecuteInput final
{
public:
	class FName                                   PinName;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_WaitForCombatStateChange_C_K2_ExecuteInput) == 0x000004, "Wrong alignment on FN_WaitForCombatStateChange_C_K2_ExecuteInput");
static_assert(sizeof(FN_WaitForCombatStateChange_C_K2_ExecuteInput) == 0x000008, "Wrong size on FN_WaitForCombatStateChange_C_K2_ExecuteInput");
static_assert(offsetof(FN_WaitForCombatStateChange_C_K2_ExecuteInput, PinName) == 0x000000, "Member 'FN_WaitForCombatStateChange_C_K2_ExecuteInput::PinName' has a wrong offset!");

// Function FN_WaitForCombatStateChange.FN_WaitForCombatStateChange_C.IsInCombatState
// 0x0001 (0x0001 - 0x0000)
struct FN_WaitForCombatStateChange_C_IsInCombatState final
{
public:
	bool                                          bNewIsInCombat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FN_WaitForCombatStateChange_C_IsInCombatState) == 0x000001, "Wrong alignment on FN_WaitForCombatStateChange_C_IsInCombatState");
static_assert(sizeof(FN_WaitForCombatStateChange_C_IsInCombatState) == 0x000001, "Wrong size on FN_WaitForCombatStateChange_C_IsInCombatState");
static_assert(offsetof(FN_WaitForCombatStateChange_C_IsInCombatState, bNewIsInCombat) == 0x000000, "Member 'FN_WaitForCombatStateChange_C_IsInCombatState::bNewIsInCombat' has a wrong offset!");

// Function FN_WaitForCombatStateChange.FN_WaitForCombatStateChange_C.ExecuteUbergraph_FN_WaitForCombatStateChange
// 0x0030 (0x0030 - 0x0000)
struct FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_PinName;                              // 0x0004(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewIsInCombat;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(bool bNewIsInCombat)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor)
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange) == 0x000008, "Wrong alignment on FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange");
static_assert(sizeof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange) == 0x000030, "Wrong size on FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange");
static_assert(offsetof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange, EntryPoint) == 0x000000, "Member 'FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange::EntryPoint' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange, K2Node_Event_PinName) == 0x000004, "Member 'FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange::K2Node_Event_PinName' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange, K2Node_CustomEvent_bNewIsInCombat) == 0x00000C, "Member 'FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange::K2Node_CustomEvent_bNewIsInCombat' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000D, "Member 'FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000020, "Member 'FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000028, "Member 'FN_WaitForCombatStateChange_C_ExecuteUbergraph_FN_WaitForCombatStateChange::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

// Function FN_WaitForCombatStateChange.FN_WaitForCombatStateChange_C.K2_GetNodeDescription
// 0x0058 (0x0058 - 0x0000)
struct FN_WaitForCombatStateChange_C_K2_GetNodeDescription final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	ECombatStates                                 Temp_byte_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription) == 0x000008, "Wrong alignment on FN_WaitForCombatStateChange_C_K2_GetNodeDescription");
static_assert(sizeof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription) == 0x000058, "Wrong size on FN_WaitForCombatStateChange_C_K2_GetNodeDescription");
static_assert(offsetof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription, ReturnValue) == 0x000000, "Member 'FN_WaitForCombatStateChange_C_K2_GetNodeDescription::ReturnValue' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription, Temp_byte_Variable) == 0x000010, "Member 'FN_WaitForCombatStateChange_C_K2_GetNodeDescription::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription, Temp_string_Variable) == 0x000018, "Member 'FN_WaitForCombatStateChange_C_K2_GetNodeDescription::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription, Temp_string_Variable_1) == 0x000028, "Member 'FN_WaitForCombatStateChange_C_K2_GetNodeDescription::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription, K2Node_Select_Default) == 0x000038, "Member 'FN_WaitForCombatStateChange_C_K2_GetNodeDescription::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(FN_WaitForCombatStateChange_C_K2_GetNodeDescription, CallFunc_Concat_StrStr_ReturnValue) == 0x000048, "Member 'FN_WaitForCombatStateChange_C_K2_GetNodeDescription::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

}

