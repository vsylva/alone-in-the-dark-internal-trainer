#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FlashlightCone

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_FlashlightCone.BP_FlashlightCone_C.LightConeTrace
// 0x0190 (0x0190 - 0x0000)
struct BP_FlashlightCone_C_LightConeTrace final
{
public:
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0000(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_SphereTraceMulti_OutHits;                 // 0x0050(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceMulti_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item;                           // 0x0068(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F3[0x1];                                       // 0x00F3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0114(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0120(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0140(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_CombatInterface_C> K2Node_DynamicCast_AsBPI_Combat_Interface;         // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FlashlightHit_success;                    // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlashlightCone_C_LightConeTrace) == 0x000008, "Wrong alignment on BP_FlashlightCone_C_LightConeTrace");
static_assert(sizeof(BP_FlashlightCone_C_LightConeTrace) == 0x000190, "Wrong size on BP_FlashlightCone_C_LightConeTrace");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, Temp_object_Variable) == 0x000000, "Member 'BP_FlashlightCone_C_LightConeTrace::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_FlashlightCone_C_LightConeTrace::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'BP_FlashlightCone_C_LightConeTrace::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_GetForwardVector_ReturnValue) == 0x00001C, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000028, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000034, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_Add_VectorVector_ReturnValue) == 0x000040, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_SphereTraceMulti_OutHits) == 0x000050, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_SphereTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_SphereTraceMulti_ReturnValue) == 0x000060, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_SphereTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_Array_Length_ReturnValue) == 0x000064, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_Array_Get_Item) == 0x000068, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_Less_IntInt_ReturnValue) == 0x0000F0, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_bBlockingHit) == 0x0000F1, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000F2, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_Time) == 0x0000F4, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_Distance) == 0x0000F8, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_Location) == 0x0000FC, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_ImpactPoint) == 0x000108, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_Normal) == 0x000114, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_ImpactNormal) == 0x000120, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_PhysMat) == 0x000130, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_HitActor) == 0x000138, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_HitComponent) == 0x000140, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_HitBoneName) == 0x000148, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_HitItem) == 0x000150, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_ElementIndex) == 0x000154, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_FaceIndex) == 0x000158, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_TraceStart) == 0x00015C, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_BreakHitResult_TraceEnd) == 0x000168, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, K2Node_DynamicCast_AsBPI_Combat_Interface) == 0x000178, "Member 'BP_FlashlightCone_C_LightConeTrace::K2Node_DynamicCast_AsBPI_Combat_Interface' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, K2Node_DynamicCast_bSuccess) == 0x000188, "Member 'BP_FlashlightCone_C_LightConeTrace::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_LightConeTrace, CallFunc_FlashlightHit_success) == 0x000189, "Member 'BP_FlashlightCone_C_LightConeTrace::CallFunc_FlashlightHit_success' has a wrong offset!");

// Function BP_FlashlightCone.BP_FlashlightCone_C.Toggle
// 0x0001 (0x0001 - 0x0000)
struct BP_FlashlightCone_C_Toggle final
{
public:
	bool                                          bOn;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlashlightCone_C_Toggle) == 0x000001, "Wrong alignment on BP_FlashlightCone_C_Toggle");
static_assert(sizeof(BP_FlashlightCone_C_Toggle) == 0x000001, "Wrong size on BP_FlashlightCone_C_Toggle");
static_assert(offsetof(BP_FlashlightCone_C_Toggle, bOn) == 0x000000, "Member 'BP_FlashlightCone_C_Toggle::bOn' has a wrong offset!");

// Function BP_FlashlightCone.BP_FlashlightCone_C.OnActivated
// 0x0010 (0x0010 - 0x0000)
struct BP_FlashlightCone_C_OnActivated final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bReset;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FlashlightCone_C_OnActivated) == 0x000008, "Wrong alignment on BP_FlashlightCone_C_OnActivated");
static_assert(sizeof(BP_FlashlightCone_C_OnActivated) == 0x000010, "Wrong size on BP_FlashlightCone_C_OnActivated");
static_assert(offsetof(BP_FlashlightCone_C_OnActivated, Component) == 0x000000, "Member 'BP_FlashlightCone_C_OnActivated::Component' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_OnActivated, bReset) == 0x000008, "Member 'BP_FlashlightCone_C_OnActivated::bReset' has a wrong offset!");

// Function BP_FlashlightCone.BP_FlashlightCone_C.OnDeactivated
// 0x0008 (0x0008 - 0x0000)
struct BP_FlashlightCone_C_OnDeactivated final
{
public:
	class UActorComponent*                        Component;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightCone_C_OnDeactivated) == 0x000008, "Wrong alignment on BP_FlashlightCone_C_OnDeactivated");
static_assert(sizeof(BP_FlashlightCone_C_OnDeactivated) == 0x000008, "Wrong size on BP_FlashlightCone_C_OnDeactivated");
static_assert(offsetof(BP_FlashlightCone_C_OnDeactivated, Component) == 0x000000, "Member 'BP_FlashlightCone_C_OnDeactivated::Component' has a wrong offset!");

// Function BP_FlashlightCone.BP_FlashlightCone_C.ExecuteUbergraph_BP_FlashlightCone
// 0x0050 (0x0050 - 0x0000)
struct BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UActorComponent* Component, bool bReset)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class UActorComponent* Component)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_CustomEvent_bOn;                            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_CustomEvent_Component_1;                    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bReset;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_CustomEvent_Component;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone) == 0x000008, "Wrong alignment on BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone");
static_assert(sizeof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone) == 0x000050, "Wrong size on BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, EntryPoint) == 0x000000, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, K2Node_CustomEvent_bOn) == 0x000024, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::K2Node_CustomEvent_bOn' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, K2Node_CustomEvent_Component_1) == 0x000028, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::K2Node_CustomEvent_Component_1' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, K2Node_CustomEvent_bReset) == 0x000030, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::K2Node_CustomEvent_bReset' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, K2Node_CustomEvent_Component) == 0x000038, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::K2Node_CustomEvent_Component' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone, CallFunc_K2_SetTimer_ReturnValue) == 0x000048, "Member 'BP_FlashlightCone_C_ExecuteUbergraph_BP_FlashlightCone::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

}

