#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CM_ClassicNoir

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CM_ClassicNoir.CM_ClassicNoir_C
// 0x0020 (0x0068 - 0x0048)
class UCM_ClassicNoir_C : public UCameraModifier
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0048(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMaterialInterface*                     PostProcessMaterial;                               // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BrightnessOverride;                                // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideBrightness;                                // 0x005C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         DefaultBrightness;                                 // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CM_ClassicNoir(int32 EntryPoint);
	void OverrideFilterBrightness(const float& Brightness);
	void BlueprintModifyPostProcess(float DeltaTime, float* PostProcessBlendWeight, struct FPostProcessSettings* PostProcessSettings);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CM_ClassicNoir_C">();
	}
	static class UCM_ClassicNoir_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCM_ClassicNoir_C>();
	}
};
static_assert(alignof(UCM_ClassicNoir_C) == 0x000008, "Wrong alignment on UCM_ClassicNoir_C");
static_assert(sizeof(UCM_ClassicNoir_C) == 0x000068, "Wrong size on UCM_ClassicNoir_C");
static_assert(offsetof(UCM_ClassicNoir_C, UberGraphFrame) == 0x000048, "Member 'UCM_ClassicNoir_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UCM_ClassicNoir_C, PostProcessMaterial) == 0x000050, "Member 'UCM_ClassicNoir_C::PostProcessMaterial' has a wrong offset!");
static_assert(offsetof(UCM_ClassicNoir_C, BrightnessOverride) == 0x000058, "Member 'UCM_ClassicNoir_C::BrightnessOverride' has a wrong offset!");
static_assert(offsetof(UCM_ClassicNoir_C, OverrideBrightness) == 0x00005C, "Member 'UCM_ClassicNoir_C::OverrideBrightness' has a wrong offset!");
static_assert(offsetof(UCM_ClassicNoir_C, DefaultBrightness) == 0x000060, "Member 'UCM_ClassicNoir_C::DefaultBrightness' has a wrong offset!");

}

