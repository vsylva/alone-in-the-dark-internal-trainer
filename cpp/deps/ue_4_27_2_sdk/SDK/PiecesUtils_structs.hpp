#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesUtils

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum PiecesUtils.EConfigEnum
// NumValues: 0x0004
enum class EConfigEnum : uint8
{
	DEVELOPMENT                              = 0,
	TEST                                     = 1,
	SHIPPING                                 = 2,
	EConfigEnum_MAX                          = 3,
};

// ScriptStruct PiecesUtils.MultiBool
// 0x0060 (0x0060 - 0x0000)
struct FMultiBool final
{
public:
	FMulticastInlineDelegateProperty_             OnValueChanged;                                    // 0x0000(0x0010)(ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	uint8                                         Pad_10[0x50];                                      // 0x0010(0x0050)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FMultiBool) == 0x000008, "Wrong alignment on FMultiBool");
static_assert(sizeof(FMultiBool) == 0x000060, "Wrong size on FMultiBool");
static_assert(offsetof(FMultiBool, OnValueChanged) == 0x000000, "Member 'FMultiBool::OnValueChanged' has a wrong offset!");

// ScriptStruct PiecesUtils.RuntimeVectorCurve
// 0x0198 (0x0198 - 0x0000)
struct FRuntimeVectorCurve final
{
public:
	struct FRuntimeFloatCurve                     X;                                                 // 0x0000(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     Y;                                                 // 0x0088(0x0088)(Edit, NativeAccessSpecifierPublic)
	struct FRuntimeFloatCurve                     Z;                                                 // 0x0110(0x0088)(Edit, NativeAccessSpecifierPublic)
};
static_assert(alignof(FRuntimeVectorCurve) == 0x000008, "Wrong alignment on FRuntimeVectorCurve");
static_assert(sizeof(FRuntimeVectorCurve) == 0x000198, "Wrong size on FRuntimeVectorCurve");
static_assert(offsetof(FRuntimeVectorCurve, X) == 0x000000, "Member 'FRuntimeVectorCurve::X' has a wrong offset!");
static_assert(offsetof(FRuntimeVectorCurve, Y) == 0x000088, "Member 'FRuntimeVectorCurve::Y' has a wrong offset!");
static_assert(offsetof(FRuntimeVectorCurve, Z) == 0x000110, "Member 'FRuntimeVectorCurve::Z' has a wrong offset!");

}

