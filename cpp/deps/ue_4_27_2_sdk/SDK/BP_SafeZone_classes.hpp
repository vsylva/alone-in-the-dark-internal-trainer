#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SafeZone

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SafeZone.BP_SafeZone_C
// 0x0028 (0x0260 - 0x0238)
class ABP_SafeZone_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          DeAggroCollider;                                   // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNavModifierComponent*                  NavModifier;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   EnemyBlocker;                                      // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          ClearThreatOnPlayerEnter;                          // 0x0258(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x3];                                      // 0x0259(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ThreatClearingRange;                               // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SafeZone(int32 EntryPoint);
	void ReceiveActorBeginOverlap(class AActor* OtherActor);
	void ClearEnemyAggro(class UObject* EnemyRef, bool PlayerTriggered);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SafeZone_C">();
	}
	static class ABP_SafeZone_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SafeZone_C>();
	}
};
static_assert(alignof(ABP_SafeZone_C) == 0x000008, "Wrong alignment on ABP_SafeZone_C");
static_assert(sizeof(ABP_SafeZone_C) == 0x000260, "Wrong size on ABP_SafeZone_C");
static_assert(offsetof(ABP_SafeZone_C, UberGraphFrame) == 0x000238, "Member 'ABP_SafeZone_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SafeZone_C, DeAggroCollider) == 0x000240, "Member 'ABP_SafeZone_C::DeAggroCollider' has a wrong offset!");
static_assert(offsetof(ABP_SafeZone_C, NavModifier) == 0x000248, "Member 'ABP_SafeZone_C::NavModifier' has a wrong offset!");
static_assert(offsetof(ABP_SafeZone_C, EnemyBlocker) == 0x000250, "Member 'ABP_SafeZone_C::EnemyBlocker' has a wrong offset!");
static_assert(offsetof(ABP_SafeZone_C, ClearThreatOnPlayerEnter) == 0x000258, "Member 'ABP_SafeZone_C::ClearThreatOnPlayerEnter' has a wrong offset!");
static_assert(offsetof(ABP_SafeZone_C, ThreatClearingRange) == 0x00025C, "Member 'ABP_SafeZone_C::ThreatClearingRange' has a wrong offset!");

}

