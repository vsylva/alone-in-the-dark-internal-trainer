#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_GameDisplayOption

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"
#include "WBP_OptionSelectionPage_classes.hpp"
#include "PiecesPlatform_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_GameDisplayOption.WBP_GameDisplayOption_C
// 0x0090 (0x0368 - 0x02D8)
class UWBP_GameDisplayOption_C final : public UWBP_OptionSelectionPage_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_GameDisplayOption_C;            // 0x02D8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UVerticalBox*                           ButtonVertical;                                    // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFOptionsSelection_C*              DisplayAdjustment;                                 // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gfx_deco_frame;                                    // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ChromaticAberration_C*             WBP_ChromaticAberration;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DepthOfFieldButton_C*              WBP_DepthOfFieldButton;                            // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FoVSlider_C*                       WBP_FoVSlider;                                     // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextSelection_C*                   WBP_GraphicsMode;                                  // 0x0310(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_OFCheckBox_C*                      WBP_HDRValue;                                      // 0x0318(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MotionBlur_C*                      WBP_MotionBlur;                                    // 0x0320(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	float                                         CurrentGamma;                                      // 0x0328(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CurrentGraphicsOption;                             // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftClassPtr<class UClass>                   HDRClass;                                          // 0x0330(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UClass*                                 HDRWidgetClassHardPointer;                         // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ApplySettingsTimerHandle;                          // 0x0360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_GameDisplayOption(int32 EntryPoint);
	void PostInputApplySettings();
	void Destruct();
	void Construct();
	void OnResetPressed();
	void BndEvt__WBP_GameDisplayOption_WBP_KeyBindingPC_1_K2Node_ComponentBoundEvent_6_OnButtonPressed__DelegateSignature();
	void BndEvt__WBP_GameDisplayOption_WBP_GraphicsMode_K2Node_ComponentBoundEvent_8_OnIncreaseHandler__DelegateSignature();
	void BndEvt__WBP_GameDisplayOption_WBP_GraphicsMode_K2Node_ComponentBoundEvent_7_OnDecreaseHandler__DelegateSignature();
	void OnInitialized();
	void BndEvt__WBP_GameDisplayOption_WBP_HDRValue_K2Node_ComponentBoundEvent_2_OnCheckBoxChanged__DelegateSignature(bool CheckBoxChanged);
	void LoadCompleteDelegate_C3DEFC90419C05586027E8B62E3217A7(const TArray<class UClass*>& LoadedAssets);
	void OnLoaded_DBE68C4D4313E0F23B622FBF3F40C5C0(TSubclassOf<class UObject> Loaded);
	void OnSuccess_A360C9494D429C6535DE72927991389C();
	void OnFailed_A360C9494D429C6535DE72927991389C();
	void GetWidgets(TArray<class UWidget*>* Widgets);
	void UpdateUI();
	void BindTooltipUpdateOnHover();
	void SetHoveredDescriptionText(class UWidget* Widget);
	void DelayedApplySettings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_GameDisplayOption_C">();
	}
	static class UWBP_GameDisplayOption_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_GameDisplayOption_C>();
	}
};
static_assert(alignof(UWBP_GameDisplayOption_C) == 0x000008, "Wrong alignment on UWBP_GameDisplayOption_C");
static_assert(sizeof(UWBP_GameDisplayOption_C) == 0x000368, "Wrong size on UWBP_GameDisplayOption_C");
static_assert(offsetof(UWBP_GameDisplayOption_C, UberGraphFrame_WBP_GameDisplayOption_C) == 0x0002D8, "Member 'UWBP_GameDisplayOption_C::UberGraphFrame_WBP_GameDisplayOption_C' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, ButtonVertical) == 0x0002E0, "Member 'UWBP_GameDisplayOption_C::ButtonVertical' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, DisplayAdjustment) == 0x0002E8, "Member 'UWBP_GameDisplayOption_C::DisplayAdjustment' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, Gfx_deco_frame) == 0x0002F0, "Member 'UWBP_GameDisplayOption_C::Gfx_deco_frame' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, WBP_ChromaticAberration) == 0x0002F8, "Member 'UWBP_GameDisplayOption_C::WBP_ChromaticAberration' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, WBP_DepthOfFieldButton) == 0x000300, "Member 'UWBP_GameDisplayOption_C::WBP_DepthOfFieldButton' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, WBP_FoVSlider) == 0x000308, "Member 'UWBP_GameDisplayOption_C::WBP_FoVSlider' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, WBP_GraphicsMode) == 0x000310, "Member 'UWBP_GameDisplayOption_C::WBP_GraphicsMode' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, WBP_HDRValue) == 0x000318, "Member 'UWBP_GameDisplayOption_C::WBP_HDRValue' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, WBP_MotionBlur) == 0x000320, "Member 'UWBP_GameDisplayOption_C::WBP_MotionBlur' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, CurrentGamma) == 0x000328, "Member 'UWBP_GameDisplayOption_C::CurrentGamma' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, CurrentGraphicsOption) == 0x00032C, "Member 'UWBP_GameDisplayOption_C::CurrentGraphicsOption' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, HDRClass) == 0x000330, "Member 'UWBP_GameDisplayOption_C::HDRClass' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, HDRWidgetClassHardPointer) == 0x000358, "Member 'UWBP_GameDisplayOption_C::HDRWidgetClassHardPointer' has a wrong offset!");
static_assert(offsetof(UWBP_GameDisplayOption_C, ApplySettingsTimerHandle) == 0x000360, "Member 'UWBP_GameDisplayOption_C::ApplySettingsTimerHandle' has a wrong offset!");

}

