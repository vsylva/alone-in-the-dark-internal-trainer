#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LSD_OFLevelSequenceDirector

#include "Basic.hpp"

#include "PiecesSequence_structs.hpp"
#include "MovieScene_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.SwitchCinematic
// 0x0058 (0x0058 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_SwitchCinematic final
{
public:
	class ULevelSequence*                         NewCinematic;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   NewSequencePlayer;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPiecesLevelSequencePlayerPlaybackSettings K2Node_MakeStruct_PiecesLevelSequencePlayerPlaybackSettings; // 0x0010(0x0020)()
	struct FMovieSceneSequencePlaybackSettings    K2Node_MakeStruct_MovieSceneSequencePlaybackSettings; // 0x0030(0x0014)(NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APiecesLevelSequenceActor*              CallFunc_CreatePiecesLevelSequencePlayer_OutActor; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPiecesLevelSequencePlayer*             CallFunc_CreatePiecesLevelSequencePlayer_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_SwitchCinematic) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_SwitchCinematic");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_SwitchCinematic) == 0x000058, "Wrong size on LSD_OFLevelSequenceDirector_C_SwitchCinematic");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SwitchCinematic, NewCinematic) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_SwitchCinematic::NewCinematic' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SwitchCinematic, NewSequencePlayer) == 0x000008, "Member 'LSD_OFLevelSequenceDirector_C_SwitchCinematic::NewSequencePlayer' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SwitchCinematic, K2Node_MakeStruct_PiecesLevelSequencePlayerPlaybackSettings) == 0x000010, "Member 'LSD_OFLevelSequenceDirector_C_SwitchCinematic::K2Node_MakeStruct_PiecesLevelSequencePlayerPlaybackSettings' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SwitchCinematic, K2Node_MakeStruct_MovieSceneSequencePlaybackSettings) == 0x000030, "Member 'LSD_OFLevelSequenceDirector_C_SwitchCinematic::K2Node_MakeStruct_MovieSceneSequencePlaybackSettings' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SwitchCinematic, CallFunc_CreatePiecesLevelSequencePlayer_OutActor) == 0x000048, "Member 'LSD_OFLevelSequenceDirector_C_SwitchCinematic::CallFunc_CreatePiecesLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SwitchCinematic, CallFunc_CreatePiecesLevelSequencePlayer_ReturnValue) == 0x000050, "Member 'LSD_OFLevelSequenceDirector_C_SwitchCinematic::CallFunc_CreatePiecesLevelSequencePlayer_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.EndInteractiveCameraSegment
// 0x0028 (0x0028 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment final
{
public:
	float                                         DecidedValue;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CachedBlendValue;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPiecesLevelSequencePlayer*             K2Node_DynamicCast_AsPieces_Level_Sequence_Player; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkipInitiated_ReturnValue;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetBlendValue_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment) == 0x000028, "Wrong size on LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, DecidedValue) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::DecidedValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, CachedBlendValue) == 0x000004, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::CachedBlendValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, K2Node_DynamicCast_AsPieces_Level_Sequence_Player) == 0x000008, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::K2Node_DynamicCast_AsPieces_Level_Sequence_Player' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, CallFunc_IsSkipInitiated_ReturnValue) == 0x000011, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::CallFunc_IsSkipInitiated_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, CallFunc_GetBlendValue_ReturnValue) == 0x000014, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::CallFunc_GetBlendValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'LSD_OFLevelSequenceDirector_C_EndInteractiveCameraSegment::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.StartInteractiveCameraSegment
// 0x0130 (0x0130 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment final
{
public:
	class ACineCameraActor*                       CameraReference;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             TransformTargetStickLeft;                          // 0x0010(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FTransform                             TransformTargetStickRight;                         // 0x0040(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         BlendSpeed;                                        // 0x0070(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           InteractionUnlockedTag;                            // 0x0074(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 MarkForSkippingSegment;                            // 0x0080(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	float                                         TimeDilation;                                      // 0x0090(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteractiveSequenceCameraModifier*     CallFunc_AddComponentByClass_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPiecesLevelSequencePlayer*             K2Node_DynamicCast_AsPieces_Level_Sequence_Player; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSkipInitiated_ReturnValue;              // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class ACineCameraActor>        CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00B8(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	class UFactsDB*                               CallFunc_GetGameplaySessionSubsystem_ReturnValue;  // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFactTrue_ReturnValue;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment) == 0x000010, "Wrong alignment on LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment) == 0x000130, "Wrong size on LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CameraReference) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CameraReference' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, TransformTargetStickLeft) == 0x000010, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::TransformTargetStickLeft' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, TransformTargetStickRight) == 0x000040, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::TransformTargetStickRight' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, BlendSpeed) == 0x000070, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::BlendSpeed' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, InteractionUnlockedTag) == 0x000074, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::InteractionUnlockedTag' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, MarkForSkippingSegment) == 0x000080, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::MarkForSkippingSegment' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, TimeDilation) == 0x000090, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::TimeDilation' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_AddComponentByClass_ReturnValue) == 0x000098, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, K2Node_DynamicCast_AsPieces_Level_Sequence_Player) == 0x0000A0, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::K2Node_DynamicCast_AsPieces_Level_Sequence_Player' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, K2Node_DynamicCast_bSuccess) == 0x0000A8, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_IsSkipInitiated_ReturnValue) == 0x0000A9, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_IsSkipInitiated_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_K2_GetRootComponent_ReturnValue) == 0x0000B0, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000B8, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_GetRelativeTransform_ReturnValue) == 0x0000E0, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_GetGameplaySessionSubsystem_ReturnValue) == 0x000110, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_GetGameplaySessionSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_GetPlayerController_ReturnValue) == 0x000118, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment, CallFunc_IsFactTrue_ReturnValue) == 0x000120, "Member 'LSD_OFLevelSequenceDirector_C_StartInteractiveCameraSegment::CallFunc_IsFactTrue_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.RemovePlaceHolderTextWidget
// 0x0001 (0x0001 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_RemovePlaceHolderTextWidget final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_RemovePlaceHolderTextWidget) == 0x000001, "Wrong alignment on LSD_OFLevelSequenceDirector_C_RemovePlaceHolderTextWidget");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_RemovePlaceHolderTextWidget) == 0x000001, "Wrong size on LSD_OFLevelSequenceDirector_C_RemovePlaceHolderTextWidget");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_RemovePlaceHolderTextWidget, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_RemovePlaceHolderTextWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.CreatePlaceHolderTextWidget
// 0x0020 (0x0020 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget final
{
public:
	class UWBP_PlaceHolderCutsceneText_C*         CallFunc_Create_ReturnValue;                       // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_GetTemplateText_ReturnValue;              // 0x0008(0x0018)()
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget) == 0x000020, "Wrong size on LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget, CallFunc_Create_ReturnValue) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget, CallFunc_GetTemplateText_ReturnValue) == 0x000008, "Member 'LSD_OFLevelSequenceDirector_C_CreatePlaceHolderTextWidget::CallFunc_GetTemplateText_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.GetTemplateText
// 0x0048 (0x0048 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_GetTemplateText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class UObject*                                CallFunc_GetOuterObject_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APiecesLevelSequenceActor*              K2Node_DynamicCast_AsPieces_Level_Sequence_Actor;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class UPiecesSequenceMetaData*          CallFunc_GetFirstMetaData_ReturnValue;             // 0x0030(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UBP_SequenceMetaDataPlaceholderText_C* K2Node_DynamicCast_AsBP_Sequence_Meta_Data_Placeholder_Text; // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_GetTemplateText) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_GetTemplateText");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_GetTemplateText) == 0x000048, "Wrong size on LSD_OFLevelSequenceDirector_C_GetTemplateText");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_GetTemplateText, ReturnValue) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_GetTemplateText::ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_GetTemplateText, CallFunc_GetOuterObject_ReturnValue) == 0x000018, "Member 'LSD_OFLevelSequenceDirector_C_GetTemplateText::CallFunc_GetOuterObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_GetTemplateText, K2Node_DynamicCast_AsPieces_Level_Sequence_Actor) == 0x000020, "Member 'LSD_OFLevelSequenceDirector_C_GetTemplateText::K2Node_DynamicCast_AsPieces_Level_Sequence_Actor' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_GetTemplateText, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'LSD_OFLevelSequenceDirector_C_GetTemplateText::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_GetTemplateText, CallFunc_GetFirstMetaData_ReturnValue) == 0x000030, "Member 'LSD_OFLevelSequenceDirector_C_GetTemplateText::CallFunc_GetFirstMetaData_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_GetTemplateText, K2Node_DynamicCast_AsBP_Sequence_Meta_Data_Placeholder_Text) == 0x000038, "Member 'LSD_OFLevelSequenceDirector_C_GetTemplateText::K2Node_DynamicCast_AsBP_Sequence_Meta_Data_Placeholder_Text' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_GetTemplateText, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'LSD_OFLevelSequenceDirector_C_GetTemplateText::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.TeleportToGoalLocation
// 0x0010 (0x0010 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CharRef;                                           // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation) == 0x000010, "Wrong size on LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation, Character) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation::Character' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation, CharRef) == 0x000008, "Member 'LSD_OFLevelSequenceDirector_C_TeleportToGoalLocation::CharRef' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.BlendCamera
// 0x0018 (0x0018 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_BlendCamera final
{
public:
	class AActor*                                 NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendExp;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_BlendCamera) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_BlendCamera");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_BlendCamera) == 0x000018, "Wrong size on LSD_OFLevelSequenceDirector_C_BlendCamera");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_BlendCamera, NewViewTarget) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_BlendCamera::NewViewTarget' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_BlendCamera, BlendTime) == 0x000008, "Member 'LSD_OFLevelSequenceDirector_C_BlendCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_BlendCamera, BlendExp) == 0x00000C, "Member 'LSD_OFLevelSequenceDirector_C_BlendCamera::BlendExp' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_BlendCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'LSD_OFLevelSequenceDirector_C_BlendCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.ResetToPlayerCamera
// 0x0018 (0x0018 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera final
{
public:
	float                                         BlendTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendExp;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerController*                    CallFunc_GetObsidianFoxPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera) == 0x000018, "Wrong size on LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera, BlendTime) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera, BlendExp) == 0x000004, "Member 'LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera::BlendExp' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera, CallFunc_GetObsidianFoxPlayerController_ReturnValue) == 0x000010, "Member 'LSD_OFLevelSequenceDirector_C_ResetToPlayerCamera::CallFunc_GetObsidianFoxPlayerController_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.SetCamera
// 0x0018 (0x0018 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_SetCamera final
{
public:
	class AActor*                                 NewViewTarget;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendTime;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BlendExp;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_SetCamera) == 0x000008, "Wrong alignment on LSD_OFLevelSequenceDirector_C_SetCamera");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_SetCamera) == 0x000018, "Wrong size on LSD_OFLevelSequenceDirector_C_SetCamera");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SetCamera, NewViewTarget) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_SetCamera::NewViewTarget' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SetCamera, BlendTime) == 0x000008, "Member 'LSD_OFLevelSequenceDirector_C_SetCamera::BlendTime' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SetCamera, BlendExp) == 0x00000C, "Member 'LSD_OFLevelSequenceDirector_C_SetCamera::BlendExp' has a wrong offset!");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_SetCamera, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'LSD_OFLevelSequenceDirector_C_SetCamera::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");

// Function LSD_OFLevelSequenceDirector.LSD_OFLevelSequenceDirector_C.ExecuteUbergraph_LSD_OFLevelSequenceDirector
// 0x0004 (0x0004 - 0x0000)
struct LSD_OFLevelSequenceDirector_C_ExecuteUbergraph_LSD_OFLevelSequenceDirector final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(LSD_OFLevelSequenceDirector_C_ExecuteUbergraph_LSD_OFLevelSequenceDirector) == 0x000004, "Wrong alignment on LSD_OFLevelSequenceDirector_C_ExecuteUbergraph_LSD_OFLevelSequenceDirector");
static_assert(sizeof(LSD_OFLevelSequenceDirector_C_ExecuteUbergraph_LSD_OFLevelSequenceDirector) == 0x000004, "Wrong size on LSD_OFLevelSequenceDirector_C_ExecuteUbergraph_LSD_OFLevelSequenceDirector");
static_assert(offsetof(LSD_OFLevelSequenceDirector_C_ExecuteUbergraph_LSD_OFLevelSequenceDirector, EntryPoint) == 0x000000, "Member 'LSD_OFLevelSequenceDirector_C_ExecuteUbergraph_LSD_OFLevelSequenceDirector::EntryPoint' has a wrong offset!");

}

