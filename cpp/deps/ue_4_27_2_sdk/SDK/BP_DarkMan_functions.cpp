#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DarkMan

#include "Basic.hpp"

#include "BP_DarkMan_classes.hpp"
#include "BP_DarkMan_parameters.hpp"


namespace SDK
{

// Function BP_DarkMan.BP_DarkMan_C.ExecuteUbergraph_BP_DarkMan
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::ExecuteUbergraph_BP_DarkMan(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "ExecuteUbergraph_BP_DarkMan");

	Params::BP_DarkMan_C_ExecuteUbergraph_BP_DarkMan Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.OnPlayer
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            EventTags                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_DarkMan_C::OnPlayer(const struct FGameplayTagContainer& EventTags)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "OnPlayer");

	Params::BP_DarkMan_C_OnPlayer Parms{};

	Parms.EventTags = std::move(EventTags);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.InputTypeChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsGamepadType                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DarkMan_C::InputTypeChanged(bool IsGamepadType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "InputTypeChanged");

	Params::BP_DarkMan_C_InputTypeChanged Parms{};

	Parms.IsGamepadType = IsGamepadType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.OnMainStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameMainState                          OldGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGameMainState                          NewGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::OnMainStateChanged(EGameMainState OldGameState, EGameMainState NewGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "OnMainStateChanged");

	Params::BP_DarkMan_C_OnMainStateChanged Parms{};

	Parms.OldGameState = OldGameState;
	Parms.NewGameState = NewGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void ABP_DarkMan_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.SpawnCharacterDecal
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FHitResult                       HitResult                                              (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_DarkMan_C::SpawnCharacterDecal(const struct FHitResult& HitResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "SpawnCharacterDecal");

	Params::BP_DarkMan_C_SpawnCharacterDecal Parms{};

	Parms.HitResult = std::move(HitResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.BndEvt__BP_DarkMan_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UFlowComponent*                   FlowComponent_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     NotifyTag                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::BndEvt__BP_DarkMan_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent_0, const struct FGameplayTag& NotifyTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "BndEvt__BP_DarkMan_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature");

	Params::BP_DarkMan_C_BndEvt__BP_DarkMan_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature Parms{};

	Parms.FlowComponent_0 = FlowComponent_0;
	Parms.NotifyTag = std::move(NotifyTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.Activate Dark Man
// (BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::Activate_Dark_Man()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "Activate Dark Man");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.DeactivateDarkMan
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::DeactivateDarkMan()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "DeactivateDarkMan");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.CameraSwivel
// (BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::CameraSwivel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "CameraSwivel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "ReceiveTick");

	Params::BP_DarkMan_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_DarkMan_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.OnLoaded_2BD0E0754061A227A287FB9E60FDB5C5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_DarkMan_C::OnLoaded_2BD0E0754061A227A287FB9E60FDB5C5(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "OnLoaded_2BD0E0754061A227A287FB9E60FDB5C5");

	Params::BP_DarkMan_C_OnLoaded_2BD0E0754061A227A287FB9E60FDB5C5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.OnLoaded_A1CB66724548CE2768DCCEB543A24D05
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::OnLoaded_A1CB66724548CE2768DCCEB543A24D05(class UObject* Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "OnLoaded_A1CB66724548CE2768DCCEB543A24D05");

	Params::BP_DarkMan_C_OnLoaded_A1CB66724548CE2768DCCEB543A24D05 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.OnLoaded_EBDE17F84284A1D2C47D62916CEB1AF5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class UObject>              Loaded                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void ABP_DarkMan_C::OnLoaded_EBDE17F84284A1D2C47D62916CEB1AF5(TSubclassOf<class UObject> Loaded)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "OnLoaded_EBDE17F84284A1D2C47D62916CEB1AF5");

	Params::BP_DarkMan_C_OnLoaded_EBDE17F84284A1D2C47D62916CEB1AF5 Parms{};

	Parms.Loaded = Loaded;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.CheckForLOS
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::CheckForLOS()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "CheckForLOS");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.ObsessionHealthDecay
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::ObsessionHealthDecay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "ObsessionHealthDecay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.UpdateAudio
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::UpdateAudio()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "UpdateAudio");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.SetActivationLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::SetActivationLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "SetActivationLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.SetupAreaEffects
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::SetupAreaEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "SetupAreaEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.EnableAreaEffects
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::EnableAreaEffects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "EnableAreaEffects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.DisableAreaEffects
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   FadeDuration                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::DisableAreaEffects(float FadeDuration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "DisableAreaEffects");

	Params::BP_DarkMan_C_DisableAreaEffects Parms{};

	Parms.FadeDuration = FadeDuration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_DarkMan.BP_DarkMan_C.UpdateSmokeLocation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::UpdateSmokeLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "UpdateSmokeLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.Update Proximity Force Feedback
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::Update_Proximity_Force_Feedback()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "Update Proximity Force Feedback");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.Tick Force Feedback Intensity
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_DarkMan_C::Tick_Force_Feedback_Intensity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "Tick Force Feedback Intensity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.GetObsessionRate
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DarkMan_C::GetObsessionRate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetObsessionRate");

	Params::BP_DarkMan_C_GetObsessionRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.GetEyeContactDotProduct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DarkMan_C::GetEyeContactDotProduct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetEyeContactDotProduct");

	Params::BP_DarkMan_C_GetEyeContactDotProduct Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.GetPlayerLookAtDotProduct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DarkMan_C::GetPlayerLookAtDotProduct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetPlayerLookAtDotProduct");

	Params::BP_DarkMan_C_GetPlayerLookAtDotProduct Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.IsActorViewable
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_DarkMan_C::IsActorViewable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "IsActorViewable");

	Params::BP_DarkMan_C_IsActorViewable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.GetObsessionDecay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   DecayRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::GetObsessionDecay(float* DecayRate) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetObsessionDecay");

	Params::BP_DarkMan_C_GetObsessionDecay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DecayRate != nullptr)
		*DecayRate = Parms.DecayRate;
}


// Function BP_DarkMan.BP_DarkMan_C.GetStareAtPlayerDotProduct
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DarkMan_C::GetStareAtPlayerDotProduct() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetStareAtPlayerDotProduct");

	Params::BP_DarkMan_C_GetStareAtPlayerDotProduct Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.GetStareValues
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   StareObsessionRate                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsStaring                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_DarkMan_C::GetStareValues(float* StareObsessionRate, bool* bIsStaring) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetStareValues");

	Params::BP_DarkMan_C_GetStareValues Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (StareObsessionRate != nullptr)
		*StareObsessionRate = Parms.StareObsessionRate;

	if (bIsStaring != nullptr)
		*bIsStaring = Parms.bIsStaring;
}


// Function BP_DarkMan.BP_DarkMan_C.GetObsession
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Normalised_Obsession                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::GetObsession(float* Normalised_Obsession) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetObsession");

	Params::BP_DarkMan_C_GetObsession Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Normalised_Obsession != nullptr)
		*Normalised_Obsession = Parms.Normalised_Obsession;
}


// Function BP_DarkMan.BP_DarkMan_C.CalculateObsessionRate
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DarkMan_C::CalculateObsessionRate() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "CalculateObsessionRate");

	Params::BP_DarkMan_C_CalculateObsessionRate Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.ObsessionBaseDecay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DarkMan_C::ObsessionBaseDecay() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "ObsessionBaseDecay");

	Params::BP_DarkMan_C_ObsessionBaseDecay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.CalculateSavingGraceOsessionMultiplier
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Distance_to_Min_Alpha                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABP_DarkMan_C::CalculateSavingGraceOsessionMultiplier(float Distance_to_Min_Alpha) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "CalculateSavingGraceOsessionMultiplier");

	Params::BP_DarkMan_C_CalculateSavingGraceOsessionMultiplier Parms{};

	Parms.Distance_to_Min_Alpha = Distance_to_Min_Alpha;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.Output Debug
// (Protected, BlueprintCallable, BlueprintEvent, Const)

void ABP_DarkMan_C::Output_Debug() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "Output Debug");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.Print Debug Text
// (Public, BlueprintCallable, BlueprintEvent, Const)

void ABP_DarkMan_C::Print_Debug_Text() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "Print Debug Text");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.Draw Debug Distances
// (Protected, BlueprintCallable, BlueprintEvent, Const)

void ABP_DarkMan_C::Draw_Debug_Distances() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "Draw Debug Distances");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_DarkMan.BP_DarkMan_C.GetDistanceToPlayer
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Distance_To_Player                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ENavigationQueryResult                  Path_Find_Success                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_DarkMan_C::GetDistanceToPlayer(float* Distance_To_Player, ENavigationQueryResult* Path_Find_Success) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "GetDistanceToPlayer");

	Params::BP_DarkMan_C_GetDistanceToPlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Distance_To_Player != nullptr)
		*Distance_To_Player = Parms.Distance_To_Player;

	if (Path_Find_Success != nullptr)
		*Path_Find_Success = Parms.Path_Find_Success;
}


// Function BP_DarkMan.BP_DarkMan_C.IsActive
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_DarkMan_C::IsActive() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "IsActive");

	Params::BP_DarkMan_C_IsActive Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_DarkMan.BP_DarkMan_C.CanPlayerSeeDarkMan
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_DarkMan_C::CanPlayerSeeDarkMan() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_DarkMan_C", "CanPlayerSeeDarkMan");

	Params::BP_DarkMan_C_CanPlayerSeeDarkMan Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

