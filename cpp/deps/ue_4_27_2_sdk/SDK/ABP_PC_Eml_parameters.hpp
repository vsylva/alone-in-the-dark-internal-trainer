#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_PC_Eml

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function ABP_PC_Eml.ABP_PC_Eml_C.ExecuteUbergraph_ABP_PC_Eml
// 0x0004 (0x0004 - 0x0000)
struct ABP_PC_Eml_C_ExecuteUbergraph_ABP_PC_Eml final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_PC_Eml_C_ExecuteUbergraph_ABP_PC_Eml) == 0x000004, "Wrong alignment on ABP_PC_Eml_C_ExecuteUbergraph_ABP_PC_Eml");
static_assert(sizeof(ABP_PC_Eml_C_ExecuteUbergraph_ABP_PC_Eml) == 0x000004, "Wrong size on ABP_PC_Eml_C_ExecuteUbergraph_ABP_PC_Eml");
static_assert(offsetof(ABP_PC_Eml_C_ExecuteUbergraph_ABP_PC_Eml, EntryPoint) == 0x000000, "Member 'ABP_PC_Eml_C_ExecuteUbergraph_ABP_PC_Eml::EntryPoint' has a wrong offset!");

// Function ABP_PC_Eml.ABP_PC_Eml_C.GetDynamicsAlpha
// 0x0010 (0x0010 - 0x0000)
struct ABP_PC_Eml_C_GetDynamicsAlpha final
{
public:
	struct FGameplayTag                           Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PC_Eml_C_GetDynamicsAlpha) == 0x000004, "Wrong alignment on ABP_PC_Eml_C_GetDynamicsAlpha");
static_assert(sizeof(ABP_PC_Eml_C_GetDynamicsAlpha) == 0x000010, "Wrong size on ABP_PC_Eml_C_GetDynamicsAlpha");
static_assert(offsetof(ABP_PC_Eml_C_GetDynamicsAlpha, Key) == 0x000000, "Member 'ABP_PC_Eml_C_GetDynamicsAlpha::Key' has a wrong offset!");
static_assert(offsetof(ABP_PC_Eml_C_GetDynamicsAlpha, ReturnValue) == 0x000008, "Member 'ABP_PC_Eml_C_GetDynamicsAlpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Eml_C_GetDynamicsAlpha, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00000C, "Member 'ABP_PC_Eml_C_GetDynamicsAlpha::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

// Function ABP_PC_Eml.ABP_PC_Eml_C.GetDynamicsAlpha_0
// 0x0010 (0x0010 - 0x0000)
struct ABP_PC_Eml_C_GetDynamicsAlpha_0 final
{
public:
	struct FGameplayTag                           Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_PC_Eml_C_GetDynamicsAlpha_0) == 0x000004, "Wrong alignment on ABP_PC_Eml_C_GetDynamicsAlpha_0");
static_assert(sizeof(ABP_PC_Eml_C_GetDynamicsAlpha_0) == 0x000010, "Wrong size on ABP_PC_Eml_C_GetDynamicsAlpha_0");
static_assert(offsetof(ABP_PC_Eml_C_GetDynamicsAlpha_0, Key) == 0x000000, "Member 'ABP_PC_Eml_C_GetDynamicsAlpha_0::Key' has a wrong offset!");
static_assert(offsetof(ABP_PC_Eml_C_GetDynamicsAlpha_0, ReturnValue) == 0x000008, "Member 'ABP_PC_Eml_C_GetDynamicsAlpha_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_PC_Eml_C_GetDynamicsAlpha_0, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00000C, "Member 'ABP_PC_Eml_C_GetDynamicsAlpha_0::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

}

