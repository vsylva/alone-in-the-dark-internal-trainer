#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ContextualTraverse_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "GameplayAbilities_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ContextualTraverse_Base.BP_ContextualTraverse_Base_C
// 0x0098 (0x02D0 - 0x0238)
class ABP_ContextualTraverse_Base_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFlowComponent*                         Flow;                                              // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPersistenceComponent*                  Persistence;                                       // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionFlowComponent*              InteractionFlow;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBillboardComponent*                    InteractionIcon;                                   // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          InteractActivateColl;                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        StartRotation;                                     // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        StartLocation;                                     // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             InteractingCharacter;                              // 0x0280(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_PlayerCharacter_C*                  PlayerCharacterRef;                                // 0x0288(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector                                CachedCharacterLocation;                           // 0x0290(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CachedCharacterRotation;                           // 0x029C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EMovementMode                                 MovementModeDuringAnimation;                       // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionResponse                            CachedWorldStaticCollisionResponse;                // 0x02A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AffectPitchRotation;                               // 0x02AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          TraverseActive;                                    // 0x02AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Debug;                                             // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          InteractColliderActivated;                         // 0x02AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2AE[0x2];                                      // 0x02AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            GEContextualTraverseHandle;                        // 0x02B0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             InteractionFlowCollision;                          // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECollisionEnabled                             InteractionColliderCollision;                      // 0x02B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BA[0x6];                                      // 0x02BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_RepositionAndReorient*   CurrentRepositionProxy;                            // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShouldSavingBeEnabledAfterFinishingTraversal;      // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bUseRepositionCloseEnough;                         // 0x02C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UnlinkPreviousABP();
	void EndInteractionIfInteracting(class UInteractionFlowComponent* InteractionComponent);
	void DetermineSavingEnabledAfterFinishingTraversal();
	void ActivateInteractionOnOverlap(class UPrimitiveComponent* Collider, class UInteractionFlowComponent* InteractionComponent);
	void RemoveMotionWarpingStartData();
	void SetupStartMotionWarping(class AActor* InteractingCharacter_0, class USceneComponent* StartRotationComponent);
	void StopReposition(bool StopTranslation, bool StopRotation);
	void TryHolsterWeapon(class ACharacter* Character, bool Instant);
	void EnableInteractionCollision();
	void CacheInteractionCollision();
	void ResetRotationOnAffectedPitch();
	void RemoveGameEffect();
	void DEPRECATED_DeactivateInteractionComponents();
	void ApplyContextualTraverseGameEffect();
	void SetupInteraction(class ACharacter* InteractingCharacter_0);
	void MakeRotationFromRotComponent(class USceneComponent* StartRotation_0, struct FRotator* OutRotation);
	void CalculatePlayerMovement(class USceneComponent* StartLocation_0, class USceneComponent* StartRotation_0, float Alpha);
	void CachePlayerLocAndRot();
	void OnInterrupted_408291ED4EB6D2D6072FC58EE5F21B87(class ACharacter* TransformedCharacter);
	void OnCloseEnough_408291ED4EB6D2D6072FC58EE5F21B87(class ACharacter* TransformedCharacter);
	void OnCompleted_408291ED4EB6D2D6072FC58EE5F21B87(class ACharacter* TransformedCharacter);
	void MoveToStartPosition(class USceneComponent* StartLocationComponent, class USceneComponent* StartRotationComponent);
	void StartPositionReached();
	void OnStartInteract();
	void OnTraverseEnd();
	void ReceiveBeginPlay();
	void TraverseFinished();
	void BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_3_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter);
	void DisableTraversal();
	void BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__InteractActivateColl_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void EnableTraversal();
	void StartPositionCloseEnough();
	void BndEvt__BP_ContextualTraverse_Base_Flow_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent, const struct FGameplayTag& NotifyTag);
	void ForcedInteraction(class ACharacter* InteractingCharacter_0);
	void BndEvt__BP_ContextualTraverse_Base_InteractionFlow_K2Node_ComponentBoundEvent_5_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter);
	void RepositionFinished();
	void ResetReposition();
	void ExecuteUbergraph_BP_ContextualTraverse_Base(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ContextualTraverse_Base_C">();
	}
	static class ABP_ContextualTraverse_Base_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ContextualTraverse_Base_C>();
	}
};
static_assert(alignof(ABP_ContextualTraverse_Base_C) == 0x000008, "Wrong alignment on ABP_ContextualTraverse_Base_C");
static_assert(sizeof(ABP_ContextualTraverse_Base_C) == 0x0002D0, "Wrong size on ABP_ContextualTraverse_Base_C");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, UberGraphFrame) == 0x000238, "Member 'ABP_ContextualTraverse_Base_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, Flow) == 0x000240, "Member 'ABP_ContextualTraverse_Base_C::Flow' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, Persistence) == 0x000248, "Member 'ABP_ContextualTraverse_Base_C::Persistence' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, InteractionFlow) == 0x000250, "Member 'ABP_ContextualTraverse_Base_C::InteractionFlow' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, InteractionIcon) == 0x000258, "Member 'ABP_ContextualTraverse_Base_C::InteractionIcon' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, InteractActivateColl) == 0x000260, "Member 'ABP_ContextualTraverse_Base_C::InteractActivateColl' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, StartRotation) == 0x000268, "Member 'ABP_ContextualTraverse_Base_C::StartRotation' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, StartLocation) == 0x000270, "Member 'ABP_ContextualTraverse_Base_C::StartLocation' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, DefaultSceneRoot) == 0x000278, "Member 'ABP_ContextualTraverse_Base_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, InteractingCharacter) == 0x000280, "Member 'ABP_ContextualTraverse_Base_C::InteractingCharacter' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, PlayerCharacterRef) == 0x000288, "Member 'ABP_ContextualTraverse_Base_C::PlayerCharacterRef' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, CachedCharacterLocation) == 0x000290, "Member 'ABP_ContextualTraverse_Base_C::CachedCharacterLocation' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, CachedCharacterRotation) == 0x00029C, "Member 'ABP_ContextualTraverse_Base_C::CachedCharacterRotation' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, MovementModeDuringAnimation) == 0x0002A8, "Member 'ABP_ContextualTraverse_Base_C::MovementModeDuringAnimation' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, CachedWorldStaticCollisionResponse) == 0x0002A9, "Member 'ABP_ContextualTraverse_Base_C::CachedWorldStaticCollisionResponse' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, AffectPitchRotation) == 0x0002AA, "Member 'ABP_ContextualTraverse_Base_C::AffectPitchRotation' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, TraverseActive) == 0x0002AB, "Member 'ABP_ContextualTraverse_Base_C::TraverseActive' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, Debug) == 0x0002AC, "Member 'ABP_ContextualTraverse_Base_C::Debug' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, InteractColliderActivated) == 0x0002AD, "Member 'ABP_ContextualTraverse_Base_C::InteractColliderActivated' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, GEContextualTraverseHandle) == 0x0002B0, "Member 'ABP_ContextualTraverse_Base_C::GEContextualTraverseHandle' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, InteractionFlowCollision) == 0x0002B8, "Member 'ABP_ContextualTraverse_Base_C::InteractionFlowCollision' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, InteractionColliderCollision) == 0x0002B9, "Member 'ABP_ContextualTraverse_Base_C::InteractionColliderCollision' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, CurrentRepositionProxy) == 0x0002C0, "Member 'ABP_ContextualTraverse_Base_C::CurrentRepositionProxy' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, ShouldSavingBeEnabledAfterFinishingTraversal) == 0x0002C8, "Member 'ABP_ContextualTraverse_Base_C::ShouldSavingBeEnabledAfterFinishingTraversal' has a wrong offset!");
static_assert(offsetof(ABP_ContextualTraverse_Base_C, bUseRepositionCloseEnough) == 0x0002C9, "Member 'ABP_ContextualTraverse_Base_C::bUseRepositionCloseEnough' has a wrong offset!");

}

