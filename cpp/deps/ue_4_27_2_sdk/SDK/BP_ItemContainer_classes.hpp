#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemContainer

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ObsidianFox_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemContainer.BP_ItemContainer_C
// 0x01A8 (0x03E0 - 0x0238)
class ABP_ItemContainer_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UFlowComponent*                         Flow;                                              // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_PuzzleLight_C*                      BP_PuzzleLight;                                    // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraComponent*                       Camera;                                            // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCameraAbductorComponent*               CameraAbductor;                                    // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMapMarkerActorComponent*               MapMarkerActor;                                    // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPersistenceComponent*                  Persistence;                                       // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionFlowComponent*              InteractionFlow;                                   // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Compartment;                                       // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Container;                                         // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemData>               Contained_Item;                                    // 0x0288(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	class FText                                   ItemPickerTargetName;                              // 0x02B0(0x0018)(Edit, BlueprintVisible)
	struct FVector                                Compartment_Opened_Location_Offset;                // 0x02C8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Compartment_Open_Rotation;                         // 0x02D4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   Compartment_Socket_Name;                           // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	bool                                          Opened;                                            // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Amount;                                            // 0x02EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UItemData>               Key;                                               // 0x02F0(0x0028)(Edit, BlueprintVisible, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bConsumeKeyOnUse;                                  // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Open_Event;                                        // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Unlock_Event;                                      // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Unlock_Fail_Event;                                 // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnOpen;                                            // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnLooted;                                          // 0x0348(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bAttachItemToCompartment;                          // 0x0358(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ItemPlacement;                                     // 0x0360(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	class FName                                   ItemAttachSocketName;                              // 0x0390(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class ABP_ItemPickup_C*                       SpawnedItem;                                       // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLooted;                                           // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A1[0x7];                                      // 0x03A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                LoadedKey;                                         // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUseDynamicConsumable;                             // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3B1[0x3];                                      // 0x03B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           ChapterSelectFactTag_Looted;                       // 0x03B4(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	float                                         Dynamic_Consumable_Spawn_Chance;                   // 0x03BC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ContainerMoving;                                   // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C1[0x7];                                      // 0x03C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AItemPickup*>                    AdditionalPickups;                                 // 0x03C8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, AdvancedDisplay)
	bool                                          bEndInteractionOnContainerFullyOpened;             // 0x03D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	class FText GetTargetName();
	bool CheckIfRightItem(class UItemData* ItemData);
	void CreateItemPreviewMesh(TSoftObjectPtr<class UItemData> Input);
	void SetContainerToNotBlockInteractions();
	void EndInteractionFromOpening();
	void SetAdditionalPickupsActive(bool bActive);
	void SetItemPickupActive(bool bActive);
	void LoadChapterSelectValues();
	void Set_Puzzle_Light_Visibility(bool bNewVisibility);
	void OpenItemPicker();
	void SpawnRandomConsumable();
	void Get_Random_Consumable_Type(EConsumableType* OutItem);
	void OnItemPickedUp();
	void Spawn_Item_Pickup(class UItemData* ItemData);
	void On_Dynamic_Consumable_Spawned(class ABP_ItemPickup_C* Pickup_Spawned);
	void UserConstructionScript();
	void OnLoaded_9024288545C2471C96712EA2AFB43ED3(class UObject* Loaded);
	void OnLoaded_9024288545C2471C96712EA216BE0F1B(class UObject* Loaded);
	void OnLoaded_24CF43A74C2663091A8AEF94ADE0E186(class UObject* Loaded);
	void LoadCompleteDelegate_107135B74F3321A10B32BDBB8F3F3591(const TArray<class UObject*>& LoadedAssets);
	void BndEvt__BP_ItemContainer_InteractionFlow_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter);
	void ReceiveBeginPlay();
	void Open_Container();
	void AutoLoot();
	void AnimateCompartment();
	void OnWindowClose();
	void BndEvt__BP_ItemContainer_CameraAbductor_K2Node_ComponentBoundEvent_1_CameraAbductionDelegate__DelegateSignature(class AActor* AbductingActor, class APlayerController* InteractingController);
	void BndEvt__BP_ItemContainer_CameraAbductor_K2Node_ComponentBoundEvent_2_CameraAbductionDelegate__DelegateSignature(class AActor* AbductingActor, class APlayerController* InteractingController);
	void BndEvt__BP_ItemContainer_Flow_K2Node_ComponentBoundEvent_3_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent, const struct FGameplayTag& NotifyTag);
	void ExecuteUbergraph_BP_ItemContainer(int32 EntryPoint);
	void OnOpen__DelegateSignature(class ABP_ItemContainer_C* Container_0);
	void OnLooted__DelegateSignature(class ABP_ItemContainer_C* Container_0, class UItemData* Item);

	void GetItemAttachmentParameters(class USceneComponent** Parent, class FName* AttachSocketName, struct FTransform* SpawnWorldTransform) const;
	struct FGameplayTag GetItemCategoryGameplayTag() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemContainer_C">();
	}
	static class ABP_ItemContainer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemContainer_C>();
	}
};
static_assert(alignof(ABP_ItemContainer_C) == 0x000010, "Wrong alignment on ABP_ItemContainer_C");
static_assert(sizeof(ABP_ItemContainer_C) == 0x0003E0, "Wrong size on ABP_ItemContainer_C");
static_assert(offsetof(ABP_ItemContainer_C, UberGraphFrame) == 0x000238, "Member 'ABP_ItemContainer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Flow) == 0x000240, "Member 'ABP_ItemContainer_C::Flow' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, BP_PuzzleLight) == 0x000248, "Member 'ABP_ItemContainer_C::BP_PuzzleLight' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Camera) == 0x000250, "Member 'ABP_ItemContainer_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, CameraAbductor) == 0x000258, "Member 'ABP_ItemContainer_C::CameraAbductor' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, MapMarkerActor) == 0x000260, "Member 'ABP_ItemContainer_C::MapMarkerActor' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Persistence) == 0x000268, "Member 'ABP_ItemContainer_C::Persistence' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, InteractionFlow) == 0x000270, "Member 'ABP_ItemContainer_C::InteractionFlow' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Compartment) == 0x000278, "Member 'ABP_ItemContainer_C::Compartment' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Container) == 0x000280, "Member 'ABP_ItemContainer_C::Container' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Contained_Item) == 0x000288, "Member 'ABP_ItemContainer_C::Contained_Item' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, ItemPickerTargetName) == 0x0002B0, "Member 'ABP_ItemContainer_C::ItemPickerTargetName' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Compartment_Opened_Location_Offset) == 0x0002C8, "Member 'ABP_ItemContainer_C::Compartment_Opened_Location_Offset' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Compartment_Open_Rotation) == 0x0002D4, "Member 'ABP_ItemContainer_C::Compartment_Open_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Compartment_Socket_Name) == 0x0002E0, "Member 'ABP_ItemContainer_C::Compartment_Socket_Name' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Opened) == 0x0002E8, "Member 'ABP_ItemContainer_C::Opened' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Amount) == 0x0002EC, "Member 'ABP_ItemContainer_C::Amount' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Key) == 0x0002F0, "Member 'ABP_ItemContainer_C::Key' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, bConsumeKeyOnUse) == 0x000318, "Member 'ABP_ItemContainer_C::bConsumeKeyOnUse' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Open_Event) == 0x000320, "Member 'ABP_ItemContainer_C::Open_Event' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Unlock_Event) == 0x000328, "Member 'ABP_ItemContainer_C::Unlock_Event' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Unlock_Fail_Event) == 0x000330, "Member 'ABP_ItemContainer_C::Unlock_Fail_Event' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, OnOpen) == 0x000338, "Member 'ABP_ItemContainer_C::OnOpen' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, OnLooted) == 0x000348, "Member 'ABP_ItemContainer_C::OnLooted' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, bAttachItemToCompartment) == 0x000358, "Member 'ABP_ItemContainer_C::bAttachItemToCompartment' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, ItemPlacement) == 0x000360, "Member 'ABP_ItemContainer_C::ItemPlacement' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, ItemAttachSocketName) == 0x000390, "Member 'ABP_ItemContainer_C::ItemAttachSocketName' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, SpawnedItem) == 0x000398, "Member 'ABP_ItemContainer_C::SpawnedItem' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, bLooted) == 0x0003A0, "Member 'ABP_ItemContainer_C::bLooted' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, LoadedKey) == 0x0003A8, "Member 'ABP_ItemContainer_C::LoadedKey' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, bUseDynamicConsumable) == 0x0003B0, "Member 'ABP_ItemContainer_C::bUseDynamicConsumable' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, ChapterSelectFactTag_Looted) == 0x0003B4, "Member 'ABP_ItemContainer_C::ChapterSelectFactTag_Looted' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, Dynamic_Consumable_Spawn_Chance) == 0x0003BC, "Member 'ABP_ItemContainer_C::Dynamic_Consumable_Spawn_Chance' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, ContainerMoving) == 0x0003C0, "Member 'ABP_ItemContainer_C::ContainerMoving' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, AdditionalPickups) == 0x0003C8, "Member 'ABP_ItemContainer_C::AdditionalPickups' has a wrong offset!");
static_assert(offsetof(ABP_ItemContainer_C, bEndInteractionOnContainerFullyOpened) == 0x0003D8, "Member 'ABP_ItemContainer_C::bEndInteractionOnContainerFullyOpened' has a wrong offset!");

}

