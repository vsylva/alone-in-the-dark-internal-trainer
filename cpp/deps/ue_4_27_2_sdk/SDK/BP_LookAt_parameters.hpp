#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LookAt

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_LookAt.BP_LookAt_C.OnTriggerEndOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_LookAt_C_OnTriggerEndOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LookAt_C_OnTriggerEndOverlap) == 0x000008, "Wrong alignment on BP_LookAt_C_OnTriggerEndOverlap");
static_assert(sizeof(BP_LookAt_C_OnTriggerEndOverlap) == 0x000020, "Wrong size on BP_LookAt_C_OnTriggerEndOverlap");
static_assert(offsetof(BP_LookAt_C_OnTriggerEndOverlap, OverlappedActor) == 0x000000, "Member 'BP_LookAt_C_OnTriggerEndOverlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_OnTriggerEndOverlap, OtherActor) == 0x000008, "Member 'BP_LookAt_C_OnTriggerEndOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_OnTriggerEndOverlap, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_LookAt_C_OnTriggerEndOverlap::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_OnTriggerEndOverlap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_LookAt_C_OnTriggerEndOverlap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_LookAt.BP_LookAt_C.OnTriggerBeginOverlap
// 0x0020 (0x0020 - 0x0000)
struct BP_LookAt_C_OnTriggerBeginOverlap final
{
public:
	class AActor*                                 OverlappedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LookAt_C_OnTriggerBeginOverlap) == 0x000008, "Wrong alignment on BP_LookAt_C_OnTriggerBeginOverlap");
static_assert(sizeof(BP_LookAt_C_OnTriggerBeginOverlap) == 0x000020, "Wrong size on BP_LookAt_C_OnTriggerBeginOverlap");
static_assert(offsetof(BP_LookAt_C_OnTriggerBeginOverlap, OverlappedActor) == 0x000000, "Member 'BP_LookAt_C_OnTriggerBeginOverlap::OverlappedActor' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_OnTriggerBeginOverlap, OtherActor) == 0x000008, "Member 'BP_LookAt_C_OnTriggerBeginOverlap::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_OnTriggerBeginOverlap, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_LookAt_C_OnTriggerBeginOverlap::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_OnTriggerBeginOverlap, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BP_LookAt_C_OnTriggerBeginOverlap::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_LookAt.BP_LookAt_C.EnableLookAt
// 0x0001 (0x0001 - 0x0000)
struct BP_LookAt_C_EnableLookAt final
{
public:
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LookAt_C_EnableLookAt) == 0x000001, "Wrong alignment on BP_LookAt_C_EnableLookAt");
static_assert(sizeof(BP_LookAt_C_EnableLookAt) == 0x000001, "Wrong size on BP_LookAt_C_EnableLookAt");
static_assert(offsetof(BP_LookAt_C_EnableLookAt, CallFunc_BooleanAND_ReturnValue) == 0x000000, "Member 'BP_LookAt_C_EnableLookAt::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_LookAt.BP_LookAt_C.BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature final
{
public:
	class UFlowComponent*                         FlowComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NotifyTag;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature) == 0x000008, "Wrong alignment on BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature");
static_assert(sizeof(BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature) == 0x000010, "Wrong size on BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature");
static_assert(offsetof(BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature, FlowComponent) == 0x000000, "Member 'BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature::FlowComponent' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature, NotifyTag) == 0x000008, "Member 'BP_LookAt_C_BndEvt__BP_FlowLookat_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature::NotifyTag' has a wrong offset!");

// Function BP_LookAt.BP_LookAt_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_LookAt_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LookAt_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_LookAt_C_ReceiveTick");
static_assert(sizeof(BP_LookAt_C_ReceiveTick) == 0x000004, "Wrong size on BP_LookAt_C_ReceiveTick");
static_assert(offsetof(BP_LookAt_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_LookAt_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_LookAt.BP_LookAt_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_LookAt_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LookAt_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_LookAt_C_ReceiveEndPlay");
static_assert(sizeof(BP_LookAt_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_LookAt_C_ReceiveEndPlay");
static_assert(offsetof(BP_LookAt_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_LookAt_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_LookAt.BP_LookAt_C.ExecuteUbergraph_BP_LookAt
// 0x0170 (0x0170 - 0x0000)
struct BP_LookAt_C_ExecuteUbergraph_BP_LookAt final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFlowComponent*                         K2Node_ComponentBoundEvent_FlowComponent;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_NotifyTag;              // 0x0018(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue_1;          // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0088(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0098(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0124(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0138(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0148(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x3];                                      // 0x0159(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class AActor* OverlappedActor, class AActor* OtherActor)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt) == 0x000008, "Wrong alignment on BP_LookAt_C_ExecuteUbergraph_BP_LookAt");
static_assert(sizeof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt) == 0x000170, "Wrong size on BP_LookAt_C_ExecuteUbergraph_BP_LookAt");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, EntryPoint) == 0x000000, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_ComponentBoundEvent_FlowComponent) == 0x000010, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_ComponentBoundEvent_FlowComponent' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_ComponentBoundEvent_NotifyTag) == 0x000018, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_ComponentBoundEvent_NotifyTag' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_GetCameraRotation_ReturnValue) == 0x000020, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00002C, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_GetCameraLocation_ReturnValue) == 0x000030, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_Event_DeltaSeconds) == 0x00003C, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000040, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_FindLookAtRotation_ReturnValue) == 0x00004C, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000058, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000060, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_GetCameraLocation_ReturnValue_1) == 0x000064, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_GetCameraLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_GetPlayerPawn_ReturnValue) == 0x000080, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_MakeArray_Array) == 0x000088, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_LineTraceSingle_OutHit) == 0x000098, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_LineTraceSingle_ReturnValue) == 0x000120, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_Event_EndPlayReason) == 0x000121, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_CreateDelegate_OutputDelegate) == 0x000124, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_IsValid_ReturnValue) == 0x000134, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_CreateDelegate_OutputDelegate_1) == 0x000138, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_CreateDelegate_OutputDelegate_2) == 0x000148, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, CallFunc_IsValid_ReturnValue_1) == 0x000158, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LookAt_C_ExecuteUbergraph_BP_LookAt, K2Node_CreateDelegate_OutputDelegate_3) == 0x00015C, "Member 'BP_LookAt_C_ExecuteUbergraph_BP_LookAt::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");

// Function BP_LookAt.BP_LookAt_C.OnLookAt__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_LookAt_C_OnLookAt__DelegateSignature final
{
public:
	class ABP_LookAt_C*                           LookAt_Actor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LookAt_C_OnLookAt__DelegateSignature) == 0x000008, "Wrong alignment on BP_LookAt_C_OnLookAt__DelegateSignature");
static_assert(sizeof(BP_LookAt_C_OnLookAt__DelegateSignature) == 0x000008, "Wrong size on BP_LookAt_C_OnLookAt__DelegateSignature");
static_assert(offsetof(BP_LookAt_C_OnLookAt__DelegateSignature, LookAt_Actor) == 0x000000, "Member 'BP_LookAt_C_OnLookAt__DelegateSignature::LookAt_Actor' has a wrong offset!");

}

