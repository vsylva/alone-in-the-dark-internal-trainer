#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_DefaultTech

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_structs.hpp"


namespace SDK::Params
{

// Function ABP_NPC_DefaultTech.ABP_NPC_DefaultTech_C.ExecuteUbergraph_ABP_NPC_DefaultTech
// 0x000C (0x000C - 0x0000)
struct ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech) == 0x000004, "Wrong alignment on ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech");
static_assert(sizeof(ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech) == 0x00000C, "Wrong size on ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech");
static_assert(offsetof(ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech, EntryPoint) == 0x000000, "Member 'ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech, CallFunc_MakeLiteralBool_ReturnValue) == 0x000004, "Member 'ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ABP_NPC_DefaultTech_C_ExecuteUbergraph_ABP_NPC_DefaultTech::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function ABP_NPC_DefaultTech.ABP_NPC_DefaultTech_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_NPC_DefaultTech_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_NPC_DefaultTech_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_NPC_DefaultTech_C_AnimGraph");
static_assert(sizeof(ABP_NPC_DefaultTech_C_AnimGraph) == 0x000010, "Wrong size on ABP_NPC_DefaultTech_C_AnimGraph");
static_assert(offsetof(ABP_NPC_DefaultTech_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_NPC_DefaultTech_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_NPC_DefaultTech.ABP_NPC_DefaultTech_C.FootIKLayer
// 0x0028 (0x0028 - 0x0000)
struct ABP_NPC_DefaultTech_C_FootIKLayer final
{
public:
	struct FPoseLink                              FootIKInputPose;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UOFCharacterMovementComponent*          MovementComponent_0;                               // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseLink                              FootIKLayer_0;                                     // 0x0018(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_NPC_DefaultTech_C_FootIKLayer) == 0x000008, "Wrong alignment on ABP_NPC_DefaultTech_C_FootIKLayer");
static_assert(sizeof(ABP_NPC_DefaultTech_C_FootIKLayer) == 0x000028, "Wrong size on ABP_NPC_DefaultTech_C_FootIKLayer");
static_assert(offsetof(ABP_NPC_DefaultTech_C_FootIKLayer, FootIKInputPose) == 0x000000, "Member 'ABP_NPC_DefaultTech_C_FootIKLayer::FootIKInputPose' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DefaultTech_C_FootIKLayer, MovementComponent_0) == 0x000010, "Member 'ABP_NPC_DefaultTech_C_FootIKLayer::MovementComponent_0' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DefaultTech_C_FootIKLayer, FootIKLayer_0) == 0x000018, "Member 'ABP_NPC_DefaultTech_C_FootIKLayer::FootIKLayer_0' has a wrong offset!");

// Function ABP_NPC_DefaultTech.ABP_NPC_DefaultTech_C.BodyFocusLayer
// 0x01B0 (0x01B0 - 0x0000)
struct ABP_NPC_DefaultTech_C_BodyFocusLayer final
{
public:
	struct FPoseLink                              BodyFocusLayerInputPose;                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FFocusPointsVariables                  FocusPointSettings_0;                              // 0x0010(0x0190)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FPoseLink                              BodyFocusLayer_0;                                  // 0x01A0(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_NPC_DefaultTech_C_BodyFocusLayer) == 0x000008, "Wrong alignment on ABP_NPC_DefaultTech_C_BodyFocusLayer");
static_assert(sizeof(ABP_NPC_DefaultTech_C_BodyFocusLayer) == 0x0001B0, "Wrong size on ABP_NPC_DefaultTech_C_BodyFocusLayer");
static_assert(offsetof(ABP_NPC_DefaultTech_C_BodyFocusLayer, BodyFocusLayerInputPose) == 0x000000, "Member 'ABP_NPC_DefaultTech_C_BodyFocusLayer::BodyFocusLayerInputPose' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DefaultTech_C_BodyFocusLayer, FocusPointSettings_0) == 0x000010, "Member 'ABP_NPC_DefaultTech_C_BodyFocusLayer::FocusPointSettings_0' has a wrong offset!");
static_assert(offsetof(ABP_NPC_DefaultTech_C_BodyFocusLayer, BodyFocusLayer_0) == 0x0001A0, "Member 'ABP_NPC_DefaultTech_C_BodyFocusLayer::BodyFocusLayer_0' has a wrong offset!");

}

