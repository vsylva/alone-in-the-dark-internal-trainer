#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LocomotionStateAnimComponent

#include "Basic.hpp"

#include "ObsidianFox_structs.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_LocomotionStateAnimComponent.BP_LocomotionStateAnimComponent_C.IsDarkManObsessionHighEnough
// 0x0018 (0x0018 - 0x0000)
struct BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough final
{
public:
	bool                                          Value;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_DarkMan*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOFObsessionStage                             CallFunc_GetCurrentObsessionStage_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough) == 0x000008, "Wrong alignment on BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough");
static_assert(sizeof(BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough) == 0x000018, "Wrong size on BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough, Value) == 0x000000, "Member 'BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough::Value' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough, CallFunc_GetCurrentObsessionStage_ReturnValue) == 0x000010, "Member 'BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough::CallFunc_GetCurrentObsessionStage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'BP_LocomotionStateAnimComponent_C_IsDarkManObsessionHighEnough::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_LocomotionStateAnimComponent.BP_LocomotionStateAnimComponent_C.IsCharacterOnSlope
// 0x0028 (0x0028 - 0x0000)
struct BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _DeltaTime;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOFCharacterMovementComponent*          K2Node_DynamicCast_AsOFCharacter_Movement_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope) == 0x000008, "Wrong alignment on BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope");
static_assert(sizeof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope) == 0x000028, "Wrong size on BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope, ReturnValue) == 0x000000, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope, _DeltaTime) == 0x000004, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope::_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope, K2Node_DynamicCast_AsOFCharacter_Movement_Component) == 0x000010, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope::K2Node_DynamicCast_AsOFCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope, CallFunc_Abs_ReturnValue) == 0x00001C, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnSlope::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_LocomotionStateAnimComponent.BP_LocomotionStateAnimComponent_C.IsCombatState
// 0x0018 (0x0018 - 0x0000)
struct BP_LocomotionStateAnimComponent_C_IsCombatState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForcedCombatState_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHolstering_ReturnValue;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFWeaponActor*                         CallFunc_GetActiveWeapon_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LocomotionStateAnimComponent_C_IsCombatState) == 0x000008, "Wrong alignment on BP_LocomotionStateAnimComponent_C_IsCombatState");
static_assert(sizeof(BP_LocomotionStateAnimComponent_C_IsCombatState) == 0x000018, "Wrong size on BP_LocomotionStateAnimComponent_C_IsCombatState");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, ReturnValue) == 0x000000, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, CallFunc_IsForcedCombatState_ReturnValue) == 0x000001, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::CallFunc_IsForcedCombatState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, CallFunc_IsHolstering_ReturnValue) == 0x000002, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::CallFunc_IsHolstering_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, CallFunc_Not_PreBool_ReturnValue) == 0x000003, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, CallFunc_GetActiveWeapon_ReturnValue) == 0x000008, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::CallFunc_GetActiveWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, CallFunc_BooleanOR_ReturnValue) == 0x000011, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCombatState, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_LocomotionStateAnimComponent_C_IsCombatState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_LocomotionStateAnimComponent.BP_LocomotionStateAnimComponent_C.IsCharacterOnStairs
// 0x0028 (0x0028 - 0x0000)
struct BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         _DeltaTime;                                        // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOFCharacterMovementComponent*          K2Node_DynamicCast_AsOFCharacter_Movement_Component; // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Abs_ReturnValue;                          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs) == 0x000008, "Wrong alignment on BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs");
static_assert(sizeof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs) == 0x000028, "Wrong size on BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs, ReturnValue) == 0x000000, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs, _DeltaTime) == 0x000004, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs::_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs, CallFunc_GetMovementComponent_ReturnValue) == 0x000008, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs, K2Node_DynamicCast_AsOFCharacter_Movement_Component) == 0x000010, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs::K2Node_DynamicCast_AsOFCharacter_Movement_Component' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs, CallFunc_Abs_ReturnValue) == 0x00001C, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_LocomotionStateAnimComponent_C_IsCharacterOnStairs::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_LocomotionStateAnimComponent.BP_LocomotionStateAnimComponent_C.IsResistanceWeather
// 0x0060 (0x0060 - 0x0000)
struct BP_LocomotionStateAnimComponent_C_IsResistanceWeather final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEnvironmentGameSubSystem*              CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeLiteralGameplayTagContainer_ReturnValue; // 0x0010(0x0020)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_GetWeatherTag_ReturnValue;                // 0x0038(0x0020)()
	bool                                          CallFunc_HasAnyTags_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather) == 0x000008, "Wrong alignment on BP_LocomotionStateAnimComponent_C_IsResistanceWeather");
static_assert(sizeof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather) == 0x000060, "Wrong size on BP_LocomotionStateAnimComponent_C_IsResistanceWeather");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather, ReturnValue) == 0x000000, "Member 'BP_LocomotionStateAnimComponent_C_IsResistanceWeather::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'BP_LocomotionStateAnimComponent_C_IsResistanceWeather::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather, CallFunc_MakeLiteralGameplayTagContainer_ReturnValue) == 0x000010, "Member 'BP_LocomotionStateAnimComponent_C_IsResistanceWeather::CallFunc_MakeLiteralGameplayTagContainer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_LocomotionStateAnimComponent_C_IsResistanceWeather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather, CallFunc_GetWeatherTag_ReturnValue) == 0x000038, "Member 'BP_LocomotionStateAnimComponent_C_IsResistanceWeather::CallFunc_GetWeatherTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_IsResistanceWeather, CallFunc_HasAnyTags_ReturnValue) == 0x000058, "Member 'BP_LocomotionStateAnimComponent_C_IsResistanceWeather::CallFunc_HasAnyTags_ReturnValue' has a wrong offset!");

// Function BP_LocomotionStateAnimComponent.BP_LocomotionStateAnimComponent_C.ExecuteUbergraph_BP_LocomotionStateAnimComponent
// 0x0004 (0x0004 - 0x0000)
struct BP_LocomotionStateAnimComponent_C_ExecuteUbergraph_BP_LocomotionStateAnimComponent final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LocomotionStateAnimComponent_C_ExecuteUbergraph_BP_LocomotionStateAnimComponent) == 0x000004, "Wrong alignment on BP_LocomotionStateAnimComponent_C_ExecuteUbergraph_BP_LocomotionStateAnimComponent");
static_assert(sizeof(BP_LocomotionStateAnimComponent_C_ExecuteUbergraph_BP_LocomotionStateAnimComponent) == 0x000004, "Wrong size on BP_LocomotionStateAnimComponent_C_ExecuteUbergraph_BP_LocomotionStateAnimComponent");
static_assert(offsetof(BP_LocomotionStateAnimComponent_C_ExecuteUbergraph_BP_LocomotionStateAnimComponent, EntryPoint) == 0x000000, "Member 'BP_LocomotionStateAnimComponent_C_ExecuteUbergraph_BP_LocomotionStateAnimComponent::EntryPoint' has a wrong offset!");

}

