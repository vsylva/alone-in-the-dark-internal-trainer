#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CemeteryCreature

#include "Basic.hpp"

#include "CemeteryCreatureType_structs.hpp"
#include "GameplayAbilities_structs.hpp"
#include "Engine_structs.hpp"
#include "ObsidianFoxSettings_structs.hpp"


namespace SDK::Params
{

// Function BP_CemeteryCreature.BP_CemeteryCreature_C.GetWakeupMontage
// 0x0008 (0x0008 - 0x0000)
struct BP_CemeteryCreature_C_GetWakeupMontage final
{
public:
	class UAnimMontage*                           Montageeee;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CemeteryCreature_C_GetWakeupMontage) == 0x000008, "Wrong alignment on BP_CemeteryCreature_C_GetWakeupMontage");
static_assert(sizeof(BP_CemeteryCreature_C_GetWakeupMontage) == 0x000008, "Wrong size on BP_CemeteryCreature_C_GetWakeupMontage");
static_assert(offsetof(BP_CemeteryCreature_C_GetWakeupMontage, Montageeee) == 0x000000, "Member 'BP_CemeteryCreature_C_GetWakeupMontage::Montageeee' has a wrong offset!");

// Function BP_CemeteryCreature.BP_CemeteryCreature_C.getCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_CemeteryCreature_C_GetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CemeteryCreatureType_0;                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CemeteryCreature_C_GetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_CemeteryCreature_C_GetCemeteryCreatureType");
static_assert(sizeof(BP_CemeteryCreature_C_GetCemeteryCreatureType) == 0x000001, "Wrong size on BP_CemeteryCreature_C_GetCemeteryCreatureType");
static_assert(offsetof(BP_CemeteryCreature_C_GetCemeteryCreatureType, CemeteryCreatureType_0) == 0x000000, "Member 'BP_CemeteryCreature_C_GetCemeteryCreatureType::CemeteryCreatureType_0' has a wrong offset!");

// Function BP_CemeteryCreature.BP_CemeteryCreature_C.InjectSpeedTestChanges
// 0x0038 (0x0038 - 0x0000)
struct BP_CemeteryCreature_C_InjectSpeedTestChanges final
{
public:
	bool                                          bIsInCombat;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x0008(0x0010)()
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0020(0x0010)()
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0030(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CemeteryCreature_C_InjectSpeedTestChanges) == 0x000008, "Wrong alignment on BP_CemeteryCreature_C_InjectSpeedTestChanges");
static_assert(sizeof(BP_CemeteryCreature_C_InjectSpeedTestChanges) == 0x000038, "Wrong size on BP_CemeteryCreature_C_InjectSpeedTestChanges");
static_assert(offsetof(BP_CemeteryCreature_C_InjectSpeedTestChanges, bIsInCombat) == 0x000000, "Member 'BP_CemeteryCreature_C_InjectSpeedTestChanges::bIsInCombat' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InjectSpeedTestChanges, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000004, "Member 'BP_CemeteryCreature_C_InjectSpeedTestChanges::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InjectSpeedTestChanges, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x000008, "Member 'BP_CemeteryCreature_C_InjectSpeedTestChanges::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InjectSpeedTestChanges, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'BP_CemeteryCreature_C_InjectSpeedTestChanges::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InjectSpeedTestChanges, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000020, "Member 'BP_CemeteryCreature_C_InjectSpeedTestChanges::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InjectSpeedTestChanges, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000030, "Member 'BP_CemeteryCreature_C_InjectSpeedTestChanges::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");

// Function BP_CemeteryCreature.BP_CemeteryCreature_C.InitializeCreatureType
// 0x00B8 (0x00B8 - 0x0000)
struct BP_CemeteryCreature_C_InitializeCreatureType final
{
public:
	class USkeletalMesh*                          Temp_object_Variable;                              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_1;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_2;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          Temp_object_Variable_3;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 Temp_class_Variable;                               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_1;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_2;                             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 Temp_class_Variable_3;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         Temp_byte_Variable_1;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BuildString_Object_ReturnValue;           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0070(0x0010)(ConstParm, ReferenceParm)
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item;                           // 0x0080(0x0028)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_1;                           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CemeteryCreature_C_InitializeCreatureType) == 0x000008, "Wrong alignment on BP_CemeteryCreature_C_InitializeCreatureType");
static_assert(sizeof(BP_CemeteryCreature_C_InitializeCreatureType) == 0x0000B8, "Wrong size on BP_CemeteryCreature_C_InitializeCreatureType");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_object_Variable) == 0x000000, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_object_Variable_1) == 0x000008, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_object_Variable_2) == 0x000010, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_object_Variable_3) == 0x000018, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_byte_Variable) == 0x000020, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_class_Variable) == 0x000028, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_class_Variable' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_class_Variable_1) == 0x000030, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_class_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_class_Variable_2) == 0x000038, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_class_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_class_Variable_3) == 0x000040, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_class_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_byte_Variable_1) == 0x00004C, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, CallFunc_BuildString_Object_ReturnValue) == 0x000050, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::CallFunc_BuildString_Object_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, Temp_int_Loop_Counter_Variable) == 0x000060, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, CallFunc_Add_IntInt_ReturnValue) == 0x000064, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, K2Node_Select_Default) == 0x000068, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, CallFunc_GetMaterials_ReturnValue) == 0x000070, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, CallFunc_Array_Get_Item) == 0x000080, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_InitializeCreatureType, K2Node_Select_Default_1) == 0x0000B0, "Member 'BP_CemeteryCreature_C_InitializeCreatureType::K2Node_Select_Default_1' has a wrong offset!");

// Function BP_CemeteryCreature.BP_CemeteryCreature_C.SetCemeteryCreatureType
// 0x0001 (0x0001 - 0x0000)
struct BP_CemeteryCreature_C_SetCemeteryCreatureType final
{
public:
	ECemeteryCreatureType                         CreatureType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CemeteryCreature_C_SetCemeteryCreatureType) == 0x000001, "Wrong alignment on BP_CemeteryCreature_C_SetCemeteryCreatureType");
static_assert(sizeof(BP_CemeteryCreature_C_SetCemeteryCreatureType) == 0x000001, "Wrong size on BP_CemeteryCreature_C_SetCemeteryCreatureType");
static_assert(offsetof(BP_CemeteryCreature_C_SetCemeteryCreatureType, CreatureType) == 0x000000, "Member 'BP_CemeteryCreature_C_SetCemeteryCreatureType::CreatureType' has a wrong offset!");

// Function BP_CemeteryCreature.BP_CemeteryCreature_C.OnCombatStateChanged_Event_0
// 0x0001 (0x0001 - 0x0000)
struct BP_CemeteryCreature_C_OnCombatStateChanged_Event_0 final
{
public:
	bool                                          bNewIsInCombat;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_CemeteryCreature_C_OnCombatStateChanged_Event_0) == 0x000001, "Wrong alignment on BP_CemeteryCreature_C_OnCombatStateChanged_Event_0");
static_assert(sizeof(BP_CemeteryCreature_C_OnCombatStateChanged_Event_0) == 0x000001, "Wrong size on BP_CemeteryCreature_C_OnCombatStateChanged_Event_0");
static_assert(offsetof(BP_CemeteryCreature_C_OnCombatStateChanged_Event_0, bNewIsInCombat) == 0x000000, "Member 'BP_CemeteryCreature_C_OnCombatStateChanged_Event_0::bNewIsInCombat' has a wrong offset!");

// Function BP_CemeteryCreature.BP_CemeteryCreature_C.ExecuteUbergraph_BP_CemeteryCreature
// 0x0128 (0x0128 - 0x0000)
struct BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_PlayState*               CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UOFSaveGameDataSubsystem*               CallFunc_GetGameInstanceSubsystem_ReturnValue_1;   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool bNewIsInCombat)>          K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	EDifficulty                                   CallFunc_GetCurrentDifficulty_ReturnValue;         // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EDifficulty, float>                      Temp_byte_Variable;                                // 0x0040(0x0050)()
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Map_Find_Value;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEffectSpecHandle              CallFunc_MakeOutgoingSpec_ReturnValue;             // 0x00B8(0x0010)()
	class FName                                   Temp_name_Variable_2;                              // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         Temp_byte_Variable_1;                              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEvaluateCurveTableResult                     CallFunc_EvaluateCurveTableRow_OutResult;          // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_EvaluateCurveTableRow_OutXY;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ECemeteryCreatureType                         K2Node_Event_CreatureType;                         // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEffectSpecHandle              CallFunc_AssignTagSetByCallerMagnitude_ReturnValue; // 0x0100(0x0010)()
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FActiveGameplayEffectHandle            CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue; // 0x0114(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewIsInCombat;                 // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue_1;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature) == 0x000008, "Wrong alignment on BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature");
static_assert(sizeof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature) == 0x000128, "Wrong size on BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, EntryPoint) == 0x000000, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, Temp_name_Variable) == 0x000004, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, Temp_name_Variable_1) == 0x00000C, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_GetGameInstanceSubsystem_ReturnValue_1) == 0x000020, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_GetGameInstanceSubsystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_GetCurrentDifficulty_ReturnValue) == 0x000038, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_GetCurrentDifficulty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, Temp_byte_Variable) == 0x000040, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_MakeLiteralName_ReturnValue) == 0x000090, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_Map_Find_Value) == 0x000098, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_Map_Find_ReturnValue) == 0x00009C, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_GetBlackboard_ReturnValue) == 0x0000A8, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_MakeLiteralName_ReturnValue_1) == 0x0000B0, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_MakeOutgoingSpec_ReturnValue) == 0x0000B8, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_MakeOutgoingSpec_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, Temp_name_Variable_2) == 0x0000C8, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, Temp_name_Variable_3) == 0x0000D0, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, Temp_byte_Variable_1) == 0x0000D8, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_RandomFloatInRange_ReturnValue) == 0x0000DC, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, K2Node_Select_Default) == 0x0000E0, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000E8, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_EvaluateCurveTableRow_OutResult) == 0x0000EC, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_EvaluateCurveTableRow_OutResult' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_EvaluateCurveTableRow_OutXY) == 0x0000F0, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_EvaluateCurveTableRow_OutXY' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, K2Node_Event_CreatureType) == 0x0000F4, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::K2Node_Event_CreatureType' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x0000F8, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_AssignTagSetByCallerMagnitude_ReturnValue) == 0x000100, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_AssignTagSetByCallerMagnitude_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, K2Node_SwitchEnum_CmpSuccess) == 0x000110, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue) == 0x000114, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_BP_ApplyGameplayEffectSpecToSelf_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, K2Node_CustomEvent_bNewIsInCombat) == 0x00011C, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::K2Node_CustomEvent_bNewIsInCombat' has a wrong offset!");
static_assert(offsetof(BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature, CallFunc_GetBlackboard_ReturnValue_1) == 0x000120, "Member 'BP_CemeteryCreature_C_ExecuteUbergraph_BP_CemeteryCreature::CallFunc_GetBlackboard_ReturnValue_1' has a wrong offset!");

}

