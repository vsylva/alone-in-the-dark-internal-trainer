#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PatrolPath

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PatrolPath.BP_PatrolPath_C
// 0x0048 (0x0280 - 0x0238)
class ABP_PatrolPath_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UChildActorComponent*                   ChildActor;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        FollowComponent;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       Spline;                                            // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DistanceAlongSpline;                               // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         JumpDistance;                                      // 0x026C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Backwards;                                         // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsAtEnd;                                           // 0x0271(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          MovementComplete;                                  // 0x0272(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_273[0x1];                                      // 0x0273(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         WaitTimeAtEndpoints;                               // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ClosedLoop;                                        // 0x0278(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ShowDebug;                                         // 0x0279(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void UserConstructionScript();
	void ReceiveBeginPlay();
	void BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void CollisionCheck();
	void ExecuteUbergraph_BP_PatrolPath(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PatrolPath_C">();
	}
	static class ABP_PatrolPath_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PatrolPath_C>();
	}
};
static_assert(alignof(ABP_PatrolPath_C) == 0x000008, "Wrong alignment on ABP_PatrolPath_C");
static_assert(sizeof(ABP_PatrolPath_C) == 0x000280, "Wrong size on ABP_PatrolPath_C");
static_assert(offsetof(ABP_PatrolPath_C, UberGraphFrame) == 0x000238, "Member 'ABP_PatrolPath_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, ChildActor) == 0x000240, "Member 'ABP_PatrolPath_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, Sphere) == 0x000248, "Member 'ABP_PatrolPath_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, FollowComponent) == 0x000250, "Member 'ABP_PatrolPath_C::FollowComponent' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, Spline) == 0x000258, "Member 'ABP_PatrolPath_C::Spline' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, DefaultSceneRoot) == 0x000260, "Member 'ABP_PatrolPath_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, DistanceAlongSpline) == 0x000268, "Member 'ABP_PatrolPath_C::DistanceAlongSpline' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, JumpDistance) == 0x00026C, "Member 'ABP_PatrolPath_C::JumpDistance' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, Backwards) == 0x000270, "Member 'ABP_PatrolPath_C::Backwards' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, IsAtEnd) == 0x000271, "Member 'ABP_PatrolPath_C::IsAtEnd' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, MovementComplete) == 0x000272, "Member 'ABP_PatrolPath_C::MovementComplete' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, WaitTimeAtEndpoints) == 0x000274, "Member 'ABP_PatrolPath_C::WaitTimeAtEndpoints' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, ClosedLoop) == 0x000278, "Member 'ABP_PatrolPath_C::ClosedLoop' has a wrong offset!");
static_assert(offsetof(ABP_PatrolPath_C, ShowDebug) == 0x000279, "Member 'ABP_PatrolPath_C::ShowDebug' has a wrong offset!");

}

