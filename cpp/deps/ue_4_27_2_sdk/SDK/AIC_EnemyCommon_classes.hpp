#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_EnemyCommon

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "CharacterSize_structs.hpp"
#include "AnimationMontageIdentifier_structs.hpp"
#include "CemeteryCreatureType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass AIC_EnemyCommon.AIC_EnemyCommon_C
// 0x0068 (0x03D0 - 0x0368)
class AAIC_EnemyCommon_C : public AOFEnemyAIController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0368(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UAIPerceptionComponent*                 AIPerception;                                      // 0x0370(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPatrolPathComponent_C*                 PatrolPathComponent;                               // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ThreatKey;                                         // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	class FName                                   ThreatMaxKey;                                      // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash)
	float                                         DefaultMaxThreat;                                  // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Stimulus_Stealth_Multiplier;                       // 0x0394(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPrintThreatDebug;                                 // 0x0398(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, AdvancedDisplay)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextRenderComponent*                   NewVar_0;                                          // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Distance_Falloff_curve;                            // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         StimuliFalloffMaxDistance;                         // 0x03B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxStimuliDistance;                                // 0x03B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CanSeePlayer;                                      // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RequirePathForThreat;                              // 0x03C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Alert;                                             // 0x03C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UDA_PerceptionTag_C*                    Environmental_Perception_Ref;                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void SetStartBurrowed(bool beginBurrowed, bool* Success);
	void SetOrderTarget(const struct FVector& Location, bool* Success);
	void HitscanWeaponFired(bool* Success);
	void GetMostSuitableMeleeSection(EAnimationMontageIdentifier* Value);
	void GetAggroState(bool* Aggro);
	void FlashlightHit(float Distance, bool* Success);
	void GetUpgradeComponent(class UWeaponUpgradeComponent_C** UpgradeComponent);
	void AimedAt(bool* Return);
	void SetStartOnWall(bool StartOnWall, bool* Success);
	void SetCanCirculate(bool CanCirculate, bool* Success);
	void GetCemeteryCreatureType(ECemeteryCreatureType* CemeteryCreatureType);
	void GetCharacterSize(ECharacterSize* Size);
	void IncrementJac3ProneCounter(int32* ProneCounter);
	void SetNewAggro(bool NewAggro, bool* Success);
	void Handle_Damage_Sense_Stimuli(class UObject* Actor_Sensed);
	void OnTargetPerceptionUpdated(class AActor* Actor, const struct FAIStimulus& Stimulus);
	void Handle_Player_Proximity_Stimuli();
	void Add_Threat(float Threat_to_Add);
	void MeleeAttack();
	void SetCemeteryCreatureType(ECemeteryCreatureType CreatureType);
	void QuicktimeSuccess();
	void QuicktimeInput(float CurrentProgress, float MaxProgress);
	void LaserHit();
	void MeleeAttackTranslate(const struct FVector& StartVector, const struct FVector& EndVector);
	void ControlRotationFocus(class AActor* FocusTarget);
	void MoveToGrappleLocatio(const struct FVector& Grapple_Location);
	void SetMostSuitableMeleeSection(EAnimationMontageIdentifier Value);
	void UpdateBossHealthData(float CurrentHealthPercentage);
	void ReceiveTick(float DeltaSeconds);
	void ReceivePossess(class APawn* PossessedPawn);
	void ReturnHomeOrder();
	void Handle_Hearing_Stimuli_Updated(const struct FAIStimulus& AIStimulus, class AActor* Actor);
	void ExecuteUbergraph_AIC_EnemyCommon(int32 EntryPoint);

	bool IsThreatBlocked() const;
	void ConvertDistanceToThreatMultiplier(float Distance, float* ThreatMultiplier) const;
	void GetStimulisDistance(const struct FAIStimulus& AIStimulus, float* PathDistance, ENavigationQueryResult* NavigationQueryResult) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AIC_EnemyCommon_C">();
	}
	static class AAIC_EnemyCommon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAIC_EnemyCommon_C>();
	}
};
static_assert(alignof(AAIC_EnemyCommon_C) == 0x000008, "Wrong alignment on AAIC_EnemyCommon_C");
static_assert(sizeof(AAIC_EnemyCommon_C) == 0x0003D0, "Wrong size on AAIC_EnemyCommon_C");
static_assert(offsetof(AAIC_EnemyCommon_C, UberGraphFrame) == 0x000368, "Member 'AAIC_EnemyCommon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, AIPerception) == 0x000370, "Member 'AAIC_EnemyCommon_C::AIPerception' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, PatrolPathComponent) == 0x000378, "Member 'AAIC_EnemyCommon_C::PatrolPathComponent' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, ThreatKey) == 0x000380, "Member 'AAIC_EnemyCommon_C::ThreatKey' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, ThreatMaxKey) == 0x000388, "Member 'AAIC_EnemyCommon_C::ThreatMaxKey' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, DefaultMaxThreat) == 0x000390, "Member 'AAIC_EnemyCommon_C::DefaultMaxThreat' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, Stimulus_Stealth_Multiplier) == 0x000394, "Member 'AAIC_EnemyCommon_C::Stimulus_Stealth_Multiplier' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, bPrintThreatDebug) == 0x000398, "Member 'AAIC_EnemyCommon_C::bPrintThreatDebug' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, NewVar_0) == 0x0003A0, "Member 'AAIC_EnemyCommon_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, Distance_Falloff_curve) == 0x0003A8, "Member 'AAIC_EnemyCommon_C::Distance_Falloff_curve' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, StimuliFalloffMaxDistance) == 0x0003B0, "Member 'AAIC_EnemyCommon_C::StimuliFalloffMaxDistance' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, MaxStimuliDistance) == 0x0003B4, "Member 'AAIC_EnemyCommon_C::MaxStimuliDistance' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, CanSeePlayer) == 0x0003B8, "Member 'AAIC_EnemyCommon_C::CanSeePlayer' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, RequirePathForThreat) == 0x0003C0, "Member 'AAIC_EnemyCommon_C::RequirePathForThreat' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, Alert) == 0x0003C1, "Member 'AAIC_EnemyCommon_C::Alert' has a wrong offset!");
static_assert(offsetof(AAIC_EnemyCommon_C, Environmental_Perception_Ref) == 0x0003C8, "Member 'AAIC_EnemyCommon_C::Environmental_Perception_Ref' has a wrong offset!");

}

