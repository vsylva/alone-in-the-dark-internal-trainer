#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Checkpoint

#include "Basic.hpp"

#include "BP_Checkpoint_classes.hpp"
#include "BP_Checkpoint_parameters.hpp"


namespace SDK
{

// Function BP_Checkpoint.BP_Checkpoint_C.ReactivateSaveOnStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::ReactivateSaveOnStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "ReactivateSaveOnStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.IsSavingAllowed
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Allowed                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Checkpoint_C::IsSavingAllowed(bool* Allowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "IsSavingAllowed");

	Params::BP_Checkpoint_C_IsSavingAllowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Allowed != nullptr)
		*Allowed = Parms.Allowed;
}


// Function BP_Checkpoint.BP_Checkpoint_C.ReactivateSave
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::ReactivateSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "ReactivateSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.StartEventIfPlayerIsOverlapping
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::StartEventIfPlayerIsOverlapping()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "StartEventIfPlayerIsOverlapping");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.K2_StartEvent
// (Event, Protected, BlueprintEvent)

void ABP_Checkpoint_C::K2_StartEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "K2_StartEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.SaveGame
// (BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::SaveGame()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "SaveGame");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.OnMainStateChanged
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameMainState                          OldGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EGameMainState                          NewGameState                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Checkpoint_C::OnMainStateChanged(EGameMainState OldGameState, EGameMainState NewGameState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "OnMainStateChanged");

	Params::BP_Checkpoint_C_OnMainStateChanged Parms{};

	Parms.OldGameState = OldGameState;
	Parms.NewGameState = NewGameState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Checkpoint.BP_Checkpoint_C.EnableCheckpoint
// (BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::EnableCheckpoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "EnableCheckpoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.DisableCheckpoint
// (BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::DisableCheckpoint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "DisableCheckpoint");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.BndEvt__BP_Checkpoint_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UFlowComponent*                   FlowComponent                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     NotifyTag                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Checkpoint_C::BndEvt__BP_Checkpoint_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent, const struct FGameplayTag& NotifyTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "BndEvt__BP_Checkpoint_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature");

	Params::BP_Checkpoint_C_BndEvt__BP_Checkpoint_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature Parms{};

	Parms.FlowComponent = FlowComponent;
	Parms.NotifyTag = std::move(NotifyTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Checkpoint.BP_Checkpoint_C.SaveTriggered
// (BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::SaveTriggered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "SaveTriggered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.TryEnableManualSave
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Checkpoint_C::TryEnableManualSave(bool Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "TryEnableManualSave");

	Params::BP_Checkpoint_C_TryEnableManualSave Parms{};

	Parms.Success = Success;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Checkpoint.BP_Checkpoint_C.TryDisableManualSave
// (BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::TryDisableManualSave()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "TryDisableManualSave");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.IsPlayerOverlapping
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsPlayerOverlapping_0                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Checkpoint_C::IsPlayerOverlapping(bool* IsPlayerOverlapping_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "IsPlayerOverlapping");

	Params::BP_Checkpoint_C_IsPlayerOverlapping Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsPlayerOverlapping_0 != nullptr)
		*IsPlayerOverlapping_0 = Parms.IsPlayerOverlapping_0;
}


// Function BP_Checkpoint.BP_Checkpoint_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Checkpoint_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.UseCooldown
// (BlueprintCallable, BlueprintEvent)

void ABP_Checkpoint_C::UseCooldown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "UseCooldown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Checkpoint.BP_Checkpoint_C.ExecuteUbergraph_BP_Checkpoint
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Checkpoint_C::ExecuteUbergraph_BP_Checkpoint(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Checkpoint_C", "ExecuteUbergraph_BP_Checkpoint");

	Params::BP_Checkpoint_C_ExecuteUbergraph_BP_Checkpoint Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

