#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DismembermentGoreSpawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FDismemberSkeletalMeshCompData_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FDismemberStaticMeshCompData_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DismembermentGoreSpawner.BP_DismembermentGoreSpawner_C
// 0x0098 (0x03B8 - 0x0320)
class ABP_DismembermentGoreSpawner_C : public ADismembermentGoreSpawner
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBillboardComponent*                    Billboard;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ForceCenter;                                       // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        Arrow;                                             // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         ForceAmountFromDamageDirection;                    // 0x0340(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceMin;                                          // 0x0344(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceMax;                                          // 0x0348(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               OffsetRotation;                                    // 0x034C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                OffsetLocation;                                    // 0x0358(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StaticMeshesForceFromCenter;                       // 0x0364(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          SkeletalMeshesForceFromCenter;                     // 0x0365(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IndividualForceFromCenterSettings;                 // 0x0366(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_367[0x1];                                      // 0x0367(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         ForceCenterForceMin;                               // 0x0368(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ForceCenterForceMax;                               // 0x036C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PreviewDelay;                                      // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFDismemberStaticMeshCompData>  StaticMeshComponentData;                           // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FFDismemberSkeletalMeshCompData> SkeletalMeshComponentData;                         // 0x0388(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                SourceActorVelocity;                               // 0x0398(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Burnt;                                             // 0x03A4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A5[0x3];                                      // 0x03A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       DynBurnMats;                                       // 0x03A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void FindDynamicMaterialWithMatchingParent(class UMaterialInterface* Material, class UMaterialInstanceDynamic** DynamicMaterial);
	void AddBurnEffectToMaterialsIfSourceActorWasBurnt(class UMeshComponent* Mesh);
	void Play_Extra_Boom_Sound();
	void CacheSourceMeshVelocity();
	void ActivateSimulation();
	void AddForcesToSkeletalMeshes();
	void AddForcesToStaticMeshes();
	void SpawnSkeletalMeshes();
	void SpawnStaticMeshes();
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_DismembermentGoreSpawner(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DismembermentGoreSpawner_C">();
	}
	static class ABP_DismembermentGoreSpawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DismembermentGoreSpawner_C>();
	}
};
static_assert(alignof(ABP_DismembermentGoreSpawner_C) == 0x000008, "Wrong alignment on ABP_DismembermentGoreSpawner_C");
static_assert(sizeof(ABP_DismembermentGoreSpawner_C) == 0x0003B8, "Wrong size on ABP_DismembermentGoreSpawner_C");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, UberGraphFrame) == 0x000320, "Member 'ABP_DismembermentGoreSpawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, Billboard) == 0x000328, "Member 'ABP_DismembermentGoreSpawner_C::Billboard' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, ForceCenter) == 0x000330, "Member 'ABP_DismembermentGoreSpawner_C::ForceCenter' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, Arrow) == 0x000338, "Member 'ABP_DismembermentGoreSpawner_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, ForceAmountFromDamageDirection) == 0x000340, "Member 'ABP_DismembermentGoreSpawner_C::ForceAmountFromDamageDirection' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, ForceMin) == 0x000344, "Member 'ABP_DismembermentGoreSpawner_C::ForceMin' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, ForceMax) == 0x000348, "Member 'ABP_DismembermentGoreSpawner_C::ForceMax' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, OffsetRotation) == 0x00034C, "Member 'ABP_DismembermentGoreSpawner_C::OffsetRotation' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, OffsetLocation) == 0x000358, "Member 'ABP_DismembermentGoreSpawner_C::OffsetLocation' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, StaticMeshesForceFromCenter) == 0x000364, "Member 'ABP_DismembermentGoreSpawner_C::StaticMeshesForceFromCenter' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, SkeletalMeshesForceFromCenter) == 0x000365, "Member 'ABP_DismembermentGoreSpawner_C::SkeletalMeshesForceFromCenter' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, IndividualForceFromCenterSettings) == 0x000366, "Member 'ABP_DismembermentGoreSpawner_C::IndividualForceFromCenterSettings' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, ForceCenterForceMin) == 0x000368, "Member 'ABP_DismembermentGoreSpawner_C::ForceCenterForceMin' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, ForceCenterForceMax) == 0x00036C, "Member 'ABP_DismembermentGoreSpawner_C::ForceCenterForceMax' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, PreviewDelay) == 0x000370, "Member 'ABP_DismembermentGoreSpawner_C::PreviewDelay' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, StaticMeshComponentData) == 0x000378, "Member 'ABP_DismembermentGoreSpawner_C::StaticMeshComponentData' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, SkeletalMeshComponentData) == 0x000388, "Member 'ABP_DismembermentGoreSpawner_C::SkeletalMeshComponentData' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, SourceActorVelocity) == 0x000398, "Member 'ABP_DismembermentGoreSpawner_C::SourceActorVelocity' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, Burnt) == 0x0003A4, "Member 'ABP_DismembermentGoreSpawner_C::Burnt' has a wrong offset!");
static_assert(offsetof(ABP_DismembermentGoreSpawner_C, DynBurnMats) == 0x0003A8, "Member 'ABP_DismembermentGoreSpawner_C::DynBurnMats' has a wrong offset!");

}

