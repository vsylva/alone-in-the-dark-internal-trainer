#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RapidJsonModule

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeBool_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeBool_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeBool_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeBool_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeBool_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_DeserializeBool_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeBool_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeBool_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeBool_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFColor_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFColor_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                 ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFColor_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFColor_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFColor_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_DeserializeFColor_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFColor_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFColor_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFColor_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFloat_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFloat_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFloat_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFloat_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFloat_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_DeserializeFloat_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFloat_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFloat_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFloat_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFName_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFName_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFName_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFName_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFName_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_DeserializeFName_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFName_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFName_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFName_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFRotator_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                               ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFString_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFString_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFString_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFString_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeFString_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFString_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFString_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFString_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFText_Wrapper
// 0x0028 (0x0028 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFText_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFText_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFText_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFText_Wrapper) == 0x000028, "Wrong size on RapidJsonFunctionLibrary_DeserializeFText_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFText_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFText_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFText_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFTransform_Wrapper
// 0x0040 (0x0040 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTransform                             ReturnValue;                                       // 0x0010(0x0030)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper) == 0x000010, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper) == 0x000040, "Wrong size on RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeFVector_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeFVector_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                ReturnValue;                                       // 0x0010(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeFVector_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeFVector_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeFVector_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeFVector_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFVector_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeFVector_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeFVector_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeInt64_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeInt64_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int64                                         ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeInt64_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeInt64_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeInt64_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_DeserializeInt64_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeInt64_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeInt64_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeInt64_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeInt_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeInt_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeInt_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeInt_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeInt_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_DeserializeInt_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeInt_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeInt_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeInt_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayBool_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<bool>                                  ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFColor_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FColor>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFloat_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<float>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFName_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FName>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFRotator_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRotator>                       ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FString>                         ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFText_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class FText>                           ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFTransform_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FTransform>                     ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayFVector_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                        ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayInt64_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int64>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayInt_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeTArrayUInt8_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<uint8>                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeTArrayUInt8_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.DeserializeUInt8_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper final
{
public:
	class FString                                 JsonString;                                        // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper, JsonString) == 0x000000, "Member 'RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper::JsonString' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_DeserializeUInt8_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeBool_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeBool_Wrapper final
{
public:
	bool                                          BoolValue;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeBool_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeBool_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeBool_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_SerializeBool_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeBool_Wrapper, BoolValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeBool_Wrapper::BoolValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeBool_Wrapper, ReturnValue) == 0x000008, "Member 'RapidJsonFunctionLibrary_SerializeBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFColor_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFColor_Wrapper final
{
public:
	struct FColor                                 ColorValue;                                        // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFColor_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFColor_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFColor_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_SerializeFColor_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFColor_Wrapper, ColorValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFColor_Wrapper::ColorValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFColor_Wrapper, ReturnValue) == 0x000008, "Member 'RapidJsonFunctionLibrary_SerializeFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFloat_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFloat_Wrapper final
{
public:
	float                                         TextValue;                                         // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFloat_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFloat_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFloat_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_SerializeFloat_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFloat_Wrapper, TextValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFloat_Wrapper::TextValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFloat_Wrapper, ReturnValue) == 0x000008, "Member 'RapidJsonFunctionLibrary_SerializeFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFName_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFName_Wrapper final
{
public:
	class FName                                   NameValue;                                         // 0x0000(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFName_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFName_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFName_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_SerializeFName_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFName_Wrapper, NameValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFName_Wrapper::NameValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFName_Wrapper, ReturnValue) == 0x000008, "Member 'RapidJsonFunctionLibrary_SerializeFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFRotator_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFRotator_Wrapper final
{
public:
	struct FRotator                               TextValue;                                         // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFRotator_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFRotator_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFRotator_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeFRotator_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFRotator_Wrapper, TextValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFRotator_Wrapper::TextValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFRotator_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFString_Wrapper final
{
public:
	class FString                                 StringValue;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFString_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFString_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFString_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeFString_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFString_Wrapper, StringValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFString_Wrapper::StringValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFString_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFText_Wrapper
// 0x0028 (0x0028 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFText_Wrapper final
{
public:
	class FText                                   TextValue;                                         // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFText_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFText_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFText_Wrapper) == 0x000028, "Wrong size on RapidJsonFunctionLibrary_SerializeFText_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFText_Wrapper, TextValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFText_Wrapper::TextValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFText_Wrapper, ReturnValue) == 0x000018, "Member 'RapidJsonFunctionLibrary_SerializeFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFTransform_Wrapper
// 0x0040 (0x0040 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFTransform_Wrapper final
{
public:
	struct FTransform                             TextValue;                                         // 0x0000(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFTransform_Wrapper) == 0x000010, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFTransform_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFTransform_Wrapper) == 0x000040, "Wrong size on RapidJsonFunctionLibrary_SerializeFTransform_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFTransform_Wrapper, TextValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFTransform_Wrapper::TextValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFTransform_Wrapper, ReturnValue) == 0x000030, "Member 'RapidJsonFunctionLibrary_SerializeFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeFVector_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeFVector_Wrapper final
{
public:
	struct FVector                                TextValue;                                         // 0x0000(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeFVector_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeFVector_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeFVector_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeFVector_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFVector_Wrapper, TextValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeFVector_Wrapper::TextValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeFVector_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeInt64_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeInt64_Wrapper final
{
public:
	int64                                         Int64Value;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeInt64_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeInt64_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeInt64_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_SerializeInt64_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeInt64_Wrapper, Int64Value) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeInt64_Wrapper::Int64Value' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeInt64_Wrapper, ReturnValue) == 0x000008, "Member 'RapidJsonFunctionLibrary_SerializeInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeInt_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeInt_Wrapper final
{
public:
	int32                                         IntValue;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeInt_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeInt_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeInt_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_SerializeInt_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeInt_Wrapper, IntValue) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeInt_Wrapper::IntValue' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeInt_Wrapper, ReturnValue) == 0x000008, "Member 'RapidJsonFunctionLibrary_SerializeInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayBool_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper final
{
public:
	TArray<bool>                                  InBools;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper, InBools) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper::InBools' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayBool_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFColor_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper final
{
public:
	TArray<struct FColor>                         Colors;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper, Colors) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper::Colors' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFColor_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFloat_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper final
{
public:
	TArray<float>                                 InFloats;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper, InFloats) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper::InFloats' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFloat_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFName_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper final
{
public:
	TArray<class FName>                           InNames;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper, InNames) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper::InNames' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFName_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFRotator_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper final
{
public:
	TArray<struct FRotator>                       InRotator;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper, InRotator) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper::InRotator' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFRotator_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFString_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper final
{
public:
	TArray<class FString>                         InStrings;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper, InStrings) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper::InStrings' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFString_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFText_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper final
{
public:
	TArray<class FText>                           InTexts;                                           // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper, InTexts) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper::InTexts' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFText_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFTransform_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper final
{
public:
	TArray<struct FTransform>                     InTransform;                                       // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper, InTransform) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper::InTransform' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFTransform_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayFVector_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper final
{
public:
	TArray<struct FVector>                        InFVector;                                         // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper, InFVector) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper::InFVector' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayFVector_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayInt64_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper final
{
public:
	TArray<int64>                                 InInt64s;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper, InInt64s) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper::InInt64s' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayInt64_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayInt_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper final
{
public:
	TArray<int32>                                 InInts;                                            // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper, InInts) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper::InInts' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayInt_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeTArrayUInt8_Wrapper
// 0x0020 (0x0020 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper final
{
public:
	TArray<uint8>                                 InUInt8s;                                          // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper) == 0x000020, "Wrong size on RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper, InUInt8s) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper::InUInt8s' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper, ReturnValue) == 0x000010, "Member 'RapidJsonFunctionLibrary_SerializeTArrayUInt8_Wrapper::ReturnValue' has a wrong offset!");

// Function RapidJsonModule.RapidJsonFunctionLibrary.SerializeUInt8_Wrapper
// 0x0018 (0x0018 - 0x0000)
struct RapidJsonFunctionLibrary_SerializeUInt8_Wrapper final
{
public:
	uint8                                         UInt8Value;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(RapidJsonFunctionLibrary_SerializeUInt8_Wrapper) == 0x000008, "Wrong alignment on RapidJsonFunctionLibrary_SerializeUInt8_Wrapper");
static_assert(sizeof(RapidJsonFunctionLibrary_SerializeUInt8_Wrapper) == 0x000018, "Wrong size on RapidJsonFunctionLibrary_SerializeUInt8_Wrapper");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeUInt8_Wrapper, UInt8Value) == 0x000000, "Member 'RapidJsonFunctionLibrary_SerializeUInt8_Wrapper::UInt8Value' has a wrong offset!");
static_assert(offsetof(RapidJsonFunctionLibrary_SerializeUInt8_Wrapper, ReturnValue) == 0x000008, "Member 'RapidJsonFunctionLibrary_SerializeUInt8_Wrapper::ReturnValue' has a wrong offset!");

}

