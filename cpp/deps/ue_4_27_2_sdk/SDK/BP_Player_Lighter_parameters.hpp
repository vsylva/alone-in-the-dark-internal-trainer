#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Player_Lighter

#include "Basic.hpp"

#include "ObsidianFox_structs.hpp"


namespace SDK::Params
{

// Function BP_Player_Lighter.BP_Player_Lighter_C.SetMesh
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_Lighter_C_SetMesh final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_Lighter_C_SetMesh) == 0x000008, "Wrong alignment on BP_Player_Lighter_C_SetMesh");
static_assert(sizeof(BP_Player_Lighter_C_SetMesh) == 0x000008, "Wrong size on BP_Player_Lighter_C_SetMesh");
static_assert(offsetof(BP_Player_Lighter_C_SetMesh, NewMesh) == 0x000000, "Member 'BP_Player_Lighter_C_SetMesh::NewMesh' has a wrong offset!");

// Function BP_Player_Lighter.BP_Player_Lighter_C.OnSpawned
// 0x0001 (0x0001 - 0x0000)
struct BP_Player_Lighter_C_OnSpawned final
{
public:
	EPlayerCharacterType                          PlayerCharacterType;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Player_Lighter_C_OnSpawned) == 0x000001, "Wrong alignment on BP_Player_Lighter_C_OnSpawned");
static_assert(sizeof(BP_Player_Lighter_C_OnSpawned) == 0x000001, "Wrong size on BP_Player_Lighter_C_OnSpawned");
static_assert(offsetof(BP_Player_Lighter_C_OnSpawned, PlayerCharacterType) == 0x000000, "Member 'BP_Player_Lighter_C_OnSpawned::PlayerCharacterType' has a wrong offset!");

// Function BP_Player_Lighter.BP_Player_Lighter_C.ExecuteUbergraph_BP_Player_Lighter
// 0x0008 (0x0008 - 0x0000)
struct BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlayerCharacterType                          K2Node_CustomEvent_PlayerCharacterType;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter) == 0x000004, "Wrong alignment on BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter");
static_assert(sizeof(BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter) == 0x000008, "Wrong size on BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter");
static_assert(offsetof(BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter, EntryPoint) == 0x000000, "Member 'BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter, K2Node_CustomEvent_PlayerCharacterType) == 0x000004, "Member 'BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter::K2Node_CustomEvent_PlayerCharacterType' has a wrong offset!");
static_assert(offsetof(BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'BP_Player_Lighter_C_ExecuteUbergraph_BP_Player_Lighter::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

