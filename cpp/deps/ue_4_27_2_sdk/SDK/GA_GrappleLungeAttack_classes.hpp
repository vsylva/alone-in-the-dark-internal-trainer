#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_GrappleLungeAttack

#include "Basic.hpp"

#include "GA_AttackMelee_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GA_GrappleLungeAttack.GA_GrappleLungeAttack_C
// 0x0050 (0x0480 - 0x0430)
class UGA_GrappleLungeAttack_C : public UGA_AttackMelee_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_GA_GrappleLungeAttack_C;            // 0x0430(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          AttackHit;                                         // 0x0438(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  Player_Blocking_Tags;                              // 0x0440(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FGameplayTagContainer                  Grapple_Ability_Tags;                              // 0x0460(0x0020)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void GrappleAreaClearTrace(float ForwardDistance, float backDistance, bool DrawDebug, bool* TraceOk);
	void EventReceived_9A7E1B5C43A82885622EBD96BCCC7A7A(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCancelled_9A7E1B5C43A82885622EBD96BCCC7A7A(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnInterrupted_9A7E1B5C43A82885622EBD96BCCC7A7A(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnBlendOut_9A7E1B5C43A82885622EBD96BCCC7A7A(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void OnCompleted_9A7E1B5C43A82885622EBD96BCCC7A7A(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData);
	void PlayAttackMontage();
	void ExecuteUbergraph_GA_GrappleLungeAttack(int32 EntryPoint);

	bool K2_CanActivateAbility(const struct FGameplayAbilityActorInfo& ActorInfo, const struct FGameplayAbilitySpecHandle& Handle, struct FGameplayTagContainer* RelevantTags) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GA_GrappleLungeAttack_C">();
	}
	static class UGA_GrappleLungeAttack_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UGA_GrappleLungeAttack_C>();
	}
};
static_assert(alignof(UGA_GrappleLungeAttack_C) == 0x000008, "Wrong alignment on UGA_GrappleLungeAttack_C");
static_assert(sizeof(UGA_GrappleLungeAttack_C) == 0x000480, "Wrong size on UGA_GrappleLungeAttack_C");
static_assert(offsetof(UGA_GrappleLungeAttack_C, UberGraphFrame_GA_GrappleLungeAttack_C) == 0x000430, "Member 'UGA_GrappleLungeAttack_C::UberGraphFrame_GA_GrappleLungeAttack_C' has a wrong offset!");
static_assert(offsetof(UGA_GrappleLungeAttack_C, AttackHit) == 0x000438, "Member 'UGA_GrappleLungeAttack_C::AttackHit' has a wrong offset!");
static_assert(offsetof(UGA_GrappleLungeAttack_C, Player_Blocking_Tags) == 0x000440, "Member 'UGA_GrappleLungeAttack_C::Player_Blocking_Tags' has a wrong offset!");
static_assert(offsetof(UGA_GrappleLungeAttack_C, Grapple_Ability_Tags) == 0x000460, "Member 'UGA_GrappleLungeAttack_C::Grapple_Ability_Tags' has a wrong offset!");

}

