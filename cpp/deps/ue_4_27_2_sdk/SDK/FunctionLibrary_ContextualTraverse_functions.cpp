#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FunctionLibrary_ContextualTraverse

#include "Basic.hpp"

#include "FunctionLibrary_ContextualTraverse_classes.hpp"
#include "FunctionLibrary_ContextualTraverse_parameters.hpp"


namespace SDK
{

// Function FunctionLibrary_ContextualTraverse.FunctionLibrary_ContextualTraverse_C.TraceForMotionWarpingLocation
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ACharacter*                       WarpedCharacter                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class USceneComponent*                  WarpTarget                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          MotionWarpingLocation                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UFunctionLibrary_ContextualTraverse_C::TraceForMotionWarpingLocation(class ACharacter* WarpedCharacter, class USceneComponent* WarpTarget, class UObject* __WorldContext, struct FVector* MotionWarpingLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("FunctionLibrary_ContextualTraverse_C", "TraceForMotionWarpingLocation");

	Params::FunctionLibrary_ContextualTraverse_C_TraceForMotionWarpingLocation Parms{};

	Parms.WarpedCharacter = WarpedCharacter;
	Parms.WarpTarget = WarpTarget;
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MotionWarpingLocation != nullptr)
		*MotionWarpingLocation = std::move(Parms.MotionWarpingLocation);
}

}

