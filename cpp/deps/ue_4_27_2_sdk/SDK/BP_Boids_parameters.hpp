#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Boids

#include "Basic.hpp"

#include "GameplayAbilities_structs.hpp"
#include "AIModule_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Boids.BP_Boids_C.GetClosestMeshInstance
// 0x0130 (0x0130 - 0x0000)
struct BP_Boids_C_GetClosestMeshInstance final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success;                                           // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         InstanceIndex;                                     // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ClosestIndex;                                      // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform; // 0x0020(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 CallFunc_GetInstancesOverlappingSphere_ReturnValue; // 0x0078(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetInstanceTransform_OutInstanceTransform_1; // 0x00A0(0x0030)(IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetInstanceTransform_ReturnValue_1;       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x3];                                       // 0x00D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSizeSquared_ReturnValue_1;               // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0124(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Boids_C_GetClosestMeshInstance) == 0x000010, "Wrong alignment on BP_Boids_C_GetClosestMeshInstance");
static_assert(sizeof(BP_Boids_C_GetClosestMeshInstance) == 0x000130, "Wrong size on BP_Boids_C_GetClosestMeshInstance");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, Location) == 0x000000, "Member 'BP_Boids_C_GetClosestMeshInstance::Location' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, Success) == 0x00000C, "Member 'BP_Boids_C_GetClosestMeshInstance::Success' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, InstanceIndex) == 0x000010, "Member 'BP_Boids_C_GetClosestMeshInstance::InstanceIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, ClosestIndex) == 0x000014, "Member 'BP_Boids_C_GetClosestMeshInstance::ClosestIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, Temp_int_Variable) == 0x000018, "Member 'BP_Boids_C_GetClosestMeshInstance::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_GetInstanceTransform_OutInstanceTransform) == 0x000020, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_GetInstanceTransform_OutInstanceTransform' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_GetInstanceTransform_ReturnValue) == 0x000050, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_GetInstanceTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_BreakTransform_Location) == 0x000054, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_BreakTransform_Rotation) == 0x000060, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_BreakTransform_Scale) == 0x00006C, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_GetInstancesOverlappingSphere_ReturnValue) == 0x000078, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_GetInstancesOverlappingSphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Array_Get_Item) == 0x000094, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_VSizeSquared_ReturnValue) == 0x000098, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_VSizeSquared_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_GetInstanceTransform_OutInstanceTransform_1) == 0x0000A0, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_GetInstanceTransform_OutInstanceTransform_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_GetInstanceTransform_ReturnValue_1) == 0x0000D0, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_GetInstanceTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Array_Get_Item_1) == 0x0000D4, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_BreakTransform_Location_1) == 0x0000D8, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_BreakTransform_Rotation_1) == 0x0000E4, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_BreakTransform_Scale_1) == 0x0000F0, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000FC, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Array_Length_ReturnValue) == 0x000108, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_VSizeSquared_ReturnValue_1) == 0x00010C, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_VSizeSquared_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Subtract_IntInt_ReturnValue) == 0x000110, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Less_FloatFloat_ReturnValue) == 0x000114, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Max_ReturnValue) == 0x000118, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00011C, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Array_Length_ReturnValue_1) == 0x000120, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Greater_IntInt_ReturnValue) == 0x000124, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Array_Length_ReturnValue_2) == 0x000128, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetClosestMeshInstance, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00012C, "Member 'BP_Boids_C_GetClosestMeshInstance::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.FixMeshIDsAfterBoidRemoval
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Boids_C_FixMeshIDsAfterBoidRemoval final
{
public:
	int32                                         RemovedBoidIndex;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoid                                  CallFunc_Array_Get_Item;                           // 0x0010(0x0040)(NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoid                                  K2Node_MakeStruct_Boid;                            // 0x0060(0x0040)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_FixMeshIDsAfterBoidRemoval) == 0x000010, "Wrong alignment on BP_Boids_C_FixMeshIDsAfterBoidRemoval");
static_assert(sizeof(BP_Boids_C_FixMeshIDsAfterBoidRemoval) == 0x0000B0, "Wrong size on BP_Boids_C_FixMeshIDsAfterBoidRemoval");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, RemovedBoidIndex) == 0x000000, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::RemovedBoidIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, Temp_int_Variable) == 0x000004, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, CallFunc_Subtract_IntInt_ReturnValue) == 0x000050, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, CallFunc_Max_ReturnValue) == 0x000054, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000058, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005C, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, K2Node_MakeStruct_Boid) == 0x000060, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::K2Node_MakeStruct_Boid' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_FixMeshIDsAfterBoidRemoval, CallFunc_Add_IntInt_ReturnValue) == 0x0000A0, "Member 'BP_Boids_C_FixMeshIDsAfterBoidRemoval::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.KillBoid
// 0x00B0 (0x00B0 - 0x0000)
struct BP_Boids_C_KillBoid final
{
public:
	int32                                         BoidIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0010(0x0030)(IsPlainOldData, NoDestructor)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0xF];                                       // 0x0051(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoid                                  CallFunc_Array_Get_Item;                           // 0x0060(0x0040)(NoDestructor)
	bool                                          CallFunc_RemoveInstance_ReturnValue;               // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Boids_C_KillBoid) == 0x000010, "Wrong alignment on BP_Boids_C_KillBoid");
static_assert(sizeof(BP_Boids_C_KillBoid) == 0x0000B0, "Wrong size on BP_Boids_C_KillBoid");
static_assert(offsetof(BP_Boids_C_KillBoid, BoidIndex) == 0x000000, "Member 'BP_Boids_C_KillBoid::BoidIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_KillBoid, Location) == 0x000004, "Member 'BP_Boids_C_KillBoid::Location' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_KillBoid, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000010, "Member 'BP_Boids_C_KillBoid::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_KillBoid, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x000040, "Member 'BP_Boids_C_KillBoid::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_KillBoid, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000048, "Member 'BP_Boids_C_KillBoid::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_KillBoid, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000050, "Member 'BP_Boids_C_KillBoid::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_KillBoid, CallFunc_Array_Get_Item) == 0x000060, "Member 'BP_Boids_C_KillBoid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_KillBoid, CallFunc_RemoveInstance_ReturnValue) == 0x0000A0, "Member 'BP_Boids_C_KillBoid::CallFunc_RemoveInstance_ReturnValue' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.DestroyPlaneNormalArrows
// 0x0028 (0x0028 - 0x0000)
struct BP_Boids_C_DestroyPlaneNormalArrows final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Max_ReturnValue;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_DestroyPlaneNormalArrows) == 0x000008, "Wrong alignment on BP_Boids_C_DestroyPlaneNormalArrows");
static_assert(sizeof(BP_Boids_C_DestroyPlaneNormalArrows) == 0x000028, "Wrong size on BP_Boids_C_DestroyPlaneNormalArrows");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_DestroyPlaneNormalArrows, CallFunc_Max_ReturnValue) == 0x000024, "Member 'BP_Boids_C_DestroyPlaneNormalArrows::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.CreatePlaneNormalArrows
// 0x0080 (0x0080 - 0x0000)
struct BP_Boids_C_CreatePlaneNormalArrows final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWithEditor_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPushPlane                             CallFunc_Array_Get_Item;                           // 0x0010(0x001C)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_CreatePlaneNormalArrows) == 0x000010, "Wrong alignment on BP_Boids_C_CreatePlaneNormalArrows");
static_assert(sizeof(BP_Boids_C_CreatePlaneNormalArrows) == 0x000080, "Wrong size on BP_Boids_C_CreatePlaneNormalArrows");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_Boids_C_CreatePlaneNormalArrows::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_Boids_C_CreatePlaneNormalArrows::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_IsWithEditor_ReturnValue) == 0x00000C, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_IsWithEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000030, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_MakeTransform_ReturnValue) == 0x000040, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_AddComponent_ReturnValue) == 0x000070, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreatePlaneNormalArrows, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'BP_Boids_C_CreatePlaneNormalArrows::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.GetRandomScale
// 0x001C (0x001C - 0x0000)
struct BP_Boids_C_GetRandomScale final
{
public:
	struct FVector                                Scale;                                             // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatInRangeFromStream_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_FloatToVector_ReturnValue;           // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_GetRandomScale) == 0x000004, "Wrong alignment on BP_Boids_C_GetRandomScale");
static_assert(sizeof(BP_Boids_C_GetRandomScale) == 0x00001C, "Wrong size on BP_Boids_C_GetRandomScale");
static_assert(offsetof(BP_Boids_C_GetRandomScale, Scale) == 0x000000, "Member 'BP_Boids_C_GetRandomScale::Scale' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetRandomScale, CallFunc_RandomFloatInRangeFromStream_ReturnValue) == 0x00000C, "Member 'BP_Boids_C_GetRandomScale::CallFunc_RandomFloatInRangeFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_GetRandomScale, CallFunc_Conv_FloatToVector_ReturnValue) == 0x000010, "Member 'BP_Boids_C_GetRandomScale::CallFunc_Conv_FloatToVector_ReturnValue' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.CreateBoid
// 0x0090 (0x0090 - 0x0000)
struct BP_Boids_C_CreateBoid final
{
public:
	struct FTransform                             Transform;                                         // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FVector                                StartVelocity;                                     // 0x0030(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddInstance_ReturnValue;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBoid                                  K2Node_MakeStruct_Boid;                            // 0x0040(0x0040)(NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_CreateBoid) == 0x000010, "Wrong alignment on BP_Boids_C_CreateBoid");
static_assert(sizeof(BP_Boids_C_CreateBoid) == 0x000090, "Wrong size on BP_Boids_C_CreateBoid");
static_assert(offsetof(BP_Boids_C_CreateBoid, Transform) == 0x000000, "Member 'BP_Boids_C_CreateBoid::Transform' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreateBoid, StartVelocity) == 0x000030, "Member 'BP_Boids_C_CreateBoid::StartVelocity' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreateBoid, CallFunc_AddInstance_ReturnValue) == 0x00003C, "Member 'BP_Boids_C_CreateBoid::CallFunc_AddInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreateBoid, K2Node_MakeStruct_Boid) == 0x000040, "Member 'BP_Boids_C_CreateBoid::K2Node_MakeStruct_Boid' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_CreateBoid, CallFunc_Array_Add_ReturnValue) == 0x000080, "Member 'BP_Boids_C_CreateBoid::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.UserConstructionScript
// 0x0008 (0x0008 - 0x0000)
struct BP_Boids_C_UserConstructionScript final
{
public:
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Boids_C_UserConstructionScript");
static_assert(sizeof(BP_Boids_C_UserConstructionScript) == 0x000008, "Wrong size on BP_Boids_C_UserConstructionScript");
static_assert(offsetof(BP_Boids_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000000, "Member 'BP_Boids_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9
// 0x0010 (0x0010 - 0x0000)
struct BP_Boids_C_LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9 final
{
public:
	TArray<class UObject*>                        LoadedAssets;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Boids_C_LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9) == 0x000008, "Wrong alignment on BP_Boids_C_LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9");
static_assert(sizeof(BP_Boids_C_LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9) == 0x000010, "Wrong size on BP_Boids_C_LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9");
static_assert(offsetof(BP_Boids_C_LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9, LoadedAssets) == 0x000000, "Member 'BP_Boids_C_LoadCompleteDelegate_37C5579E4ACC06D4D7C138849B1CA3C9::LoadedAssets' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature
// 0x0048 (0x0048 - 0x0000)
struct BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            Stimulus;                                          // 0x0008(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature");
static_assert(sizeof(BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature) == 0x000048, "Wrong size on BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature");
static_assert(offsetof(BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature, Actor) == 0x000000, "Member 'BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature::Actor' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature, Stimulus) == 0x000008, "Member 'BP_Boids_C_BndEvt__AIPerception_K2Node_ComponentBoundEvent_0_ActorPerceptionUpdatedDelegate__DelegateSignature::Stimulus' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Boids_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Boids_C_ReceiveTick");
static_assert(sizeof(BP_Boids_C_ReceiveTick) == 0x000004, "Wrong size on BP_Boids_C_ReceiveTick");
static_assert(offsetof(BP_Boids_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Boids_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_Boids_C_BndEvt__TriggerBox_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.TriggerBoids
// 0x0008 (0x0008 - 0x0000)
struct BP_Boids_C_TriggerBoids final
{
public:
	class AActor*                                 ActorThatTriggered;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_TriggerBoids) == 0x000008, "Wrong alignment on BP_Boids_C_TriggerBoids");
static_assert(sizeof(BP_Boids_C_TriggerBoids) == 0x000008, "Wrong size on BP_Boids_C_TriggerBoids");
static_assert(offsetof(BP_Boids_C_TriggerBoids, ActorThatTriggered) == 0x000000, "Member 'BP_Boids_C_TriggerBoids::ActorThatTriggered' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.WeaponHit
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Boids_C_WeaponHit final
{
public:
	class AActor*                                 Weapon;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           EventTag;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     Payload;                                           // 0x0010(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_Boids_C_WeaponHit) == 0x000008, "Wrong alignment on BP_Boids_C_WeaponHit");
static_assert(sizeof(BP_Boids_C_WeaponHit) == 0x0000C0, "Wrong size on BP_Boids_C_WeaponHit");
static_assert(offsetof(BP_Boids_C_WeaponHit, Weapon) == 0x000000, "Member 'BP_Boids_C_WeaponHit::Weapon' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_WeaponHit, EventTag) == 0x000008, "Member 'BP_Boids_C_WeaponHit::EventTag' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_WeaponHit, Payload) == 0x000010, "Member 'BP_Boids_C_WeaponHit::Payload' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.SpawnParticleEffect
// 0x0018 (0x0018 - 0x0000)
struct BP_Boids_C_SpawnParticleEffect final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Boids_C_SpawnParticleEffect) == 0x000004, "Wrong alignment on BP_Boids_C_SpawnParticleEffect");
static_assert(sizeof(BP_Boids_C_SpawnParticleEffect) == 0x000018, "Wrong size on BP_Boids_C_SpawnParticleEffect");
static_assert(offsetof(BP_Boids_C_SpawnParticleEffect, Location) == 0x000000, "Member 'BP_Boids_C_SpawnParticleEffect::Location' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_SpawnParticleEffect, Direction) == 0x00000C, "Member 'BP_Boids_C_SpawnParticleEffect::Direction' has a wrong offset!");

// Function BP_Boids.BP_Boids_C.ExecuteUbergraph_BP_Boids
// 0x0610 (0x0610 - 0x0000)
struct BP_Boids_C_ExecuteUbergraph_BP_Boids final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_ComponentBoundEvent_Actor;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            K2Node_ComponentBoundEvent_Stimulus;               // 0x0028(0x003C)(NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0084(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x012C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12D[0x3];                                      // 0x012D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0130(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_ActorThatTriggered;             // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D9[0x3];                                      // 0x01D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x01DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0204(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x021C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAttractionPoint                       CallFunc_Array_Get_Item;                           // 0x022C(0x0018)(NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TArray<class UObject*>& LoadedAssets)> K2Node_CreateDelegate_OutputDelegate;              // 0x0254(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_264[0xC];                                      // 0x0264(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0270(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class AActor*                                 K2Node_Event_Weapon;                               // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_EventTag;                             // 0x02A8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_Event_Payload;                              // 0x02B0(0x00B0)()
	struct FBoid                                  CallFunc_Array_Get_Item_1;                         // 0x0360(0x0040)(NoDestructor)
	TArray<struct FHitResult>                     CallFunc_GetAllHitResultsFromTargetData_ReturnValue; // 0x03A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FHitResult                             CallFunc_Array_Get_Item_2;                         // 0x03B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43E[0x2];                                      // 0x043E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0440(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0444(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0448(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0454(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0460(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x046C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x049C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x04A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x04B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetClosestMeshInstance_Success;           // 0x04BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BE[0x2];                                      // 0x04BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetClosestMeshInstance_InstanceIndex;     // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x2];                                      // 0x04CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x04D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x04D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x04D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D5[0x3];                                      // 0x04D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DC[0x4];                                      // 0x04DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBoid                                  CallFunc_Array_Get_Item_3;                         // 0x04E0(0x0040)(NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0520(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x052C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0538(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Location;                       // 0x0544(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_Direction;                      // 0x0550(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_TransformRotation_ReturnValue;            // 0x055C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0568(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0574(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x0580(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        K2Node_CustomEvent_LoadedAssets;                   // 0x0590(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                Temp_struct_Variable;                              // 0x05A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5AC[0x4];                                      // 0x05AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C1[0x3];                                      // 0x05C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x05C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      CallFunc_SpawnSystemAtLocation_ReturnValue;        // 0x05D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x05D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x05E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E5[0x3];                                      // 0x05E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F4[0x4];                                      // 0x05F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UObject>>         K2Node_MakeArray_Array;                            // 0x05F8(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Boids_C_ExecuteUbergraph_BP_Boids) == 0x000010, "Wrong alignment on BP_Boids_C_ExecuteUbergraph_BP_Boids");
static_assert(sizeof(BP_Boids_C_ExecuteUbergraph_BP_Boids) == 0x000610, "Wrong size on BP_Boids_C_ExecuteUbergraph_BP_Boids");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, EntryPoint) == 0x000000, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_Actor) == 0x000020, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_Actor' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_Stimulus) == 0x000028, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_Stimulus' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000064, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_VSize_ReturnValue) == 0x000070, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_Event_DeltaSeconds) == 0x000074, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_FMax_ReturnValue) == 0x000078, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00007C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000084, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00010C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Less_FloatFloat_ReturnValue) == 0x00010D, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000110, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_OtherActor) == 0x000118, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_OtherComp) == 0x000120, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000128, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_bFromSweep) == 0x00012C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_ComponentBoundEvent_SweepResult) == 0x000130, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BooleanAND_ReturnValue) == 0x0001B8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_GetPlayerPawn_ReturnValue) == 0x0001C0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_bool_True_if_break_was_hit_Variable) == 0x0001C8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_IsValid_ReturnValue) == 0x0001C9, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Not_PreBool_ReturnValue) == 0x0001CA, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001CB, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_CustomEvent_ActorThatTriggered) == 0x0001D0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_CustomEvent_ActorThatTriggered' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_IsValid_ReturnValue_1) == 0x0001D8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0001DC, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001E8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001F4, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_IsValid_ReturnValue_2) == 0x000200, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Normal_ReturnValue) == 0x000204, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Add_VectorVector_ReturnValue) == 0x000210, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Normal_ReturnValue_1) == 0x00021C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_int_Loop_Counter_Variable_2) == 0x000228, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Get_Item) == 0x00022C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Add_IntInt_ReturnValue_2) == 0x000244, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000248, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Length_ReturnValue) == 0x00024C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Less_IntInt_ReturnValue) == 0x000250, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_CreateDelegate_OutputDelegate) == 0x000254, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_GetTransform_ReturnValue) == 0x000270, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_Event_Weapon) == 0x0002A0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_Event_Weapon' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_Event_EventTag) == 0x0002A8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_Event_EventTag' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_Event_Payload) == 0x0002B0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_Event_Payload' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Get_Item_1) == 0x000360, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_GetAllHitResultsFromTargetData_ReturnValue) == 0x0003A0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_GetAllHitResultsFromTargetData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Get_Item_2) == 0x0003B0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Length_ReturnValue_1) == 0x000438, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_bBlockingHit) == 0x00043C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_bInitialOverlap) == 0x00043D, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_Time) == 0x000440, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_Distance) == 0x000444, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_Location) == 0x000448, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_ImpactPoint) == 0x000454, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_Normal) == 0x000460, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_ImpactNormal) == 0x00046C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_PhysMat) == 0x000478, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_HitActor) == 0x000480, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_HitComponent) == 0x000488, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_HitBoneName) == 0x000490, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_HitItem) == 0x000498, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_ElementIndex) == 0x00049C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_FaceIndex) == 0x0004A0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_TraceStart) == 0x0004A4, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakHitResult_TraceEnd) == 0x0004B0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Less_IntInt_ReturnValue_1) == 0x0004BC, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_GetClosestMeshInstance_Success) == 0x0004BD, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_GetClosestMeshInstance_Success' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_GetClosestMeshInstance_InstanceIndex) == 0x0004C0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_GetClosestMeshInstance_InstanceIndex' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Length_ReturnValue_2) == 0x0004C4, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0004C8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Greater_IntInt_ReturnValue) == 0x0004C9, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Length_ReturnValue_3) == 0x0004CC, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004D0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_bool_Has_Been_Initd_Variable) == 0x0004D1, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BooleanAND_ReturnValue_1) == 0x0004D2, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_bool_IsClosed_Variable) == 0x0004D3, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_bool_Variable) == 0x0004D4, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_int_Array_Index_Variable_2) == 0x0004D8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Array_Get_Item_3) == 0x0004E0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakTransform_Location) == 0x000520, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakTransform_Rotation) == 0x00052C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_BreakTransform_Scale) == 0x000538, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_CustomEvent_Location) == 0x000544, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_CustomEvent_Location' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_CustomEvent_Direction) == 0x000550, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_CustomEvent_Direction' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_TransformRotation_ReturnValue) == 0x00055C, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_TransformRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_MakeRotFromX_ReturnValue) == 0x000568, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_GetForwardVector_ReturnValue) == 0x000574, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_TransformLocation_ReturnValue) == 0x000580, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_CustomEvent_LoadedAssets) == 0x000590, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_CustomEvent_LoadedAssets' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, Temp_struct_Variable) == 0x0005A0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0005B0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_DynamicCast_AsNiagara_System) == 0x0005B8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_DynamicCast_bSuccess) == 0x0005C0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_Select_Default) == 0x0005C4, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_SpawnSystemAtLocation_ReturnValue) == 0x0005D0, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_SpawnSystemAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_Normal_ReturnValue_2) == 0x0005D8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_IsValid_ReturnValue_3) == 0x0005E4, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_VLerp_ReturnValue) == 0x0005E8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, K2Node_MakeArray_Array) == 0x0005F8, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_Boids_C_ExecuteUbergraph_BP_Boids, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000608, "Member 'BP_Boids_C_ExecuteUbergraph_BP_Boids::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");

}

