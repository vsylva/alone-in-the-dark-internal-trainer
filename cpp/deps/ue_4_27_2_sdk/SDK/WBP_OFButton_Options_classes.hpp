#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_OFButton_Options

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_OFButton_Options.WBP_OFButton_Options_C
// 0x0690 (0x0A58 - 0x03C8)
class UWBP_OFButton_Options_C : public UOFButtonUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       ButtonInkEffektLoop;                               // 0x03D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ButtonFadeInAnimations;                            // 0x03D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             ButtonPressed;                                     // 0x03E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   ButtonText;                                        // 0x03F0(0x0018)(Edit, BlueprintVisible)
	TSoftObjectPtr<class UFMODEvent>              HoverdSound;                                       // 0x0408(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	struct FButtonStyle                           ButtonStyle;                                       // 0x0430(0x0278)(Edit, BlueprintVisible)
	struct FVector2D                              In_Size;                                           // 0x06A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            In_Color_and_Opacity_Button_Text;                  // 0x06B0(0x0028)(Edit, BlueprintVisible)
	FMulticastInlineDelegateProperty_             OnWidgetUnHover;                                   // 0x06D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          WasPressed;                                        // 0x06E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6E9[0x7];                                      // 0x06E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FButtonStyle                           ButtonStylePressed;                                // 0x06F0(0x0278)(Edit, BlueprintVisible)
	struct FSlateFontInfo                         FontInfoChecked;                                   // 0x0968(0x0058)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UTextBlock*                             Target;                                            // 0x09C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            ButtonColorPressed;                                // 0x09C8(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FSlateColor                            ButtonColorNormal;                                 // 0x09F0(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          NewVar_0;                                          // 0x0A18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A19[0x3];                                      // 0x0A19(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Widget_Size_Aspect_Ratio;                          // 0x0A1C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ButtonShaderNeedsUpdate;                           // 0x0A20(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UFMODEvent>              PressedSound;                                      // 0x0A28(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class UFMODEvent*                             HardPressedSound;                                  // 0x0A50(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetWidgetSizeAspectRation();
	void UpdateButtonShader();
	void SetButtonState(bool InChecked);
	void UpdateButtonStateBrush();
	class FText Get_OFbuttonTextBlock_Text_0();
	void OnLoaded_DA31E140494EDC1132590D8A58207218(class UObject* Loaded);
	void Finished_2D11FDC54D594E8456F5218B0E9260B6();
	void Finished_93B1C9BC46667F5936C26DA77C3A6CE0();
	void LoadCompleteDelegate_9B5DCDBA432D9789B5FF4EBBB67CF4EA(const TArray<class UObject*>& LoadedAssets);
	void PreConstruct(bool IsDesignTime);
	void Construct();
	void BndEvt__WBP_OFButton_OFButton_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_OFButton_OFButton_K2Node_ComponentBoundEvent_2_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_OFButton_OFButton_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ExecuteUbergraph_WBP_OFButton_Options(int32 EntryPoint);
	void OnWidgetUnHover__DelegateSignature();
	void ButtonPressed__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_OFButton_Options_C">();
	}
	static class UWBP_OFButton_Options_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_OFButton_Options_C>();
	}
};
static_assert(alignof(UWBP_OFButton_Options_C) == 0x000008, "Wrong alignment on UWBP_OFButton_Options_C");
static_assert(sizeof(UWBP_OFButton_Options_C) == 0x000A58, "Wrong size on UWBP_OFButton_Options_C");
static_assert(offsetof(UWBP_OFButton_Options_C, UberGraphFrame) == 0x0003C8, "Member 'UWBP_OFButton_Options_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonInkEffektLoop) == 0x0003D0, "Member 'UWBP_OFButton_Options_C::ButtonInkEffektLoop' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonFadeInAnimations) == 0x0003D8, "Member 'UWBP_OFButton_Options_C::ButtonFadeInAnimations' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonPressed) == 0x0003E0, "Member 'UWBP_OFButton_Options_C::ButtonPressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonText) == 0x0003F0, "Member 'UWBP_OFButton_Options_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, HoverdSound) == 0x000408, "Member 'UWBP_OFButton_Options_C::HoverdSound' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonStyle) == 0x000430, "Member 'UWBP_OFButton_Options_C::ButtonStyle' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, In_Size) == 0x0006A8, "Member 'UWBP_OFButton_Options_C::In_Size' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, In_Color_and_Opacity_Button_Text) == 0x0006B0, "Member 'UWBP_OFButton_Options_C::In_Color_and_Opacity_Button_Text' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, OnWidgetUnHover) == 0x0006D8, "Member 'UWBP_OFButton_Options_C::OnWidgetUnHover' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, WasPressed) == 0x0006E8, "Member 'UWBP_OFButton_Options_C::WasPressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonStylePressed) == 0x0006F0, "Member 'UWBP_OFButton_Options_C::ButtonStylePressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, FontInfoChecked) == 0x000968, "Member 'UWBP_OFButton_Options_C::FontInfoChecked' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, Target) == 0x0009C0, "Member 'UWBP_OFButton_Options_C::Target' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonColorPressed) == 0x0009C8, "Member 'UWBP_OFButton_Options_C::ButtonColorPressed' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonColorNormal) == 0x0009F0, "Member 'UWBP_OFButton_Options_C::ButtonColorNormal' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, NewVar_0) == 0x000A18, "Member 'UWBP_OFButton_Options_C::NewVar_0' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, Widget_Size_Aspect_Ratio) == 0x000A1C, "Member 'UWBP_OFButton_Options_C::Widget_Size_Aspect_Ratio' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, ButtonShaderNeedsUpdate) == 0x000A20, "Member 'UWBP_OFButton_Options_C::ButtonShaderNeedsUpdate' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, PressedSound) == 0x000A28, "Member 'UWBP_OFButton_Options_C::PressedSound' has a wrong offset!");
static_assert(offsetof(UWBP_OFButton_Options_C, HardPressedSound) == 0x000A50, "Member 'UWBP_OFButton_Options_C::HardPressedSound' has a wrong offset!");

}

