#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PiecesFMOD

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PiecesFMOD.PiecesFMODBlueprintLibrary.PlayEventAttached
// 0x0048 (0x0048 - 0x0000)
struct PiecesFMODBlueprintLibrary_PlayEventAttached final
{
public:
	class UFMODEvent*                             Event;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                        AttachToComponent;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   AttachPointName;                                   // 0x0010(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                Location;                                          // 0x0018(0x000C)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EAttachLocation                               LocationType;                                      // 0x0024(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bStopWhenAttachedToDestroyed;                      // 0x0025(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoPlay;                                         // 0x0026(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoDestroy;                                      // 0x0027(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FText                                   ProgrammerSound;                                   // 0x0028(0x0018)(ConstParm, Parm, OutParm, ReferenceParm, AdvancedDisplay, NativeAccessSpecifierPublic)
	class UFMODAudioComponent*                    ReturnValue;                                       // 0x0040(0x0008)(ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesFMODBlueprintLibrary_PlayEventAttached) == 0x000008, "Wrong alignment on PiecesFMODBlueprintLibrary_PlayEventAttached");
static_assert(sizeof(PiecesFMODBlueprintLibrary_PlayEventAttached) == 0x000048, "Wrong size on PiecesFMODBlueprintLibrary_PlayEventAttached");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, Event) == 0x000000, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::Event' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, AttachToComponent) == 0x000008, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::AttachToComponent' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, AttachPointName) == 0x000010, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::AttachPointName' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, Location) == 0x000018, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::Location' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, LocationType) == 0x000024, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::LocationType' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, bStopWhenAttachedToDestroyed) == 0x000025, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::bStopWhenAttachedToDestroyed' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, bAutoPlay) == 0x000026, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::bAutoPlay' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, bAutoDestroy) == 0x000027, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::bAutoDestroy' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, ProgrammerSound) == 0x000028, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::ProgrammerSound' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_PlayEventAttached, ReturnValue) == 0x000040, "Member 'PiecesFMODBlueprintLibrary_PlayEventAttached::ReturnValue' has a wrong offset!");

// Function PiecesFMOD.PiecesFMODBlueprintLibrary.SetBusPortIndex
// 0x0010 (0x0010 - 0x0000)
struct PiecesFMODBlueprintLibrary_SetBusPortIndex final
{
public:
	class UFMODAsset*                             BusAsset;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PortIndex;                                         // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(PiecesFMODBlueprintLibrary_SetBusPortIndex) == 0x000008, "Wrong alignment on PiecesFMODBlueprintLibrary_SetBusPortIndex");
static_assert(sizeof(PiecesFMODBlueprintLibrary_SetBusPortIndex) == 0x000010, "Wrong size on PiecesFMODBlueprintLibrary_SetBusPortIndex");
static_assert(offsetof(PiecesFMODBlueprintLibrary_SetBusPortIndex, BusAsset) == 0x000000, "Member 'PiecesFMODBlueprintLibrary_SetBusPortIndex::BusAsset' has a wrong offset!");
static_assert(offsetof(PiecesFMODBlueprintLibrary_SetBusPortIndex, PortIndex) == 0x000008, "Member 'PiecesFMODBlueprintLibrary_SetBusPortIndex::PortIndex' has a wrong offset!");

// Function PiecesFMOD.PiecesFMODPauseSubsystem.IsFmodPauseSettingsActive
// 0x0001 (0x0001 - 0x0000)
struct PiecesFMODPauseSubsystem_IsFmodPauseSettingsActive final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(PiecesFMODPauseSubsystem_IsFmodPauseSettingsActive) == 0x000001, "Wrong alignment on PiecesFMODPauseSubsystem_IsFmodPauseSettingsActive");
static_assert(sizeof(PiecesFMODPauseSubsystem_IsFmodPauseSettingsActive) == 0x000001, "Wrong size on PiecesFMODPauseSubsystem_IsFmodPauseSettingsActive");
static_assert(offsetof(PiecesFMODPauseSubsystem_IsFmodPauseSettingsActive, ReturnValue) == 0x000000, "Member 'PiecesFMODPauseSubsystem_IsFmodPauseSettingsActive::ReturnValue' has a wrong offset!");

}

