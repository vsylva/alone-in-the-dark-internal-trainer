#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_MotionBlur

#include "Basic.hpp"

#include "ObsidianFoxSettings_structs.hpp"


namespace SDK::Params
{

// Function WBP_MotionBlur.WBP_MotionBlur_C.ExecuteUbergraph_WBP_MotionBlur
// 0x0048 (0x0048 - 0x0000)
struct WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFGameUserSettings*                    CallFunc_GetOFGameUserSettings_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur) == 0x000008, "Wrong alignment on WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur");
static_assert(sizeof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur) == 0x000048, "Wrong size on WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur");
static_assert(offsetof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur, EntryPoint) == 0x000000, "Member 'WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur, K2Node_CreateDelegate_OutputDelegate_1) == 0x000014, "Member 'WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur, CallFunc_GetOFGameUserSettings_ReturnValue) == 0x000028, "Member 'WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur::CallFunc_GetOFGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur, K2Node_CreateDelegate_OutputDelegate_2) == 0x000030, "Member 'WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur, K2Node_Event_IsDesignTime) == 0x000040, "Member 'WBP_MotionBlur_C_ExecuteUbergraph_WBP_MotionBlur::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_MotionBlur.WBP_MotionBlur_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_MotionBlur_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_MotionBlur_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_MotionBlur_C_PreConstruct");
static_assert(sizeof(WBP_MotionBlur_C_PreConstruct) == 0x000001, "Wrong size on WBP_MotionBlur_C_PreConstruct");
static_assert(offsetof(WBP_MotionBlur_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_MotionBlur_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_MotionBlur.WBP_MotionBlur_C.UpdateMotionBlur
// 0x0040 (0x0040 - 0x0000)
struct WBP_MotionBlur_C_UpdateMotionBlur final
{
public:
	bool                                          Increase;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            Temp_byte_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            Temp_byte_Variable_2;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            Temp_byte_Variable_3;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            Temp_byte_Variable_4;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFGameUserSettings*                    CallFunc_GetOFGameUserSettings_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            CallFunc_GetMotionBlurQuality_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOFGameUserSettings*                    CallFunc_GetOFGameUserSettings_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalculateNewValue_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MotionBlur_C_UpdateMotionBlur) == 0x000008, "Wrong alignment on WBP_MotionBlur_C_UpdateMotionBlur");
static_assert(sizeof(WBP_MotionBlur_C_UpdateMotionBlur) == 0x000040, "Wrong size on WBP_MotionBlur_C_UpdateMotionBlur");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, Increase) == 0x000000, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::Increase' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, Temp_int_Variable) == 0x000004, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, Temp_byte_Variable) == 0x000008, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, Temp_byte_Variable_1) == 0x000009, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, Temp_byte_Variable_2) == 0x00000A, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, Temp_byte_Variable_3) == 0x00000B, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, Temp_byte_Variable_4) == 0x00000C, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, CallFunc_GetOFGameUserSettings_ReturnValue) == 0x000010, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::CallFunc_GetOFGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, CallFunc_GetMotionBlurQuality_ReturnValue) == 0x000018, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::CallFunc_GetMotionBlurQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, CallFunc_GetOFGameUserSettings_ReturnValue_1) == 0x000020, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::CallFunc_GetOFGameUserSettings_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, CallFunc_Conv_IntToFloat_ReturnValue) == 0x00002C, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, CallFunc_CalculateNewValue_ReturnValue) == 0x000030, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::CallFunc_CalculateNewValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, CallFunc_FTrunc_ReturnValue) == 0x000034, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateMotionBlur, K2Node_Select_Default) == 0x000038, "Member 'WBP_MotionBlur_C_UpdateMotionBlur::K2Node_Select_Default' has a wrong offset!");

// Function WBP_MotionBlur.WBP_MotionBlur_C.UpdateUI
// 0x0018 (0x0018 - 0x0000)
struct WBP_MotionBlur_C_UpdateUI final
{
public:
	class UOFGameUserSettings*                    CallFunc_GetOFGameUserSettings_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMotionBlurQuality                            CallFunc_GetMotionBlurQuality_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_MotionBlur_C_UpdateUI) == 0x000008, "Wrong alignment on WBP_MotionBlur_C_UpdateUI");
static_assert(sizeof(WBP_MotionBlur_C_UpdateUI) == 0x000018, "Wrong size on WBP_MotionBlur_C_UpdateUI");
static_assert(offsetof(WBP_MotionBlur_C_UpdateUI, CallFunc_GetOFGameUserSettings_ReturnValue) == 0x000000, "Member 'WBP_MotionBlur_C_UpdateUI::CallFunc_GetOFGameUserSettings_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateUI, CallFunc_GetMotionBlurQuality_ReturnValue) == 0x000008, "Member 'WBP_MotionBlur_C_UpdateUI::CallFunc_GetMotionBlurQuality_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateUI, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00000C, "Member 'WBP_MotionBlur_C_UpdateUI::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_MotionBlur_C_UpdateUI, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000010, "Member 'WBP_MotionBlur_C_UpdateUI::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");

}

