#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AIC_DarkMan

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "ObsidianFox_structs.hpp"


namespace SDK::Params
{

// Function AIC_DarkMan.AIC_DarkMan_C.ExecuteUbergraph_AIC_DarkMan
// 0x0058 (0x0058 - 0x0000)
struct AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBlackboardComponent*                   CallFunc_GetBlackboard_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Actor;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            K2Node_Event_Stimulus;                             // 0x0018(0x003C)(NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan) == 0x000008, "Wrong alignment on AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan");
static_assert(sizeof(AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan) == 0x000058, "Wrong size on AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan");
static_assert(offsetof(AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan, EntryPoint) == 0x000000, "Member 'AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan::EntryPoint' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan, CallFunc_GetBlackboard_ReturnValue) == 0x000008, "Member 'AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan::CallFunc_GetBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan, K2Node_Event_Actor) == 0x000010, "Member 'AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan::K2Node_Event_Actor' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan, K2Node_Event_Stimulus) == 0x000018, "Member 'AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan::K2Node_Event_Stimulus' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000054, "Member 'AIC_DarkMan_C_ExecuteUbergraph_AIC_DarkMan::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function AIC_DarkMan.AIC_DarkMan_C.OnTargetPerceptionUpdated
// 0x0048 (0x0048 - 0x0000)
struct AIC_DarkMan_C_OnTargetPerceptionUpdated final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FAIStimulus                            Stimulus;                                          // 0x0008(0x003C)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(AIC_DarkMan_C_OnTargetPerceptionUpdated) == 0x000008, "Wrong alignment on AIC_DarkMan_C_OnTargetPerceptionUpdated");
static_assert(sizeof(AIC_DarkMan_C_OnTargetPerceptionUpdated) == 0x000048, "Wrong size on AIC_DarkMan_C_OnTargetPerceptionUpdated");
static_assert(offsetof(AIC_DarkMan_C_OnTargetPerceptionUpdated, Actor) == 0x000000, "Member 'AIC_DarkMan_C_OnTargetPerceptionUpdated::Actor' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnTargetPerceptionUpdated, Stimulus) == 0x000008, "Member 'AIC_DarkMan_C_OnTargetPerceptionUpdated::Stimulus' has a wrong offset!");

// Function AIC_DarkMan.AIC_DarkMan_C.OnPlayStateChanged
// 0x0020 (0x0020 - 0x0000)
struct AIC_DarkMan_C_OnPlayStateChanged final
{
public:
	EGameMainState                                OldGameState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMainState                                NewGameState;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameSubsystem_DarkMan*                 CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetActiveDarkMan_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AIC_DarkMan_C_OnPlayStateChanged) == 0x000008, "Wrong alignment on AIC_DarkMan_C_OnPlayStateChanged");
static_assert(sizeof(AIC_DarkMan_C_OnPlayStateChanged) == 0x000020, "Wrong size on AIC_DarkMan_C_OnPlayStateChanged");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, OldGameState) == 0x000000, "Member 'AIC_DarkMan_C_OnPlayStateChanged::OldGameState' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, NewGameState) == 0x000001, "Member 'AIC_DarkMan_C_OnPlayStateChanged::NewGameState' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'AIC_DarkMan_C_OnPlayStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'AIC_DarkMan_C_OnPlayStateChanged::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000008, "Member 'AIC_DarkMan_C_OnPlayStateChanged::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, CallFunc_GetActiveDarkMan_ReturnValue) == 0x000010, "Member 'AIC_DarkMan_C_OnPlayStateChanged::CallFunc_GetActiveDarkMan_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'AIC_DarkMan_C_OnPlayStateChanged::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(AIC_DarkMan_C_OnPlayStateChanged, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'AIC_DarkMan_C_OnPlayStateChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

