#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_InternalTelemetry

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPL_InternalTelemetry.BPL_InternalTelemetry_C.Internal Simple Telemetry
// 0x0128 (0x0128 - 0x0000)
struct BPL_InternalTelemetry_C_Internal_Simple_Telemetry final
{
public:
	class FString                                 Server;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Type;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Subtype;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Parameters;                                        // 0x0030(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0080(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Params_0;                                          // 0x0088(0x0050)(Edit, BlueprintVisible)
	TDelegate<void(int32 Status, const class FString& Body)> Temp_delegate_Variable;                            // 0x00D8(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x00F8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildRequestParamsString_ReturnValue;     // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry) == 0x000008, "Wrong alignment on BPL_InternalTelemetry_C_Internal_Simple_Telemetry");
static_assert(sizeof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry) == 0x000128, "Wrong size on BPL_InternalTelemetry_C_Internal_Simple_Telemetry");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, Server) == 0x000000, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::Server' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, Type) == 0x000010, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::Type' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, Subtype) == 0x000020, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::Subtype' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, Parameters) == 0x000030, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::Parameters' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, __WorldContext) == 0x000080, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, Params_0) == 0x000088, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::Params_0' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, Temp_delegate_Variable) == 0x0000D8, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, CallFunc_Concat_StrStr_ReturnValue) == 0x0000E8, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, Temp_string_Variable) == 0x0000F8, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry, CallFunc_BuildRequestParamsString_ReturnValue) == 0x000118, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry::CallFunc_BuildRequestParamsString_ReturnValue' has a wrong offset!");

// Function BPL_InternalTelemetry.BPL_InternalTelemetry_C.Internal Simple Telemetry AssetLink
// 0x0210 (0x0210 - 0x0000)
struct BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink final
{
public:
	class FString                                 Server;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Type;                                              // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Subtype;                                           // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 Actor;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Parameters;                                        // 0x0038(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                __WorldContext;                                    // 0x0088(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class FString, class FString>            Params_0;                                          // 0x0090(0x0050)(Edit, BlueprintVisible)
	TDelegate<void(int32 Status, const class FString& Body)> Temp_delegate_Variable;                            // 0x00E0(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetCurrentLevelName_ReturnValue;          // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS_1;                            // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_1;                           // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_1;                      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS_2;                            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS_2;                           // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue_2;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0198(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x01B0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x01D0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x01E0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x01F0(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildRequestParamsString_ReturnValue;     // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink) == 0x000008, "Wrong alignment on BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink");
static_assert(sizeof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink) == 0x000210, "Wrong size on BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Server) == 0x000000, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Server' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Type) == 0x000010, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Type' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Subtype) == 0x000020, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Subtype' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Actor) == 0x000030, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Actor' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Parameters) == 0x000038, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Parameters' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, __WorldContext) == 0x000088, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Params_0) == 0x000090, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Params_0' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Temp_delegate_Variable) == 0x0000E0, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_GetPathName_ReturnValue) == 0x0000F0, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_GetCurrentLevelName_ReturnValue) == 0x000100, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_GetCurrentLevelName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_LeftS) == 0x000110, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_RightS) == 0x000120, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_ReturnValue) == 0x000130, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_IsEmpty_ReturnValue) == 0x000131, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_LeftS_1) == 0x000138, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_LeftS_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_RightS_1) == 0x000148, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_RightS_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_ReturnValue_1) == 0x000158, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Concat_StrStr_ReturnValue) == 0x000160, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_LeftS_2) == 0x000170, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_LeftS_2' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_RightS_2) == 0x000180, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_RightS_2' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Split_ReturnValue_2) == 0x000190, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Split_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000198, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Temp_bool_Variable) == 0x0001A8, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Temp_string_Variable) == 0x0001B0, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, K2Node_Select_Default) == 0x0001C0, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Temp_string_Variable_1) == 0x0001D0, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Temp_string_Variable_2) == 0x0001E0, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, Temp_string_Variable_3) == 0x0001F0, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink, CallFunc_BuildRequestParamsString_ReturnValue) == 0x000200, "Member 'BPL_InternalTelemetry_C_Internal_Simple_Telemetry_AssetLink::CallFunc_BuildRequestParamsString_ReturnValue' has a wrong offset!");

// Function BPL_InternalTelemetry.BPL_InternalTelemetry_C.BuildRequestParamsString
// 0x0140 (0x0140 - 0x0000)
struct BPL_InternalTelemetry_C_BuildRequestParamsString final
{
public:
	TMap<class FString, class FString>            Parameters;                                        // 0x0000(0x0050)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UObject*                                __WorldContext;                                    // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnValue;                                       // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	TArray<class FString>                         Params_0;                                          // 0x0068(0x0010)(Edit, BlueprintVisible)
	TArray<class FString>                         CallFunc_Map_Keys_Keys;                            // 0x0078(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SerializeFString_Wrapper_ReturnValue;     // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Map_Find_Value;                           // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SerializeFString_Wrapper_ReturnValue_1;   // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_JoinStringArray_ReturnValue;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_InternalTelemetry_C_BuildRequestParamsString) == 0x000008, "Wrong alignment on BPL_InternalTelemetry_C_BuildRequestParamsString");
static_assert(sizeof(BPL_InternalTelemetry_C_BuildRequestParamsString) == 0x000140, "Wrong size on BPL_InternalTelemetry_C_BuildRequestParamsString");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, Parameters) == 0x000000, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::Parameters' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, __WorldContext) == 0x000050, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, ReturnValue) == 0x000058, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, Params_0) == 0x000068, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::Params_0' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Map_Keys_Keys) == 0x000078, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, Temp_int_Array_Index_Variable) == 0x000088, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Array_Length_ReturnValue) == 0x00008C, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Array_Get_Item) == 0x000090, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_SerializeFString_Wrapper_ReturnValue) == 0x0000A0, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_SerializeFString_Wrapper_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Map_Find_ReturnValue) == 0x0000C0, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C8, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_SerializeFString_Wrapper_ReturnValue_1) == 0x0000D8, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_SerializeFString_Wrapper_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, Temp_int_Loop_Counter_Variable) == 0x0000E8, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000F0, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Less_IntInt_ReturnValue) == 0x000100, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Add_IntInt_ReturnValue) == 0x000104, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_JoinStringArray_ReturnValue) == 0x000108, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_JoinStringArray_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000120, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPL_InternalTelemetry_C_BuildRequestParamsString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000130, "Member 'BPL_InternalTelemetry_C_BuildRequestParamsString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");

}

