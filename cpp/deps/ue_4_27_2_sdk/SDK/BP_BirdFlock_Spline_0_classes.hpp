#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BirdFlock_Spline_0

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BirdFlock_Spline.BP_BirdFlock_Spline_C
// 0x0068 (0x02A0 - 0x0238)
class BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          TriggerBox;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NI_DistantBirdFlock;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USplineComponent*                       FlightPath;                                        // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         T_MoveBirds_MoveTrack_A522107E422FC12D07E6C3AA08B056B5; // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            T_MoveBirds__Direction_A522107E422FC12D07E6C3AA08B056B5; // 0x0264(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     T_MoveBirds;                                       // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TriggerAtStart;                                    // 0x0270(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Is_Closed_Loop;                                    // 0x0271(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_272[0x2];                                      // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         FlyTime;                                           // 0x0274(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PathLength;                                        // 0x0278(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BirdColor;                                         // 0x027C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BirdAmount;                                        // 0x028C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaleMult;                                         // 0x0290(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BirdSpreadDistance;                                // 0x0294(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeInTime;                                        // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FadeOutTime;                                       // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_BirdFlock_Spline(int32 EntryPoint);
	void BndEvt__BP_BirdFlock_Spline_TriggerBox_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void MoveBirds();
	void ReceiveBeginPlay();
	void T_MoveBirds__UpdateFunc();
	void T_MoveBirds__FinishedFunc();
	void UserConstructionScript();
	void InitBirdsPos();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BlueprintGeneratedClass BP_BirdFlock_Spline.BP_BirdFlock_Spline_C", true, "BP_BirdFlock_Spline_C">();
	}
	static class BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C>();
	}
};
static_assert(alignof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C) == 0x000008, "Wrong alignment on BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C");
static_assert(sizeof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C) == 0x0002A0, "Wrong size on BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, UberGraphFrame) == 0x000238, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, TriggerBox) == 0x000240, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::TriggerBox' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, NI_DistantBirdFlock) == 0x000248, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::NI_DistantBirdFlock' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, FlightPath) == 0x000250, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::FlightPath' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, DefaultSceneRoot) == 0x000258, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, T_MoveBirds_MoveTrack_A522107E422FC12D07E6C3AA08B056B5) == 0x000260, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::T_MoveBirds_MoveTrack_A522107E422FC12D07E6C3AA08B056B5' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, T_MoveBirds__Direction_A522107E422FC12D07E6C3AA08B056B5) == 0x000264, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::T_MoveBirds__Direction_A522107E422FC12D07E6C3AA08B056B5' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, T_MoveBirds) == 0x000268, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::T_MoveBirds' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, TriggerAtStart) == 0x000270, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::TriggerAtStart' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, Is_Closed_Loop) == 0x000271, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::Is_Closed_Loop' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, FlyTime) == 0x000274, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::FlyTime' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, PathLength) == 0x000278, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::PathLength' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, BirdColor) == 0x00027C, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::BirdColor' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, BirdAmount) == 0x00028C, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::BirdAmount' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, ScaleMult) == 0x000290, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::ScaleMult' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, BirdSpreadDistance) == 0x000294, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::BirdSpreadDistance' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, FadeInTime) == 0x000298, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::FadeInTime' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C, FadeOutTime) == 0x00029C, "Member 'BP_BirdFlock_Spline_0::ABP_BirdFlock_Spline_C::FadeOutTime' has a wrong offset!");

}

