#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_VisionTrace

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BTD_VisionTrace.BTD_VisionTrace_C.PerformConditionCheckAI
// 0x00E0 (0x00E0 - 0x0000)
struct BTD_VisionTrace_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetBlackboardValueAsVector_ReturnValue;   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ConstParm, ReferenceParm)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTD_VisionTrace_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_VisionTrace_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_VisionTrace_C_PerformConditionCheckAI) == 0x0000E0, "Wrong size on BTD_VisionTrace_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, Temp_bool_Variable) == 0x000011, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000014, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, CallFunc_GetBlackboardValueAsVector_ReturnValue) == 0x000020, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::CallFunc_GetBlackboardValueAsVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, CallFunc_GetPlayerPawn_ReturnValue) == 0x000038, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, K2Node_MakeArray_Array) == 0x000040, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, CallFunc_LineTraceSingle_OutHit) == 0x000050, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, CallFunc_LineTraceSingle_ReturnValue) == 0x0000D8, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, CallFunc_Not_PreBool_ReturnValue) == 0x0000D9, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_VisionTrace_C_PerformConditionCheckAI, K2Node_Select_Default) == 0x0000DA, "Member 'BTD_VisionTrace_C_PerformConditionCheckAI::K2Node_Select_Default' has a wrong offset!");

}

