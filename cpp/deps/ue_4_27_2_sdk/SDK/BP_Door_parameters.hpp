#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Door

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Door.BP_Door_C.GetTargetName
// 0x0018 (0x0018 - 0x0000)
struct BP_Door_C_GetTargetName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(BP_Door_C_GetTargetName) == 0x000008, "Wrong alignment on BP_Door_C_GetTargetName");
static_assert(sizeof(BP_Door_C_GetTargetName) == 0x000018, "Wrong size on BP_Door_C_GetTargetName");
static_assert(offsetof(BP_Door_C_GetTargetName, ReturnValue) == 0x000000, "Member 'BP_Door_C_GetTargetName::ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.CheckIfRightItem
// 0x0060 (0x0060 - 0x0000)
struct BP_Door_C_CheckIfRightItem final
{
public:
	class UItemData*                              ItemData;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              K2Node_DynamicCast_AsItem_Data;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_OFPLayerController_C*               K2Node_DynamicCast_AsBP_OFPLayer_Controller;       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_CheckIfRightItem) == 0x000008, "Wrong alignment on BP_Door_C_CheckIfRightItem");
static_assert(sizeof(BP_Door_C_CheckIfRightItem) == 0x000060, "Wrong size on BP_Door_C_CheckIfRightItem");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, ItemData) == 0x000000, "Member 'BP_Door_C_CheckIfRightItem::ItemData' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, ReturnValue) == 0x000008, "Member 'BP_Door_C_CheckIfRightItem::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000009, "Member 'BP_Door_C_CheckIfRightItem::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000010, "Member 'BP_Door_C_CheckIfRightItem::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, K2Node_DynamicCast_AsItem_Data) == 0x000018, "Member 'BP_Door_C_CheckIfRightItem::K2Node_DynamicCast_AsItem_Data' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Door_C_CheckIfRightItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, CallFunc_GetPlayerPawn_ReturnValue) == 0x000028, "Member 'BP_Door_C_CheckIfRightItem::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000030, "Member 'BP_Door_C_CheckIfRightItem::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, K2Node_DynamicCast_AsCharacter) == 0x000038, "Member 'BP_Door_C_CheckIfRightItem::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BP_Door_C_CheckIfRightItem::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'BP_Door_C_CheckIfRightItem::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, CallFunc_GetPlayerController_ReturnValue) == 0x000048, "Member 'BP_Door_C_CheckIfRightItem::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, K2Node_DynamicCast_AsBP_OFPLayer_Controller) == 0x000050, "Member 'BP_Door_C_CheckIfRightItem::K2Node_DynamicCast_AsBP_OFPLayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Door_C_CheckIfRightItem, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BP_Door_C_CheckIfRightItem::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BP_Door.BP_Door_C.AddArchivedKeys
// 0x0028 (0x0028 - 0x0000)
struct BP_Door_C_AddArchivedKeys final
{
public:
	class AOFPlayerController*                    CallFunc_GetObsidianFoxPlayerController_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HaveItem_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              K2Node_DynamicCast_AsItem_Data;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddItemToInventory_ReturnValue;           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsItemInPickupHistory_ReturnValue;        // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_AddArchivedKeys) == 0x000008, "Wrong alignment on BP_Door_C_AddArchivedKeys");
static_assert(sizeof(BP_Door_C_AddArchivedKeys) == 0x000028, "Wrong size on BP_Door_C_AddArchivedKeys");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, CallFunc_GetObsidianFoxPlayerController_ReturnValue) == 0x000000, "Member 'BP_Door_C_AddArchivedKeys::CallFunc_GetObsidianFoxPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000008, "Member 'BP_Door_C_AddArchivedKeys::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, CallFunc_HaveItem_ReturnValue) == 0x000010, "Member 'BP_Door_C_AddArchivedKeys::CallFunc_HaveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, K2Node_DynamicCast_AsItem_Data) == 0x000018, "Member 'BP_Door_C_AddArchivedKeys::K2Node_DynamicCast_AsItem_Data' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_Door_C_AddArchivedKeys::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'BP_Door_C_AddArchivedKeys::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, CallFunc_AddItemToInventory_ReturnValue) == 0x000022, "Member 'BP_Door_C_AddArchivedKeys::CallFunc_AddItemToInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, CallFunc_IsItemInPickupHistory_ReturnValue) == 0x000023, "Member 'BP_Door_C_AddArchivedKeys::CallFunc_IsItemInPickupHistory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AddArchivedKeys, CallFunc_BooleanAND_ReturnValue) == 0x000024, "Member 'BP_Door_C_AddArchivedKeys::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.Toggle Clockwise Opening
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_C_Toggle_Clockwise_Opening final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_Toggle_Clockwise_Opening) == 0x000001, "Wrong alignment on BP_Door_C_Toggle_Clockwise_Opening");
static_assert(sizeof(BP_Door_C_Toggle_Clockwise_Opening) == 0x000001, "Wrong size on BP_Door_C_Toggle_Clockwise_Opening");
static_assert(offsetof(BP_Door_C_Toggle_Clockwise_Opening, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'BP_Door_C_Toggle_Clockwise_Opening::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.StopReposition
// 0x0002 (0x0002 - 0x0000)
struct BP_Door_C_StopReposition final
{
public:
	bool                                          SnapCharacterToTargetLocation;                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_StopReposition) == 0x000001, "Wrong alignment on BP_Door_C_StopReposition");
static_assert(sizeof(BP_Door_C_StopReposition) == 0x000002, "Wrong size on BP_Door_C_StopReposition");
static_assert(offsetof(BP_Door_C_StopReposition, SnapCharacterToTargetLocation) == 0x000000, "Member 'BP_Door_C_StopReposition::SnapCharacterToTargetLocation' has a wrong offset!");
static_assert(offsetof(BP_Door_C_StopReposition, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'BP_Door_C_StopReposition::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.FindKeySocket
// 0x0050 (0x0050 - 0x0000)
struct BP_Door_C_FindKeySocket final
{
public:
	struct FVector                                OutLocation;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocationFound;                                     // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_FindSocketLocations_SocketLocations;      // 0x0010(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        CallFunc_FindSocketLocations_SocketLocations_1;    // 0x0030(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_FindKeySocket) == 0x000008, "Wrong alignment on BP_Door_C_FindKeySocket");
static_assert(sizeof(BP_Door_C_FindKeySocket) == 0x000050, "Wrong size on BP_Door_C_FindKeySocket");
static_assert(offsetof(BP_Door_C_FindKeySocket, OutLocation) == 0x000000, "Member 'BP_Door_C_FindKeySocket::OutLocation' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FindKeySocket, LocationFound) == 0x00000C, "Member 'BP_Door_C_FindKeySocket::LocationFound' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FindKeySocket, CallFunc_FindSocketLocations_SocketLocations) == 0x000010, "Member 'BP_Door_C_FindKeySocket::CallFunc_FindSocketLocations_SocketLocations' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FindKeySocket, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_Door_C_FindKeySocket::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FindKeySocket, CallFunc_FindSocketLocations_SocketLocations_1) == 0x000030, "Member 'BP_Door_C_FindKeySocket::CallFunc_FindSocketLocations_SocketLocations_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FindKeySocket, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'BP_Door_C_FindKeySocket::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FindKeySocket, CallFunc_DoesSocketExist_ReturnValue) == 0x00004C, "Member 'BP_Door_C_FindKeySocket::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FindKeySocket, CallFunc_DoesSocketExist_ReturnValue_1) == 0x00004D, "Member 'BP_Door_C_FindKeySocket::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");

// Function BP_Door.BP_Door_C.FixupKeyArrowLocation
// 0x0038 (0x0038 - 0x0000)
struct BP_Door_C_FixupKeyArrowLocation final
{
public:
	struct FVector                                CalculatedLocation;                                // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x000C(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_FixupKeyArrowLocation) == 0x000004, "Wrong alignment on BP_Door_C_FixupKeyArrowLocation");
static_assert(sizeof(BP_Door_C_FixupKeyArrowLocation) == 0x000038, "Wrong size on BP_Door_C_FixupKeyArrowLocation");
static_assert(offsetof(BP_Door_C_FixupKeyArrowLocation, CalculatedLocation) == 0x000000, "Member 'BP_Door_C_FixupKeyArrowLocation::CalculatedLocation' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FixupKeyArrowLocation, ReturnValue) == 0x00000C, "Member 'BP_Door_C_FixupKeyArrowLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FixupKeyArrowLocation, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_Door_C_FixupKeyArrowLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FixupKeyArrowLocation, CallFunc_Vector_Distance_ReturnValue) == 0x000024, "Member 'BP_Door_C_FixupKeyArrowLocation::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FixupKeyArrowLocation, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000028, "Member 'BP_Door_C_FixupKeyArrowLocation::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FixupKeyArrowLocation, CallFunc_SelectVector_ReturnValue) == 0x00002C, "Member 'BP_Door_C_FixupKeyArrowLocation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.AlignKeyArrowWithSocket
// 0x0160 (0x0160 - 0x0000)
struct BP_Door_C_AlignKeyArrowWithSocket final
{
public:
	struct FVector                                CallFunc_FindKeySocket_OutLocation;                // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindKeySocket_LocationFound;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0010(0x0018)()
	float                                         CallFunc_BreakVector_X;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0070(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_TransformLocation_ReturnValue;            // 0x00A0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FixupKeyArrowLocation_ReturnValue;        // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x00D0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Door_C_AlignKeyArrowWithSocket) == 0x000010, "Wrong alignment on BP_Door_C_AlignKeyArrowWithSocket");
static_assert(sizeof(BP_Door_C_AlignKeyArrowWithSocket) == 0x000160, "Wrong size on BP_Door_C_AlignKeyArrowWithSocket");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_FindKeySocket_OutLocation) == 0x000000, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_FindKeySocket_OutLocation' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_FindKeySocket_LocationFound) == 0x00000C, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_FindKeySocket_LocationFound' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_MakeLiteralText_ReturnValue) == 0x000010, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_BreakVector_X) == 0x000028, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_BreakVector_Y) == 0x00002C, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000040, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_InvertTransform_ReturnValue) == 0x000070, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_TransformLocation_ReturnValue) == 0x0000A0, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_TransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_BreakVector_X_1) == 0x0000AC, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_BreakVector_Y_1) == 0x0000B0, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_BreakVector_Z_1) == 0x0000B4, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_FixupKeyArrowLocation_ReturnValue) == 0x0000C4, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_FixupKeyArrowLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_AlignKeyArrowWithSocket, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0000D0, "Member 'BP_Door_C_AlignKeyArrowWithSocket::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_Door.BP_Door_C.SetDebugStatusText
// 0x0018 (0x0018 - 0x0000)
struct BP_Door_C_SetDebugStatusText final
{
public:
	class FText                                   Value;                                             // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_Door_C_SetDebugStatusText) == 0x000008, "Wrong alignment on BP_Door_C_SetDebugStatusText");
static_assert(sizeof(BP_Door_C_SetDebugStatusText) == 0x000018, "Wrong size on BP_Door_C_SetDebugStatusText");
static_assert(offsetof(BP_Door_C_SetDebugStatusText, Value) == 0x000000, "Member 'BP_Door_C_SetDebugStatusText::Value' has a wrong offset!");

// Function BP_Door.BP_Door_C.HandleDoorHandleNotify
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_C_HandleDoorHandleNotify final
{
public:
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_HandleDoorHandleNotify) == 0x000001, "Wrong alignment on BP_Door_C_HandleDoorHandleNotify");
static_assert(sizeof(BP_Door_C_HandleDoorHandleNotify) == 0x000001, "Wrong size on BP_Door_C_HandleDoorHandleNotify");
static_assert(offsetof(BP_Door_C_HandleDoorHandleNotify, CallFunc_IsLocked_ReturnValue) == 0x000000, "Member 'BP_Door_C_HandleDoorHandleNotify::CallFunc_IsLocked_ReturnValue' has a wrong offset!");

// Function BP_Door.BP_Door_C.First Time Opening Finished
// 0x0010 (0x0010 - 0x0000)
struct BP_Door_C_First_Time_Opening_Finished final
{
public:
	class AThirdPersonPlayerCameraManager*        CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_First_Time_Opening_Finished) == 0x000008, "Wrong alignment on BP_Door_C_First_Time_Opening_Finished");
static_assert(sizeof(BP_Door_C_First_Time_Opening_Finished) == 0x000010, "Wrong size on BP_Door_C_First_Time_Opening_Finished");
static_assert(offsetof(BP_Door_C_First_Time_Opening_Finished, CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue) == 0x000000, "Member 'BP_Door_C_First_Time_Opening_Finished::CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_First_Time_Opening_Finished, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_Door_C_First_Time_Opening_Finished::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_First_Time_Opening_Finished, CallFunc_IsValid_ReturnValue_1) == 0x000009, "Member 'BP_Door_C_First_Time_Opening_Finished::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_Door.BP_Door_C.FirstTimeOpening
// 0x00D8 (0x00D8 - 0x0000)
struct BP_Door_C_FirstTimeOpening final
{
public:
	float                                         PlusValueOnYaw;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         PlusRotationYaw;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AThirdPersonPlayerCameraManager*        CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue; // 0x0030(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_EnableCameraModifier_ReturnValue;         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ClampAngle_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TSoftClassPtr<class UClass>                   CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1; // 0x0080(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_EnableCameraModifier_ReturnValue_1;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_FirstTimeOpening) == 0x000008, "Wrong alignment on BP_Door_C_FirstTimeOpening");
static_assert(sizeof(BP_Door_C_FirstTimeOpening) == 0x0000D8, "Wrong size on BP_Door_C_FirstTimeOpening");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, PlusValueOnYaw) == 0x000000, "Member 'BP_Door_C_FirstTimeOpening::PlusValueOnYaw' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, PlusRotationYaw) == 0x000004, "Member 'BP_Door_C_FirstTimeOpening::PlusRotationYaw' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue) == 0x000008, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_GetController_ReturnValue) == 0x000010, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_GetController_ReturnValue_1) == 0x000018, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_GetControlRotation_ReturnValue) == 0x000020, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_Conv_ClassToSoftClassReference_ReturnValue) == 0x000030, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_Conv_ClassToSoftClassReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_BreakRotator_Roll) == 0x000058, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_BreakRotator_Pitch) == 0x00005C, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_BreakRotator_Yaw) == 0x000060, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_EnableCameraModifier_ReturnValue) == 0x000068, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_EnableCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_ClampAngle_ReturnValue) == 0x000070, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_ClampAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000074, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1) == 0x000080, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_Conv_ClassToSoftClassReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_BreakRotator_Roll_1) == 0x0000A8, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_BreakRotator_Pitch_1) == 0x0000AC, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_BreakRotator_Yaw_1) == 0x0000B0, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_EnableCameraModifier_ReturnValue_1) == 0x0000B8, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_EnableCameraModifier_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C0, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_MakeRotator_ReturnValue) == 0x0000C4, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000D0, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_FirstTimeOpening, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x0000D4, "Member 'BP_Door_C_FirstTimeOpening::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function BP_Door.BP_Door_C.GetIsRightHand
// 0x0038 (0x0038 - 0x0000)
struct BP_Door_C_GetIsRightHand final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilitySystemComponent*                CallFunc_GetAbilitySystemComponent_ReturnValue;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IGameplayTagAssetInterface> CallFunc_HasMatchingGameplayTag_self_CastInput;    // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasMatchingGameplayTag_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_GetIsRightHand) == 0x000008, "Wrong alignment on BP_Door_C_GetIsRightHand");
static_assert(sizeof(BP_Door_C_GetIsRightHand) == 0x000038, "Wrong size on BP_Door_C_GetIsRightHand");
static_assert(offsetof(BP_Door_C_GetIsRightHand, ReturnValue) == 0x000000, "Member 'BP_Door_C_GetIsRightHand::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIsRightHand, CallFunc_GetAbilitySystemComponent_ReturnValue) == 0x000008, "Member 'BP_Door_C_GetIsRightHand::CallFunc_GetAbilitySystemComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIsRightHand, CallFunc_HasMatchingGameplayTag_self_CastInput) == 0x000010, "Member 'BP_Door_C_GetIsRightHand::CallFunc_HasMatchingGameplayTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIsRightHand, CallFunc_HasMatchingGameplayTag_ReturnValue) == 0x000020, "Member 'BP_Door_C_GetIsRightHand::CallFunc_HasMatchingGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIsRightHand, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000028, "Member 'BP_Door_C_GetIsRightHand::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIsRightHand, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BP_Door_C_GetIsRightHand::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIsRightHand, K2Node_SwitchEnum_CmpSuccess) == 0x000031, "Member 'BP_Door_C_GetIsRightHand::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_Door.BP_Door_C.GetIKParameters
// 0x00C0 (0x00C0 - 0x0000)
struct BP_Door_C_GetIKParameters final
{
public:
	TArray<struct FIKParameters>                  IKParameters;                                      // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FVector>                        CallFunc_FindSocketLocations_SocketLocations;      // 0x0028(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsRightHand_ReturnValue;               // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        K2Node_Select_Default;                             // 0x0068(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetClosestLocation_ReturnValue;           // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIKParameters                          K2Node_MakeStruct_IKParameters;                    // 0x0088(0x0028)(NoDestructor)
	TArray<struct FIKParameters>                  K2Node_MakeArray_Array;                            // 0x00B0(0x0010)(ReferenceParm)
};
static_assert(alignof(BP_Door_C_GetIKParameters) == 0x000008, "Wrong alignment on BP_Door_C_GetIKParameters");
static_assert(sizeof(BP_Door_C_GetIKParameters) == 0x0000C0, "Wrong size on BP_Door_C_GetIKParameters");
static_assert(offsetof(BP_Door_C_GetIKParameters, IKParameters) == 0x000000, "Member 'BP_Door_C_GetIKParameters::IKParameters' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, Temp_bool_Variable) == 0x000010, "Member 'BP_Door_C_GetIKParameters::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_GetDisplayName_ReturnValue) == 0x000018, "Member 'BP_Door_C_GetIKParameters::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_FindSocketLocations_SocketLocations) == 0x000028, "Member 'BP_Door_C_GetIKParameters::CallFunc_FindSocketLocations_SocketLocations' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_Concat_StrStr_ReturnValue) == 0x000038, "Member 'BP_Door_C_GetIKParameters::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_Door_C_GetIKParameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BP_Door_C_GetIKParameters::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000060, "Member 'BP_Door_C_GetIKParameters::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_GetIsRightHand_ReturnValue) == 0x000061, "Member 'BP_Door_C_GetIKParameters::CallFunc_GetIsRightHand_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, K2Node_Select_Default) == 0x000068, "Member 'BP_Door_C_GetIKParameters::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000070, "Member 'BP_Door_C_GetIKParameters::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, CallFunc_GetClosestLocation_ReturnValue) == 0x00007C, "Member 'BP_Door_C_GetIKParameters::CallFunc_GetClosestLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, K2Node_MakeStruct_IKParameters) == 0x000088, "Member 'BP_Door_C_GetIKParameters::K2Node_MakeStruct_IKParameters' has a wrong offset!");
static_assert(offsetof(BP_Door_C_GetIKParameters, K2Node_MakeArray_Array) == 0x0000B0, "Member 'BP_Door_C_GetIKParameters::K2Node_MakeArray_Array' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B) == 0x000008, "Wrong alignment on BP_Door_C_OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B");
static_assert(sizeof(BP_Door_C_OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B) == 0x000008, "Wrong size on BP_Door_C_OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B");
static_assert(offsetof(BP_Door_C_OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B, TransformedCharacter) == 0x000000, "Member 'BP_Door_C_OnInterrupted_408291ED4EB6D2D6072FC58E53A79B6B::TransformedCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B) == 0x000008, "Wrong alignment on BP_Door_C_OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B");
static_assert(sizeof(BP_Door_C_OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B) == 0x000008, "Wrong size on BP_Door_C_OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B");
static_assert(offsetof(BP_Door_C_OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B, TransformedCharacter) == 0x000000, "Member 'BP_Door_C_OnCloseEnough_408291ED4EB6D2D6072FC58E53A79B6B::TransformedCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B final
{
public:
	class ACharacter*                             TransformedCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B) == 0x000008, "Wrong alignment on BP_Door_C_OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B");
static_assert(sizeof(BP_Door_C_OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B) == 0x000008, "Wrong size on BP_Door_C_OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B");
static_assert(offsetof(BP_Door_C_OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B, TransformedCharacter) == 0x000000, "Member 'BP_Door_C_OnCompleted_408291ED4EB6D2D6072FC58E53A79B6B::TransformedCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnBlendOutAllowedEnd_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnBlendOutAllowedBegin_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnNotifyEnd_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnNotifyEnd_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnNotifyEnd_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnNotifyEnd_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnNotifyEnd_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnNotifyEnd_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnNotifyEnd_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnNotifyEnd_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnNotifyBegin_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnNotifyBegin_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnNotifyBegin_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnNotifyBegin_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnNotifyBegin_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnNotifyBegin_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnNotifyBegin_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnNotifyBegin_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnInterrupted_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnInterrupted_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnInterrupted_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnInterrupted_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnInterrupted_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnInterrupted_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnInterrupted_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnInterrupted_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnBlendOut_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnBlendOut_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnBlendOut_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnBlendOut_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnBlendOut_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnBlendOut_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnBlendOut_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnBlendOut_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnFullyBlendedOut_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnCompleted_55DD772447DC15195F17D29545C4A04B
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnCompleted_55DD772447DC15195F17D29545C4A04B final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnCompleted_55DD772447DC15195F17D29545C4A04B) == 0x000004, "Wrong alignment on BP_Door_C_OnCompleted_55DD772447DC15195F17D29545C4A04B");
static_assert(sizeof(BP_Door_C_OnCompleted_55DD772447DC15195F17D29545C4A04B) == 0x000008, "Wrong size on BP_Door_C_OnCompleted_55DD772447DC15195F17D29545C4A04B");
static_assert(offsetof(BP_Door_C_OnCompleted_55DD772447DC15195F17D29545C4A04B, NotifyName) == 0x000000, "Member 'BP_Door_C_OnCompleted_55DD772447DC15195F17D29545C4A04B::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000004, "Wrong alignment on BP_Door_C_OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(sizeof(BP_Door_C_OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000008, "Wrong size on BP_Door_C_OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(offsetof(BP_Door_C_OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16, NotifyName) == 0x000000, "Member 'BP_Door_C_OnNotifyEnd_9E4FD5504A30CDB1B86197BE837BBA16::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000004, "Wrong alignment on BP_Door_C_OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(sizeof(BP_Door_C_OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000008, "Wrong size on BP_Door_C_OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(offsetof(BP_Door_C_OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16, NotifyName) == 0x000000, "Member 'BP_Door_C_OnNotifyBegin_9E4FD5504A30CDB1B86197BE837BBA16::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000004, "Wrong alignment on BP_Door_C_OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(sizeof(BP_Door_C_OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000008, "Wrong size on BP_Door_C_OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(offsetof(BP_Door_C_OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16, NotifyName) == 0x000000, "Member 'BP_Door_C_OnInterrupted_9E4FD5504A30CDB1B86197BE837BBA16::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000004, "Wrong alignment on BP_Door_C_OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(sizeof(BP_Door_C_OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000008, "Wrong size on BP_Door_C_OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(offsetof(BP_Door_C_OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16, NotifyName) == 0x000000, "Member 'BP_Door_C_OnBlendOut_9E4FD5504A30CDB1B86197BE837BBA16::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000004, "Wrong alignment on BP_Door_C_OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(sizeof(BP_Door_C_OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16) == 0x000008, "Wrong size on BP_Door_C_OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16");
static_assert(offsetof(BP_Door_C_OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16, NotifyName) == 0x000000, "Member 'BP_Door_C_OnCompleted_9E4FD5504A30CDB1B86197BE837BBA16::NotifyName' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6) == 0x000008, "Wrong alignment on BP_Door_C_OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6");
static_assert(sizeof(BP_Door_C_OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6) == 0x000008, "Wrong size on BP_Door_C_OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6");
static_assert(offsetof(BP_Door_C_OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6, Loaded) == 0x000000, "Member 'BP_Door_C_OnLoaded_4DA8C83648746C9E5EFDD0B0731E96C6::Loaded' has a wrong offset!");

// Function BP_Door.BP_Door_C.Add Camera Modifier
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_Add_Camera_Modifier final
{
public:
	class UClass*                                 ModifierClass;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_Add_Camera_Modifier) == 0x000008, "Wrong alignment on BP_Door_C_Add_Camera_Modifier");
static_assert(sizeof(BP_Door_C_Add_Camera_Modifier) == 0x000008, "Wrong size on BP_Door_C_Add_Camera_Modifier");
static_assert(offsetof(BP_Door_C_Add_Camera_Modifier, ModifierClass) == 0x000000, "Member 'BP_Door_C_Add_Camera_Modifier::ModifierClass' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnLoaded_A69EEFB34070966B54708E807E3F2FC2
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnLoaded_A69EEFB34070966B54708E807E3F2FC2 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnLoaded_A69EEFB34070966B54708E807E3F2FC2) == 0x000008, "Wrong alignment on BP_Door_C_OnLoaded_A69EEFB34070966B54708E807E3F2FC2");
static_assert(sizeof(BP_Door_C_OnLoaded_A69EEFB34070966B54708E807E3F2FC2) == 0x000008, "Wrong size on BP_Door_C_OnLoaded_A69EEFB34070966B54708E807E3F2FC2");
static_assert(offsetof(BP_Door_C_OnLoaded_A69EEFB34070966B54708E807E3F2FC2, Loaded) == 0x000000, "Member 'BP_Door_C_OnLoaded_A69EEFB34070966B54708E807E3F2FC2::Loaded' has a wrong offset!");

// Function BP_Door.BP_Door_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_Door_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_Door_C_ReceiveTick");
static_assert(sizeof(BP_Door_C_ReceiveTick) == 0x000004, "Wrong size on BP_Door_C_ReceiveTick");
static_assert(offsetof(BP_Door_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_Door_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_Door.BP_Door_C.PlayMontage
// 0x0018 (0x0018 - 0x0000)
struct BP_Door_C_PlayMontage final
{
public:
	const class USkeletalMeshComponent*           InSkeletalMesh;                                    // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UAnimMontage*                     MontageToPlay;                                     // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartingSection;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_PlayMontage) == 0x000008, "Wrong alignment on BP_Door_C_PlayMontage");
static_assert(sizeof(BP_Door_C_PlayMontage) == 0x000018, "Wrong size on BP_Door_C_PlayMontage");
static_assert(offsetof(BP_Door_C_PlayMontage, InSkeletalMesh) == 0x000000, "Member 'BP_Door_C_PlayMontage::InSkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PlayMontage, MontageToPlay) == 0x000008, "Member 'BP_Door_C_PlayMontage::MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_Door_C_PlayMontage, StartingSection) == 0x000010, "Member 'BP_Door_C_PlayMontage::StartingSection' has a wrong offset!");

// Function BP_Door.BP_Door_C.MoveToInteraction
// 0x0010 (0x0010 - 0x0000)
struct BP_Door_C_MoveToInteraction final
{
public:
	class ACharacter*                             InteractingCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USceneComponent*                  MoveToLocation;                                    // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_MoveToInteraction) == 0x000008, "Wrong alignment on BP_Door_C_MoveToInteraction");
static_assert(sizeof(BP_Door_C_MoveToInteraction) == 0x000010, "Wrong size on BP_Door_C_MoveToInteraction");
static_assert(offsetof(BP_Door_C_MoveToInteraction, InteractingCharacter) == 0x000000, "Member 'BP_Door_C_MoveToInteraction::InteractingCharacter' has a wrong offset!");
static_assert(offsetof(BP_Door_C_MoveToInteraction, MoveToLocation) == 0x000008, "Member 'BP_Door_C_MoveToInteraction::MoveToLocation' has a wrong offset!");

// Function BP_Door.BP_Door_C.OpenItemPicker
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OpenItemPicker final
{
public:
	class ACharacter*                             InteractingCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OpenItemPicker) == 0x000008, "Wrong alignment on BP_Door_C_OpenItemPicker");
static_assert(sizeof(BP_Door_C_OpenItemPicker) == 0x000008, "Wrong size on BP_Door_C_OpenItemPicker");
static_assert(offsetof(BP_Door_C_OpenItemPicker, InteractingCharacter) == 0x000000, "Member 'BP_Door_C_OpenItemPicker::InteractingCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.UserConstructionScript
// 0x0040 (0x0040 - 0x0000)
struct BP_Door_C_UserConstructionScript final
{
public:
	EDoorLockState                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_3;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetSprite_ReturnValue;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetSprite_ReturnValue_1;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_Door_C_UserConstructionScript");
static_assert(sizeof(BP_Door_C_UserConstructionScript) == 0x000040, "Wrong size on BP_Door_C_UserConstructionScript");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'BP_Door_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'BP_Door_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'BP_Door_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_object_Variable_2) == 0x000018, "Member 'BP_Door_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, Temp_object_Variable_3) == 0x000020, "Member 'BP_Door_C_UserConstructionScript::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'BP_Door_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, K2Node_Select_Default) == 0x000030, "Member 'BP_Door_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetSprite_ReturnValue) == 0x000038, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_UserConstructionScript, CallFunc_SetSprite_ReturnValue_1) == 0x000039, "Member 'BP_Door_C_UserConstructionScript::CallFunc_SetSprite_ReturnValue_1' has a wrong offset!");

// Function BP_Door.BP_Door_C.UnBoltDoor
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_UnBoltDoor final
{
public:
	class ACharacter*                             InteractingCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_UnBoltDoor) == 0x000008, "Wrong alignment on BP_Door_C_UnBoltDoor");
static_assert(sizeof(BP_Door_C_UnBoltDoor) == 0x000008, "Wrong size on BP_Door_C_UnBoltDoor");
static_assert(offsetof(BP_Door_C_UnBoltDoor, InteractingCharacter) == 0x000000, "Member 'BP_Door_C_UnBoltDoor::InteractingCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.onInteract
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_OnInteract final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnInteract) == 0x000008, "Wrong alignment on BP_Door_C_OnInteract");
static_assert(sizeof(BP_Door_C_OnInteract) == 0x000008, "Wrong size on BP_Door_C_OnInteract");
static_assert(offsetof(BP_Door_C_OnInteract, InteractionCharacter) == 0x000000, "Member 'BP_Door_C_OnInteract::InteractionCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature final
{
public:
	class UFlowComponent*                         FlowComponent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           NotifyTag;                                         // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature) == 0x000008, "Wrong alignment on BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature");
static_assert(sizeof(BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature) == 0x000010, "Wrong size on BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature");
static_assert(offsetof(BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature, FlowComponent) == 0x000000, "Member 'BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature::FlowComponent' has a wrong offset!");
static_assert(offsetof(BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature, NotifyTag) == 0x000008, "Member 'BP_Door_C_BndEvt__BP_Door_FlowDoorComponent_K2Node_ComponentBoundEvent_2_FlowComponentDynamicNotify__DelegateSignature::NotifyTag' has a wrong offset!");

// Function BP_Door.BP_Door_C.OnLockStateSet_Event_0
// 0x0002 (0x0002 - 0x0000)
struct BP_Door_C_OnLockStateSet_Event_0 final
{
public:
	EDoorLockState                                NewLockState;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDoorLockState                                OldLockState;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_OnLockStateSet_Event_0) == 0x000001, "Wrong alignment on BP_Door_C_OnLockStateSet_Event_0");
static_assert(sizeof(BP_Door_C_OnLockStateSet_Event_0) == 0x000002, "Wrong size on BP_Door_C_OnLockStateSet_Event_0");
static_assert(offsetof(BP_Door_C_OnLockStateSet_Event_0, NewLockState) == 0x000000, "Member 'BP_Door_C_OnLockStateSet_Event_0::NewLockState' has a wrong offset!");
static_assert(offsetof(BP_Door_C_OnLockStateSet_Event_0, OldLockState) == 0x000001, "Member 'BP_Door_C_OnLockStateSet_Event_0::OldLockState' has a wrong offset!");

// Function BP_Door.BP_Door_C.BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature");
static_assert(sizeof(BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature) == 0x000008, "Wrong size on BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature");
static_assert(offsetof(BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature, InteractionCharacter) == 0x000000, "Member 'BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_1_InteractionSignature__DelegateSignature::InteractionCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.SetCosmeticsForLockState
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_C_SetCosmeticsForLockState final
{
public:
	EDoorLockState                                InLockState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_SetCosmeticsForLockState) == 0x000001, "Wrong alignment on BP_Door_C_SetCosmeticsForLockState");
static_assert(sizeof(BP_Door_C_SetCosmeticsForLockState) == 0x000001, "Wrong size on BP_Door_C_SetCosmeticsForLockState");
static_assert(offsetof(BP_Door_C_SetCosmeticsForLockState, InLockState) == 0x000000, "Member 'BP_Door_C_SetCosmeticsForLockState::InLockState' has a wrong offset!");

// Function BP_Door.BP_Door_C.BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature final
{
public:
	class ACharacter*                             InteractionCharacter;                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature");
static_assert(sizeof(BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature) == 0x000008, "Wrong size on BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature");
static_assert(offsetof(BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature, InteractionCharacter) == 0x000000, "Member 'BP_Door_C_BndEvt__BP_Door_DoorInteractionComponent_K2Node_ComponentBoundEvent_0_InteractionSignature__DelegateSignature::InteractionCharacter' has a wrong offset!");

// Function BP_Door.BP_Door_C.UpdateClockwiseOpening
// 0x0001 (0x0001 - 0x0000)
struct BP_Door_C_UpdateClockwiseOpening final
{
public:
	bool                                          bClockwiseOpeningPosition;                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Door_C_UpdateClockwiseOpening) == 0x000001, "Wrong alignment on BP_Door_C_UpdateClockwiseOpening");
static_assert(sizeof(BP_Door_C_UpdateClockwiseOpening) == 0x000001, "Wrong size on BP_Door_C_UpdateClockwiseOpening");
static_assert(offsetof(BP_Door_C_UpdateClockwiseOpening, bClockwiseOpeningPosition) == 0x000000, "Member 'BP_Door_C_UpdateClockwiseOpening::bClockwiseOpeningPosition' has a wrong offset!");

// Function BP_Door.BP_Door_C.ExecuteUbergraph_BP_Door
// 0x0800 (0x0800 - 0x0000)
struct BP_Door_C_ExecuteUbergraph_BP_Door final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_6;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_5;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable;                                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class ACharacter* InteractionCharacter)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0064(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x0094(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_5;            // 0x00AC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_6;            // 0x00C4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x00D4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_7;            // 0x00DC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   Temp_name_Variable_1;                              // 0x00EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_8;            // 0x00F4(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              K2Node_DynamicCast_AsItem_Data;                    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EDoorLockState NewLockState, EDoorLockState OldLockState)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor)
	class UObject*                                Temp_object_Variable_1;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           K2Node_DynamicCast_AsAnim_Montage;                 // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_7;                   // 0x0154(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_10;           // 0x015C(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_11;           // 0x016C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_8;                   // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              K2Node_DynamicCast_AsItem_Data_1;                  // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasItem_ReturnValue;                      // 0x0199(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19A[0x2];                                      // 0x019A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_12;           // 0x019C(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_9;                   // 0x01AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_13;           // 0x01B4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_10;                  // 0x01C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_14;           // 0x01CC(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_11;                  // 0x01DC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_15;           // 0x01E4(0x0010)(ZeroConstructor, NoDestructor)
	class FName                                   K2Node_CustomEvent_NotifyName_12;                  // 0x01F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_16;           // 0x01FC(0x0010)(ZeroConstructor, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue;                         // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_17;           // 0x0214(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsLocked_ReturnValue;                     // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0225(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0226(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0227(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_DynamicCast_AsFMODEvent;                    // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x023B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0240(0x0030)(IsPlainOldData, NoDestructor)
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue;          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_279[0x3];                                      // 0x0279(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_18;           // 0x027C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_28D[0x3];                                      // 0x028D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	const class USkeletalMeshComponent*           K2Node_Event_InSkeletalMesh;                       // 0x0298(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UAnimMontage*                     K2Node_Event_MontageToPlay;                        // 0x02A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_StartingSection;                      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_InteractingCharacter_2;               // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class USceneComponent*                  K2Node_Event_MoveToLocation;                       // 0x02B8(0x0008)(ConstParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_Event_InteractingCharacter_1;               // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x02C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D4[0xC];                                      // 0x02D4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue_1;     // 0x02E0(0x0030)(IsPlainOldData, NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0318(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0329(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32A[0x6];                                      // 0x032A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface;               // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0358(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMotionWarpingComponent*                CallFunc_GetComponentByClass_ReturnValue;          // 0x0368(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0375(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_376[0x2];                                      // 0x0376(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_RepositionAndReorient*   CallFunc_RepositionAndReorient_OutActionProxy;     // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBPAsyncAction_RepositionAndReorient*   CallFunc_RepositionAndReorient_ReturnValue;        // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerController*                    CallFunc_GetObsidianFoxPlayerController_ReturnValue; // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_OFPLayerController_C*               K2Node_DynamicCast_AsBP_OFPLayer_Controller;       // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_Event_InteractingCharacter;                 // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x03B0(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CurrentlyInteracting_ReturnValue;         // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_InteractionCharacter;           // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_448[0x8];                                      // 0x0448(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0450(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_489[0x7];                                      // 0x0489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_DynamicCast_AsFMODEvent_1;                  // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEventAtLocation_ReturnValue_1;        // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<TSoftObjectPtr<class UItemData>>       CallFunc_GetAllItems_ReturnValue;                  // 0x04A8(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x04BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4BD[0x3];                                      // 0x04BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             Temp_object_Variable_2;                            // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocked_ReturnValue_1;                   // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C9[0x7];                                      // 0x04C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface_1;             // 0x04D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E9[0x7];                                      // 0x04E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IAnimInterface>        K2Node_DynamicCast_AsAnim_Interface_2;             // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter;           // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FIKParameters>                  CallFunc_GetIKParameters_IKParameters;             // 0x0510(0x0010)(ReferenceParm)
	class UBPAsyncAction_PlayIKMontage*           CallFunc_PlayIKMontage_ReturnValue;                // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AThirdPersonPlayerCameraManager*        CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue; // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AThirdPersonPlayerCameraManager*        CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue_1; // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue_1;  // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_ComponentBoundEvent_InteractionCharacter_1; // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_558[0x8];                                      // 0x0558(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0560(0x0030)(IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeTransform_SweepHitResult;   // 0x0590(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UFlowComponent*                         K2Node_ComponentBoundEvent_FlowComponent;          // 0x0618(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_ComponentBoundEvent_NotifyTag;              // 0x0620(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_19;           // 0x062C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_63C[0x4];                                      // 0x063C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter_1;         // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UAnimMontage>            CallFunc_GetBarkMontageFromCollection_ReturnValue; // 0x0648(0x0028)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDoorLockState                                K2Node_CustomEvent_NewLockState;                   // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDoorLockState                                K2Node_CustomEvent_OldLockState;                   // 0x0672(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0673(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_674[0x4];                                      // 0x0674(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_ComponentBoundEvent_InteractionCharacter;   // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingTimeline_ReturnValue;            // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingTimeline_ReturnValue_1;          // 0x0681(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingTimeline_ReturnValue_2;          // 0x0682(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingTimeline_ReturnValue_3;          // 0x0683(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingTimeline_ReturnValue_4;          // 0x0685(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0686(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDoorLockState                                K2Node_Event_InLockState;                          // 0x0687(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0688(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0689(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x068A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_68B[0x1];                                      // 0x068B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* TransformedCharacter)> K2Node_CreateDelegate_OutputDelegate_20;           // 0x068C(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          K2Node_Event_bClockwiseOpeningPosition;            // 0x069C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69D[0x3];                                      // 0x069D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x06A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x06A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x06C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x06CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x06D8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x0760(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ACharacter*                             K2Node_CustomEvent_TransformedCharacter_2;         // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_21;           // 0x07F0(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(BP_Door_C_ExecuteUbergraph_BP_Door) == 0x000010, "Wrong alignment on BP_Door_C_ExecuteUbergraph_BP_Door");
static_assert(sizeof(BP_Door_C_ExecuteUbergraph_BP_Door) == 0x000800, "Wrong size on BP_Door_C_ExecuteUbergraph_BP_Door");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, EntryPoint) == 0x000000, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_6) == 0x000010, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_6' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate) == 0x000018, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_5) == 0x000028, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_name_Variable) == 0x000040, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_MakeRotator_ReturnValue) == 0x000048, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000054, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_2) == 0x000064, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_3) == 0x000074, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_4) == 0x000084, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_3) == 0x00008C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_4) == 0x000094, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_2) == 0x0000A4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_5) == 0x0000AC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_1) == 0x0000BC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_6) == 0x0000C4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName) == 0x0000D4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_7) == 0x0000DC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_name_Variable_1) == 0x0000EC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_8) == 0x0000F4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_Loaded_1) == 0x000108, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_object_Variable) == 0x000110, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsItem_Data) == 0x000118, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsItem_Data' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_Loaded) == 0x000128, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_9) == 0x000130, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_object_Variable_1) == 0x000140, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsAnim_Montage) == 0x000148, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsAnim_Montage' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_1) == 0x000150, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_7) == 0x000154, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_7' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_10) == 0x00015C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_11) == 0x00016C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000180, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_8) == 0x000188, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_8' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsItem_Data_1) == 0x000190, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsItem_Data_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_2) == 0x000198, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_HasItem_ReturnValue) == 0x000199, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_HasItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_12) == 0x00019C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_9) == 0x0001AC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_9' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_13) == 0x0001B4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_10) == 0x0001C4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_10' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_14) == 0x0001CC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_11) == 0x0001DC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_11' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_15) == 0x0001E4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NotifyName_12) == 0x0001F4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NotifyName_12' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_16) == 0x0001FC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_FMax_ReturnValue) == 0x00020C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Add_FloatFloat_ReturnValue) == 0x000210, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_17) == 0x000214, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_17' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsLocked_ReturnValue) == 0x000224, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsLocked_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000225, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Not_PreBool_ReturnValue) == 0x000226, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanAND_ReturnValue) == 0x000227, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000228, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsFMODEvent) == 0x000230, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsFMODEvent' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_3) == 0x000238, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_NameName_ReturnValue) == 0x000239, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Not_PreBool_ReturnValue_1) == 0x00023A, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Not_PreBool_ReturnValue_2) == 0x00023B, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000240, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_PlayEventAtLocation_ReturnValue) == 0x000270, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_PlayEventAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_bool_IsClosed_Variable) == 0x000278, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_18) == 0x00027C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_18' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_bool_Has_Been_Initd_Variable) == 0x00028C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_DeltaSeconds) == 0x000290, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_InSkeletalMesh) == 0x000298, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_InSkeletalMesh' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_MontageToPlay) == 0x0002A0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_MontageToPlay' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_StartingSection) == 0x0002A8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_StartingSection' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_InteractingCharacter_2) == 0x0002B0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_InteractingCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_MoveToLocation) == 0x0002B8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_MoveToLocation' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_InteractingCharacter_1) == 0x0002C0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_InteractingCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0002C8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetComponentToWorld_ReturnValue_1) == 0x0002E0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetComponentToWorld_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000310, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000318, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Vector_Distance_ReturnValue) == 0x000324, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000328, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue) == 0x000329, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetAnimInstance_ReturnValue) == 0x000330, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsAnim_Interface) == 0x000338, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsAnim_Interface' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_4) == 0x000348, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000350, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetVelocity_ReturnValue) == 0x000358, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetComponentByClass_ReturnValue) == 0x000368, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_VSize_ReturnValue) == 0x000370, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Less_FloatFloat_ReturnValue) == 0x000374, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue_1) == 0x000375, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_SelectFloat_ReturnValue) == 0x000378, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_RepositionAndReorient_OutActionProxy) == 0x000380, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_RepositionAndReorient_OutActionProxy' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_RepositionAndReorient_ReturnValue) == 0x000388, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_RepositionAndReorient_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetObsidianFoxPlayerController_ReturnValue) == 0x000390, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetObsidianFoxPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsBP_OFPLayer_Controller) == 0x000398, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsBP_OFPLayer_Controller' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_5) == 0x0003A0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue_2) == 0x0003A1, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_InteractingCharacter) == 0x0003A8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_InteractingCharacter' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x0003B0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_CurrentlyInteracting_ReturnValue) == 0x000438, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_CurrentlyInteracting_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_InteractionCharacter) == 0x000440, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_InteractionCharacter' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetTransform_ReturnValue) == 0x000450, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000480, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000488, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsFMODEvent_1) == 0x000490, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsFMODEvent_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_6) == 0x000498, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_PlayEventAtLocation_ReturnValue_1) == 0x0004A0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_PlayEventAtLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetAllItems_ReturnValue) == 0x0004A8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetAllItems_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Array_Find_ReturnValue) == 0x0004B8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0004BC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, Temp_object_Variable_2) == 0x0004C0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsLocked_ReturnValue_1) == 0x0004C8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsLocked_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetAnimInstance_ReturnValue_2) == 0x0004D0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsAnim_Interface_1) == 0x0004D8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsAnim_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_7) == 0x0004E8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_AsAnim_Interface_2) == 0x0004F0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_AsAnim_Interface_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_DynamicCast_bSuccess_8) == 0x000500, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_TransformedCharacter) == 0x000508, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_TransformedCharacter' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetIKParameters_IKParameters) == 0x000510, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetIKParameters_IKParameters' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_PlayIKMontage_ReturnValue) == 0x000520, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_PlayIKMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValid_ReturnValue_3) == 0x000528, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue) == 0x000530, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue_1) == 0x000538, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetThirdPersonPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000540, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_FindCameraModifierByClass_ReturnValue_1) == 0x000548, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_FindCameraModifierByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_ComponentBoundEvent_InteractionCharacter_1) == 0x000550, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_ComponentBoundEvent_InteractionCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_MakeTransform_ReturnValue) == 0x000560, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_SetRelativeTransform_SweepHitResult) == 0x000590, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_SetRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_ComponentBoundEvent_FlowComponent) == 0x000618, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_ComponentBoundEvent_FlowComponent' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_ComponentBoundEvent_NotifyTag) == 0x000620, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_ComponentBoundEvent_NotifyTag' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000628, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_19) == 0x00062C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_19' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_TransformedCharacter_1) == 0x000640, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_TransformedCharacter_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_GetBarkMontageFromCollection_ReturnValue) == 0x000648, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_GetBarkMontageFromCollection_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x000670, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_NewLockState) == 0x000671, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_NewLockState' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_OldLockState) == 0x000672, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_OldLockState' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_SwitchEnum_CmpSuccess) == 0x000673, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_ComponentBoundEvent_InteractionCharacter) == 0x000678, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_ComponentBoundEvent_InteractionCharacter' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsPlayingTimeline_ReturnValue) == 0x000680, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsPlayingTimeline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsPlayingTimeline_ReturnValue_1) == 0x000681, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsPlayingTimeline_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsPlayingTimeline_ReturnValue_2) == 0x000682, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsPlayingTimeline_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsPlayingTimeline_ReturnValue_3) == 0x000683, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsPlayingTimeline_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue) == 0x000684, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_IsPlayingTimeline_ReturnValue_4) == 0x000685, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_IsPlayingTimeline_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue_1) == 0x000686, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_InLockState) == 0x000687, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_InLockState' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue_2) == 0x000688, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000689, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BooleanOR_ReturnValue_3) == 0x00068A, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_20) == 0x00068C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_20' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_Event_bClockwiseOpeningPosition) == 0x00069C, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_Event_bClockwiseOpeningPosition' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BreakVector_X) == 0x0006A0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BreakVector_Y) == 0x0006A4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BreakVector_Z) == 0x0006A8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BreakVector_X_1) == 0x0006AC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BreakVector_Y_1) == 0x0006B0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_BreakVector_Z_1) == 0x0006B4, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Abs_ReturnValue) == 0x0006B8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0006BC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_MakeVector_ReturnValue_1) == 0x0006C0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_MakeVector_ReturnValue_2) == 0x0006CC, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x0006D8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x000760, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CustomEvent_TransformedCharacter_2) == 0x0007E8, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CustomEvent_TransformedCharacter_2' has a wrong offset!");
static_assert(offsetof(BP_Door_C_ExecuteUbergraph_BP_Door, K2Node_CreateDelegate_OutputDelegate_21) == 0x0007F0, "Member 'BP_Door_C_ExecuteUbergraph_BP_Door::K2Node_CreateDelegate_OutputDelegate_21' has a wrong offset!");

// Function BP_Door.BP_Door_C.GetItemCategoryGameplayTag
// 0x0008 (0x0008 - 0x0000)
struct BP_Door_C_GetItemCategoryGameplayTag final
{
public:
	struct FGameplayTag                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Door_C_GetItemCategoryGameplayTag) == 0x000004, "Wrong alignment on BP_Door_C_GetItemCategoryGameplayTag");
static_assert(sizeof(BP_Door_C_GetItemCategoryGameplayTag) == 0x000008, "Wrong size on BP_Door_C_GetItemCategoryGameplayTag");
static_assert(offsetof(BP_Door_C_GetItemCategoryGameplayTag, ReturnValue) == 0x000000, "Member 'BP_Door_C_GetItemCategoryGameplayTag::ReturnValue' has a wrong offset!");

}

