#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Notes

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_Notes.WBP_Notes_C.CallOnThisFUnctionToPlaySound
// 0x0018 (0x0018 - 0x0000)
struct WBP_Notes_C_CallOnThisFUnctionToPlaySound final
{
public:
	class UFMODEvent*                             EventToPlay;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 KeyToUse;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Notes_C_CallOnThisFUnctionToPlaySound) == 0x000008, "Wrong alignment on WBP_Notes_C_CallOnThisFUnctionToPlaySound");
static_assert(sizeof(WBP_Notes_C_CallOnThisFUnctionToPlaySound) == 0x000018, "Wrong size on WBP_Notes_C_CallOnThisFUnctionToPlaySound");
static_assert(offsetof(WBP_Notes_C_CallOnThisFUnctionToPlaySound, EventToPlay) == 0x000000, "Member 'WBP_Notes_C_CallOnThisFUnctionToPlaySound::EventToPlay' has a wrong offset!");
static_assert(offsetof(WBP_Notes_C_CallOnThisFUnctionToPlaySound, KeyToUse) == 0x000008, "Member 'WBP_Notes_C_CallOnThisFUnctionToPlaySound::KeyToUse' has a wrong offset!");

// Function WBP_Notes.WBP_Notes_C.ExecuteUbergraph_WBP_Notes
// 0x0038 (0x0038 - 0x0000)
struct WBP_Notes_C_ExecuteUbergraph_WBP_Notes final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AOFPlayerCharacter*                     K2Node_DynamicCast_AsOFPlayer_Character;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Event_EventToPlay;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_KeyToUse;                             // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes) == 0x000008, "Wrong alignment on WBP_Notes_C_ExecuteUbergraph_WBP_Notes");
static_assert(sizeof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes) == 0x000038, "Wrong size on WBP_Notes_C_ExecuteUbergraph_WBP_Notes");
static_assert(offsetof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes, EntryPoint) == 0x000000, "Member 'WBP_Notes_C_ExecuteUbergraph_WBP_Notes::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000008, "Member 'WBP_Notes_C_ExecuteUbergraph_WBP_Notes::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes, K2Node_DynamicCast_AsOFPlayer_Character) == 0x000010, "Member 'WBP_Notes_C_ExecuteUbergraph_WBP_Notes::K2Node_DynamicCast_AsOFPlayer_Character' has a wrong offset!");
static_assert(offsetof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'WBP_Notes_C_ExecuteUbergraph_WBP_Notes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes, K2Node_Event_EventToPlay) == 0x000020, "Member 'WBP_Notes_C_ExecuteUbergraph_WBP_Notes::K2Node_Event_EventToPlay' has a wrong offset!");
static_assert(offsetof(WBP_Notes_C_ExecuteUbergraph_WBP_Notes, K2Node_Event_KeyToUse) == 0x000028, "Member 'WBP_Notes_C_ExecuteUbergraph_WBP_Notes::K2Node_Event_KeyToUse' has a wrong offset!");

}

