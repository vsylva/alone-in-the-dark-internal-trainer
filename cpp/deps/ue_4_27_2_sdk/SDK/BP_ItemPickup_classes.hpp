#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ItemPickup

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ObsidianFox_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ItemPickup.BP_ItemPickup_C
// 0x01A0 (0x0408 - 0x0268)
class ABP_ItemPickup_C : public AItemPickup
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        Arrow;                                             // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CharacterLerpTarget;                               // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UMapMarkerActorComponent*               MapMarkerActor;                                    // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFlowComponent*                         Flow;                                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UInteractionFlowComponent*              InteractionFlow;                                   // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   ChildActor;                                        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         Amount;                                            // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Default_PickUp_Sound;                              // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UItemData*                              ItemData_DEPRECATED;                               // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          bPickedUpAll;                                      // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnItemPickedUp;                                    // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	float                                         HandToObjectSpeed;                                 // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HandFromObjectSpeed;                               // 0x02DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Pickup_Montage_Tag;                                // 0x02E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Flow_Pickup_Notify_Tag;                            // 0x02E8(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           FactTagAddedOnPickup;                              // 0x02F0(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         AmountAdded;                                       // 0x02F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFInventoryPopUp                              Pop_Up;                                            // 0x02FC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UObject*>                        Textures;                                          // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UTexture2D*>                     TexturesHighlight;                                 // 0x0310(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TSoftClassPtr<class UClass>                   HealthReserveGEClass;                              // 0x0320(0x0028)(Edit, BlueprintVisible, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash)
	class UObject*                                Health_Pickup_ID;                                  // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSet<class UItemData*>                        MaxStackItems;                                     // 0x0350(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFMODEvent*                             Item_Full_Sound;                                   // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             PreItemPickedUp;                                   // 0x03A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UAnimMontage*                           MontageToPlay;                                     // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             InteractingCharacter;                              // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         LevelSequenceToPlay;                               // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TargetDistance;                                    // 0x03D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FindLerpLocationAutomatically;                     // 0x03D4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D5[0x3];                                      // 0x03D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         MinimumPickupDistance;                             // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPAsyncAction_RepositionAndReorient*   RepositionAndReorientProxy;                        // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnInteractionStarted;                              // 0x03E8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          IsInitialized;                                     // 0x03F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItemData*                              ItemDataRef;                                       // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void InitializeItem();
	void Hide_Hud(const bool Visible);
	void DespawnItem();
	void RemoveCollectibleIfGathered();
	void RemoveItem();
	void ShouldItemExist(bool* bIsValid);
	void UpdateCharacterLerpTargetLocation(class ACharacter* InteractingCharacter_0, float MinDistance);
	void GetMontage(class USkeletalMeshComponent* SkeletalMeshComp, class UAnimMontage** MontageToPlay_0);
	void PickupEvent(bool EndInteraction, bool HideItem);
	void CheckForMaxItem(int32* Amount_to_Add);
	void ReceiveBeginPlay();
	void ChangeActiveStatus(bool Deactivate);
	void EndInteractionAndIfPickedUpDestroy();
	void GetHealthReserve(float* HealthReserve, float* HealthReserveMax);
	void LockInput();
	void ConvertDeprecatedItemData();
	void WeaponEquip();
	void WeaponPickup();
	void Set_Item_Interaction_Ranges();
	void SetItemMesh();
	void UserConstructionScript();
	void OnInterrupted_408291ED4EB6D2D6072FC58EE8E2289E(class ACharacter* TransformedCharacter);
	void OnCloseEnough_408291ED4EB6D2D6072FC58EE8E2289E(class ACharacter* TransformedCharacter);
	void OnCompleted_408291ED4EB6D2D6072FC58EE8E2289E(class ACharacter* TransformedCharacter);
	void OnLoaded_422FB048441324D6D53DDDA989672150(class UObject* Loaded);
	void OnLoaded_AD0784BC48E00B52764260A9314C5672(class UObject* Loaded);
	void OnBlendOutAllowedEnd_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnBlendOutAllowedBegin_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnNotifyEnd_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnNotifyBegin_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnInterrupted_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnBlendOut_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnFullyBlendedOut_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnCompleted_09E2622045F97AB4D2BCDD88E802A9BA(class FName NotifyName);
	void OnInterrupted_408291ED4EB6D2D6072FC58EAAE21D47(class ACharacter* TransformedCharacter);
	void OnCloseEnough_408291ED4EB6D2D6072FC58EAAE21D47(class ACharacter* TransformedCharacter);
	void OnCompleted_408291ED4EB6D2D6072FC58EAAE21D47(class ACharacter* TransformedCharacter);
	void OnLoaded_FB48F391451A4C6BC245529E58A7D36E(class UObject* Loaded);
	void BndEvt__BP_ItemPickup_InteractionFlow_K2Node_ComponentBoundEvent_2_InteractionSignature__DelegateSignature(class ACharacter* InteractionCharacter);
	void Async_Load_Item_Display_Info();
	void BndEvt__BP_ItemPickup_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent, const struct FGameplayTag& NotifyTag);
	void OnCharacterPossessed(class AOFPlayerCharacter* NewCharacter);
	void PlayPickupMontage(class ACharacter* InteractingCharacter_0);
	void PlayPickupLevelSequence(class ACharacter* InteractingCharacter_0);
	void OnLevelSequenceFinished();
	void OnSequenceNotifyTrigger(const struct FGameplayTag& EventTag);
	void ExecuteUbergraph_BP_ItemPickup(int32 EntryPoint);
	void OnInteractionStarted__DelegateSignature();
	void PreItemPickedUp__DelegateSignature();
	void OnItemPickedUp__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ItemPickup_C">();
	}
	static class ABP_ItemPickup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_ItemPickup_C>();
	}
};
static_assert(alignof(ABP_ItemPickup_C) == 0x000008, "Wrong alignment on ABP_ItemPickup_C");
static_assert(sizeof(ABP_ItemPickup_C) == 0x000408, "Wrong size on ABP_ItemPickup_C");
static_assert(offsetof(ABP_ItemPickup_C, UberGraphFrame) == 0x000268, "Member 'ABP_ItemPickup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Arrow) == 0x000270, "Member 'ABP_ItemPickup_C::Arrow' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, CharacterLerpTarget) == 0x000278, "Member 'ABP_ItemPickup_C::CharacterLerpTarget' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, MapMarkerActor) == 0x000280, "Member 'ABP_ItemPickup_C::MapMarkerActor' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Flow) == 0x000288, "Member 'ABP_ItemPickup_C::Flow' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, InteractionFlow) == 0x000290, "Member 'ABP_ItemPickup_C::InteractionFlow' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, ChildActor) == 0x000298, "Member 'ABP_ItemPickup_C::ChildActor' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, StaticMesh) == 0x0002A0, "Member 'ABP_ItemPickup_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Amount) == 0x0002A8, "Member 'ABP_ItemPickup_C::Amount' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Default_PickUp_Sound) == 0x0002B0, "Member 'ABP_ItemPickup_C::Default_PickUp_Sound' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, ItemData_DEPRECATED) == 0x0002B8, "Member 'ABP_ItemPickup_C::ItemData_DEPRECATED' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, bPickedUpAll) == 0x0002C0, "Member 'ABP_ItemPickup_C::bPickedUpAll' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, OnItemPickedUp) == 0x0002C8, "Member 'ABP_ItemPickup_C::OnItemPickedUp' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, HandToObjectSpeed) == 0x0002D8, "Member 'ABP_ItemPickup_C::HandToObjectSpeed' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, HandFromObjectSpeed) == 0x0002DC, "Member 'ABP_ItemPickup_C::HandFromObjectSpeed' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Pickup_Montage_Tag) == 0x0002E0, "Member 'ABP_ItemPickup_C::Pickup_Montage_Tag' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Flow_Pickup_Notify_Tag) == 0x0002E8, "Member 'ABP_ItemPickup_C::Flow_Pickup_Notify_Tag' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, FactTagAddedOnPickup) == 0x0002F0, "Member 'ABP_ItemPickup_C::FactTagAddedOnPickup' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, AmountAdded) == 0x0002F8, "Member 'ABP_ItemPickup_C::AmountAdded' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Pop_Up) == 0x0002FC, "Member 'ABP_ItemPickup_C::Pop_Up' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Textures) == 0x000300, "Member 'ABP_ItemPickup_C::Textures' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, TexturesHighlight) == 0x000310, "Member 'ABP_ItemPickup_C::TexturesHighlight' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, HealthReserveGEClass) == 0x000320, "Member 'ABP_ItemPickup_C::HealthReserveGEClass' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Health_Pickup_ID) == 0x000348, "Member 'ABP_ItemPickup_C::Health_Pickup_ID' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, MaxStackItems) == 0x000350, "Member 'ABP_ItemPickup_C::MaxStackItems' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, Item_Full_Sound) == 0x0003A0, "Member 'ABP_ItemPickup_C::Item_Full_Sound' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, PreItemPickedUp) == 0x0003A8, "Member 'ABP_ItemPickup_C::PreItemPickedUp' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, MontageToPlay) == 0x0003B8, "Member 'ABP_ItemPickup_C::MontageToPlay' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, InteractingCharacter) == 0x0003C0, "Member 'ABP_ItemPickup_C::InteractingCharacter' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, LevelSequenceToPlay) == 0x0003C8, "Member 'ABP_ItemPickup_C::LevelSequenceToPlay' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, TargetDistance) == 0x0003D0, "Member 'ABP_ItemPickup_C::TargetDistance' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, FindLerpLocationAutomatically) == 0x0003D4, "Member 'ABP_ItemPickup_C::FindLerpLocationAutomatically' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, MinimumPickupDistance) == 0x0003D8, "Member 'ABP_ItemPickup_C::MinimumPickupDistance' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, RepositionAndReorientProxy) == 0x0003E0, "Member 'ABP_ItemPickup_C::RepositionAndReorientProxy' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, OnInteractionStarted) == 0x0003E8, "Member 'ABP_ItemPickup_C::OnInteractionStarted' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, IsInitialized) == 0x0003F8, "Member 'ABP_ItemPickup_C::IsInitialized' has a wrong offset!");
static_assert(offsetof(ABP_ItemPickup_C, ItemDataRef) == 0x000400, "Member 'ABP_ItemPickup_C::ItemDataRef' has a wrong offset!");

}

