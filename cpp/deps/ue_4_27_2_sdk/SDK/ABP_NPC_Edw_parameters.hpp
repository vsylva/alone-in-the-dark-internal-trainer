#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_NPC_Edw

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "ENPCLocation_Batiste_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ENPCLocation_Ruth_structs.hpp"
#include "ENPCLocation_Grace_structs.hpp"
#include "ENPCGrayAptLocation_structs.hpp"


namespace SDK::Params
{

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_NPC_Edw_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_NPC_Edw_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_NPC_Edw_C_AnimGraph");
static_assert(sizeof(ABP_NPC_Edw_C_AnimGraph) == 0x000010, "Wrong size on ABP_NPC_Edw_C_AnimGraph");
static_assert(offsetof(ABP_NPC_Edw_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_NPC_Edw_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.GetFocusPointOnCharacter
// 0x000C (0x000C - 0x0000)
struct ABP_NPC_Edw_C_GetFocusPointOnCharacter final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_Edw_C_GetFocusPointOnCharacter) == 0x000004, "Wrong alignment on ABP_NPC_Edw_C_GetFocusPointOnCharacter");
static_assert(sizeof(ABP_NPC_Edw_C_GetFocusPointOnCharacter) == 0x00000C, "Wrong size on ABP_NPC_Edw_C_GetFocusPointOnCharacter");
static_assert(offsetof(ABP_NPC_Edw_C_GetFocusPointOnCharacter, ReturnValue) == 0x000000, "Member 'ABP_NPC_Edw_C_GetFocusPointOnCharacter::ReturnValue' has a wrong offset!");

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.SetBatisteLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_NPC_Edw_C_SetBatisteLocation final
{
public:
	ENPCLocation_Batiste                          Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_Edw_C_SetBatisteLocation) == 0x000001, "Wrong alignment on ABP_NPC_Edw_C_SetBatisteLocation");
static_assert(sizeof(ABP_NPC_Edw_C_SetBatisteLocation) == 0x000001, "Wrong size on ABP_NPC_Edw_C_SetBatisteLocation");
static_assert(offsetof(ABP_NPC_Edw_C_SetBatisteLocation, Value) == 0x000000, "Member 'ABP_NPC_Edw_C_SetBatisteLocation::Value' has a wrong offset!");

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.SetRuthLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_NPC_Edw_C_SetRuthLocation final
{
public:
	ENPCLocation_Ruth                             Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_Edw_C_SetRuthLocation) == 0x000001, "Wrong alignment on ABP_NPC_Edw_C_SetRuthLocation");
static_assert(sizeof(ABP_NPC_Edw_C_SetRuthLocation) == 0x000001, "Wrong size on ABP_NPC_Edw_C_SetRuthLocation");
static_assert(offsetof(ABP_NPC_Edw_C_SetRuthLocation, Value) == 0x000000, "Member 'ABP_NPC_Edw_C_SetRuthLocation::Value' has a wrong offset!");

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.SetGraceLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_NPC_Edw_C_SetGraceLocation final
{
public:
	ENPCLocation_Grace                            Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_Edw_C_SetGraceLocation) == 0x000001, "Wrong alignment on ABP_NPC_Edw_C_SetGraceLocation");
static_assert(sizeof(ABP_NPC_Edw_C_SetGraceLocation) == 0x000001, "Wrong size on ABP_NPC_Edw_C_SetGraceLocation");
static_assert(offsetof(ABP_NPC_Edw_C_SetGraceLocation, Value) == 0x000000, "Member 'ABP_NPC_Edw_C_SetGraceLocation::Value' has a wrong offset!");

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.SetGraysAptLocation
// 0x0001 (0x0001 - 0x0000)
struct ABP_NPC_Edw_C_SetGraysAptLocation final
{
public:
	ENPCGrayAptLocation                           Value;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_Edw_C_SetGraysAptLocation) == 0x000001, "Wrong alignment on ABP_NPC_Edw_C_SetGraysAptLocation");
static_assert(sizeof(ABP_NPC_Edw_C_SetGraysAptLocation) == 0x000001, "Wrong size on ABP_NPC_Edw_C_SetGraysAptLocation");
static_assert(offsetof(ABP_NPC_Edw_C_SetGraysAptLocation, Value) == 0x000000, "Member 'ABP_NPC_Edw_C_SetGraysAptLocation::Value' has a wrong offset!");

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.ExecuteUbergraph_ABP_NPC_Edw
// 0x0018 (0x0018 - 0x0000)
struct ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCGrayAptLocation                           K2Node_Event_Value;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCLocation_Batiste                          K2Node_Event_Value_3;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCLocation_Ruth                             K2Node_Event_Value_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCLocation_Grace                            K2Node_Event_Value_1;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw) == 0x000004, "Wrong alignment on ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw");
static_assert(sizeof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw) == 0x000018, "Wrong size on ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw");
static_assert(offsetof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw, EntryPoint) == 0x000000, "Member 'ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw, K2Node_Event_Value) == 0x000004, "Member 'ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw, K2Node_Event_Value_3) == 0x00000C, "Member 'ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw::K2Node_Event_Value_3' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw, CallFunc_GetCurveValue_ReturnValue_1) == 0x000010, "Member 'ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw, K2Node_Event_Value_2) == 0x000014, "Member 'ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw::K2Node_Event_Value_2' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw, K2Node_Event_Value_1) == 0x000015, "Member 'ABP_NPC_Edw_C_ExecuteUbergraph_ABP_NPC_Edw::K2Node_Event_Value_1' has a wrong offset!");

// Function ABP_NPC_Edw.ABP_NPC_Edw_C.GetDynamicsAlpha
// 0x0010 (0x0010 - 0x0000)
struct ABP_NPC_Edw_C_GetDynamicsAlpha final
{
public:
	struct FGameplayTag                           Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_NPC_Edw_C_GetDynamicsAlpha) == 0x000004, "Wrong alignment on ABP_NPC_Edw_C_GetDynamicsAlpha");
static_assert(sizeof(ABP_NPC_Edw_C_GetDynamicsAlpha) == 0x000010, "Wrong size on ABP_NPC_Edw_C_GetDynamicsAlpha");
static_assert(offsetof(ABP_NPC_Edw_C_GetDynamicsAlpha, Key) == 0x000000, "Member 'ABP_NPC_Edw_C_GetDynamicsAlpha::Key' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_GetDynamicsAlpha, ReturnValue) == 0x000008, "Member 'ABP_NPC_Edw_C_GetDynamicsAlpha::ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_NPC_Edw_C_GetDynamicsAlpha, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00000C, "Member 'ABP_NPC_Edw_C_GetDynamicsAlpha::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");

}

