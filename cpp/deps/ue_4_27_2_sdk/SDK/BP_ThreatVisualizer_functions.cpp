#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThreatVisualizer

#include "Basic.hpp"

#include "BP_ThreatVisualizer_classes.hpp"
#include "BP_ThreatVisualizer_parameters.hpp"


namespace SDK
{

// Function BP_ThreatVisualizer.BP_ThreatVisualizer_C.K2_ConvertWorldToScreenLocation
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWorld*                           WorldContextObject                                     (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WorldLocation                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EdgePercent                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ScreenPosition                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EdgePositionAlpha                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ThreatVisualizer_C::K2_ConvertWorldToScreenLocation(const class UWorld* WorldContextObject, const struct FVector& WorldLocation, const float& EdgePercent, struct FVector2D* ScreenPosition, float* EdgePositionAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThreatVisualizer_C", "K2_ConvertWorldToScreenLocation");

	Params::BP_ThreatVisualizer_C_K2_ConvertWorldToScreenLocation Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.WorldLocation = std::move(WorldLocation);
	Parms.EdgePercent = EdgePercent;

	UObject::ProcessEvent(Func, &Parms);

	if (ScreenPosition != nullptr)
		*ScreenPosition = std::move(Parms.ScreenPosition);

	if (EdgePositionAlpha != nullptr)
		*EdgePositionAlpha = Parms.EdgePositionAlpha;
}


// Function BP_ThreatVisualizer.BP_ThreatVisualizer_C.ProjectWorldToScreen
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PlayerController                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          WorldPosition                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        ScreenLocation                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ThreatVisualizer_C::ProjectWorldToScreen(class APlayerController* PlayerController, const struct FVector& WorldPosition, struct FVector2D* ScreenLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThreatVisualizer_C", "ProjectWorldToScreen");

	Params::BP_ThreatVisualizer_C_ProjectWorldToScreen Parms{};

	Parms.PlayerController = PlayerController;
	Parms.WorldPosition = std::move(WorldPosition);

	UObject::ProcessEvent(Func, &Parms);

	if (ScreenLocation != nullptr)
		*ScreenLocation = std::move(Parms.ScreenLocation);
}


// Function BP_ThreatVisualizer.BP_ThreatVisualizer_C.GetScreenLocationAndEdgeDetection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ScreenPosition                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TotalScreenSize                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   SoftEdgeStart                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   EdgeAlpha                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_ThreatVisualizer_C::GetScreenLocationAndEdgeDetection(float ScreenPosition, float TotalScreenSize, float SoftEdgeStart, float* OutLocation, float* EdgeAlpha)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_ThreatVisualizer_C", "GetScreenLocationAndEdgeDetection");

	Params::BP_ThreatVisualizer_C_GetScreenLocationAndEdgeDetection Parms{};

	Parms.ScreenPosition = ScreenPosition;
	Parms.TotalScreenSize = TotalScreenSize;
	Parms.SoftEdgeStart = SoftEdgeStart;

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = Parms.OutLocation;

	if (EdgeAlpha != nullptr)
		*EdgeAlpha = Parms.EdgeAlpha;
}

}

