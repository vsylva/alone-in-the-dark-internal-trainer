#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BirdFlock_Area

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_BirdFlock_Area.BP_BirdFlock_Area_C.GetRandomRotation
// 0x0020 (0x0020 - 0x0000)
struct BP_BirdFlock_Area_C_GetRandomRotation final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BirdFlock_Area_C_GetRandomRotation) == 0x000004, "Wrong alignment on BP_BirdFlock_Area_C_GetRandomRotation");
static_assert(sizeof(BP_BirdFlock_Area_C_GetRandomRotation) == 0x000020, "Wrong size on BP_BirdFlock_Area_C_GetRandomRotation");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomRotation, Rotation) == 0x000000, "Member 'BP_BirdFlock_Area_C_GetRandomRotation::Rotation' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomRotation, CallFunc_RandomFloatFromStream_ReturnValue) == 0x00000C, "Member 'BP_BirdFlock_Area_C_GetRandomRotation::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BirdFlock_Area_C_GetRandomRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomRotation, CallFunc_MakeRotator_ReturnValue) == 0x000014, "Member 'BP_BirdFlock_Area_C_GetRandomRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Area.BP_BirdFlock_Area_C.GetRandomLocation
// 0x0044 (0x0044 - 0x0000)
struct BP_BirdFlock_Area_C_GetRandomLocation final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RandomFloatFromStream_ReturnValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomUnitVectorFromStream_ReturnValue;   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFlock_Area_C_GetRandomLocation) == 0x000004, "Wrong alignment on BP_BirdFlock_Area_C_GetRandomLocation");
static_assert(sizeof(BP_BirdFlock_Area_C_GetRandomLocation) == 0x000044, "Wrong size on BP_BirdFlock_Area_C_GetRandomLocation");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomLocation, Location) == 0x000000, "Member 'BP_BirdFlock_Area_C_GetRandomLocation::Location' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomLocation, CallFunc_RandomFloatFromStream_ReturnValue) == 0x00000C, "Member 'BP_BirdFlock_Area_C_GetRandomLocation::CallFunc_RandomFloatFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomLocation, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'BP_BirdFlock_Area_C_GetRandomLocation::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomLocation, CallFunc_RandomUnitVectorFromStream_ReturnValue) == 0x000014, "Member 'BP_BirdFlock_Area_C_GetRandomLocation::CallFunc_RandomUnitVectorFromStream_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'BP_BirdFlock_Area_C_GetRandomLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomLocation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x00002C, "Member 'BP_BirdFlock_Area_C_GetRandomLocation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_GetRandomLocation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000038, "Member 'BP_BirdFlock_Area_C_GetRandomLocation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Area.BP_BirdFlock_Area_C.SpawnBoidsInArea
// 0x0060 (0x0060 - 0x0000)
struct BP_BirdFlock_Area_C_SpawnBoidsInArea final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRandomScale_Scale;                     // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetRandomRotation_Rotation;               // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetRandomLocation_Location;               // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_BirdFlock_Area_C_SpawnBoidsInArea) == 0x000010, "Wrong alignment on BP_BirdFlock_Area_C_SpawnBoidsInArea");
static_assert(sizeof(BP_BirdFlock_Area_C_SpawnBoidsInArea) == 0x000060, "Wrong size on BP_BirdFlock_Area_C_SpawnBoidsInArea");
static_assert(offsetof(BP_BirdFlock_Area_C_SpawnBoidsInArea, Temp_int_Variable) == 0x000000, "Member 'BP_BirdFlock_Area_C_SpawnBoidsInArea::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_SpawnBoidsInArea, CallFunc_GetRandomScale_Scale) == 0x000004, "Member 'BP_BirdFlock_Area_C_SpawnBoidsInArea::CallFunc_GetRandomScale_Scale' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_SpawnBoidsInArea, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_BirdFlock_Area_C_SpawnBoidsInArea::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_SpawnBoidsInArea, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_BirdFlock_Area_C_SpawnBoidsInArea::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_SpawnBoidsInArea, CallFunc_GetRandomRotation_Rotation) == 0x000018, "Member 'BP_BirdFlock_Area_C_SpawnBoidsInArea::CallFunc_GetRandomRotation_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_SpawnBoidsInArea, CallFunc_GetRandomLocation_Location) == 0x000024, "Member 'BP_BirdFlock_Area_C_SpawnBoidsInArea::CallFunc_GetRandomLocation_Location' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_SpawnBoidsInArea, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'BP_BirdFlock_Area_C_SpawnBoidsInArea::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Area.BP_BirdFlock_Area_C.UserConstructionScript
// 0x0024 (0x0024 - 0x0000)
struct BP_BirdFlock_Area_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFlock_Area_C_UserConstructionScript) == 0x000004, "Wrong alignment on BP_BirdFlock_Area_C_UserConstructionScript");
static_assert(sizeof(BP_BirdFlock_Area_C_UserConstructionScript) == 0x000024, "Wrong size on BP_BirdFlock_Area_C_UserConstructionScript");
static_assert(offsetof(BP_BirdFlock_Area_C_UserConstructionScript, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000000, "Member 'BP_BirdFlock_Area_C_UserConstructionScript::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x00000C, "Member 'BP_BirdFlock_Area_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000010, "Member 'BP_BirdFlock_Area_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000014, "Member 'BP_BirdFlock_Area_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_BirdFlock_Area_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'BP_BirdFlock_Area_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BP_BirdFlock_Area.BP_BirdFlock_Area_C.ExecuteUbergraph_BP_BirdFlock_Area
// 0x0004 (0x0004 - 0x0000)
struct BP_BirdFlock_Area_C_ExecuteUbergraph_BP_BirdFlock_Area final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BirdFlock_Area_C_ExecuteUbergraph_BP_BirdFlock_Area) == 0x000004, "Wrong alignment on BP_BirdFlock_Area_C_ExecuteUbergraph_BP_BirdFlock_Area");
static_assert(sizeof(BP_BirdFlock_Area_C_ExecuteUbergraph_BP_BirdFlock_Area) == 0x000004, "Wrong size on BP_BirdFlock_Area_C_ExecuteUbergraph_BP_BirdFlock_Area");
static_assert(offsetof(BP_BirdFlock_Area_C_ExecuteUbergraph_BP_BirdFlock_Area, EntryPoint) == 0x000000, "Member 'BP_BirdFlock_Area_C_ExecuteUbergraph_BP_BirdFlock_Area::EntryPoint' has a wrong offset!");

}

