#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CtrlRig_Humanoid_FootIK

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "ControlRig_classes.hpp"


namespace SDK
{

// ControlRigBlueprintGeneratedClass CtrlRig_Humanoid_FootIK.CtrlRig_Humanoid_FootIK_C
// 0x00C0 (0x0710 - 0x0650)
class UCtrlRig_Humanoid_FootIK_C final : public UControlRig
{
public:
	class FName                                   RightFKBoneName;                                   // 0x0650(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeftFKBoneName;                                    // 0x0658(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RightIKBoneName;                                   // 0x0660(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LeftIKBoneName;                                    // 0x0668(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HipBoneName;                                       // 0x0670(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FootIKAlpha;                                       // 0x0678(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HipOffset;                                         // 0x067C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseExternalEffectorData;                           // 0x0680(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_681[0xF];                                      // 0x0681(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             RightFootEffector;                                 // 0x0690(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FTransform                             LeftFootEffector;                                  // 0x06C0(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor)
	struct FRotator                               LeftFootRotationOffset;                            // 0x06F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               RightFootRotationOffset;                           // 0x06FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bHasUpdated;                                       // 0x0708(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CtrlRig_Humanoid_FootIK_C">();
	}
	static class UCtrlRig_Humanoid_FootIK_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCtrlRig_Humanoid_FootIK_C>();
	}
};
static_assert(alignof(UCtrlRig_Humanoid_FootIK_C) == 0x000010, "Wrong alignment on UCtrlRig_Humanoid_FootIK_C");
static_assert(sizeof(UCtrlRig_Humanoid_FootIK_C) == 0x000710, "Wrong size on UCtrlRig_Humanoid_FootIK_C");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, RightFKBoneName) == 0x000650, "Member 'UCtrlRig_Humanoid_FootIK_C::RightFKBoneName' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, LeftFKBoneName) == 0x000658, "Member 'UCtrlRig_Humanoid_FootIK_C::LeftFKBoneName' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, RightIKBoneName) == 0x000660, "Member 'UCtrlRig_Humanoid_FootIK_C::RightIKBoneName' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, LeftIKBoneName) == 0x000668, "Member 'UCtrlRig_Humanoid_FootIK_C::LeftIKBoneName' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, HipBoneName) == 0x000670, "Member 'UCtrlRig_Humanoid_FootIK_C::HipBoneName' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, FootIKAlpha) == 0x000678, "Member 'UCtrlRig_Humanoid_FootIK_C::FootIKAlpha' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, HipOffset) == 0x00067C, "Member 'UCtrlRig_Humanoid_FootIK_C::HipOffset' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, UseExternalEffectorData) == 0x000680, "Member 'UCtrlRig_Humanoid_FootIK_C::UseExternalEffectorData' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, RightFootEffector) == 0x000690, "Member 'UCtrlRig_Humanoid_FootIK_C::RightFootEffector' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, LeftFootEffector) == 0x0006C0, "Member 'UCtrlRig_Humanoid_FootIK_C::LeftFootEffector' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, LeftFootRotationOffset) == 0x0006F0, "Member 'UCtrlRig_Humanoid_FootIK_C::LeftFootRotationOffset' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, RightFootRotationOffset) == 0x0006FC, "Member 'UCtrlRig_Humanoid_FootIK_C::RightFootRotationOffset' has a wrong offset!");
static_assert(offsetof(UCtrlRig_Humanoid_FootIK_C, bHasUpdated) == 0x000708, "Member 'UCtrlRig_Humanoid_FootIK_C::bHasUpdated' has a wrong offset!");

}

