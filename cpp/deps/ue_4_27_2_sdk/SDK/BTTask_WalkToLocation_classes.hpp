#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_WalkToLocation

#include "Basic.hpp"

#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_WalkToLocation.BTTask_WalkToLocation_C
// 0x0060 (0x0108 - 0x00A8)
class UBTTask_WalkToLocation_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FBlackboardKeySelector                 LocationKey;                                       // 0x00B0(0x0028)(Edit, BlueprintVisible)
	float                                         AcceptanceRadius;                                  // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WaitUntilReachingDestination;                      // 0x00DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AffectMovementSpeed;                               // 0x00DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBlackboardKeySelector                 TargetActorKey;                                    // 0x00E0(0x0028)(Edit, BlueprintVisible)

public:
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void ExecuteUbergraph_BTTask_WalkToLocation(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTTask_WalkToLocation_C">();
	}
	static class UBTTask_WalkToLocation_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_WalkToLocation_C>();
	}
};
static_assert(alignof(UBTTask_WalkToLocation_C) == 0x000008, "Wrong alignment on UBTTask_WalkToLocation_C");
static_assert(sizeof(UBTTask_WalkToLocation_C) == 0x000108, "Wrong size on UBTTask_WalkToLocation_C");
static_assert(offsetof(UBTTask_WalkToLocation_C, UberGraphFrame) == 0x0000A8, "Member 'UBTTask_WalkToLocation_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTTask_WalkToLocation_C, LocationKey) == 0x0000B0, "Member 'UBTTask_WalkToLocation_C::LocationKey' has a wrong offset!");
static_assert(offsetof(UBTTask_WalkToLocation_C, AcceptanceRadius) == 0x0000D8, "Member 'UBTTask_WalkToLocation_C::AcceptanceRadius' has a wrong offset!");
static_assert(offsetof(UBTTask_WalkToLocation_C, WaitUntilReachingDestination) == 0x0000DC, "Member 'UBTTask_WalkToLocation_C::WaitUntilReachingDestination' has a wrong offset!");
static_assert(offsetof(UBTTask_WalkToLocation_C, AffectMovementSpeed) == 0x0000DD, "Member 'UBTTask_WalkToLocation_C::AffectMovementSpeed' has a wrong offset!");
static_assert(offsetof(UBTTask_WalkToLocation_C, TargetActorKey) == 0x0000E0, "Member 'UBTTask_WalkToLocation_C::TargetActorKey' has a wrong offset!");

}

