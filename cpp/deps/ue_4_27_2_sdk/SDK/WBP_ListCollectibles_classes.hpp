#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ListCollectibles

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ObsidianFox_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ListCollectibles.WBP_ListCollectibles_C
// 0x00B8 (0x0360 - 0x02A8)
class UWBP_ListCollectibles_C final : public UCollectiblesListWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimShow;                                          // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UVerticalBox*                           CollectibleBox;                                    // 0x02B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CollectiblesAmountText;                            // 0x02C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             CollectibleScrollBox;                              // 0x02C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CtrlButtons_C*                     CtrlButtonWidget;                                  // 0x02D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_gfx;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBoxCollectibles;                           // 0x02E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RewardText;                                        // 0x02E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CollectibleLore_C*                 WBP_CollectibleExamination;                        // 0x02F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Collectibles_Slot_C*               WBP_Collectibles_Slot_1;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Collectibles_Slot_C*               WBP_Collectibles_Slot_2;                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Collectibles_Slot_C*               WBP_Collectibles_Slot_3;                           // 0x0308(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   SetsCompletedText;                                 // 0x0310(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UWBP_Investigation_C*                   InvestigationMenu;                                 // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Collectibles_Slot_C*               SelectedSlot;                                      // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               ScrollboxMaterial;                                 // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            CurveScrollbox;                                    // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanOpenExamination;                                // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_CollectiblesButton_C*              Collectible_Button;                                // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Input_Action;                                      // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Tab_Collectibles_Anim();
	void SetupWidget();
	void ShowCollectibleUsingItem(class UItemData* ItemData);
	void UpdateScrollBoxMaterial();
	void PlayButtonIconAnimations();
	void SetCollectibleText();
	void OnButtonPressed(class UObject* CollectibleWidget);
	void GetWidgets(TArray<class UWidget*>* Widgets);
	void UpdateWidgetList(class UWBP_CollectiblesButton_C* Button);
	void OnInitialized();
	void CancelPressed();
	void Construct();
	void OpenMenuPressedHandler();
	void OnAllCollectiblesAdded();
	void OnCollectibleHover_Event_0(class UWBP_CollectiblesButton_C* CollectibleButton);
	void BndEvt__WBP_ListCollectibles_CollectibleScrollBox_K2Node_ComponentBoundEvent_0_OnUserScrolledEvent__DelegateSignature(float CurrentOffset);
	void OnAcceptPressed();
	void ExecuteUbergraph_WBP_ListCollectibles(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ListCollectibles_C">();
	}
	static class UWBP_ListCollectibles_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ListCollectibles_C>();
	}
};
static_assert(alignof(UWBP_ListCollectibles_C) == 0x000008, "Wrong alignment on UWBP_ListCollectibles_C");
static_assert(sizeof(UWBP_ListCollectibles_C) == 0x000360, "Wrong size on UWBP_ListCollectibles_C");
static_assert(offsetof(UWBP_ListCollectibles_C, UberGraphFrame) == 0x0002A8, "Member 'UWBP_ListCollectibles_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, AnimShow) == 0x0002B0, "Member 'UWBP_ListCollectibles_C::AnimShow' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, CollectibleBox) == 0x0002B8, "Member 'UWBP_ListCollectibles_C::CollectibleBox' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, CollectiblesAmountText) == 0x0002C0, "Member 'UWBP_ListCollectibles_C::CollectiblesAmountText' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, CollectibleScrollBox) == 0x0002C8, "Member 'UWBP_ListCollectibles_C::CollectibleScrollBox' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, CtrlButtonWidget) == 0x0002D0, "Member 'UWBP_ListCollectibles_C::CtrlButtonWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, Line_gfx) == 0x0002D8, "Member 'UWBP_ListCollectibles_C::Line_gfx' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, RetainerBoxCollectibles) == 0x0002E0, "Member 'UWBP_ListCollectibles_C::RetainerBoxCollectibles' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, RewardText) == 0x0002E8, "Member 'UWBP_ListCollectibles_C::RewardText' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, WBP_CollectibleExamination) == 0x0002F0, "Member 'UWBP_ListCollectibles_C::WBP_CollectibleExamination' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, WBP_Collectibles_Slot_1) == 0x0002F8, "Member 'UWBP_ListCollectibles_C::WBP_Collectibles_Slot_1' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, WBP_Collectibles_Slot_2) == 0x000300, "Member 'UWBP_ListCollectibles_C::WBP_Collectibles_Slot_2' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, WBP_Collectibles_Slot_3) == 0x000308, "Member 'UWBP_ListCollectibles_C::WBP_Collectibles_Slot_3' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, SetsCompletedText) == 0x000310, "Member 'UWBP_ListCollectibles_C::SetsCompletedText' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, InvestigationMenu) == 0x000328, "Member 'UWBP_ListCollectibles_C::InvestigationMenu' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, SelectedSlot) == 0x000330, "Member 'UWBP_ListCollectibles_C::SelectedSlot' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, ScrollboxMaterial) == 0x000338, "Member 'UWBP_ListCollectibles_C::ScrollboxMaterial' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, CurveScrollbox) == 0x000340, "Member 'UWBP_ListCollectibles_C::CurveScrollbox' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, CanOpenExamination) == 0x000348, "Member 'UWBP_ListCollectibles_C::CanOpenExamination' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, Collectible_Button) == 0x000350, "Member 'UWBP_ListCollectibles_C::Collectible_Button' has a wrong offset!");
static_assert(offsetof(UWBP_ListCollectibles_C, Input_Action) == 0x000358, "Member 'UWBP_ListCollectibles_C::Input_Action' has a wrong offset!");

}

