#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Talisman_IP

#include "Basic.hpp"

#include "BP_Talisman_IP_classes.hpp"
#include "BP_Talisman_IP_parameters.hpp"


namespace SDK
{

// Function BP_Talisman_IP.BP_Talisman_IP_C.GUIAddBackButton
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::GUIAddBackButton()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "GUIAddBackButton");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.UpdateDestinationTexturesRotation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::UpdateDestinationTexturesRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "UpdateDestinationTexturesRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.BlueLightSetup
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::BlueLightSetup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "BlueLightSetup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.SetDestinationOpacity
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   NewValue                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::SetDestinationOpacity(float NewValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "SetDestinationOpacity");

	Params::BP_Talisman_IP_C_SetDestinationOpacity Parms{};

	Parms.NewValue = NewValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.SetDestinationTextures
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UTexture*                         Texture1                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Texture2                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture*                         Texture3                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::SetDestinationTextures(class UTexture* Texture1, class UTexture* Texture2, class UTexture* Texture3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "SetDestinationTextures");

	Params::BP_Talisman_IP_C_SetDestinationTextures Parms{};

	Parms.Texture1 = Texture1;
	Parms.Texture2 = Texture2;
	Parms.Texture3 = Texture3;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.CreateRing2DynamicMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::CreateRing2DynamicMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "CreateRing2DynamicMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.UpdateSelectionMaterial
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::UpdateSelectionMaterial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "UpdateSelectionMaterial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Auto Spin Ring
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ring                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Current_Value                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::Auto_Spin_Ring(int32 Ring, int32 Current_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Auto Spin Ring");

	Params::BP_Talisman_IP_C_Auto_Spin_Ring Parms{};

	Parms.Ring = Ring;
	Parms.Current_Value = Current_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Auto Rotate By Tag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     Tag                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// bool                                    bMakeInteractableOnAutoRotateEnd_0                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   InitialDelay                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::Auto_Rotate_By_Tag(const struct FGameplayTag& Tag, bool bMakeInteractableOnAutoRotateEnd_0, float InitialDelay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Auto Rotate By Tag");

	Params::BP_Talisman_IP_C_Auto_Rotate_By_Tag Parms{};

	Parms.Tag = std::move(Tag);
	Parms.bMakeInteractableOnAutoRotateEnd_0 = bMakeInteractableOnAutoRotateEnd_0;
	Parms.InitialDelay = InitialDelay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.LockTalisman
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::LockTalisman()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "LockTalisman");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Input Allowed
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bInputAllowed                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Talisman_IP_C::Input_Allowed(bool* bInputAllowed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Input Allowed");

	Params::BP_Talisman_IP_C_Input_Allowed Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bInputAllowed != nullptr)
		*bInputAllowed = Parms.bInputAllowed;
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.CancelExitsPuzzle
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Talisman_IP_C::CancelExitsPuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "CancelExitsPuzzle");

	Params::BP_Talisman_IP_C_CancelExitsPuzzle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.ShowDestinationFeedback
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::ShowDestinationFeedback(const struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "ShowDestinationFeedback");

	Params::BP_Talisman_IP_C_ShowDestinationFeedback Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Initialize Ring Rotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::Initialize_Ring_Rotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Initialize Ring Rotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Increment Selected Ring Value
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bClockwise                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Talisman_IP_C::Increment_Selected_Ring_Value(bool bClockwise)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Increment Selected Ring Value");

	Params::BP_Talisman_IP_C_Increment_Selected_Ring_Value Parms{};

	Parms.bClockwise = bClockwise;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.PortalRoomCheck
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanUseTalisman                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Talisman_IP_C::PortalRoomCheck(bool* CanUseTalisman)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "PortalRoomCheck");

	Params::BP_Talisman_IP_C_PortalRoomCheck Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanUseTalisman != nullptr)
		*CanUseTalisman = Parms.CanUseTalisman;
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.RingRotation__FinishedFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::RingRotation__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "RingRotation__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.RingRotation__UpdateFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::RingRotation__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "RingRotation__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.UI Fade In__UpdateFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::UI_Fade_In__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "UI Fade In__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.DestinationTexturesFadeInTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::DestinationTexturesFadeInTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "DestinationTexturesFadeInTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.DestinationTexturesFadeInTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::DestinationTexturesFadeInTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "DestinationTexturesFadeInTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.SolutionCameraMoveTimeline__FinishedFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::SolutionCameraMoveTimeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "SolutionCameraMoveTimeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.SolutionCameraMoveTimeline__UpdateFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::SolutionCameraMoveTimeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "SolutionCameraMoveTimeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_1");

	Params::BP_Talisman_IP_C_InpActEvt_IA_PuzzleSelection_Up_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.UI Fade In__FinishedFunc
// (BlueprintEvent)

void ABP_Talisman_IP_C::UI_Fade_In__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "UI Fade In__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_0");

	Params::BP_Talisman_IP_C_InpActEvt_IA_PuzzleSelection_Right_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.RotateRing
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Backwards                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_Talisman_IP_C::RotateRing(bool Backwards)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "RotateRing");

	Params::BP_Talisman_IP_C_RotateRing Parms{};

	Parms.Backwards = Backwards;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.CombinationCheck
// (BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::CombinationCheck()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "CombinationCheck");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.TeleportTransition
// (BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::TeleportTransition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "TeleportTransition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Valid Combination Entered
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::Valid_Combination_Entered(const struct FGameplayTag& GameplayTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Valid Combination Entered");

	Params::BP_Talisman_IP_C_Valid_Combination_Entered Parms{};

	Parms.GameplayTag = std::move(GameplayTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.EnteringPuzzle
// (Event, Protected, BlueprintEvent)
// Parameters:
// class ACharacter*                       InteractingCharacter                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::EnteringPuzzle(class ACharacter* InteractingCharacter)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "EnteringPuzzle");

	Params::BP_Talisman_IP_C_EnteringPuzzle Parms{};

	Parms.InteractingCharacter = InteractingCharacter;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Ring Finished Turning
// (BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::Ring_Finished_Turning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Ring Finished Turning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.BndEvt__BP_Talisman_IP_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UFlowComponent*                   FlowComponent_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTag                     NotifyTag                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::BndEvt__BP_Talisman_IP_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature(class UFlowComponent* FlowComponent_0, const struct FGameplayTag& NotifyTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "BndEvt__BP_Talisman_IP_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature");

	Params::BP_Talisman_IP_C_BndEvt__BP_Talisman_IP_Flow_K2Node_ComponentBoundEvent_0_FlowComponentDynamicNotify__DelegateSignature Parms{};

	Parms.FlowComponent_0 = FlowComponent_0;
	Parms.NotifyTag = std::move(NotifyTag);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.ExitingPuzzle
// (Event, Protected, BlueprintEvent)
// Parameters:
// class AOFPlayerController*              InteractingPlayerController                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::ExitingPuzzle(class AOFPlayerController* InteractingPlayerController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "ExitingPuzzle");

	Params::BP_Talisman_IP_C_ExitingPuzzle Parms{};

	Parms.InteractingPlayerController = InteractingPlayerController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Start Auto Rotate
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Auto_Rotate_Goal_0                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bMakeInteractableOnAutoRotateEnd_0                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Initial_Delay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::Start_Auto_Rotate(int32 Auto_Rotate_Goal_0, bool bMakeInteractableOnAutoRotateEnd_0, float Initial_Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Start Auto Rotate");

	Params::BP_Talisman_IP_C_Start_Auto_Rotate Parms{};

	Parms.Auto_Rotate_Goal_0 = Auto_Rotate_Goal_0;
	Parms.bMakeInteractableOnAutoRotateEnd_0 = bMakeInteractableOnAutoRotateEnd_0;
	Parms.Initial_Delay = Initial_Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.EndAutoRotate
// (BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::EndAutoRotate()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "EndAutoRotate");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.AllowInputExitPuzzle
// (BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::AllowInputExitPuzzle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "AllowInputExitPuzzle");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.FadeOutUI
// (BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::FadeOutUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "FadeOutUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Talisman_IP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.ExecuteUbergraph_BP_Talisman_IP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::ExecuteUbergraph_BP_Talisman_IP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "ExecuteUbergraph_BP_Talisman_IP");

	Params::BP_Talisman_IP_C_ExecuteUbergraph_BP_Talisman_IP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.OnFinishedTurning__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Ring                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Current_Value                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::OnFinishedTurning__DelegateSignature(int32 Ring, int32 Current_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "OnFinishedTurning__DelegateSignature");

	Params::BP_Talisman_IP_C_OnFinishedTurning__DelegateSignature Parms{};

	Parms.Ring = Ring;
	Parms.Current_Value = Current_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.OnValidDestinactionEntered__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTag                     GameplayTag                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
// class ABP_Talisman_IP_C*                TalismanActor                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Talisman_IP_C::OnValidDestinactionEntered__DelegateSignature(const struct FGameplayTag& GameplayTag, class ABP_Talisman_IP_C* TalismanActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "OnValidDestinactionEntered__DelegateSignature");

	Params::BP_Talisman_IP_C_OnValidDestinactionEntered__DelegateSignature Parms{};

	Parms.GameplayTag = std::move(GameplayTag);
	Parms.TalismanActor = TalismanActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.FadeInUI
// (BlueprintCallable, BlueprintEvent)

void ABP_Talisman_IP_C::FadeInUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "FadeInUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.Remove Camera Blend
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent, Const)

void ABP_Talisman_IP_C::Remove_Camera_Blend() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "Remove Camera Blend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Talisman_IP.BP_Talisman_IP_C.IsTalismanLocked
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_Talisman_IP_C::IsTalismanLocked() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Talisman_IP_C", "IsTalismanLocked");

	Params::BP_Talisman_IP_C_IsTalismanLocked Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

